// 
// Decompiled by Procyon v0.5.30
// 

package de.onyxbits.listmyapps;

import android.widget.ListAdapter;
import android.content.pm.ApplicationInfo;
import java.util.Iterator;
import java.util.List;
import android.content.pm.PackageManager;
import android.content.SharedPreferences;
import android.content.pm.PackageManager$NameNotFoundException;
import java.util.Arrays;
import android.content.pm.PackageInfo;
import android.content.Context;
import android.app.ListActivity;
import java.util.ArrayList;
import android.os.AsyncTask;

public class ListTask extends AsyncTask<Object, Object, ArrayList<SortablePackageInfo>>
{
    private int layout;
    private ListActivity listActivity;
    
    public ListTask(final ListActivity listActivity, final int layout) {
        this.listActivity = listActivity;
        this.layout = layout;
    }
    
    protected ArrayList<SortablePackageInfo> doInBackground(final Object... array) {
        final SharedPreferences sharedPreferences = this.listActivity.getSharedPreferences("settings", 0);
        final ArrayList<SortablePackageInfo> list = new ArrayList<SortablePackageInfo>();
        final PackageManager packageManager = this.listActivity.getPackageManager();
        final List installedPackages = packageManager.getInstalledPackages(0);
        final SortablePackageInfo[] array2 = new SortablePackageInfo[installedPackages.size()];
        final Iterator<PackageInfo> iterator = installedPackages.iterator();
        final AnnotationsSource annotationsSource = new AnnotationsSource((Context)this.listActivity);
        annotationsSource.open();
        int n = 0;
    Label_0380_Outer:
        while (true) {
            Label_0354: {
                if (!iterator.hasNext()) {
                    break Label_0354;
                }
                final PackageInfo packageInfo = iterator.next();
                try {
                    final ApplicationInfo applicationInfo = packageManager.getApplicationInfo(packageInfo.packageName, 0);
                    if ((0x1 & applicationInfo.flags) != 0x1 && (0x80 & applicationInfo.flags) != 0x80) {
                        array2[n] = new SortablePackageInfo();
                        array2[n].packageName = packageInfo.packageName;
                        array2[n].displayName = packageManager.getApplicationLabel(packageInfo.applicationInfo).toString();
                        array2[n].installer = packageManager.getInstallerPackageName(packageInfo.packageName);
                        array2[n].appInfo = applicationInfo;
                        array2[n].versionCode = packageInfo.versionCode;
                        array2[n].version = packageInfo.versionName;
                        array2[n].firstInstalled = packageInfo.firstInstallTime;
                        array2[n].lastUpdated = packageInfo.lastUpdateTime;
                        array2[n].uid = packageInfo.applicationInfo.uid;
                        array2[n].dataDir = packageInfo.applicationInfo.dataDir;
                        array2[n].comment = annotationsSource.getComment(packageInfo.packageName);
                        array2[n].tags = annotationsSource.getTags(packageInfo.packageName);
                        array2[n].targetsdk = applicationInfo.targetSdkVersion;
                        ++n;
                        continue Label_0380_Outer;
                    }
                    continue Label_0380_Outer;
                    final SortablePackageInfo[] array3 = new SortablePackageInfo[n];
                    System.arraycopy(array2, 0, array3, 0, n);
                    Arrays.sort(array3);
                    int n2 = 0;
                    // iftrue(Label_0445:, n2 >= array3.length)
                    while (true) {
                        array3[n2].selected = sharedPreferences.getBoolean("selected." + array3[n2].packageName, false);
                        list.add(array3[n2]);
                        ++n2;
                        continue;
                    }
                    Label_0445: {
                        return list;
                    }
                }
                catch (PackageManager$NameNotFoundException ex) {}
            }
        }
    }
    
    protected void onPostExecute(final ArrayList<SortablePackageInfo> list) {
        super.onPostExecute((Object)list);
        this.listActivity.setListAdapter((ListAdapter)new AppAdapter((Context)this.listActivity, this.layout, list, this.layout));
        this.listActivity.setProgressBarIndeterminate(false);
        this.listActivity.setProgressBarVisibility(false);
    }
    
    protected void onPreExecute() {
        this.listActivity.setProgressBarIndeterminate(true);
        this.listActivity.setProgressBarVisibility(true);
    }
}
