// 
// Decompiled by Procyon v0.5.30
// 

package de.onyxbits.listmyapps;

import android.net.Uri;
import android.view.MenuItem;
import android.view.Menu;
import android.os.Bundle;
import android.content.DialogInterface;
import android.widget.EditText;
import android.view.View;
import android.widget.Toast;
import android.content.Context;
import android.app.AlertDialog$Builder;
import android.content.DialogInterface$OnClickListener;
import android.app.Activity;

public class TemplateEditorActivity extends Activity implements DialogInterface$OnClickListener
{
    public static final String EDITID = "editid";
    private static final int PENDING_DELETE = 1;
    private static final int PENDING_INSERT = 2;
    private TemplateData editing;
    private TemplateSource formatsDataSource;
    private int pendingAction;
    
    private void showDeleteConfirm() {
        final AlertDialog$Builder alertDialog$Builder = new AlertDialog$Builder((Context)this);
        alertDialog$Builder.setTitle(2131099677);
        alertDialog$Builder.setMessage(2131099689);
        alertDialog$Builder.setPositiveButton(17039370, (DialogInterface$OnClickListener)this);
        alertDialog$Builder.setNegativeButton(17039360, (DialogInterface$OnClickListener)this);
        alertDialog$Builder.show();
        this.pendingAction = 1;
    }
    
    private void showVariableSelector() {
        final View currentFocus = this.getWindow().getCurrentFocus();
        if (currentFocus.getId() == 2131034120) {
            Toast.makeText((Context)this, 2131099688, 0).show();
            return;
        }
        final AlertDialog$Builder alertDialog$Builder = new AlertDialog$Builder((Context)this);
        alertDialog$Builder.setTitle(2131099678);
        if (currentFocus.getId() == 2131034123) {
            alertDialog$Builder.setItems(2131165184, (DialogInterface$OnClickListener)this);
        }
        if (currentFocus.getId() == 2131034124 || currentFocus.getId() == 2131034122) {
            alertDialog$Builder.setItems(2131165185, (DialogInterface$OnClickListener)this);
        }
        alertDialog$Builder.show();
        this.pendingAction = 2;
    }
    
    private boolean toModel() {
        this.editing.formatName = MainActivity.noNull(((EditText)this.findViewById(2131034120)).getText().toString());
        this.editing.header = MainActivity.noNull(((EditText)this.findViewById(2131034122)).getText().toString());
        this.editing.item = MainActivity.noNull(((EditText)this.findViewById(2131034123)).getText().toString());
        this.editing.footer = MainActivity.noNull(((EditText)this.findViewById(2131034124)).getText().toString());
        return !this.editing.formatName.equals("") && !this.editing.item.equals("");
    }
    
    public void onClick(final DialogInterface dialogInterface, final int n) {
        switch (this.pendingAction) {
            case 2: {
                final View currentFocus = this.getWindow().getCurrentFocus();
                if (currentFocus.getId() == 2131034123) {
                    final EditText editText = (EditText)currentFocus;
                    final int max = Math.max(editText.getSelectionStart(), 0);
                    final int max2 = Math.max(editText.getSelectionEnd(), 0);
                    final String s = this.getResources().getStringArray(2131165184)[n];
                    editText.getText().replace(Math.min(max, max2), Math.max(max, max2), (CharSequence)s, 0, s.length());
                }
                if (currentFocus.getId() == 2131034124 || currentFocus.getId() == 2131034122) {
                    final EditText editText2 = (EditText)currentFocus;
                    final int max3 = Math.max(editText2.getSelectionStart(), 0);
                    final int max4 = Math.max(editText2.getSelectionEnd(), 0);
                    final String s2 = this.getResources().getStringArray(2131165185)[n];
                    editText2.getText().replace(Math.min(max3, max4), Math.max(max3, max4), (CharSequence)s2, 0, s2.length());
                    return;
                }
                break;
            }
            case 1: {
                if (n == -1) {
                    this.formatsDataSource.delete(this.editing.id);
                    this.finish();
                    return;
                }
                break;
            }
        }
    }
    
    protected void onCreate(final Bundle bundle) {
        super.onCreate(bundle);
        this.setContentView(2130903042);
        (this.formatsDataSource = new TemplateSource((Context)this)).open();
        try {
            this.editing = this.formatsDataSource.get(this.getIntent().getExtras().getLong("editid"));
            ((EditText)this.findViewById(2131034120)).setText((CharSequence)this.editing.formatName);
            ((EditText)this.findViewById(2131034122)).setText((CharSequence)this.editing.header);
            ((EditText)this.findViewById(2131034123)).setText((CharSequence)this.editing.item);
            ((EditText)this.findViewById(2131034124)).setText((CharSequence)this.editing.footer);
        }
        catch (Exception ex) {
            this.editing = new TemplateData();
            this.editing.id = -1L;
        }
    }
    
    public boolean onCreateOptionsMenu(final Menu menu) {
        this.getMenuInflater().inflate(2131296258, menu);
        menu.findItem(2131034155).setEnabled(this.formatsDataSource.list().size() > 1);
        return true;
    }
    
    public boolean onOptionsItemSelected(final MenuItem menuItem) {
        switch (menuItem.getItemId()) {
            case 2131034154: {
                if (this.toModel()) {
                    this.formatsDataSource.insertOrUpdate(this.editing);
                    this.finish();
                    return true;
                }
                Toast.makeText((Context)this, 2131099684, 0).show();
                return true;
            }
            case 2131034155: {
                this.showDeleteConfirm();
                return true;
            }
            case 2131034156: {
                this.showVariableSelector();
                return true;
            }
            case 2131034112: {
                MainActivity.openUri((Context)this, Uri.parse(this.getString(2131099698)));
                break;
            }
        }
        return super.onOptionsItemSelected(menuItem);
    }
}
