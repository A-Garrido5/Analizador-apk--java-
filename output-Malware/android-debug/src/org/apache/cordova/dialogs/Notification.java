// 
// Decompiled by Procyon v0.5.30
// 

package org.apache.cordova.dialogs;

import org.json.JSONException;
import org.json.JSONArray;
import android.media.Ringtone;
import android.media.RingtoneManager;
import org.apache.cordova.PluginResult;
import android.content.DialogInterface$OnClickListener;
import org.apache.cordova.CallbackContext;
import android.content.DialogInterface;
import android.content.DialogInterface$OnCancelListener;
import android.content.Context;
import android.annotation.SuppressLint;
import android.app.AlertDialog;
import android.widget.TextView;
import android.os.Build$VERSION;
import android.app.AlertDialog$Builder;
import org.apache.cordova.CordovaInterface;
import android.app.ProgressDialog;
import org.apache.cordova.CordovaPlugin;

public class Notification extends CordovaPlugin
{
    public int confirmResult;
    public ProgressDialog progressDialog;
    public ProgressDialog spinnerDialog;
    
    public Notification() {
        this.confirmResult = -1;
        this.spinnerDialog = null;
        this.progressDialog = null;
    }
    
    @SuppressLint({ "NewApi" })
    private void changeTextDirection(final AlertDialog$Builder alertDialog$Builder) {
        final int sdk_INT = Build$VERSION.SDK_INT;
        alertDialog$Builder.create();
        final AlertDialog show = alertDialog$Builder.show();
        if (sdk_INT >= 17) {
            ((TextView)show.findViewById(16908299)).setTextDirection(5);
        }
    }
    
    @SuppressLint({ "NewApi" })
    private AlertDialog$Builder createDialog(final CordovaInterface cordovaInterface) {
        if (Build$VERSION.SDK_INT >= 11) {
            return new AlertDialog$Builder((Context)cordovaInterface.getActivity(), 5);
        }
        return new AlertDialog$Builder((Context)cordovaInterface.getActivity());
    }
    
    @SuppressLint({ "InlinedApi" })
    private ProgressDialog createProgressDialog(final CordovaInterface cordovaInterface) {
        if (Build$VERSION.SDK_INT >= 14) {
            return new ProgressDialog((Context)cordovaInterface.getActivity(), 5);
        }
        return new ProgressDialog((Context)cordovaInterface.getActivity());
    }
    
    public void activityStart(final String s, final String s2) {
        synchronized (this) {
            if (this.spinnerDialog != null) {
                this.spinnerDialog.dismiss();
                this.spinnerDialog = null;
            }
            this.cordova.getActivity().runOnUiThread((Runnable)new Runnable() {
                final /* synthetic */ CordovaInterface val$cordova = Notification.this.cordova;
                
                @Override
                public void run() {
                    (Notification.this.spinnerDialog = Notification.this.createProgressDialog(this.val$cordova)).setTitle((CharSequence)s);
                    Notification.this.spinnerDialog.setMessage((CharSequence)s2);
                    Notification.this.spinnerDialog.setCancelable(true);
                    Notification.this.spinnerDialog.setIndeterminate(true);
                    Notification.this.spinnerDialog.setOnCancelListener((DialogInterface$OnCancelListener)new DialogInterface$OnCancelListener() {
                        public void onCancel(final DialogInterface dialogInterface) {
                            Notification.this.spinnerDialog = null;
                        }
                    });
                    Notification.this.spinnerDialog.show();
                }
            });
        }
    }
    
    public void activityStop() {
        synchronized (this) {
            if (this.spinnerDialog != null) {
                this.spinnerDialog.dismiss();
                this.spinnerDialog = null;
            }
        }
    }
    
    public void alert(final String s, final String s2, final String s3, final CallbackContext callbackContext) {
        synchronized (this) {
            this.cordova.getActivity().runOnUiThread((Runnable)new Runnable() {
                final /* synthetic */ CordovaInterface val$cordova = Notification.this.cordova;
                
                @Override
                public void run() {
                    final AlertDialog$Builder access$000 = Notification.this.createDialog(this.val$cordova);
                    access$000.setMessage((CharSequence)s);
                    access$000.setTitle((CharSequence)s2);
                    access$000.setCancelable(true);
                    access$000.setPositiveButton((CharSequence)s3, (DialogInterface$OnClickListener)new DialogInterface$OnClickListener() {
                        public void onClick(final DialogInterface dialogInterface, final int n) {
                            dialogInterface.dismiss();
                            callbackContext.sendPluginResult(new PluginResult(PluginResult.Status.OK, 0));
                        }
                    });
                    access$000.setOnCancelListener((DialogInterface$OnCancelListener)new DialogInterface$OnCancelListener() {
                        public void onCancel(final DialogInterface dialogInterface) {
                            dialogInterface.dismiss();
                            callbackContext.sendPluginResult(new PluginResult(PluginResult.Status.OK, 0));
                        }
                    });
                    Notification.this.changeTextDirection(access$000);
                }
            });
        }
    }
    
    public void beep(final long n) {
        this.cordova.getThreadPool().execute(new Runnable() {
            @Override
            public void run() {
                final Ringtone ringtone = RingtoneManager.getRingtone(Notification.this.cordova.getActivity().getBaseContext(), RingtoneManager.getDefaultUri(2));
                if (ringtone != null) {
                    for (long n = 0L; n < n; ++n) {
                        ringtone.play();
                        long n2 = 5000L;
                        while (ringtone.isPlaying() && n2 > 0L) {
                            n2 -= 100L;
                            try {
                                Thread.sleep(100L);
                            }
                            catch (InterruptedException ex) {}
                        }
                    }
                }
            }
        });
    }
    
    public void confirm(final String s, final String s2, final JSONArray jsonArray, final CallbackContext callbackContext) {
        synchronized (this) {
            this.cordova.getActivity().runOnUiThread((Runnable)new Runnable() {
                final /* synthetic */ CordovaInterface val$cordova = Notification.this.cordova;
                
                @Override
                public void run() {
                    // 
                    // This method could not be decompiled.
                    // 
                    // Original Bytecode:
                    // 
                    //     0: aload_0        
                    //     1: getfield        org/apache/cordova/dialogs/Notification$3.this$0:Lorg/apache/cordova/dialogs/Notification;
                    //     4: aload_0        
                    //     5: getfield        org/apache/cordova/dialogs/Notification$3.val$cordova:Lorg/apache/cordova/CordovaInterface;
                    //     8: invokestatic    org/apache/cordova/dialogs/Notification.access$000:(Lorg/apache/cordova/dialogs/Notification;Lorg/apache/cordova/CordovaInterface;)Landroid/app/AlertDialog$Builder;
                    //    11: astore_1       
                    //    12: aload_1        
                    //    13: aload_0        
                    //    14: getfield        org/apache/cordova/dialogs/Notification$3.val$message:Ljava/lang/String;
                    //    17: invokevirtual   android/app/AlertDialog$Builder.setMessage:(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;
                    //    20: pop            
                    //    21: aload_1        
                    //    22: aload_0        
                    //    23: getfield        org/apache/cordova/dialogs/Notification$3.val$title:Ljava/lang/String;
                    //    26: invokevirtual   android/app/AlertDialog$Builder.setTitle:(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;
                    //    29: pop            
                    //    30: aload_1        
                    //    31: iconst_1       
                    //    32: invokevirtual   android/app/AlertDialog$Builder.setCancelable:(Z)Landroid/app/AlertDialog$Builder;
                    //    35: pop            
                    //    36: aload_0        
                    //    37: getfield        org/apache/cordova/dialogs/Notification$3.val$buttonLabels:Lorg/json/JSONArray;
                    //    40: invokevirtual   org/json/JSONArray.length:()I
                    //    43: ifle            75
                    //    46: aload_0        
                    //    47: getfield        org/apache/cordova/dialogs/Notification$3.val$buttonLabels:Lorg/json/JSONArray;
                    //    50: iconst_0       
                    //    51: invokevirtual   org/json/JSONArray.getString:(I)Ljava/lang/String;
                    //    54: astore          16
                    //    56: new             Lorg/apache/cordova/dialogs/Notification$3$1;
                    //    59: dup            
                    //    60: aload_0        
                    //    61: invokespecial   org/apache/cordova/dialogs/Notification$3$1.<init>:(Lorg/apache/cordova/dialogs/Notification$3;)V
                    //    64: astore          17
                    //    66: aload_1        
                    //    67: aload           16
                    //    69: aload           17
                    //    71: invokevirtual   android/app/AlertDialog$Builder.setNegativeButton:(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
                    //    74: pop            
                    //    75: aload_0        
                    //    76: getfield        org/apache/cordova/dialogs/Notification$3.val$buttonLabels:Lorg/json/JSONArray;
                    //    79: invokevirtual   org/json/JSONArray.length:()I
                    //    82: iconst_1       
                    //    83: if_icmple       115
                    //    86: aload_0        
                    //    87: getfield        org/apache/cordova/dialogs/Notification$3.val$buttonLabels:Lorg/json/JSONArray;
                    //    90: iconst_1       
                    //    91: invokevirtual   org/json/JSONArray.getString:(I)Ljava/lang/String;
                    //    94: astore          12
                    //    96: new             Lorg/apache/cordova/dialogs/Notification$3$2;
                    //    99: dup            
                    //   100: aload_0        
                    //   101: invokespecial   org/apache/cordova/dialogs/Notification$3$2.<init>:(Lorg/apache/cordova/dialogs/Notification$3;)V
                    //   104: astore          13
                    //   106: aload_1        
                    //   107: aload           12
                    //   109: aload           13
                    //   111: invokevirtual   android/app/AlertDialog$Builder.setNeutralButton:(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
                    //   114: pop            
                    //   115: aload_0        
                    //   116: getfield        org/apache/cordova/dialogs/Notification$3.val$buttonLabels:Lorg/json/JSONArray;
                    //   119: invokevirtual   org/json/JSONArray.length:()I
                    //   122: iconst_2       
                    //   123: if_icmple       155
                    //   126: aload_0        
                    //   127: getfield        org/apache/cordova/dialogs/Notification$3.val$buttonLabels:Lorg/json/JSONArray;
                    //   130: iconst_2       
                    //   131: invokevirtual   org/json/JSONArray.getString:(I)Ljava/lang/String;
                    //   134: astore          8
                    //   136: new             Lorg/apache/cordova/dialogs/Notification$3$3;
                    //   139: dup            
                    //   140: aload_0        
                    //   141: invokespecial   org/apache/cordova/dialogs/Notification$3$3.<init>:(Lorg/apache/cordova/dialogs/Notification$3;)V
                    //   144: astore          9
                    //   146: aload_1        
                    //   147: aload           8
                    //   149: aload           9
                    //   151: invokevirtual   android/app/AlertDialog$Builder.setPositiveButton:(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
                    //   154: pop            
                    //   155: new             Lorg/apache/cordova/dialogs/Notification$3$4;
                    //   158: dup            
                    //   159: aload_0        
                    //   160: invokespecial   org/apache/cordova/dialogs/Notification$3$4.<init>:(Lorg/apache/cordova/dialogs/Notification$3;)V
                    //   163: astore          5
                    //   165: aload_1        
                    //   166: aload           5
                    //   168: invokevirtual   android/app/AlertDialog$Builder.setOnCancelListener:(Landroid/content/DialogInterface$OnCancelListener;)Landroid/app/AlertDialog$Builder;
                    //   171: pop            
                    //   172: aload_0        
                    //   173: getfield        org/apache/cordova/dialogs/Notification$3.this$0:Lorg/apache/cordova/dialogs/Notification;
                    //   176: aload_1        
                    //   177: invokestatic    org/apache/cordova/dialogs/Notification.access$100:(Lorg/apache/cordova/dialogs/Notification;Landroid/app/AlertDialog$Builder;)V
                    //   180: return         
                    //   181: astore          15
                    //   183: goto            75
                    //   186: astore          11
                    //   188: goto            115
                    //   191: astore          7
                    //   193: goto            155
                    //    Exceptions:
                    //  Try           Handler
                    //  Start  End    Start  End    Type                    
                    //  -----  -----  -----  -----  ------------------------
                    //  46     75     181    186    Lorg/json/JSONException;
                    //  86     115    186    191    Lorg/json/JSONException;
                    //  126    155    191    196    Lorg/json/JSONException;
                    // 
                    // The error that occurred was:
                    // 
                    // java.lang.IndexOutOfBoundsException: Index: 99, Size: 99
                    //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
                    //     at java.util.ArrayList.get(ArrayList.java:429)
                    //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
                    //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformCall(AstMethodBodyBuilder.java:1163)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:1010)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:554)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformNode(AstMethodBodyBuilder.java:392)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformBlock(AstMethodBodyBuilder.java:333)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformSynchronized(AstMethodBodyBuilder.java:529)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformNode(AstMethodBodyBuilder.java:375)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformBlock(AstMethodBodyBuilder.java:333)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:294)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                    //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                    //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                    //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                    //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
                    //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
                    // 
                    throw new IllegalStateException("An error occurred while decompiling this method.");
                }
            });
        }
    }
    
    @Override
    public boolean execute(final String s, final JSONArray jsonArray, final CallbackContext callbackContext) throws JSONException {
        if (this.cordova.getActivity().isFinishing()) {
            return true;
        }
        if (s.equals("beep")) {
            this.beep(jsonArray.getLong(0));
        }
        else {
            if (s.equals("alert")) {
                this.alert(jsonArray.getString(0), jsonArray.getString(1), jsonArray.getString(2), callbackContext);
                return true;
            }
            if (s.equals("confirm")) {
                this.confirm(jsonArray.getString(0), jsonArray.getString(1), jsonArray.getJSONArray(2), callbackContext);
                return true;
            }
            if (s.equals("prompt")) {
                this.prompt(jsonArray.getString(0), jsonArray.getString(1), jsonArray.getJSONArray(2), jsonArray.getString(3), callbackContext);
                return true;
            }
            if (s.equals("activityStart")) {
                this.activityStart(jsonArray.getString(0), jsonArray.getString(1));
            }
            else if (s.equals("activityStop")) {
                this.activityStop();
            }
            else if (s.equals("progressStart")) {
                this.progressStart(jsonArray.getString(0), jsonArray.getString(1));
            }
            else if (s.equals("progressValue")) {
                this.progressValue(jsonArray.getInt(0));
            }
            else {
                if (!s.equals("progressStop")) {
                    return false;
                }
                this.progressStop();
            }
        }
        callbackContext.success();
        return true;
    }
    
    public void progressStart(final String s, final String s2) {
        synchronized (this) {
            if (this.progressDialog != null) {
                this.progressDialog.dismiss();
                this.progressDialog = null;
            }
            this.cordova.getActivity().runOnUiThread((Runnable)new Runnable() {
                final /* synthetic */ CordovaInterface val$cordova = Notification.this.cordova;
                
                @Override
                public void run() {
                    (Notification.this.progressDialog = Notification.this.createProgressDialog(this.val$cordova)).setProgressStyle(1);
                    Notification.this.progressDialog.setTitle((CharSequence)s);
                    Notification.this.progressDialog.setMessage((CharSequence)s2);
                    Notification.this.progressDialog.setCancelable(true);
                    Notification.this.progressDialog.setMax(100);
                    Notification.this.progressDialog.setProgress(0);
                    Notification.this.progressDialog.setOnCancelListener((DialogInterface$OnCancelListener)new DialogInterface$OnCancelListener() {
                        public void onCancel(final DialogInterface dialogInterface) {
                            Notification.this.progressDialog = null;
                        }
                    });
                    Notification.this.progressDialog.show();
                }
            });
        }
    }
    
    public void progressStop() {
        synchronized (this) {
            if (this.progressDialog != null) {
                this.progressDialog.dismiss();
                this.progressDialog = null;
            }
        }
    }
    
    public void progressValue(final int progress) {
        synchronized (this) {
            if (this.progressDialog != null) {
                this.progressDialog.setProgress(progress);
            }
        }
    }
    
    public void prompt(final String s, final String s2, final JSONArray jsonArray, final String s3, final CallbackContext callbackContext) {
        synchronized (this) {
            this.cordova.getActivity().runOnUiThread((Runnable)new Runnable() {
                final /* synthetic */ CordovaInterface val$cordova = Notification.this.cordova;
                
                @Override
                public void run() {
                    // 
                    // This method could not be decompiled.
                    // 
                    // Original Bytecode:
                    // 
                    //     0: new             Landroid/widget/EditText;
                    //     3: dup            
                    //     4: aload_0        
                    //     5: getfield        org/apache/cordova/dialogs/Notification$4.val$cordova:Lorg/apache/cordova/CordovaInterface;
                    //     8: invokeinterface org/apache/cordova/CordovaInterface.getActivity:()Landroid/app/Activity;
                    //    13: invokespecial   android/widget/EditText.<init>:(Landroid/content/Context;)V
                    //    16: astore_1       
                    //    17: aload_1        
                    //    18: aload_0        
                    //    19: getfield        org/apache/cordova/dialogs/Notification$4.val$defaultText:Ljava/lang/String;
                    //    22: invokevirtual   android/widget/EditText.setHint:(Ljava/lang/CharSequence;)V
                    //    25: aload_0        
                    //    26: getfield        org/apache/cordova/dialogs/Notification$4.this$0:Lorg/apache/cordova/dialogs/Notification;
                    //    29: aload_0        
                    //    30: getfield        org/apache/cordova/dialogs/Notification$4.val$cordova:Lorg/apache/cordova/CordovaInterface;
                    //    33: invokestatic    org/apache/cordova/dialogs/Notification.access$000:(Lorg/apache/cordova/dialogs/Notification;Lorg/apache/cordova/CordovaInterface;)Landroid/app/AlertDialog$Builder;
                    //    36: astore_2       
                    //    37: aload_2        
                    //    38: aload_0        
                    //    39: getfield        org/apache/cordova/dialogs/Notification$4.val$message:Ljava/lang/String;
                    //    42: invokevirtual   android/app/AlertDialog$Builder.setMessage:(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;
                    //    45: pop            
                    //    46: aload_2        
                    //    47: aload_0        
                    //    48: getfield        org/apache/cordova/dialogs/Notification$4.val$title:Ljava/lang/String;
                    //    51: invokevirtual   android/app/AlertDialog$Builder.setTitle:(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;
                    //    54: pop            
                    //    55: aload_2        
                    //    56: iconst_1       
                    //    57: invokevirtual   android/app/AlertDialog$Builder.setCancelable:(Z)Landroid/app/AlertDialog$Builder;
                    //    60: pop            
                    //    61: aload_2        
                    //    62: aload_1        
                    //    63: invokevirtual   android/app/AlertDialog$Builder.setView:(Landroid/view/View;)Landroid/app/AlertDialog$Builder;
                    //    66: pop            
                    //    67: new             Lorg/json/JSONObject;
                    //    70: dup            
                    //    71: invokespecial   org/json/JSONObject.<init>:()V
                    //    74: astore          7
                    //    76: aload_0        
                    //    77: getfield        org/apache/cordova/dialogs/Notification$4.val$buttonLabels:Lorg/json/JSONArray;
                    //    80: invokevirtual   org/json/JSONArray.length:()I
                    //    83: ifle            118
                    //    86: aload_0        
                    //    87: getfield        org/apache/cordova/dialogs/Notification$4.val$buttonLabels:Lorg/json/JSONArray;
                    //    90: iconst_0       
                    //    91: invokevirtual   org/json/JSONArray.getString:(I)Ljava/lang/String;
                    //    94: astore          19
                    //    96: new             Lorg/apache/cordova/dialogs/Notification$4$1;
                    //    99: dup            
                    //   100: aload_0        
                    //   101: aload           7
                    //   103: aload_1        
                    //   104: invokespecial   org/apache/cordova/dialogs/Notification$4$1.<init>:(Lorg/apache/cordova/dialogs/Notification$4;Lorg/json/JSONObject;Landroid/widget/EditText;)V
                    //   107: astore          20
                    //   109: aload_2        
                    //   110: aload           19
                    //   112: aload           20
                    //   114: invokevirtual   android/app/AlertDialog$Builder.setNegativeButton:(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
                    //   117: pop            
                    //   118: aload_0        
                    //   119: getfield        org/apache/cordova/dialogs/Notification$4.val$buttonLabels:Lorg/json/JSONArray;
                    //   122: invokevirtual   org/json/JSONArray.length:()I
                    //   125: iconst_1       
                    //   126: if_icmple       161
                    //   129: aload_0        
                    //   130: getfield        org/apache/cordova/dialogs/Notification$4.val$buttonLabels:Lorg/json/JSONArray;
                    //   133: iconst_1       
                    //   134: invokevirtual   org/json/JSONArray.getString:(I)Ljava/lang/String;
                    //   137: astore          15
                    //   139: new             Lorg/apache/cordova/dialogs/Notification$4$2;
                    //   142: dup            
                    //   143: aload_0        
                    //   144: aload           7
                    //   146: aload_1        
                    //   147: invokespecial   org/apache/cordova/dialogs/Notification$4$2.<init>:(Lorg/apache/cordova/dialogs/Notification$4;Lorg/json/JSONObject;Landroid/widget/EditText;)V
                    //   150: astore          16
                    //   152: aload_2        
                    //   153: aload           15
                    //   155: aload           16
                    //   157: invokevirtual   android/app/AlertDialog$Builder.setNeutralButton:(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
                    //   160: pop            
                    //   161: aload_0        
                    //   162: getfield        org/apache/cordova/dialogs/Notification$4.val$buttonLabels:Lorg/json/JSONArray;
                    //   165: invokevirtual   org/json/JSONArray.length:()I
                    //   168: iconst_2       
                    //   169: if_icmple       204
                    //   172: aload_0        
                    //   173: getfield        org/apache/cordova/dialogs/Notification$4.val$buttonLabels:Lorg/json/JSONArray;
                    //   176: iconst_2       
                    //   177: invokevirtual   org/json/JSONArray.getString:(I)Ljava/lang/String;
                    //   180: astore          11
                    //   182: new             Lorg/apache/cordova/dialogs/Notification$4$3;
                    //   185: dup            
                    //   186: aload_0        
                    //   187: aload           7
                    //   189: aload_1        
                    //   190: invokespecial   org/apache/cordova/dialogs/Notification$4$3.<init>:(Lorg/apache/cordova/dialogs/Notification$4;Lorg/json/JSONObject;Landroid/widget/EditText;)V
                    //   193: astore          12
                    //   195: aload_2        
                    //   196: aload           11
                    //   198: aload           12
                    //   200: invokevirtual   android/app/AlertDialog$Builder.setPositiveButton:(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
                    //   203: pop            
                    //   204: new             Lorg/apache/cordova/dialogs/Notification$4$4;
                    //   207: dup            
                    //   208: aload_0        
                    //   209: aload           7
                    //   211: aload_1        
                    //   212: invokespecial   org/apache/cordova/dialogs/Notification$4$4.<init>:(Lorg/apache/cordova/dialogs/Notification$4;Lorg/json/JSONObject;Landroid/widget/EditText;)V
                    //   215: astore          8
                    //   217: aload_2        
                    //   218: aload           8
                    //   220: invokevirtual   android/app/AlertDialog$Builder.setOnCancelListener:(Landroid/content/DialogInterface$OnCancelListener;)Landroid/app/AlertDialog$Builder;
                    //   223: pop            
                    //   224: aload_0        
                    //   225: getfield        org/apache/cordova/dialogs/Notification$4.this$0:Lorg/apache/cordova/dialogs/Notification;
                    //   228: aload_2        
                    //   229: invokestatic    org/apache/cordova/dialogs/Notification.access$100:(Lorg/apache/cordova/dialogs/Notification;Landroid/app/AlertDialog$Builder;)V
                    //   232: return         
                    //   233: astore          18
                    //   235: goto            118
                    //   238: astore          14
                    //   240: goto            161
                    //   243: astore          10
                    //   245: goto            204
                    //    Exceptions:
                    //  Try           Handler
                    //  Start  End    Start  End    Type                    
                    //  -----  -----  -----  -----  ------------------------
                    //  86     118    233    238    Lorg/json/JSONException;
                    //  129    161    238    243    Lorg/json/JSONException;
                    //  172    204    243    248    Lorg/json/JSONException;
                    // 
                    // The error that occurred was:
                    // 
                    // java.lang.IndexOutOfBoundsException: Index: 126, Size: 126
                    //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
                    //     at java.util.ArrayList.get(ArrayList.java:429)
                    //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
                    //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformCall(AstMethodBodyBuilder.java:1163)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:1010)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:554)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformNode(AstMethodBodyBuilder.java:392)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformBlock(AstMethodBodyBuilder.java:333)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformSynchronized(AstMethodBodyBuilder.java:529)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformNode(AstMethodBodyBuilder.java:375)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformBlock(AstMethodBodyBuilder.java:333)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:294)
                    //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                    //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                    //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                    //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                    //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                    //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
                    //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
                    // 
                    throw new IllegalStateException("An error occurred while decompiling this method.");
                }
            });
        }
    }
}
