import com.nuance.nmsp.client.sdk.oem.i;
import java.util.Vector;

// 
// Decompiled by Procyon v0.5.30
// 

public class eo implements bh, eq
{
    private static final be b;
    protected byte a;
    private dx c;
    private ds d;
    private eu e;
    private du f;
    private ci g;
    private short h;
    private bf i;
    private bq j;
    private long k;
    private boolean l;
    private String m;
    private boolean n;
    private ep o;
    private Object p;
    
    static {
        b = dh.a(eo.class);
    }
    
    protected eo(final bf i, final eu e, final String m, final String s, final du f, final String s2, final String s3, final String s4, final String s5, final String s6, final String s7, final am am, final String s8, final String s9, final String s10, final String s11, final String s12, final db db, final dx c, final ds d, final byte a) {
        this.e = null;
        this.f = null;
        this.h = -1;
        this.n = false;
        if (eo.b.b()) {
            eo.b.b("PDXTransactionImpl()");
        }
        this.p = new Object();
        this.i = i;
        this.f = f;
        this.e = e;
        this.k = 30000L;
        this.c = c;
        this.d = d;
        this.a = a;
        this.m = m;
        this.l = false;
        if (((dt)c.g()).i() != null) {
            b(this.o = new ep(this.a, this), "INTERNAL_ERROR");
        }
        synchronized (this.p) {
            this.h = 0;
            // monitorexit(this.p)
            final bg bg = new bg((byte)1, new Object[] { s2, s3, s4, s5, s6, s7, am, s8, new Short((short)1), new Short((short)1), s9, s10, s11, s12, s, m, db, null });
            final Thread currentThread = Thread.currentThread();
            i.a();
            i.a(bg, this, currentThread);
        }
    }
    
    private void a(final String s) {
        if (this.g != null) {
            this.g.a(s).a();
        }
    }
    
    private void a(final String s, final boolean b) {
        if (this.g == null) {
            return;
        }
        ck ck = this.g.a("NMASResponse");
        while (true) {
            try {
                ck = ck.a("ResultType", s);
                if (s.compareTo("QUERY_RESULT") == 0) {
                    ck = ck.a("IsFinal", b);
                }
                ck.a();
            }
            catch (cj cj) {
                continue;
            }
            break;
        }
    }
    
    private static String b(final byte[] array) {
        final StringBuffer sb = new StringBuffer();
        for (int i = 0; i < array.length; ++i) {
            final String hexString = Integer.toHexString(array[i]);
            if (hexString.length() > 1) {
                sb.append(hexString.substring(-2 + hexString.length()));
            }
            else {
                sb.append(hexString);
            }
            if (i == 3 || i == 5 || i == 7 || i == 9) {
                sb.append('-');
            }
        }
        return sb.toString();
    }
    
    private static void b(final ep ep, final String s) {
        if (ep != null) {
            ep.a(ep, s);
        }
    }
    
    @Override
    public final void a() {
        if (eo.b.b()) {
            eo.b.b("PDXTransactionImpl.end()");
        }
        synchronized (this.p) {
            if (this.h == -1) {
                eo.b.e("PDXTransactionImpl.end() transaction already finished!");
                throw new di("transaction already finished!");
            }
        }
        if (this.h == 0) {
            this.h = 1;
            final bf i = this.i;
            final bg bg = new bg((byte)4, null);
            final Thread currentThread = Thread.currentThread();
            this.i.a();
            i.a(bg, this, currentThread);
        }
        else {
            if (this.h == 1) {
                eo.b.e("PDXTransactionImpl.end() transaction already finished!");
                throw new di("transaction already finished!");
            }
            if (this.h == 2) {
                eo.b.e("PDXTransactionImpl.end() transaction already expired!");
                throw new dj("transaction already expired!");
            }
        }
    }
    // monitorexit(o)
    
    @Override
    public final void a(final ax ax) {
        if (eo.b.b()) {
            eo.b.b("PDXTransactionImpl.sendParam()");
        }
        if (ax == null) {
            throw new NullPointerException("Parameter cannot be null");
        }
        synchronized (this.p) {
            if (this.h == -1) {
                eo.b.e("PDXTransactionImpl.sendParam() transaction already finished!");
                throw new di("transaction already finished!");
            }
        }
        if (this.h == 0) {
            final bf i = this.i;
            final bg bg = new bg((byte)2, ax);
            final Thread currentThread = Thread.currentThread();
            this.i.a();
            i.a(bg, this, currentThread);
        }
        else {
            if (this.h == 1) {
                eo.b.e("PDXTransactionImpl.sendParam() transaction already finished!");
                throw new di("transaction already finished!");
            }
            if (this.h == 2) {
                eo.b.e("PDXTransactionImpl.sendParam() transaction already expired!");
                throw new dj("transaction already expired!");
            }
        }
    }
    // monitorexit(o)
    
    public final void a(final eg eg, final byte b) {
        eo.b.b("PDXTransactionImpl.onQueryError()");
        if (b != this.a) {
            return;
        }
        synchronized (this.p) {
            if (this.h == -1 || this.h == 2) {
                return;
            }
        }
        this.h = -1;
        this.a("QUERY_ERROR", true);
        if (this.j != null) {
            this.i.a(this.j);
        }
        while (true) {
            if (this.e == null) {
                break Label_0116;
            }
            try {
                b(this.o, "QUERY_ERROR");
                this.e.a((ev)eg);
            }
            // monitorexit(o)
            catch (Throwable t) {
                eo.b.e("got exp in PDXCommandListener.PDXQueryErrorReturned() [" + t.getClass().getName() + "] msg [" + t.getMessage() + "]");
                continue;
            }
            break;
        }
    }
    
    public final void a(final ej ej, final byte b) {
        if (eo.b.b()) {
            eo.b.b("PDXTransactionImpl.onQueryResults()");
        }
        if (b != this.a) {
            return;
        }
        synchronized (this.p) {
            if (this.h == -1 || this.h == 2) {
                return;
            }
        }
        this.l = true;
        this.a("QUERY_RESULT", ej.g());
        if (this.j != null && ej.g()) {
            this.i.a(this.j);
        }
        while (true) {
            if (this.e == null) {
                break Label_0141;
            }
            try {
                if (ej.g()) {
                    b(this.o, "FINAL_RESULT");
                }
                this.e.a(ej);
            }
            // monitorexit(o)
            catch (Throwable t) {
                eo.b.e("got exp in PDXCommandListener.PDXQueryResultReturned() [" + t.getClass().getName() + "] msg [" + t.getMessage() + "]");
                continue;
            }
            break;
        }
    }
    
    public final void a(final ek ek, final byte b) {
        eo.b.b("PDXTransactionImpl.onQueryRetry()");
        if (b != this.a) {
            return;
        }
        synchronized (this.p) {
            if (this.h == -1 || this.h == 2) {
                return;
            }
        }
        this.h = -1;
        this.a("QUERY_RETRY", true);
        if (this.j != null) {
            this.i.a(this.j);
        }
        while (true) {
            if (this.e == null) {
                break Label_0116;
            }
            try {
                b(this.o, "QUERY_RETRY");
                this.e.a((ew)ek);
            }
            // monitorexit(o)
            catch (Throwable t) {
                eo.b.e("got exp in PDXCommandListener.PDXQueryRetryReturned() [" + t.getClass().getName() + "] msg [" + t.getMessage() + "]");
                continue;
            }
            break;
        }
    }
    
    @Override
    public final void a(final Object o, final Object o2) {
        final bg bg = (bg)o;
        final Object b = bg.b;
        Object[] array;
        String s;
        String s2;
        String s3;
        String s4;
        String s5;
        String s6;
        am c;
        String s7;
        short shortValue;
        short shortValue2;
        String s8;
        String s9;
        String s10;
        String s11;
        byte[] f;
        String s12;
        String s13;
        db db;
        ci j;
        ck a;
        ee ee;
        Vector vector;
        int size;
        cw cw;
        cz cz;
        ep ep;
        cw cw2;
        ck a2;
        String b2;
        int a3;
        ax ax;
        byte[] array2;
        er er;
        ep o3;
        Block_12_Outer:Label_1059_Outer:
        while (true) {
        Label_1007_Outer:
            while (true) {
            Label_1142_Outer:
                while (true) {
                Label_1131_Outer:
                    while (true) {
                    Label_0882_Outer:
                        while (true) {
                            switch (bg.a) {
                                case 1: {
                                    array = (Object[])b;
                                    s = (String)array[0];
                                    s2 = (String)array[1];
                                    s3 = (String)array[2];
                                    s4 = (String)array[3];
                                    s5 = (String)array[4];
                                    s6 = (String)array[5];
                                    c = (am)array[6];
                                    s7 = (String)array[7];
                                    shortValue = (short)array[8];
                                    shortValue2 = (short)array[9];
                                    s8 = (String)array[10];
                                    s9 = (String)array[11];
                                    s10 = (String)array[12];
                                    s11 = (String)array[13];
                                    f = this.f.f();
                                    s12 = (String)array[14];
                                    s13 = (String)array[15];
                                    db = (db)array[16];
                                    if (new i(this.c.b).a()) {
                                        c = bx.c(c);
                                    }
                                    dw.i();
                                    j = this.f.j();
                                    if (j != null) {
                                        break Block_12_Outer;
                                    }
                                    break Label_0341;
                                }
                                case 2: {
                                    Label_0835: {
                                        break Label_0835;
                                        a = j.a("NMASCommand");
                                        try {
                                            this.g = a.a("Name", this.m).a("TransID", new Integer(this.a).toString()).a();
                                            ee = new ee(s, s2, s3, s4, s5, s6, c, s7, shortValue, shortValue2, s8, s9, s10, s11, f, s12, s13, db);
                                            vector = (Vector)((dt)this.c.g()).i();
                                            while (true) {
                                                Label_0644: {
                                                    if (vector != null) {
                                                        break Label_0644;
                                                    }
                                                    eo.b.c("appendLogToQueryBegin: NMSPDefines.DEVICE_CMD_LOG_TO_SERVER_ENABLED is disabled");
                                                    this.f.a((short)2597, "SEND_BCP_BEGIN" + this.a, ee.f(), null, this.a, 0L, this.c, false);
                                                    if (f == null) {
                                                        break;
                                                    }
                                                    try {
                                                        if (!this.n) {
                                                            this.n = true;
                                                            eo.b.b("PDXCommandCreated() called from handleInit()" + b(f) + ":" + this.a + " (" + this + "," + this.d + ")");
                                                            this.d.a(b(f) + ":" + this.a);
                                                            return;
                                                        }
                                                        break;
                                                    }
                                                    catch (Throwable t) {
                                                        eo.b.e("got exp in PDXCommandListener.PDXCommandCreated() [" + t.getClass().getName() + "] msg [" + t.getMessage() + "]");
                                                        return;
                                                    }
                                                }
                                                if (vector.size() == 0) {
                                                    eo.b.c("appendLogToQueryBegin: nmasResLogsToServer is empty, nothing to log to server");
                                                    continue Block_12_Outer;
                                                }
                                                size = vector.size();
                                                cw = new cw();
                                                cz = new cz();
                                                for (int i = 0; i < size; ++i) {
                                                    ep = vector.elementAt(i);
                                                    if (ep.a() != this.a) {
                                                        cw2 = new cw();
                                                        cw2.a("id", ep.b() + ":" + ep.a(), (short)193);
                                                        cw2.a("status", ep.c().toString(), (short)193);
                                                        cz.a(cw2);
                                                        ep.d();
                                                    }
                                                }
                                                cw.a("device_log", cz);
                                                ee.a("app_info", cw);
                                                continue Block_12_Outer;
                                            }
                                            // iftrue(Label_0882:, (dy)ax.c() != 127)
                                            // iftrue(Label_0963:, this.g == null)
                                            // iftrue(Label_0963:, !ax instanceof dy)
                                            while (true) {
                                                Block_10: {
                                                    while (true) {
                                                        while (true) {
                                                            a2 = this.g.a("NMASAudioParameter");
                                                            try {
                                                                a2.a("Name", b2).a("AudioID", a3).a();
                                                                Label_0963: {
                                                                    this.f.a((short)2585, "SEND_BCP_DATA", new eh((ed)ax).d(), null, this.a, 0L, this.c, false);
                                                                }
                                                                return;
                                                                dw.i();
                                                                this.f.a((short)2585, "SEND_BCP_DATA", new ef().d(), null, this.a, 0L, this.c, false);
                                                                this.j = new bq() {
                                                                    @Override
                                                                    public final void run() {
                                                                        // 
                                                                        // This method could not be decompiled.
                                                                        // 
                                                                        // Original Bytecode:
                                                                        // 
                                                                        //     0: aload_0        
                                                                        //     1: getfield        eo$1.a:Leo;
                                                                        //     4: invokestatic    eo.a:(Leo;)Ljava/lang/Object;
                                                                        //     7: astore_2       
                                                                        //     8: aload_2        
                                                                        //     9: monitorenter   
                                                                        //    10: aload_0        
                                                                        //    11: getfield        eo$1.a:Leo;
                                                                        //    14: invokestatic    eo.b:(Leo;)S
                                                                        //    17: pop            
                                                                        //    18: aload_2        
                                                                        //    19: monitorexit    
                                                                        //    20: aload_0        
                                                                        //    21: getfield        eo$1.a:Leo;
                                                                        //    24: ldc             "CommandExpired"
                                                                        //    26: invokestatic    eo.a:(Leo;Ljava/lang/String;)V
                                                                        //    29: aload_0        
                                                                        //    30: getfield        eo$1.a:Leo;
                                                                        //    33: invokestatic    eo.c:(Leo;)Leu;
                                                                        //    36: ifnull          77
                                                                        //    39: invokestatic    eo.g:()Lbe;
                                                                        //    42: ldc             "PDXTransactionImpl.end() timed out waiting for results. "
                                                                        //    44: invokevirtual   be.b:(Ljava/lang/Object;)V
                                                                        //    47: aload_0        
                                                                        //    48: getfield        eo$1.a:Leo;
                                                                        //    51: pop            
                                                                        //    52: aload_0        
                                                                        //    53: getfield        eo$1.a:Leo;
                                                                        //    56: invokestatic    eo.d:(Leo;)Lep;
                                                                        //    59: ldc             "TIMEOUT_CMD"
                                                                        //    61: invokestatic    eo.a:(Lep;Ljava/lang/String;)V
                                                                        //    64: aload_0        
                                                                        //    65: getfield        eo$1.a:Leo;
                                                                        //    68: invokestatic    eo.c:(Leo;)Leu;
                                                                        //    71: iconst_1       
                                                                        //    72: invokeinterface eu.a:(S)V
                                                                        //    77: return         
                                                                        //    78: astore_3       
                                                                        //    79: aload_2        
                                                                        //    80: monitorexit    
                                                                        //    81: aload_3        
                                                                        //    82: athrow         
                                                                        //    83: astore_1       
                                                                        //    84: invokestatic    eo.g:()Lbe;
                                                                        //    87: new             Ljava/lang/StringBuilder;
                                                                        //    90: dup            
                                                                        //    91: ldc             "PDXTransactionImpl.run() "
                                                                        //    93: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
                                                                        //    96: aload_1        
                                                                        //    97: invokevirtual   java/lang/Object.getClass:()Ljava/lang/Class;
                                                                        //   100: invokevirtual   java/lang/Class.getName:()Ljava/lang/String;
                                                                        //   103: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                                                                        //   106: ldc             " "
                                                                        //   108: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                                                                        //   111: aload_1        
                                                                        //   112: invokevirtual   java/lang/Exception.getMessage:()Ljava/lang/String;
                                                                        //   115: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                                                                        //   118: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
                                                                        //   121: invokevirtual   be.e:(Ljava/lang/Object;)V
                                                                        //   124: return         
                                                                        //   125: astore          5
                                                                        //   127: invokestatic    eo.g:()Lbe;
                                                                        //   130: new             Ljava/lang/StringBuilder;
                                                                        //   133: dup            
                                                                        //   134: ldc             "got exp in PDXCommandListener.PDXCommandEvent(TIMED_OUT_WAITING_FOR_RESULT) ["
                                                                        //   136: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
                                                                        //   139: aload           5
                                                                        //   141: invokevirtual   java/lang/Object.getClass:()Ljava/lang/Class;
                                                                        //   144: invokevirtual   java/lang/Class.getName:()Ljava/lang/String;
                                                                        //   147: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                                                                        //   150: ldc             "] msg ["
                                                                        //   152: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                                                                        //   155: aload           5
                                                                        //   157: invokevirtual   java/lang/Throwable.getMessage:()Ljava/lang/String;
                                                                        //   160: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                                                                        //   163: ldc             "]"
                                                                        //   165: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                                                                        //   168: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
                                                                        //   171: invokevirtual   be.e:(Ljava/lang/Object;)V
                                                                        //   174: return         
                                                                        //    Exceptions:
                                                                        //  Try           Handler
                                                                        //  Start  End    Start  End    Type                 
                                                                        //  -----  -----  -----  -----  ---------------------
                                                                        //  0      10     83     125    Ljava/lang/Exception;
                                                                        //  10     20     78     83     Any
                                                                        //  20     47     83     125    Ljava/lang/Exception;
                                                                        //  47     77     125    175    Ljava/lang/Throwable;
                                                                        //  47     77     83     125    Ljava/lang/Exception;
                                                                        //  79     83     83     125    Ljava/lang/Exception;
                                                                        //  127    174    83     125    Ljava/lang/Exception;
                                                                        // 
                                                                        // The error that occurred was:
                                                                        // 
                                                                        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0077:
                                                                        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                                                                        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                                                                        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                                                                        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformCall(AstMethodBodyBuilder.java:1163)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:1010)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:554)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformNode(AstMethodBodyBuilder.java:392)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformBlock(AstMethodBodyBuilder.java:333)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformNode(AstMethodBodyBuilder.java:494)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformBlock(AstMethodBodyBuilder.java:333)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformNode(AstMethodBodyBuilder.java:494)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformBlock(AstMethodBodyBuilder.java:333)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformNode(AstMethodBodyBuilder.java:480)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformBlock(AstMethodBodyBuilder.java:333)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:294)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                                                                        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                                                                        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                                                                        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                                                                        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                                                                        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
                                                                        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
                                                                        // 
                                                                        throw new IllegalStateException("An error occurred while decompiling this method.");
                                                                    }
                                                                };
                                                                this.i.a(this.j, this.k);
                                                                return;
                                                                array2 = (byte[])b;
                                                                dw.i();
                                                                this.f.a((short)2585, "SEND_BCP_DATA", new ea(array2).d(), null, this.a, 0L, this.c, false);
                                                                return;
                                                                er = (er)b;
                                                                o3 = this.o;
                                                                // iftrue(Label_0052:, o3 == null)
                                                                o3.a(er);
                                                                return;
                                                                this.e.a((short)4);
                                                                return;
                                                            }
                                                            catch (cj cj) {}
                                                            ax = (ax)b;
                                                            break Block_10;
                                                            b2 = ((dy)ax).b();
                                                            a3 = ((dy)ax).a();
                                                            continue Label_1059_Outer;
                                                        }
                                                        dw.i();
                                                        continue Label_0882_Outer;
                                                    }
                                                }
                                                this.f.a(((em)ax).a(), ((em)ax).e(), this.c);
                                                continue;
                                            }
                                        }
                                        catch (cj cj2) {
                                            continue Label_1059_Outer;
                                        }
                                    }
                                    break;
                                }
                                case 3: {
                                    continue Label_1142_Outer;
                                }
                                case 4: {
                                    continue Label_1007_Outer;
                                }
                                case 5: {
                                    continue;
                                }
                                case 6: {
                                    continue Label_1131_Outer;
                                }
                            }
                            break;
                        }
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        }
        Label_0052:;
    }
    
    public final void a(final short p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: getstatic       eo.b:Lbe;
        //     3: invokevirtual   be.b:()Z
        //     6: ifeq            32
        //     9: getstatic       eo.b:Lbe;
        //    12: new             Ljava/lang/StringBuilder;
        //    15: dup            
        //    16: ldc_w           "PDXTransactionImpl.onSessionDisconnected() "
        //    19: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    22: iload_1        
        //    23: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //    26: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    29: invokevirtual   be.b:(Ljava/lang/Object;)V
        //    32: aload_0        
        //    33: getfield        eo.p:Ljava/lang/Object;
        //    36: astore_2       
        //    37: aload_2        
        //    38: monitorenter   
        //    39: aload_0        
        //    40: getfield        eo.h:S
        //    43: iconst_1       
        //    44: if_icmpne       68
        //    47: aload_0        
        //    48: getfield        eo.j:Lbq;
        //    51: ifnull          68
        //    54: aload_0        
        //    55: getfield        eo.i:Lbf;
        //    58: aload_0        
        //    59: getfield        eo.j:Lbq;
        //    62: invokeinterface bf.a:(Lbq;)Z
        //    67: pop            
        //    68: aload_0        
        //    69: getfield        eo.h:S
        //    72: iconst_2       
        //    73: if_icmpne       79
        //    76: aload_2        
        //    77: monitorexit    
        //    78: return         
        //    79: iload_1        
        //    80: ifne            124
        //    83: aload_0        
        //    84: getfield        eo.h:S
        //    87: iconst_m1      
        //    88: if_icmpeq       111
        //    91: aload_0        
        //    92: getfield        eo.o:Lep;
        //    95: ldc_w           "REMOTE_DISC"
        //    98: invokestatic    eo.b:(Lep;Ljava/lang/String;)V
        //   101: aload_0        
        //   102: getfield        eo.e:Leu;
        //   105: iconst_3       
        //   106: invokeinterface eu.a:(S)V
        //   111: aload_0        
        //   112: iconst_2       
        //   113: putfield        eo.h:S
        //   116: aload_2        
        //   117: monitorexit    
        //   118: return         
        //   119: astore_3       
        //   120: aload_2        
        //   121: monitorexit    
        //   122: aload_3        
        //   123: athrow         
        //   124: iload_1        
        //   125: iconst_1       
        //   126: if_icmpne       215
        //   129: aload_0        
        //   130: getfield        eo.h:S
        //   133: iconst_m1      
        //   134: if_icmpeq       111
        //   137: aload_0        
        //   138: getfield        eo.e:Leu;
        //   141: iconst_4       
        //   142: invokeinterface eu.a:(S)V
        //   147: goto            111
        //   150: astore          4
        //   152: getstatic       eo.b:Lbe;
        //   155: new             Ljava/lang/StringBuilder;
        //   158: dup            
        //   159: ldc_w           "got exp in PDXCommandListener.PDXCommandEvent() or PDXManagerListener.PDXManagerError() or PDXManagerListener.PDXManagerDisconnected() reasonCode ["
        //   162: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   165: iload_1        
        //   166: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   169: ldc_w           "] ["
        //   172: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   175: aload           4
        //   177: invokevirtual   java/lang/Object.getClass:()Ljava/lang/Class;
        //   180: invokevirtual   java/lang/Class.getName:()Ljava/lang/String;
        //   183: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   186: ldc_w           "] msg ["
        //   189: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   192: aload           4
        //   194: invokevirtual   java/lang/Throwable.getMessage:()Ljava/lang/String;
        //   197: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   200: ldc_w           "]"
        //   203: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   206: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   209: invokevirtual   be.e:(Ljava/lang/Object;)V
        //   212: goto            111
        //   215: iload_1        
        //   216: iconst_3       
        //   217: if_icmpne       251
        //   220: aload_0        
        //   221: getfield        eo.h:S
        //   224: iconst_m1      
        //   225: if_icmpeq       111
        //   228: aload_0        
        //   229: getfield        eo.o:Lep;
        //   232: ldc_w           "TIMEOUT_IDLE"
        //   235: invokestatic    eo.b:(Lep;Ljava/lang/String;)V
        //   238: aload_0        
        //   239: getfield        eo.e:Leu;
        //   242: iconst_5       
        //   243: invokeinterface eu.a:(S)V
        //   248: goto            111
        //   251: iload_1        
        //   252: iconst_4       
        //   253: if_icmpne       286
        //   256: aload_0        
        //   257: getfield        eo.h:S
        //   260: iconst_m1      
        //   261: if_icmpeq       111
        //   264: aload_0        
        //   265: getfield        eo.o:Lep;
        //   268: ldc_w           "CONN_FAILED"
        //   271: invokestatic    eo.b:(Lep;Ljava/lang/String;)V
        //   274: aload_0        
        //   275: getfield        eo.d:Lds;
        //   278: invokeinterface ds.a:()V
        //   283: goto            111
        //   286: iload_1        
        //   287: iconst_5       
        //   288: if_icmpne       321
        //   291: aload_0        
        //   292: getfield        eo.h:S
        //   295: iconst_m1      
        //   296: if_icmpeq       111
        //   299: aload_0        
        //   300: getfield        eo.o:Lep;
        //   303: ldc_w           "CONN_FAILED"
        //   306: invokestatic    eo.b:(Lep;Ljava/lang/String;)V
        //   309: aload_0        
        //   310: getfield        eo.d:Lds;
        //   313: invokeinterface ds.a:()V
        //   318: goto            111
        //   321: iload_1        
        //   322: bipush          6
        //   324: if_icmpne       358
        //   327: aload_0        
        //   328: getfield        eo.h:S
        //   331: iconst_m1      
        //   332: if_icmpeq       111
        //   335: aload_0        
        //   336: getfield        eo.o:Lep;
        //   339: ldc_w           "REMOTE_DISC"
        //   342: invokestatic    eo.b:(Lep;Ljava/lang/String;)V
        //   345: aload_0        
        //   346: getfield        eo.e:Leu;
        //   349: iconst_3       
        //   350: invokeinterface eu.a:(S)V
        //   355: goto            111
        //   358: iload_1        
        //   359: bipush          7
        //   361: if_icmpne       394
        //   364: aload_0        
        //   365: getfield        eo.h:S
        //   368: iconst_m1      
        //   369: if_icmpeq       111
        //   372: aload_0        
        //   373: getfield        eo.o:Lep;
        //   376: ldc_w           "CONN_FAILED"
        //   379: invokestatic    eo.b:(Lep;Ljava/lang/String;)V
        //   382: aload_0        
        //   383: getfield        eo.d:Lds;
        //   386: invokeinterface ds.a:()V
        //   391: goto            111
        //   394: iload_1        
        //   395: bipush          8
        //   397: if_icmpne       111
        //   400: aload_0        
        //   401: getfield        eo.h:S
        //   404: iconst_m1      
        //   405: if_icmpeq       111
        //   408: aload_0        
        //   409: getfield        eo.o:Lep;
        //   412: ldc_w           "REMOTE_DISC"
        //   415: invokestatic    eo.b:(Lep;Ljava/lang/String;)V
        //   418: aload_0        
        //   419: getfield        eo.e:Leu;
        //   422: iconst_3       
        //   423: invokeinterface eu.a:(S)V
        //   428: goto            111
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  39     68     119    124    Any
        //  68     78     119    124    Any
        //  83     111    150    215    Ljava/lang/Throwable;
        //  83     111    119    124    Any
        //  111    118    119    124    Any
        //  129    147    150    215    Ljava/lang/Throwable;
        //  129    147    119    124    Any
        //  152    212    119    124    Any
        //  220    248    150    215    Ljava/lang/Throwable;
        //  220    248    119    124    Any
        //  256    283    150    215    Ljava/lang/Throwable;
        //  256    283    119    124    Any
        //  291    318    150    215    Ljava/lang/Throwable;
        //  291    318    119    124    Any
        //  327    355    150    215    Ljava/lang/Throwable;
        //  327    355    119    124    Any
        //  364    391    150    215    Ljava/lang/Throwable;
        //  364    391    119    124    Any
        //  400    428    150    215    Ljava/lang/Throwable;
        //  400    428    119    124    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0111:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public final void a(final byte[] array) {
        if (eo.b.b()) {
            eo.b.b("PDXTransactionImpl.onSessionConnected()");
        }
        synchronized (this.p) {
            if (this.h != 0) {
                if (this.h != 1) {
                    return;
                }
            }
            try {
                final String b = b(array);
                final ep o = this.o;
                if (o != null) {
                    o.a(b);
                }
                if (!this.n) {
                    this.n = true;
                    eo.b.b("PDXCommandCreated() called from onSessionConnected()" + b + ":" + this.a + " (" + this + "," + this.d + ")");
                    this.d.a(b + ":" + this.a);
                }
            }
            catch (Throwable t) {
                eo.b.e("got exp in PDXCommandListener.PDXCommandCreated() [" + t.getClass().getName() + "] msg [" + t.getMessage() + "]");
            }
        }
    }
    
    public final void b() {
        this.f();
    }
    
    public final void c() {
        this.f();
    }
    
    public final void d() {
        this.f();
    }
    
    public final void e() {
        synchronized (this.p) {
            if (this.h == 1 && this.j != null) {
                this.i.a(this.j);
            }
            if (this.h == 2) {
                return;
            }
            if (this.h != -1) {
                if (!this.l) {
                    this.a("CommandAbort");
                }
                final bf i = this.i;
                final bg bg = new bg((byte)5, null);
                final Thread currentThread = Thread.currentThread();
                this.i.a();
                i.a(bg, this, currentThread);
            }
            this.h = 2;
        }
    }
    
    protected final void f() {
        if (this.j != null) {
            this.i.a(this.j);
            this.i.a(this.j, this.k);
        }
    }
}
