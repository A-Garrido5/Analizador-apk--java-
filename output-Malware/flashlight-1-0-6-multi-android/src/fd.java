import java.lang.reflect.Method;
import java.lang.reflect.Constructor;

// 
// Decompiled by Procyon v0.5.30
// 

public final class fd
{
    public fd() {
        dh.a(this.getClass());
    }
    
    public static Class a(final String s) {
        try {
            return Class.forName(s);
        }
        catch (ClassNotFoundException ex) {
            ex.printStackTrace();
            throw new RuntimeException("getClassForName failed", ex);
        }
    }
    
    public static Object a(final Class clazz, final String s) {
        try {
            return clazz.getField(s).get(null);
        }
        catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException("getFieldValue failed", ex);
        }
    }
    
    public static Object a(final Class clazz, final String s, final Object o) {
        try {
            return clazz.getField(s).get(null);
        }
        catch (Exception ex) {
            return o;
        }
    }
    
    public static Constructor a(final Class clazz, final Class... array) {
        try {
            return clazz.getConstructor((Class[])array);
        }
        catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException("getConstructor failed", ex);
        }
    }
    
    public static Method a(final Class clazz, final String s, final Class... array) {
        try {
            return clazz.getMethod(s, (Class[])array);
        }
        catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException("getMethod failed", ex);
        }
    }
    
    public static Method b(final Class clazz, final String s, final Class... array) {
        try {
            return clazz.getMethod(s, (Class[])array);
        }
        catch (Exception ex) {
            return null;
        }
    }
}
