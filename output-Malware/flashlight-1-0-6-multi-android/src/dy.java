import java.io.ByteArrayOutputStream;

// 
// Decompiled by Procyon v0.5.30
// 

public class dy extends ed implements bh, dd
{
    private static final be a;
    private int b;
    private du c;
    private boolean d;
    private bf e;
    
    static {
        a = dh.a(dy.class);
    }
    
    public dy(final String s, final du c, final bf e) {
        super(s, (byte)1);
        this.d = false;
        this.c = c;
        this.e = e;
        this.b = c.c();
        final bg bg = new bg((byte)1, null);
        final Thread currentThread = Thread.currentThread();
        e.a();
        e.a(bg, this, currentThread);
    }
    
    protected final int a() {
        return this.b;
    }
    
    @Override
    public final void a(final Object o, final Object o2) {
        final bg bg = (bg)o;
        switch (bg.a) {
            case 1: {
                this.c.a(this.b);
            }
            case 2: {
                final Object[] array = (Object[])bg.b;
                final byte[] array2 = (byte[])array[0];
                final boolean booleanValue = (boolean)array[1];
                if (array2 != null) {
                    if (bx.b(this.c.i())) {
                        final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
                        if (array2.length < 128) {
                            byteArrayOutputStream.write(0x7F & array2.length);
                        }
                        else if (array2.length < 16384) {
                            byteArrayOutputStream.write(0x80 | (0x7F & array2.length >> 7));
                            byteArrayOutputStream.write(0x7F & array2.length);
                        }
                        else if (array2.length < 2097152) {
                            byteArrayOutputStream.write(0x80 | (0x7F & array2.length >> 14));
                            byteArrayOutputStream.write(0x80 | (0x7F & array2.length >> 7));
                            byteArrayOutputStream.write(0x7F & array2.length);
                        }
                        else {
                            if (array2.length >= 268435456) {
                                dy.a.e("buffer size is too big!");
                                return;
                            }
                            byteArrayOutputStream.write(0x80 | (0x7F & array2.length >> 21));
                            byteArrayOutputStream.write(0x80 | (0x7F & array2.length >> 14));
                            byteArrayOutputStream.write(0x80 | (0x7F & array2.length >> 7));
                            byteArrayOutputStream.write(0x7F & array2.length);
                        }
                        byteArrayOutputStream.write(array2, 0, array2.length);
                        this.c.a(byteArrayOutputStream.toByteArray(), this.b);
                    }
                    else {
                        this.c.a(array2, this.b);
                    }
                }
                if (booleanValue) {
                    this.c.b(this.b);
                    return;
                }
                break;
            }
        }
    }
    
    @Override
    public final void a(final byte[] array, final int n, final int n2, final boolean b) {
        if (array == null && !b) {
            dy.a.e("PDXAudioParam.addAudioBuf() in (NMSPAudioSink)PDXAudioParam.addAudioBuf(), the param \"buffer\" is null.");
            throw new NullPointerException("in (NMSPAudioSink)PDXAudioParam.addAudioBuf(), the param \"buffer\" is null.");
        }
        if (array != null && n < 0) {
            dy.a.e("PDXAudioParam.addAudioBuf() the offset of the \"buffer\" is less than 0");
            throw new IllegalArgumentException("the offset of the \"buffer\" is less than 0");
        }
        if (array != null && n2 <= 0) {
            dy.a.e("PDXAudioParam.addAudioBuf() the indicated length of the \"buffer\" is less than 1 byte");
            throw new IllegalArgumentException("the indicated length of the \"buffer\" is less than 1 byte");
        }
        if (this.d) {
            dy.a.e("PDXAudioParam.addAudioBuf() last audio buffer already added!");
            throw new dk("last audio buffer already added!");
        }
        if (b) {
            this.d = true;
        }
        Object o = null;
        if (array != null) {
            o = new byte[n2];
            System.arraycopy(array, n, o, 0, n2);
        }
        final Object[] array2 = { o, new Boolean(b) };
        final bf e = this.e;
        final bg bg = new bg((byte)2, array2);
        final Thread currentThread = Thread.currentThread();
        this.e.a();
        e.a(bg, this, currentThread);
    }
}
