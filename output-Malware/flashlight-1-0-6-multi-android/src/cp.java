import java.util.Hashtable;

// 
// Decompiled by Procyon v0.5.30
// 

public final class cp implements ck
{
    private final cs a;
    private final Hashtable b;
    private boolean c;
    
    private cp(final cs a, final cq cq) {
        this.b = new Hashtable();
        this.c = false;
        this.a = a;
        this.a.c.a(a, cq);
    }
    
    static cp a(final cn cn, final String s) {
        if (s == null) {
            throw new IllegalArgumentException("eventName is null.");
        }
        return new cp(new co(cn, s), null);
    }
    
    static cp a(final cs cs, final String s) {
        if (s == null) {
            throw new IllegalArgumentException("eventName is null.");
        }
        return new cp(new cm(cs, s), null);
    }
    
    public static cp a(final cs cs, final String s, final cq cq) {
        if (s == null) {
            throw new IllegalArgumentException("eventName is null.");
        }
        return new cp(new cn(cs, s), cq);
    }
    
    static cp a(final String s, final String s2, final String s3, final int n, final cl cl, final String s4) {
        if (s4 == null) {
            throw new IllegalArgumentException("eventName is null.");
        }
        return new cp(new co(s, s2, s3, n, cl, s4), null);
    }
    
    @Override
    public final ci a() {
        return this.a(null);
    }
    
    public final ci a(final cr cr) {
        if (!this.c) {
            this.a.a(this.b, cr);
            this.c = true;
        }
        return this.a;
    }
    
    @Override
    public final ck a(final String s, final int n) {
        if (this.c) {
            throw new cj("SessionEvent is alreadt committed.");
        }
        this.b.put(s, new Integer(n));
        return this;
    }
    
    @Override
    public final ck a(final String s, final String s2) {
        if (this.c) {
            throw new cj("SessionEvent is alreadt committed.");
        }
        this.b.put(s, s2);
        return this;
    }
    
    @Override
    public final ck a(final String s, final boolean b) {
        if (this.c) {
            throw new cj("SessionEvent is alreadt committed.");
        }
        this.b.put(s, new Boolean(b));
        return this;
    }
    
    public final ci b() {
        if (this.a instanceof cn) {
            ((cn)this.a).a = true;
        }
        if (!this.c) {
            this.a.a(this.b, null);
            this.c = true;
        }
        return this.a;
    }
}
