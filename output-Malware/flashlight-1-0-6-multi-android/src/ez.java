import android.content.Intent;
import android.content.BroadcastReceiver;
import android.content.IntentFilter;
import android.content.Context;

// 
// Decompiled by Procyon v0.5.30
// 

public abstract class ez
{
    private static final be c;
    protected Context a;
    protected fc b;
    private Object d;
    
    static {
        c = dh.a(ez.class);
    }
    
    protected ez(final Context a) {
        this.d = new Object();
        this.a = a;
        this.b = new fc(this.a);
    }
    
    public static ez a(final Context context) {
        final int a = ex.a;
        if (a < 8 || ex.b) {
            return new ff(context);
        }
        if (a < 9) {
            return new fg(context);
        }
        return new fe(context);
    }
    
    public final void a() {
        final IntentFilter intentFilter = new IntentFilter(fc.a);
        final BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
            public final void onReceive(final Context context, final Intent intent) {
                final int intExtra = intent.getIntExtra(fc.b, -1);
                if (ez.c.c()) {
                    ez.c.c("BluetoothHeadset BroadcastReceiver " + intExtra);
                }
                synchronized (ez.this.d) {
                    if (intExtra == fc.c) {
                        if (ez.c.c()) {
                            ez.c.c("BluetoothHeadset SCO connected. Notify wait lock.");
                        }
                        ez.this.d.notify();
                    }
                }
            }
        };
        synchronized (this.d) {
            this.a.registerReceiver((BroadcastReceiver)broadcastReceiver, intentFilter);
            final long currentTimeMillis = System.currentTimeMillis();
            this.d();
            while (true) {
                try {
                    this.d.wait(3000L);
                    if (ez.c.c()) {
                        ez.c.c("BluetoothHeadset " + (System.currentTimeMillis() - currentTimeMillis) + "ms to wait for SCO");
                    }
                    // monitorexit(this.d)
                    this.a.unregisterReceiver((BroadcastReceiver)broadcastReceiver);
                }
                catch (InterruptedException ex) {
                    if (ez.c.e()) {
                        ez.c.e("BluetoothHeadset mHeadsetScoSyncObj.wait() threw exception:" + ex);
                    }
                    continue;
                }
                break;
            }
        }
    }
    
    public final boolean b() {
        return this.b.a() != null;
    }
    
    public final void c() {
        if (this.b == null) {
            return;
        }
        while (true) {
            try {
                this.b.d();
                this.b = null;
            }
            catch (Throwable t) {
                continue;
            }
            break;
        }
    }
    
    public abstract void d();
    
    public abstract void e();
    
    public abstract int f();
    
    public abstract int g();
}
