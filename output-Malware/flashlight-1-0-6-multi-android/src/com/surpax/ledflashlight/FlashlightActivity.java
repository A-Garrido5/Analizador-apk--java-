// 
// Decompiled by Procyon v0.5.30
// 

package com.surpax.ledflashlight;

import android.view.MotionEvent;
import android.os.PowerManager;
import android.annotation.TargetApi;
import android.view.ViewGroup;
import android.view.LayoutInflater;
import android.widget.RelativeLayout;
import android.view.WindowManager$LayoutParams;
import android.content.res.Resources;
import android.view.Window;
import android.os.Build$VERSION;
import android.annotation.SuppressLint;
import android.content.Intent;
import android.view.View$OnClickListener;
import android.graphics.BitmapFactory;
import android.graphics.BitmapFactory$Options;
import android.util.Log;
import android.util.DisplayMetrics;
import java.util.Observer;
import android.os.Bundle;
import android.content.res.Configuration;
import java.util.Iterator;
import java.util.List;
import android.content.pm.ApplicationInfo;
import android.text.TextUtils;
import android.os.Build;
import com.ihs.a.d;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.AnimationDrawable;
import android.view.ViewGroup$LayoutParams;
import android.widget.RelativeLayout$LayoutParams;
import com.ihs.g.j;
import android.content.DialogInterface;
import android.content.DialogInterface$OnClickListener;
import android.content.Context;
import android.app.AlertDialog$Builder;
import android.content.SharedPreferences$Editor;
import java.util.Map;
import android.content.SharedPreferences;
import android.os.PowerManager$WakeLock;
import android.view.View;
import com.surpax.a.b;
import com.surpax.a.c;
import com.ihandysoft.ad.HSAdBannerView;
import android.app.AlertDialog;
import android.widget.ImageButton;
import android.widget.TextView;
import android.view.SurfaceView;
import com.ihs.session.HSActivity;

public class FlashlightActivity extends HSActivity
{
    private static FlashlightActivity q;
    public boolean a;
    public int b;
    public boolean c;
    public boolean d;
    public int e;
    public SurfaceView f;
    public float g;
    public float h;
    private TextView i;
    private ImageButton j;
    private ImageButton k;
    private boolean l;
    private boolean m;
    private AlertDialog n;
    private HSAdBannerView o;
    private a p;
    private c r;
    private b s;
    private com.surpax.c.a.c t;
    private boolean u;
    private View v;
    private com.surpax.d.a w;
    private PowerManager$WakeLock x;
    
    public FlashlightActivity() {
        this.l = false;
        this.a = false;
        this.m = false;
        this.n = null;
        this.b = 0;
        this.c = false;
        this.p = new a();
    }
    
    private int a(final String s) {
        int int1 = -1;
        final SharedPreferences sharedPreferences = this.getSharedPreferences(s, 0);
        if (sharedPreferences != null) {
            int1 = sharedPreferences.getInt(s, int1);
        }
        return int1;
    }
    
    public static int a(final Map map) {
        if (map == null || map.isEmpty()) {
            return 0;
        }
        final Map<K, Map> map2 = map.get("Application");
        if (map2 == null || map2.isEmpty()) {
            return 0;
        }
        final Map<K, Boolean> map3 = map2.get("RateAlert");
        if (map3 == null || map3.isEmpty()) {
            return 0;
        }
        if (map3.containsKey("ExitAlertShowWhenClickHomeButton")) {
            com.surpax.a.a.M = map3.get("ExitAlertShowWhenClickHomeButton");
        }
        else {
            com.surpax.a.a.M = false;
        }
        if (map3.containsKey("RateAlertShowPlace")) {
            return (Integer)(Object)map3.get("RateAlertShowPlace");
        }
        return 0;
    }
    
    public static FlashlightActivity a() {
        return FlashlightActivity.q;
    }
    
    private void a(final String s, final int n) {
        final SharedPreferences$Editor edit = this.getSharedPreferences(s, 0).edit();
        edit.putInt(s, n);
        edit.commit();
    }
    
    private void b(final String message) {
        final AlertDialog$Builder alertDialog$Builder = new AlertDialog$Builder((Context)this);
        alertDialog$Builder.setMessage((CharSequence)message).setCancelable(false).setPositiveButton(17039370, (DialogInterface$OnClickListener)new DialogInterface$OnClickListener() {
            public final void onClick(final DialogInterface dialogInterface, final int n) {
                if (dialogInterface != null) {
                    dialogInterface.cancel();
                }
                FlashlightActivity.d(FlashlightActivity.this);
            }
        });
        final AlertDialog create = alertDialog$Builder.create();
        create.setTitle(17039380);
        create.setIcon(17301659);
        create.show();
        this.n = create;
    }
    
    static /* synthetic */ void d(final FlashlightActivity flashlightActivity) {
        flashlightActivity.n = null;
    }
    
    public final void a(final int n) {
        if (this.r != null) {
            this.r.a(n);
        }
    }
    
    public final void a(final boolean b) {
        if (this.u && this.w != null) {
            if (!b) {
                this.w.setVisibility(4);
                return;
            }
            this.w.setVisibility(0);
            if (this.j != null && this.l) {
                this.j.setVisibility(0);
                this.l = false;
            }
            this.k.setVisibility(0);
        }
    }
    
    public final b b() {
        return this.s;
    }
    
    public final void c() {
        final boolean c = com.ihs.g.j.c("honeycomb_last_session_appear");
        if (com.surpax.b.a.a().g() && !com.surpax.b.a.c) {
            this.a = true;
            com.ihs.g.c.a("ihshoney", "prepare to show honey comb icon");
            this.i.setText((CharSequence)com.surpax.b.a.a().f());
            switch (com.surpax.b.a.a().b()) {
                case 0: {
                    this.j.setImageResource(2130837638);
                    break;
                }
                case 1: {
                    this.j.setImageResource(2130837639);
                    break;
                }
                case 2: {
                    this.j.setImageResource(2130837637);
                    break;
                }
            }
            final Drawable drawable = this.j.getDrawable();
            final RelativeLayout$LayoutParams layoutParams = new RelativeLayout$LayoutParams(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());
            layoutParams.leftMargin = (int)this.s.N;
            layoutParams.topMargin = -5 + (int)this.s.O;
            this.j.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
            this.j.setVisibility(0);
            this.j.bringToFront();
            this.j.postInvalidate();
            com.ihs.g.j.a("honeycomb_last_session_appear", true);
            if (!com.ihs.g.j.c("honeycomb_had_clicked")) {
                final Drawable drawable2 = this.j.getDrawable();
                if (drawable2 instanceof AnimationDrawable) {
                    this.j.post((Runnable)new Runnable() {
                        @Override
                        public final void run() {
                            ((AnimationDrawable)drawable2).start();
                        }
                    });
                }
            }
            if (!c) {
                com.ihs.a.d.a();
                com.ihs.a.d.c("HC_Icon_Appear");
            }
            com.ihs.a.d.a();
            com.ihs.a.d.c("HC_Icon_Viewed");
            return;
        }
        com.ihs.g.c.a("ihshoney", "prepare to hide honey comb icon");
        this.a = false;
        this.j.setVisibility(4);
        com.ihs.g.j.a("honeycomb_last_session_appear", false);
        if (c) {
            if (com.surpax.b.a.c) {
                com.ihs.a.d.a();
                com.ihs.a.d.a("HC_Icon_Disappear", new String[] { "Reason", "AlreadyInstallApp" });
            }
            else {
                com.ihs.a.d.a();
                com.ihs.a.d.a("HC_Icon_Disappear", new String[] { "Reason", "RemoteConfig" });
            }
        }
        this.i.setVisibility(4);
    }
    
    public final void d() {
        if (this.t != null) {
            this.t.d();
        }
    }
    
    public final void e() {
        if (this.t != null) {
            this.t.e();
        }
    }
    
    public final void f() {
        if (this.t != null) {
            this.t.f();
        }
    }
    
    public final boolean g() {
        return this.u;
    }
    
    public final View h() {
        return this.v;
    }
    
    public final void i() {
        if (this.j != null && this.j.getVisibility() == 0) {
            this.j.setVisibility(4);
            this.l = true;
        }
    }
    
    public final void j() {
        try {
            if (this.n != null) {
                this.n.dismiss();
                this.n = null;
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    public final View k() {
        return this.findViewById(2131099706);
    }
    
    public final boolean l() {
        boolean b;
        if (this.u) {
            b = false;
        }
        else if ("samsung".equalsIgnoreCase(Build.MANUFACTURER) && "SPH-M820-BST".equals(Build.MODEL)) {
            b = false;
        }
        else if ("samsung".equalsIgnoreCase(Build.MANUFACTURER) && "SGH-T679".equals(Build.MODEL)) {
            b = false;
        }
        else if ("samsung".equalsIgnoreCase(Build.MANUFACTURER) && "SPH-D710".equals(Build.MODEL)) {
            b = false;
        }
        else if ("ZTE".equalsIgnoreCase(Build.MANUFACTURER) && "N860".equals(Build.MODEL)) {
            b = false;
        }
        else if ("ZTE".equalsIgnoreCase(Build.MANUFACTURER) && "ZTE-SKATE".equals(Build.MODEL)) {
            b = false;
        }
        else if ("LGE".equalsIgnoreCase(Build.MANUFACTURER) && "LG-LS855".equals(Build.MODEL)) {
            b = false;
        }
        else if ("Motorola".equalsIgnoreCase(Build.MANUFACTURER) && "A854".equals(Build.MODEL)) {
            b = false;
        }
        else {
            b = true;
        }
        return b && this.c;
    }
    
    public final void m() {
        try {
            if (this.i.getVisibility() == 0) {
                this.i.setVisibility(4);
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    public final void n() {
        int n = 0;
        int n2;
        if (TextUtils.isEmpty((CharSequence)com.surpax.b.a.a)) {
            n2 = 3;
        }
        else {
            n2 = 4;
        }
        com.surpax.b.a.c = false;
        final List installedApplications = this.getPackageManager().getInstalledApplications(8192);
        for (final ApplicationInfo applicationInfo : installedApplications) {
            int n3;
            if (!TextUtils.isEmpty((CharSequence)com.surpax.b.a.a) && com.surpax.b.a.a.equalsIgnoreCase(applicationInfo.packageName)) {
                com.surpax.b.a.c = true;
                n3 = n + 1;
            }
            else {
                n3 = n;
            }
            if (n3 >= n2) {
                break;
            }
            n = n3;
        }
        installedApplications.clear();
    }
    
    public void onConfigurationChanged(final Configuration configuration) {
        super.onConfigurationChanged(configuration);
    }
    
    @SuppressLint({ "CommitPrefEdits", "InlinedApi" })
    public void onCreate(final Bundle bundle) {
        super.onCreate(bundle);
        com.ihs.session.a.a().addObserver(com.ihs.apps.framework.sub.a.d());
        this.requestWindowFeature(1);
        final Window window = this.getWindow();
        window.setFlags(1024, 1024);
        window.addFlags(2097280);
        this.setContentView(2130903059);
        FlashlightActivity.q = this;
        this.l = false;
        this.d = false;
        this.m = false;
        com.surpax.a.a.l = false;
        this.c = false;
        this.g = 1.0f;
        this.h = 1.0f;
        if ((com.surpax.a.a.h = this.a("surpax_sound_state")) == -1) {
            com.surpax.a.a.h = 1;
        }
        this.r = new c(this.getApplicationContext());
        final DisplayMetrics displayMetrics = new DisplayMetrics();
        this.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
        this.e = displayMetrics.widthPixels;
        Log.d("Surpax App", "screen height is:" + displayMetrics.heightPixels + ", width is:" + displayMetrics.widthPixels);
        final BitmapFactory$Options bitmapFactory$Options = new BitmapFactory$Options();
        bitmapFactory$Options.inTargetDensity = displayMetrics.densityDpi;
        bitmapFactory$Options.inDensity = displayMetrics.densityDpi;
        this.h = 1.0f;
        this.g = 1.0f;
        this.s = new b();
        if (800 == displayMetrics.heightPixels && 480 == displayMetrics.widthPixels) {
            this.s.b(this.getResources(), bitmapFactory$Options);
        }
        else if (854 == displayMetrics.heightPixels && 480 == displayMetrics.widthPixels) {
            this.s.a(this.getResources(), bitmapFactory$Options);
        }
        else if (480 == displayMetrics.heightPixels && 320 == displayMetrics.widthPixels) {
            this.s.d(this.getResources(), bitmapFactory$Options);
        }
        else if (640 == displayMetrics.heightPixels && 480 == displayMetrics.widthPixels) {
            this.s.c(this.getResources(), bitmapFactory$Options);
        }
        else if (1280 == displayMetrics.heightPixels && 720 == displayMetrics.widthPixels) {
            this.s.e(this.getResources(), bitmapFactory$Options);
        }
        else if (1920 == displayMetrics.heightPixels && 1080 == displayMetrics.widthPixels) {
            final b s = this.s;
            final Resources resources = this.getResources();
            s.a = BitmapFactory.decodeResource(resources, 2130837647, bitmapFactory$Options);
            Log.d("FlashLightActivity_Test", "background bmps's width is:" + s.a.getWidth() + ", height is:" + s.a.getHeight());
            s.y = BitmapFactory.decodeResource(resources, 2130837653, bitmapFactory$Options);
            s.z = 481.0f;
            s.A = 1152.0f;
            s.B = 124;
            s.C = 124;
            s.g = BitmapFactory.decodeResource(resources, 2130837668, bitmapFactory$Options);
            s.h = BitmapFactory.decodeResource(resources, 2130837673, bitmapFactory$Options);
            s.i = BitmapFactory.decodeResource(resources, 2130837678, bitmapFactory$Options);
            s.j = BitmapFactory.decodeResource(resources, 2130837683, bitmapFactory$Options);
            s.k = BitmapFactory.decodeResource(resources, 2130837688, bitmapFactory$Options);
            s.l = BitmapFactory.decodeResource(resources, 2130837693, bitmapFactory$Options);
            s.m = BitmapFactory.decodeResource(resources, 2130837698, bitmapFactory$Options);
            s.n = BitmapFactory.decodeResource(resources, 2130837703, bitmapFactory$Options);
            s.o = BitmapFactory.decodeResource(resources, 2130837708, bitmapFactory$Options);
            s.p = BitmapFactory.decodeResource(resources, 2130837713, bitmapFactory$Options);
            s.q = 513.0f;
            s.r = 557.0f;
            s.s = 51;
            s.t = 69;
            s.b = BitmapFactory.decodeResource(resources, 2130837722, bitmapFactory$Options);
            s.c = 380.0f;
            s.d = 1122.0f;
            s.e = 316;
            s.f = 495;
            s.I = BitmapFactory.decodeResource(resources, 2130837658, bitmapFactory$Options);
            s.D = BitmapFactory.decodeResource(resources, 2130837663, bitmapFactory$Options);
            s.J = -2130.0f;
            s.K = 0.0f;
            s.L = 1080.0f;
            s.M = 329.0f;
            s.H = 761.0f;
            s.G = 1080.0f;
            s.E = 0.0f;
            s.F = 0.0f;
            com.surpax.a.a.o = 126;
            com.surpax.a.a.n = 1107;
            com.surpax.a.a.m = -346;
        }
        else if (1184 == displayMetrics.heightPixels && 720 == displayMetrics.widthPixels) {
            this.s.f(this.getResources(), bitmapFactory$Options);
        }
        else {
            if (1184 == displayMetrics.heightPixels && 768 == displayMetrics.widthPixels) {
                this.s.f(this.getResources(), bitmapFactory$Options);
            }
            else {
                final float n = 1.0f * displayMetrics.heightPixels / displayMetrics.widthPixels;
                Log.d("Surpax App", "height / width = " + n);
                final float[] array = { com.surpax.a.a.d, com.surpax.a.a.a, com.surpax.a.a.b, com.surpax.a.a.c, com.surpax.a.a.e, com.surpax.a.a.f };
                Log.d("Surpax App", "array length is: " + array.length);
                float n2 = 100.0f;
                int n3 = 0;
                for (int i = 0; i < array.length; ++i) {
                    final float abs = Math.abs(array[i] - n);
                    if (abs < n2) {
                        n2 = abs;
                        n3 = i;
                    }
                }
                switch (n3) {
                    default: {
                        Log.d("Surpax App", "default invoke load480t0800");
                        this.s.b(this.getResources(), bitmapFactory$Options);
                        break;
                    }
                    case 0: {
                        Log.d("Surpax App", "invoke load320to480");
                        this.s.d(this.getResources(), bitmapFactory$Options);
                        break;
                    }
                    case 1: {
                        Log.d("Surpax App", "invoke 480to640");
                        this.s.c(this.getResources(), bitmapFactory$Options);
                        break;
                    }
                    case 2: {
                        Log.d("Surpax App", "invoke load480t0800");
                        this.s.b(this.getResources(), bitmapFactory$Options);
                        break;
                    }
                    case 3: {
                        Log.d("Surpax App", "invoke load480to854");
                        this.s.a(this.getResources(), bitmapFactory$Options);
                        break;
                    }
                    case 4: {
                        Log.d("Surpax App", "invoke load720to1280");
                        this.s.e(this.getResources(), bitmapFactory$Options);
                        break;
                    }
                    case 5: {
                        Log.d("Surpax App", "invoke load720to1184");
                        this.s.f(this.getResources(), bitmapFactory$Options);
                        break;
                    }
                }
            }
            this.h = 1.0f * displayMetrics.heightPixels / this.s.a.getHeight();
            this.g = 1.0f * displayMetrics.widthPixels / this.s.a.getWidth();
        }
        final b s2 = this.s;
        final DisplayMetrics displayMetrics2 = new DisplayMetrics();
        FlashlightActivity.q.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics2);
        final int widthPixels = displayMetrics2.widthPixels;
        final int heightPixels = displayMetrics2.heightPixels;
        final int w = 78 * displayMetrics2.densityDpi / 240;
        s2.w = w;
        s2.x = 82 * displayMetrics2.densityDpi / 240;
        s2.u = (int)(0.05f * widthPixels);
        s2.v = -15 + (heightPixels - (int)(1.0f * (370 * displayMetrics2.densityDpi / 480)));
        s2.N = widthPixels - s2.u - w;
        s2.O = s2.v;
        (this.i = (TextView)this.findViewById(2131099709)).setVisibility(4);
        (this.j = (ImageButton)this.findViewById(2131099708)).setVisibility(4);
        this.j.setSoundEffectsEnabled(false);
        this.j.setOnClickListener((View$OnClickListener)new View$OnClickListener() {
            @SuppressLint({ "NewApi" })
            public final void onClick(final View view) {
                com.ihs.a.d.a();
                com.ihs.a.d.c("HC_Icon_Clicked");
                com.ihs.g.j.a("honeycomb_had_clicked", true);
                FlashlightActivity.this.i.setVisibility(4);
                final Drawable drawable = FlashlightActivity.this.j.getDrawable();
                if (drawable instanceof AnimationDrawable) {
                    ((AnimationDrawable)drawable).stop();
                    ((AnimationDrawable)drawable).selectDrawable(0);
                }
                HoneyCombActivity.a = 0;
                FlashlightActivity.this.startActivity(new Intent((Context)FlashlightActivity.this, (Class)HoneyCombInnerActivity.class));
            }
        });
        this.k = (ImageButton)this.findViewById(2131099707);
        if (com.surpax.a.a.h == 1) {
            this.k.setBackgroundResource(2130837741);
        }
        else {
            this.k.setBackgroundResource(2130837740);
        }
        this.k.setSoundEffectsEnabled(false);
        this.k.setOnClickListener((View$OnClickListener)new View$OnClickListener() {
            public final void onClick(final View view) {
                if (com.surpax.a.a.h == 1) {
                    com.surpax.a.a.h = 0;
                    FlashlightActivity.this.k.setBackgroundResource(2130837740);
                    return;
                }
                com.surpax.a.a.h = 1;
                FlashlightActivity.this.k.setBackgroundResource(2130837741);
                FlashlightActivity.a().a(1);
            }
        });
        final RelativeLayout$LayoutParams layoutParams = new RelativeLayout$LayoutParams(this.s.w, this.s.x);
        layoutParams.leftMargin = (int)this.s.u;
        layoutParams.topMargin = (int)this.s.v;
        this.k.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
        this.setVolumeControlStream(3);
        if (Build$VERSION.SDK_INT >= 8) {
            final WindowManager$LayoutParams attributes = this.getWindow().getAttributes();
            attributes.buttonBrightness = 1.0f;
            this.getWindow().setAttributes(attributes);
        }
    }
    
    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (this.o != null) {
            this.o.f();
        }
        this.o = null;
        this.d = true;
        this.w.setVisibility(4);
        this.w.f();
        this.m = false;
        com.surpax.a.a.l = false;
        if (this.t != null) {
            this.t.f();
            this.t.b();
            this.t = null;
        }
        this.a("surpax_lighting_frequency", 0);
        final b s = this.s;
        s.a.recycle();
        s.a = null;
        s.y.recycle();
        s.y = null;
        s.g.recycle();
        s.h.recycle();
        s.i.recycle();
        s.j.recycle();
        s.k.recycle();
        s.l.recycle();
        s.m.recycle();
        s.n.recycle();
        s.o.recycle();
        s.p.recycle();
        s.g = null;
        s.h = null;
        s.i = null;
        s.j = null;
        s.k = null;
        s.l = null;
        s.m = null;
        s.n = null;
        s.o = null;
        s.p = null;
        s.I.recycle();
        s.I = null;
        s.D.recycle();
        s.D = null;
        s.b.recycle();
        s.b = null;
        this.r.a();
        System.gc();
        try {
            Thread.sleep(350L);
        }
        catch (InterruptedException ex) {
            ex.printStackTrace();
        }
    }
    
    protected void onNewIntent(final Intent intent) {
        com.ihs.g.c.a("ihsflashlight", "onnewintent .......");
        super.onNewIntent(intent);
        this.setIntent(intent);
    }
    
    @Override
    protected void onPause() {
        if (com.surpax.a.a.i == 1) {
            com.surpax.a.a.l = true;
        }
        else {
            com.surpax.a.a.l = false;
        }
        if (this.u && this.w != null && this.w.c()) {
            this.w.e();
        }
        this.a("surpax_lighting_frequency", com.surpax.a.a.g = 0);
        this.w.f();
        this.w.b();
        if (this.t != null) {
            this.t.f();
            this.t.b();
        }
        this.t = null;
        final Intent intent = new Intent();
        intent.setAction("com.surpax.action.RESTORE_WIDGET");
        this.sendBroadcast(intent);
        this.j();
        com.surpax.a.a.i = 0;
        com.surpax.a.a.H = 0;
        com.surpax.a.a.u = false;
        com.surpax.a.a.B = false;
        this.a("surpax_light_state", com.surpax.a.a.j);
        this.a("surpax_sound_state", com.surpax.a.a.h);
        this.a("surpax_light_state_exit", com.surpax.a.a.k);
        com.surpax.a.a.z = 1;
        this.a(com.surpax.a.a.A, com.surpax.a.a.z);
        super.onPause();
    }
    
    @Override
    protected void onRestart() {
        super.onRestart();
        this.c = false;
        this.m = true;
    }
    
    @TargetApi(11)
    @Override
    protected void onResume() {
        if ((com.surpax.a.a.g = this.a("surpax_lighting_frequency")) == -1) {
            com.surpax.a.a.g = 0;
        }
        com.surpax.a.a.j = this.a("surpax_light_state");
        if (-1 == com.surpax.a.a.j) {
            com.surpax.a.a.j = 0;
            com.surpax.a.a.u = true;
        }
        com.surpax.a.a.i = com.surpax.a.a.j;
        if ((com.surpax.a.a.h = this.a("surpax_sound_state")) == -1) {
            com.surpax.a.a.h = 1;
        }
        if ((com.surpax.a.a.k = this.a("surpax_light_state_exit")) == -1) {
            com.surpax.a.a.k = 1;
        }
        com.surpax.a.a.z = this.a(com.surpax.a.a.A);
        com.surpax.a.a.r = false;
        final Context applicationContext = this.getApplicationContext();
        if (this.w == null) {
            this.w = new com.surpax.d.a(applicationContext);
            ((RelativeLayout)this.findViewById(2131099706)).addView((View)this.w);
        }
        this.w.a();
        super.onResume();
        com.ihs.g.c.a("ihsflashlight", "onresume");
        this.w.setVisibility(0);
        final RelativeLayout relativeLayout = (RelativeLayout)this.findViewById(2131099710);
        final RelativeLayout$LayoutParams relativeLayout$LayoutParams = new RelativeLayout$LayoutParams(1, 1);
        this.f = null;
        this.f = new SurfaceView((Context)this);
        relativeLayout.removeAllViews();
        relativeLayout.addView((View)this.f, (ViewGroup$LayoutParams)relativeLayout$LayoutParams);
        (this.t = new com.surpax.c.a.c()).a();
        if (com.surpax.a.a.H != 0) {
            com.surpax.a.a.i = 1;
            if (com.surpax.a.a.h == 1) {
                this.a(1);
            }
        }
        if (this.m && com.surpax.a.a.l) {
            com.surpax.a.a.i = 1;
        }
        final Intent intent = this.getIntent();
        if (intent != null) {
            com.ihs.g.c.a("ihsflashlight", "intent is not null");
            final boolean booleanExtra = intent.getBooleanExtra("intent.extra.led.on", false);
            if (booleanExtra) {
                com.surpax.a.a.i = 1;
            }
            com.ihs.g.c.a("ihsflashlight", "open is " + booleanExtra);
            intent.putExtra("intent.extra.led.on", false);
        }
        this.u = this.t.c();
        if (this.u) {
            com.ihs.g.c.a("ihsflashlight", "use screen");
            com.surpax.a.a.i = 0;
        }
        if (this.u) {
            this.f.setVisibility(4);
            final RelativeLayout relativeLayout2 = (RelativeLayout)this.findViewById(2131099706);
            final RelativeLayout$LayoutParams relativeLayout$LayoutParams2 = new RelativeLayout$LayoutParams(-1, -1);
            relativeLayout$LayoutParams2.addRule(2);
            final View inflate = ((LayoutInflater)this.getSystemService("layout_inflater")).inflate(2130903056, (ViewGroup)null);
            relativeLayout2.addView(inflate, (ViewGroup$LayoutParams)relativeLayout$LayoutParams2);
            (this.v = inflate.findViewById(2131099697)).setVisibility(4);
        }
        if (com.surpax.a.a.r) {
            this.b(this.getResources().getString(2131296326));
        }
        if (-1 == com.surpax.a.a.z && com.surpax.a.a.B) {
            com.surpax.a.a.z = 1;
            com.ihs.a.d.a();
            com.ihs.a.d.c("No_LED_Alert_Viewed");
            this.b(this.getResources().getString(2131296332));
        }
        if (this.w != null && !this.t.c()) {
            this.w.g();
        }
        this.o.a();
        new Thread(new Runnable() {
            private final /* synthetic */ Context a;
            
            @Override
            public final void run() {
                for (final Map<String, V> map : d.a(this.a)) {
                    for (final String s : map.keySet()) {
                        com.ihs.a.d.a();
                        com.ihs.a.d.a(s, (Map)map.get(s));
                    }
                }
                final SharedPreferences$Editor edit = this.a.getSharedPreferences("WidgetEvents", 0).edit();
                edit.clear();
                edit.commit();
            }
        }).start();
    }
    
    @Override
    protected void onStart() {
        super.onStart();
        (this.x = ((PowerManager)this.getSystemService("power")).newWakeLock(268435457, this.getClass().getCanonicalName())).acquire();
        final Map d = com.ihs.f.a.c.b().d();
        if (d != null && d.containsKey("Data")) {
            com.surpax.b.a.a().a(d.get("Data"));
            new Thread() {
                @Override
                public final void run() {
                    com.ihs.g.c.a("use sub thread to check installled apps");
                    FlashlightActivity.a().n();
                    com.ihs.g.a.b.runOnUiThread((Runnable)new Runnable() {
                        @Override
                        public final void run() {
                            com.ihs.g.c.a("show honey comb icon now...");
                            FlashlightActivity.a().c();
                        }
                    });
                    super.run();
                }
            }.start();
        }
        com.ihs.c.b.a().a(com.ihs.c.d.a, this.p);
        com.ihs.c.b.a().a(com.ihs.c.d.b, this.p);
        if (this.o == null) {
            this.o = (HSAdBannerView)this.findViewById(2131099712);
        }
    }
    
    @Override
    protected void onStop() {
        super.onStop();
        com.ihs.g.c.a("flashlightactivity stop entrance, time = " + System.currentTimeMillis());
        this.w.setVisibility(4);
        System.gc();
        this.x.release();
        this.x = null;
    }
    
    public boolean onTouchEvent(final MotionEvent motionEvent) {
        switch (motionEvent.getAction()) {
            case 0: {
                try {
                    if (this.u && this.w != null && this.w.c()) {
                        this.w.d();
                    }
                }
                catch (Exception ex) {
                    ex.printStackTrace();
                }
                break;
            }
        }
        return super.onTouchEvent(motionEvent);
    }
}
