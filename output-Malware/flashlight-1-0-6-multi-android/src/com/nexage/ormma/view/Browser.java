// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.ormma.view;

import android.content.Intent;
import android.webkit.WebChromeClient;
import android.widget.Toast;
import android.webkit.WebViewClient;
import android.webkit.CookieSyncManager;
import android.view.View$OnClickListener;
import android.widget.ImageButton;
import android.widget.LinearLayout$LayoutParams;
import android.view.ViewGroup$LayoutParams;
import android.view.View;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.BitmapDrawable;
import android.widget.RelativeLayout$LayoutParams;
import android.widget.LinearLayout;
import android.webkit.WebView;
import android.content.Context;
import android.widget.RelativeLayout;
import android.os.Bundle;
import android.graphics.Bitmap;
import android.app.Activity;

public class Browser extends Activity
{
    private static final int BackwardId = 103;
    private static final int ButtonId = 100;
    private static final int ForwardId = 102;
    public static final String SHOW_BACK_EXTRA = "open_show_back";
    public static final String SHOW_FORWARD_EXTRA = "open_show_forward";
    public static final String SHOW_REFRESH_EXTRA = "open_show_refresh";
    public static final String URL_EXTRA = "extra_url";
    private static final int WebViewId = 101;
    
    public Bitmap bitmapFromJar(final String p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: ldc             Lcom/nexage/ormma/controller/OrmmaAssetController;.class
        //     2: invokevirtual   java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
        //     5: aload_1        
        //     6: invokevirtual   java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
        //     9: invokevirtual   java/net/URL.getFile:()Ljava/lang/String;
        //    12: astore          9
        //    14: aload           9
        //    16: ldc             "file:"
        //    18: invokevirtual   java/lang/String.startsWith:(Ljava/lang/String;)Z
        //    21: ifeq            32
        //    24: aload           9
        //    26: iconst_5       
        //    27: invokevirtual   java/lang/String.substring:(I)Ljava/lang/String;
        //    30: astore          9
        //    32: aload           9
        //    34: ldc             "!"
        //    36: invokevirtual   java/lang/String.indexOf:(Ljava/lang/String;)I
        //    39: istore          10
        //    41: iload           10
        //    43: ifle            56
        //    46: aload           9
        //    48: iconst_0       
        //    49: iload           10
        //    51: invokevirtual   java/lang/String.substring:(II)Ljava/lang/String;
        //    54: astore          9
        //    56: new             Ljava/util/jar/JarFile;
        //    59: dup            
        //    60: aload           9
        //    62: invokespecial   java/util/jar/JarFile.<init>:(Ljava/lang/String;)V
        //    65: astore          11
        //    67: aload           11
        //    69: aload           11
        //    71: aload_1        
        //    72: invokevirtual   java/util/jar/JarFile.getJarEntry:(Ljava/lang/String;)Ljava/util/jar/JarEntry;
        //    75: invokevirtual   java/util/jar/JarFile.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;
        //    78: astore          12
        //    80: aload           12
        //    82: astore_3       
        //    83: aload_3        
        //    84: invokestatic    android/graphics/BitmapFactory.decodeStream:(Ljava/io/InputStream;)Landroid/graphics/Bitmap;
        //    87: astore          13
        //    89: aload           13
        //    91: astore          7
        //    93: aload_3        
        //    94: ifnull          101
        //    97: aload_3        
        //    98: invokevirtual   java/io/InputStream.close:()V
        //   101: aload           7
        //   103: areturn        
        //   104: astore          14
        //   106: new             Ljava/lang/StringBuilder;
        //   109: dup            
        //   110: ldc             "Error opening an image from JAR: "
        //   112: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   115: aload           14
        //   117: invokevirtual   java/lang/Exception.getLocalizedMessage:()Ljava/lang/String;
        //   120: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   123: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   126: invokestatic    com/nexage/android/internal/NexageLog.e:(Ljava/lang/String;)V
        //   129: aload           7
        //   131: areturn        
        //   132: astore          6
        //   134: aconst_null    
        //   135: astore_3       
        //   136: aload           6
        //   138: invokevirtual   java/lang/Exception.printStackTrace:()V
        //   141: aconst_null    
        //   142: astore          7
        //   144: aload_3        
        //   145: ifnull          101
        //   148: aload_3        
        //   149: invokevirtual   java/io/InputStream.close:()V
        //   152: aconst_null    
        //   153: areturn        
        //   154: astore          8
        //   156: new             Ljava/lang/StringBuilder;
        //   159: dup            
        //   160: ldc             "Error opening an image from JAR: "
        //   162: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   165: aload           8
        //   167: invokevirtual   java/lang/Exception.getLocalizedMessage:()Ljava/lang/String;
        //   170: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   173: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   176: invokestatic    com/nexage/android/internal/NexageLog.e:(Ljava/lang/String;)V
        //   179: aconst_null    
        //   180: areturn        
        //   181: astore_2       
        //   182: aconst_null    
        //   183: astore_3       
        //   184: aload_2        
        //   185: astore          4
        //   187: aload_3        
        //   188: ifnull          195
        //   191: aload_3        
        //   192: invokevirtual   java/io/InputStream.close:()V
        //   195: aload           4
        //   197: athrow         
        //   198: astore          5
        //   200: new             Ljava/lang/StringBuilder;
        //   203: dup            
        //   204: ldc             "Error opening an image from JAR: "
        //   206: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   209: aload           5
        //   211: invokevirtual   java/lang/Exception.getLocalizedMessage:()Ljava/lang/String;
        //   214: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   217: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   220: invokestatic    com/nexage/android/internal/NexageLog.e:(Ljava/lang/String;)V
        //   223: goto            195
        //   226: astore          4
        //   228: goto            187
        //   231: astore          6
        //   233: goto            136
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  0      32     132    136    Ljava/lang/Exception;
        //  0      32     181    187    Any
        //  32     41     132    136    Ljava/lang/Exception;
        //  32     41     181    187    Any
        //  46     56     132    136    Ljava/lang/Exception;
        //  46     56     181    187    Any
        //  56     80     132    136    Ljava/lang/Exception;
        //  56     80     181    187    Any
        //  83     89     231    236    Ljava/lang/Exception;
        //  83     89     226    231    Any
        //  97     101    104    132    Ljava/lang/Exception;
        //  136    141    226    231    Any
        //  148    152    154    181    Ljava/lang/Exception;
        //  191    195    198    226    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0101:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public void onCreate(final Bundle bundle) {
        super.onCreate(bundle);
        final RelativeLayout contentView = new RelativeLayout((Context)this);
        final WebView webView = new WebView((Context)this);
        this.getWindow().requestFeature(2);
        this.getWindow().setFeatureInt(2, -1);
        final Intent intent = this.getIntent();
        final LinearLayout linearLayout = new LinearLayout((Context)this);
        linearLayout.setOrientation(0);
        linearLayout.setId(100);
        linearLayout.setWeightSum(100.0f);
        final RelativeLayout$LayoutParams relativeLayout$LayoutParams = new RelativeLayout$LayoutParams(-1, -1);
        relativeLayout$LayoutParams.addRule(2, 100);
        linearLayout.setBackgroundDrawable((Drawable)new BitmapDrawable(this.bitmapFromJar("bitmaps/bkgrnd.png")));
        contentView.addView((View)webView, (ViewGroup$LayoutParams)relativeLayout$LayoutParams);
        final RelativeLayout$LayoutParams relativeLayout$LayoutParams2 = new RelativeLayout$LayoutParams(-1, -2);
        relativeLayout$LayoutParams2.addRule(12);
        contentView.addView((View)linearLayout, (ViewGroup$LayoutParams)relativeLayout$LayoutParams2);
        final LinearLayout$LayoutParams linearLayout$LayoutParams = new LinearLayout$LayoutParams(-2, -1);
        linearLayout$LayoutParams.weight = 25.0f;
        linearLayout$LayoutParams.gravity = 16;
        final ImageButton imageButton = new ImageButton((Context)this);
        imageButton.setBackgroundColor(this.getResources().getColor(17170445));
        imageButton.setId(103);
        linearLayout.addView((View)imageButton, (ViewGroup$LayoutParams)linearLayout$LayoutParams);
        if (!intent.getBooleanExtra("open_show_back", true)) {
            imageButton.setVisibility(8);
        }
        imageButton.setImageBitmap(this.bitmapFromJar("bitmaps/leftarrow.png"));
        imageButton.setOnClickListener((View$OnClickListener)new View$OnClickListener() {
            public void onClick(final View view) {
                final WebView webView = (WebView)Browser.this.findViewById(101);
                if (webView.canGoBack()) {
                    webView.goBack();
                    return;
                }
                Browser.this.finish();
            }
        });
        final ImageButton imageButton2 = new ImageButton((Context)this);
        imageButton2.setBackgroundColor(this.getResources().getColor(17170445));
        imageButton2.setId(102);
        final LinearLayout$LayoutParams linearLayout$LayoutParams2 = new LinearLayout$LayoutParams(-2, -1);
        linearLayout$LayoutParams2.weight = 25.0f;
        linearLayout$LayoutParams2.gravity = 16;
        linearLayout.addView((View)imageButton2, (ViewGroup$LayoutParams)linearLayout$LayoutParams2);
        if (!intent.getBooleanExtra("open_show_forward", true)) {
            imageButton2.setVisibility(8);
        }
        imageButton2.setOnClickListener((View$OnClickListener)new View$OnClickListener() {
            public void onClick(final View view) {
                ((WebView)Browser.this.findViewById(101)).goForward();
            }
        });
        final ImageButton imageButton3 = new ImageButton((Context)this);
        imageButton3.setImageBitmap(this.bitmapFromJar("bitmaps/refresh.png"));
        imageButton3.setBackgroundColor(this.getResources().getColor(17170445));
        final LinearLayout$LayoutParams linearLayout$LayoutParams3 = new LinearLayout$LayoutParams(-2, -2);
        linearLayout$LayoutParams3.weight = 25.0f;
        linearLayout$LayoutParams3.gravity = 16;
        linearLayout.addView((View)imageButton3, (ViewGroup$LayoutParams)linearLayout$LayoutParams3);
        if (!intent.getBooleanExtra("open_show_refresh", true)) {
            imageButton3.setVisibility(8);
        }
        imageButton3.setOnClickListener((View$OnClickListener)new View$OnClickListener() {
            public void onClick(final View view) {
                ((WebView)Browser.this.findViewById(101)).reload();
            }
        });
        final ImageButton imageButton4 = new ImageButton((Context)this);
        imageButton4.setImageBitmap(this.bitmapFromJar("bitmaps/close.png"));
        imageButton4.setBackgroundColor(this.getResources().getColor(17170445));
        final LinearLayout$LayoutParams linearLayout$LayoutParams4 = new LinearLayout$LayoutParams(-2, -2);
        linearLayout$LayoutParams4.weight = 25.0f;
        linearLayout$LayoutParams4.gravity = 16;
        linearLayout.addView((View)imageButton4, (ViewGroup$LayoutParams)linearLayout$LayoutParams4);
        imageButton4.setOnClickListener((View$OnClickListener)new View$OnClickListener() {
            public void onClick(final View view) {
                Browser.this.finish();
            }
        });
        this.getWindow().requestFeature(2);
        CookieSyncManager.createInstance((Context)this);
        CookieSyncManager.getInstance().startSync();
        webView.getSettings().setJavaScriptEnabled(true);
        webView.loadUrl(intent.getStringExtra("extra_url"));
        webView.setId(101);
        webView.setWebViewClient((WebViewClient)new WebViewClient() {
            public void onPageFinished(final WebView webView, final String s) {
                super.onPageFinished(webView, s);
                final ImageButton imageButton = (ImageButton)Browser.this.findViewById(102);
                if (webView.canGoForward()) {
                    imageButton.setImageBitmap(Browser.this.bitmapFromJar("bitmaps/rightarrow.png"));
                    return;
                }
                imageButton.setImageBitmap(Browser.this.bitmapFromJar("bitmaps/unrightarrow.png"));
            }
            
            public void onPageStarted(final WebView webView, final String s, final Bitmap bitmap) {
                super.onPageStarted(webView, s, bitmap);
                ((ImageButton)Browser.this.findViewById(102)).setImageBitmap(Browser.this.bitmapFromJar("bitmaps/unrightarrow.png"));
            }
            
            public void onReceivedError(final WebView webView, final int n, final String s, final String s2) {
                Toast.makeText((Context)webView.getContext(), (CharSequence)("Ormma Error:" + s), 0).show();
            }
            
            public boolean shouldOverrideUrlLoading(final WebView webView, final String s) {
                webView.loadUrl(s);
                return true;
            }
        });
        this.setContentView((View)contentView);
        webView.setWebChromeClient((WebChromeClient)new WebChromeClient() {
            public void onProgressChanged(final WebView webView, final int n) {
                final Activity activity = (Activity)webView.getContext();
                activity.setTitle((CharSequence)"Loading...");
                activity.setProgress(n * 100);
                if (n == 100) {
                    activity.setTitle((CharSequence)webView.getUrl());
                }
            }
        });
    }
    
    protected void onPause() {
        super.onPause();
        CookieSyncManager.getInstance().stopSync();
    }
    
    protected void onResume() {
        super.onResume();
        CookieSyncManager.getInstance().startSync();
    }
}
