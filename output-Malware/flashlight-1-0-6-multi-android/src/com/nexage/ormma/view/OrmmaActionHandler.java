// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.ormma.view;

import java.util.Iterator;
import java.util.Map;
import android.view.View;
import android.view.ViewGroup$LayoutParams;
import android.widget.RelativeLayout$LayoutParams;
import com.nexage.ormma.controller.util.OrmmaUtils;
import android.content.Context;
import com.nexage.ormma.controller.OrmmaController$Dimensions;
import com.nexage.ormma.controller.OrmmaController$PlayerProperties;
import com.nexage.ormma.controller.util.OrmmaPlayerListener;
import com.nexage.ormma.controller.util.OrmmaPlayer;
import android.os.Bundle;
import android.widget.RelativeLayout;
import java.util.HashMap;
import android.app.Activity;

public class OrmmaActionHandler extends Activity
{
    private HashMap actionData;
    private RelativeLayout layout;
    
    public OrmmaActionHandler() {
        this.actionData = new HashMap();
    }
    
    private void doAction(final Bundle bundle) {
        final String string = bundle.getString("action");
        if (string == null) {
            return;
        }
        final OrmmaView$ACTION value = OrmmaView$ACTION.valueOf(string);
        switch (value) {
            default: {}
            case PLAY_AUDIO: {
                this.initPlayer(bundle, value).playAudio();
            }
            case PLAY_VIDEO: {
                this.initPlayer(bundle, value).playVideo();
            }
        }
    }
    
    private void setPlayerListener(final OrmmaPlayer ormmaPlayer) {
        ormmaPlayer.setListener(new OrmmaPlayerListener() {
            @Override
            public void onComplete() {
                OrmmaActionHandler.this.finish();
            }
            
            @Override
            public void onError() {
                OrmmaActionHandler.this.finish();
            }
            
            @Override
            public void onPrepared() {
            }
        });
    }
    
    OrmmaPlayer initPlayer(final Bundle bundle, final OrmmaView$ACTION ormmaView$ACTION) {
        final OrmmaController$PlayerProperties ormmaController$PlayerProperties = (OrmmaController$PlayerProperties)bundle.getParcelable("player_properties");
        final OrmmaController$Dimensions ormmaController$Dimensions = (OrmmaController$Dimensions)bundle.getParcelable("expand_dimensions");
        final OrmmaPlayer playerListener = new OrmmaPlayer((Context)this);
        playerListener.setPlayData(ormmaController$PlayerProperties, OrmmaUtils.getData("expand_url", bundle));
        RelativeLayout$LayoutParams layoutParams;
        if (ormmaController$Dimensions == null) {
            layoutParams = new RelativeLayout$LayoutParams(-1, -1);
            layoutParams.addRule(13);
        }
        else {
            layoutParams = new RelativeLayout$LayoutParams(ormmaController$Dimensions.width, ormmaController$Dimensions.height);
            layoutParams.topMargin = ormmaController$Dimensions.y;
            layoutParams.leftMargin = ormmaController$Dimensions.x;
        }
        playerListener.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
        this.layout.addView((View)playerListener);
        this.actionData.put(ormmaView$ACTION, playerListener);
        this.setPlayerListener(playerListener);
        return playerListener;
    }
    
    public void onCreate(final Bundle bundle) {
        super.onCreate(bundle);
        final Bundle extras = this.getIntent().getExtras();
        (this.layout = new RelativeLayout((Context)this)).setLayoutParams(new ViewGroup$LayoutParams(-1, -1));
        this.setContentView((View)this.layout);
        this.doAction(extras);
    }
    
    protected void onStop() {
        for (final Map.Entry<OrmmaView$ACTION, V> entry : this.actionData.entrySet()) {
            switch (entry.getKey()) {
                default: {
                    continue;
                }
                case PLAY_AUDIO:
                case PLAY_VIDEO: {
                    ((OrmmaPlayer)entry.getValue()).releasePlayer();
                    continue;
                }
            }
        }
        super.onStop();
    }
}
