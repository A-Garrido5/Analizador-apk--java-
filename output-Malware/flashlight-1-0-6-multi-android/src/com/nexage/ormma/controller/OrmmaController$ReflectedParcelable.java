// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.ormma.controller;

import java.lang.reflect.Field;
import com.nexage.ormma.controller.util.TransitionStringEnum;
import com.nexage.ormma.controller.util.NavigationStringEnum;
import android.os.Parcel;
import android.os.Parcelable;

public class OrmmaController$ReflectedParcelable implements Parcelable
{
    public OrmmaController$ReflectedParcelable() {
    }
    
    protected OrmmaController$ReflectedParcelable(final Parcel parcel) {
        final Field[] declaredFields = this.getClass().getDeclaredFields();
        int n = 0;
        while (true) {
            try {
                if (n >= declaredFields.length) {
                    goto Label_0106;
                }
                final Field field = declaredFields[n];
                final Class<?> type = field.getType();
                if (!type.isEnum()) {
                    goto Label_0107;
                }
                final String string = type.toString();
                if (string.equals("class com.ormma.NavigationStringEnum")) {
                    field.set(this, NavigationStringEnum.fromString(parcel.readString()));
                }
                else if (string.equals("class com.ormma.TransitionStringEnum")) {
                    field.set(this, TransitionStringEnum.fromString(parcel.readString()));
                }
            }
            catch (IllegalArgumentException ex) {
                ex.printStackTrace();
            }
            catch (IllegalAccessException ex2) {
                ex2.printStackTrace();
                return;
            }
            ++n;
        }
    }
    
    public int describeContents() {
        return 0;
    }
    
    public void writeToParcel(final Parcel parcel, final int n) {
        final Field[] declaredFields = this.getClass().getDeclaredFields();
        int n2 = 0;
        while (true) {
            try {
                if (n2 >= declaredFields.length) {
                    goto Label_0111;
                }
                final Field field = declaredFields[n2];
                final Class<?> type = field.getType();
                if (!type.isEnum()) {
                    goto Label_0112;
                }
                final String string = type.toString();
                if (string.equals("class com.ormma.NavigationStringEnum")) {
                    parcel.writeString(((NavigationStringEnum)field.get(this)).getText());
                }
                else if (string.equals("class com.ormma.TransitionStringEnum")) {
                    parcel.writeString(((TransitionStringEnum)field.get(this)).getText());
                }
            }
            catch (IllegalArgumentException ex) {
                ex.printStackTrace();
            }
            catch (IllegalAccessException ex2) {
                ex2.printStackTrace();
                return;
            }
            ++n2;
        }
    }
}
