// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.ormma.controller;

import android.util.Log;
import android.content.Context;
import com.nexage.ormma.view.OrmmaView;
import com.nexage.ormma.controller.listeners.AccelListener;

public class OrmmaSensorController extends OrmmaController
{
    private static final String LOG_TAG = "OrmmaSensorController";
    final int INTERVAL;
    private AccelListener mAccel;
    private float mLastX;
    private float mLastY;
    private float mLastZ;
    
    public OrmmaSensorController(final OrmmaView ormmaView, final Context context) {
        super(ormmaView, context);
        this.INTERVAL = 1000;
        this.mLastX = 0.0f;
        this.mLastY = 0.0f;
        this.mLastZ = 0.0f;
        this.mAccel = new AccelListener(context, this);
    }
    
    public float getHeading() {
        Log.d("OrmmaSensorController", "getHeading: " + this.mAccel.getHeading());
        return this.mAccel.getHeading();
    }
    
    public String getTilt() {
        final String string = "{ x : \"" + this.mLastX + "\", y : \"" + this.mLastY + "\", z : \"" + this.mLastZ + "\"}";
        Log.d("OrmmaSensorController", "getTilt: " + string);
        return string;
    }
    
    public void onHeadingChange(final float n) {
        final String string = "window.ormmaview.fireChangeEvent({ heading: " + (int)(57.29577951308232 * n) + "});";
        Log.d("OrmmaSensorController", string);
        this.mOrmmaView.injectJavaScript(string);
    }
    
    public void onShake() {
        this.mOrmmaView.injectJavaScript("Ormma.gotShake()");
    }
    
    public void onTilt(final float mLastX, final float mLastY, final float mLastZ) {
        this.mLastX = mLastX;
        this.mLastY = mLastY;
        this.mLastZ = mLastZ;
        final String string = "window.ormmaview.fireChangeEvent({ tilt: " + this.getTilt() + "})";
        Log.d("OrmmaSensorController", string);
        this.mOrmmaView.injectJavaScript(string);
    }
    
    public void startHeadingListener() {
        this.mAccel.startTrackingHeading();
    }
    
    public void startShakeListener() {
        this.mAccel.startTrackingShake();
    }
    
    public void startTiltListener() {
        this.mAccel.startTrackingTilt();
    }
    
    void stop() {
    }
    
    @Override
    public void stopAllListeners() {
        this.mAccel.stopAllListeners();
    }
    
    public void stopHeadingListener() {
        this.mAccel.stopTrackingHeading();
    }
    
    public void stopShakeListener() {
        this.mAccel.stopTrackingShake();
    }
    
    public void stopTiltListener() {
        this.mAccel.stopTrackingTilt();
    }
}
