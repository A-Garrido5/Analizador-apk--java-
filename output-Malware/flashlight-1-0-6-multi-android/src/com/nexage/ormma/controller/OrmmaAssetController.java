// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.ormma.controller;

import java.io.InputStream;
import java.io.FileOutputStream;
import android.os.StatFs;
import com.nexage.android.internal.NexageLog;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.HttpEntity;
import java.io.File;
import java.security.MessageDigest;
import android.content.Context;
import com.nexage.ormma.view.OrmmaView;

public class OrmmaAssetController extends OrmmaController
{
    private static final char[] HEX_CHARS;
    
    static {
        HEX_CHARS = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };
    }
    
    public OrmmaAssetController(final OrmmaView ormmaView, final Context context) {
        super(ormmaView, context);
    }
    
    private String asHex(final MessageDigest messageDigest) {
        int n = 0;
        final byte[] digest = messageDigest.digest();
        final char[] array = new char[2 * digest.length];
        for (int i = 0; i < digest.length; ++i) {
            final int n2 = n + 1;
            array[n] = OrmmaAssetController.HEX_CHARS[0xF & digest[i] >>> 4];
            n = n2 + 1;
            array[n2] = OrmmaAssetController.HEX_CHARS[0xF & digest[i]];
        }
        return new String(array);
    }
    
    public static boolean deleteDirectory(final File file) {
        if (file.exists()) {
            final File[] listFiles = file.listFiles();
            for (int i = 0; i < listFiles.length; ++i) {
                if (listFiles[i].isDirectory()) {
                    deleteDirectory(listFiles[i]);
                }
                else {
                    listFiles[i].delete();
                }
            }
        }
        return file.delete();
    }
    
    public static boolean deleteDirectory(final String s) {
        return s != null && deleteDirectory(new File(s));
    }
    
    private File getAssetDir(final String s) {
        return new File(this.mContext.getFilesDir().getPath() + File.separator + s);
    }
    
    private String getAssetName(String substring) {
        if (substring.lastIndexOf(File.separatorChar) >= 0) {
            substring = substring.substring(1 + substring.lastIndexOf(File.separatorChar));
        }
        return substring;
    }
    
    private String getAssetPath(final String s) {
        final int lastIndex = s.lastIndexOf(File.separatorChar);
        String substring = "/";
        if (lastIndex >= 0) {
            substring = s.substring(0, s.lastIndexOf(File.separatorChar));
        }
        return substring;
    }
    
    private String getFilesDir() {
        return this.mContext.getFilesDir().getPath();
    }
    
    private HttpEntity getHttpEntity(final String s) {
        try {
            return new DefaultHttpClient().execute((HttpUriRequest)new HttpGet(s)).getEntity();
        }
        catch (Exception ex) {
            ex.printStackTrace();
            return null;
        }
    }
    
    private String moveToAdDirectory(final String s, final String s2, final String s3) {
        NexageLog.d("start moveToAdDirectory");
        final File file = new File(s2 + File.separator + s);
        new File(s2 + File.separator + "ad").mkdir();
        final File file2 = new File(s2 + File.separator + "ad" + File.separator + s3);
        file2.mkdir();
        file.renameTo(new File(file2, file.getName()));
        NexageLog.d("end moveToAdDirectory");
        return file2.getPath() + File.separator;
    }
    
    public void addAsset(final String p0, final String p1) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_0        
        //     1: aload_2        
        //     2: invokespecial   com/nexage/ormma/controller/OrmmaAssetController.getHttpEntity:(Ljava/lang/String;)Lorg/apache/http/HttpEntity;
        //     5: astore_3       
        //     6: aconst_null    
        //     7: astore          4
        //     9: aload_3        
        //    10: invokeinterface org/apache/http/HttpEntity.getContent:()Ljava/io/InputStream;
        //    15: astore          4
        //    17: aload_0        
        //    18: aload           4
        //    20: aload_1        
        //    21: iconst_0       
        //    22: invokevirtual   com/nexage/ormma/controller/OrmmaAssetController.writeToDisk:(Ljava/io/InputStream;Ljava/lang/String;Z)Ljava/lang/String;
        //    25: pop            
        //    26: new             Ljava/lang/StringBuilder;
        //    29: dup            
        //    30: ldc             "OrmmaAdController.addedAsset('"
        //    32: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    35: aload_1        
        //    36: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    39: ldc             "' )"
        //    41: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    44: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    47: astore          11
        //    49: aload_0        
        //    50: getfield        com/nexage/ormma/controller/OrmmaAssetController.mOrmmaView:Lcom/nexage/ormma/view/OrmmaView;
        //    53: aload           11
        //    55: invokevirtual   com/nexage/ormma/view/OrmmaView.injectJavaScript:(Ljava/lang/String;)V
        //    58: aload           4
        //    60: ifnull          68
        //    63: aload           4
        //    65: invokevirtual   java/io/InputStream.close:()V
        //    68: aload_3        
        //    69: invokeinterface org/apache/http/HttpEntity.consumeContent:()V
        //    74: return         
        //    75: astore          7
        //    77: aload           7
        //    79: invokevirtual   java/lang/Exception.printStackTrace:()V
        //    82: aload           4
        //    84: ifnull          68
        //    87: aload           4
        //    89: invokevirtual   java/io/InputStream.close:()V
        //    92: goto            68
        //    95: astore          8
        //    97: goto            68
        //   100: astore          5
        //   102: aload           4
        //   104: ifnull          112
        //   107: aload           4
        //   109: invokevirtual   java/io/InputStream.close:()V
        //   112: aload           5
        //   114: athrow         
        //   115: astore          9
        //   117: aload           9
        //   119: invokevirtual   java/lang/Exception.printStackTrace:()V
        //   122: return         
        //   123: astore          12
        //   125: goto            68
        //   128: astore          6
        //   130: goto            112
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  9      58     75     100    Ljava/lang/Exception;
        //  9      58     100    115    Any
        //  63     68     123    128    Ljava/lang/Exception;
        //  68     74     115    123    Ljava/lang/Exception;
        //  77     82     100    115    Any
        //  87     92     95     100    Ljava/lang/Exception;
        //  107    112    128    133    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 61, Size: 61
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public int cacheRemaining() {
        final StatFs statFs = new StatFs(this.mContext.getFilesDir().getPath());
        return statFs.getFreeBlocks() * statFs.getBlockSize();
    }
    
    public String copyTextFromJarIntoAssetDir(final String p0, final String p1) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_2        
        //     1: ldc             "ormma.js"
        //     3: invokevirtual   java/lang/String.indexOf:(Ljava/lang/String;)I
        //     6: iflt            50
        //     9: new             Ljava/io/ByteArrayInputStream;
        //    12: dup            
        //    13: ldc             "(function() {\n    var ormma = window.ormma = {};\n    \n    // CONSTANTS ///////////////////////////////////////////////////////////////\n    \n    var STATES = ormma.STATES = {\n        UNKNOWN     :'unknown',\n        DEFAULT     :'default',\n        RESIZED     :'resized',\n        EXPANDED    :'expanded',\n        HIDDEN      :'hidden'\n    };\n    \n    var EVENTS = ormma.EVENTS = {\n        ASSETREADY          :'assetReady',\n        ASSETREMOVED        :'assetRemoved',\n        ASSETRETIRED        :'assetRetired',\n        ERROR               :'error',\n        INFO                :'info',\n        HEADINGCHANGE       :'headingChange',\n        KEYBOARDCHANGE      :'keyboardChange',\n        LOCATIONCHANGE      :'locationChange',\n        NETWORKCHANGE       :'networkChange',\n        ORIENTATIONCHANGE   :'orientationChange',\n        RESPONSE            :'response',\n        SCREENCHANGE        :'screenChange',\n        SHAKE               :'shake',\n        SIZECHANGE          :'sizeChange',\n        STATECHANGE         :'stateChange',\n        TILTCHANGE          :'tiltChange',\n        VIEWABLECHANGE      :'viewableChange'\n    };\n    \n    var CONTROLS = ormma.CONTROLS = {\n        BACK    :'back',\n        FORWARD :'forward',\n        REFRESH :'refresh',\n        ALL     :'all'\n    };\n    \n    var FEATURES = ormma.FEATURES = {\n        LEVEL1      :'level-1',\n        LEVEL2      :'level-2',\n        LEVEL3      :'level-3',\n        SCREEN      :'screen',\n        ORIENTATION :'orientation',\n        HEADING     :'heading',\n        LOCATION    :'location',\n        SHAKE       :'shake',\n        TILT        :'tilt',\n        NETWORK     :'network',\n        SMS         :'sms',\n        PHONE       :'phone',\n        EMAIL       :'email',\n        CALENDAR    :'calendar',\n        CAMERA      :'camera'\n    };\n    \n    var NETWORK = ormma.NETWORK = {\n        OFFLINE :'offline',\n        WIFI    :'wifi',\n        CELL    :'cell',\n        UNKNOWN :'unknown'\n    };\n    \n    // PRIVATE PROPERTIES (sdk controlled) //////////////////////////////////////////////////////\n    \n    var state = STATES.UNKNOWN;\n    \n    var size = {\n        width:0,\n        height:0\n    };\n    \n    var defaultPosition = {\n        x:0,\n        y:0,\n        width:0,\n        height:0\n    };\n    \n    var maxSize = {\n        width:0,\n        height:0\n    };\n    \n    var expandProperties = {\n        useBackground:false,\n        backgroundColor:0xffffff,\n        backgroundOpacity:1.0,\n        isModal:false\n    };\n    \n    var supports = {\n        'level-1':true,\n        'level-2':true,\n        'level-3':true,\n        'screen':true,\n        'orientation':true,\n        'heading':true,\n        'location':true,\n        'shake':true,\n        'tilt':true,\n        'network':true,\n        'sms':true,\n        'phone':true,\n        'email':true,\n        'calendar':true,\n        'camera':true\n    };\n    \n    var heading = -1;\n    \n    var keyboardState = false;\n    \n    var location = null;\n    \n    var network = NETWORK.UNKNOWN;\n    \n    var orientation = -1;\n    \n    var screenSize = null;\n    \n    var shakeProperties = null;\n    \n    var tilt = null;\n    \n    var assets = {};\n    \n    var cacheRemaining = -1;\n    \n    var viewable = false;\n    \n    // PRIVATE PROPERTIES (internal) //////////////////////////////////////////////////////\n    \n    var intervalID = null;\n    var readyTimeout = 10000;\n    var readyDuration = 0;\n    \n    var dimensionValidators = {\n        x:function(value) { return !isNaN(value); },\n        y:function(value) { return !isNaN(value); },\n        width:function(value) { return !isNaN(value) && value >= 0; },\n        height:function(value) { return !isNaN(value) && value >= 0; }\n    };\n    \n    var sizeValidators = {\n        width:function(value) { return !isNaN(value) && value >= 0 && value <= maxSize.width; },\n        height:function(value) { return !isNaN(value) && value >= 0 && value <= maxSize.height; }\n    };\n   \n    var expandPropertyValidators = {\n        useBackground:function(value) { return (value === true || value === false); },\n        backgroundColor:function(value) { return (typeof value == 'string' && value.substr(0,1) == '#' && !isNaN(parseInt(value.substr(1), 16))); },\n        backgroundOpacity:function(value) { return !isNaN(value) && value >= 0 && value <= 1; },\n        isModal:function(value) { return (value === true || value === false); }\n    };\n    \n    var shakePropertyValidators = {\n        intensity:function(value) { return !isNaN(value); },\n        interval:function(value) { return !isNaN(value); }\n    };\n    \n    var changeHandlers = {\n        state:function(val) {\n            if (state == STATES.UNKNOWN) {\n                intervalID = window.setInterval(window.ormma.signalReady, 20);\n                broadcastEvent(EVENTS.INFO, 'controller initialized, attempting callback');\n            }\n            broadcastEvent(EVENTS.INFO, 'setting state to ' + stringify(val));\n            state = val;\n            broadcastEvent(EVENTS.STATECHANGE, state);\n        },\n        size:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting size to ' + stringify(val));\n            size = val;\n            broadcastEvent(EVENTS.SIZECHANGE, size.width, size.height);\n        },\n        defaultPosition:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting default position to ' + stringify(val));\n            defaultPosition = val;\n        },\n        maxSize:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting maxSize to ' + stringify(val));\n            maxSize = val;\n        },\n        expandProperties:function(val) {\n            broadcastEvent(EVENTS.INFO, 'merging expandProperties with ' + stringify(val));\n            for (var i in val) {\n                expandProperties[i] = val[i];\n            }\n        },\n        supports:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting supports to ' + stringify(val));\n            supports = {};\n            for (var key in FEATURES) {\n                supports[FEATURES[key]] = contains(FEATURES[key], val);\n            }\n        },\n        heading:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting heading to ' + stringify(val));\n            heading = val;\n            broadcastEvent(EVENTS.HEADINGCHANGE, heading);\n        },\n        keyboardState:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting keyboardState to ' + stringify(val));\n            keyboardState = val;\n            broadcastEvent(EVENTS.KEYBOARDCHANGE, keyboardState);\n        },\n        location:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting location to ' + stringify(val));\n            location = val;\n            broadcastEvent(EVENTS.LOCATIONCHANGE, location.lat, location.lon, location.acc);\n        },\n        network:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting network to ' + stringify(val));\n            network = val;\n            broadcastEvent(EVENTS.NETWORKCHANGE, (network != NETWORK.OFFLINE && network != NETWORK.UNKNOWN), network);\n        },\n        orientation:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting orientation to ' + stringify(val));\n            orientation = val;\n            broadcastEvent(EVENTS.ORIENTATIONCHANGE, orientation);\n        },\n        screenSize:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting screenSize to ' + stringify(val));\n            screenSize = val;\n            broadcastEvent(EVENTS.SCREENCHANGE, screenSize.width, screenSize.height);\n        },\n        shakeProperties:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting shakeProperties to ' + stringify(val));\n            shakeProperties = val;\n        },\n        tilt:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting tilt to ' + stringify(val));\n            tilt = val;\n            broadcastEvent(EVENTS.TILTCHANGE, tilt.x, tilt.y, tilt.z);\n        },\n        cacheRemaining:function(val) {\n            broadcastEvent(EVENTS.INFO, 'setting cacheRemaining to ' + stringify(val));\n            cacheRemaining = val;\n        },\n        viewable:function(val) {\n            broadcastEvent(EVENTS.VIEWABLECHANGE, 'setting viewable to ' + stringify(val));\n            viewable = val;\n        }\n    };\n    \n    var listeners = {};\n    \n    var EventListeners = function(event) {\n        this.event = event;\n        this.count = 0;\n        var listeners = {};\n        \n        this.add = function(func) {\n            var id = String(func);\n            if (!listeners[id]) {\n                listeners[id] = func;\n                this.count++;\n                if (this.count == 1) ormmaview.activate(event);\n            }\n        };\n        this.remove = function(func) {\n            var id = String(func);\n            if (listeners[id]) {\n                listeners[id] = null;\n                delete listeners[id];\n                this.count--;\n                if (this.count == 0) ormmaview.deactivate(event);\n                return true;\n            } else {\n                return false;\n            }\n        };\n        this.removeAll = function() { for (var id in listeners) this.remove(listeners[id]); };\n        this.broadcast = function(args) { for (var id in listeners) listeners[id].apply({}, args); };\n        this.toString = function() {\n            var out = [event,':'];\n            for (var id in listeners) out.push('|',id,'|');\n            return out.join('');\n        };\n    };\n    \n    // PRIVATE METHODS ////////////////////////////////////////////////////////////\n    \n    ormmaview.addEventListener('change', function(properties) {\n        for (var property in properties) {\n            var handler = changeHandlers[property];\n            handler(properties[property]);\n        }\n    });\n    \n    ormmaview.addEventListener('shake', function() {\n        broadcastEvent(EVENTS.SHAKE);\n    });\n    \n    ormmaview.addEventListener('error', function(message, action) {\n        broadcastEvent(EVENTS.ERROR, message, action);\n    });\n    \n    ormmaview.addEventListener('response', function(uri, response) {\n        broadcastEvent(EVENTS.RESPONSE, uri, response);\n    });\n    \n    ormmaview.addEventListener('assetReady', function(alias, URL) {\n        assets[alias] = URL;\n        broadcastEvent(EVENTS.ASSETREADY, alias);\n    });\n    \n    ormmaview.addEventListener('assetRemoved', function(alias) {\n        assets[alias] = null;\n        delete assets[alias];\n        broadcastEvent(EVENTS.ASSETREMOVED, alias);\n    });\n    \n    ormmaview.addEventListener('assetRetired', function(alias) {\n        assets[alias] = null;\n        delete assets[alias];\n        broadcastEvent(EVENTS.ASSETRETIRED, alias);\n    });\n    \n    var clone = function(obj) {\n        var f = function() {};\n        f.prototype = obj;\n        return new f();\n    };\n    \n    var stringify = function(obj) {\n        if (typeof obj == 'object') {\n            if (obj.push) {\n                var out = [];\n                for (var p in obj) {\n                    out.push(obj[p]);\n                }\n                return '[' + out.join(',') + ']';\n            } else {\n                var out = [];\n                for (var p in obj) {\n                    out.push('\\''+p+'\\':'+obj[p]);\n                }\n                return '{' + out.join(',') + '}';\n            }\n        } else {\n            return String(obj);\n        }\n    };\n    \n    var valid = function(obj, validators, action, full) {\n        if (full) {\n            if (obj === undefined) {\n                broadcastEvent(EVENTS.ERROR, 'Required object missing.', action);\n                return false;\n            } else {\n                for (var i in validators) {\n                    if (obj[i] === undefined) {\n                        broadcastEvent(EVENTS.ERROR, 'Object missing required property ' + i, action);\n                        return false;\n                    }\n                }\n            }\n        }\n        for (var i in obj) {\n            if (!validators[i]) {\n                broadcastEvent(EVENTS.ERROR, 'Invalid property specified - ' + i + '.', action);\n                return false;\n            } else if (!validators[i](obj[i])) {\n                broadcastEvent(EVENTS.ERROR, 'Value of property ' + i + '<' + obj[i] + '>' +' is not valid type.', action);\n                return false;\n            }\n        }\n        return true;\n    };\n    \n    var contains = function(value, array) {\n        for (var i in array) if (array[i] == value) return true;\n        return false;\n    };\n    \n    var broadcastEvent = function() {\n        var args = new Array(arguments.length);\n        for (var i = 0; i < arguments.length; i++) args[i] = arguments[i];\n        var event = args.shift();\n        try{\n        if (listeners[event]) listeners[event].broadcast(args);\n        }\n        catch (e) {}\n    }\n    \n    // LEVEL 1 ////////////////////////////////////////////////////////////////////\n    \n    \n    ormma.signalReady = function() {\n    //        ormmaview.logHTML();\n        if (typeof ORMMAReady == 'function') {\n            window.clearInterval(intervalID);\n            ORMMAReady();\n    //        ormmaview.logHTML();\n            broadcastEvent(EVENTS.INFO, 'callback invoked');\n        } else {\n            readyDuration += 20;\n            if (readyDuration >= readyTimeout) {\n                window.clearInterval(intervalID);\n                broadcastEvent(EVENTS.ERROR, 'Callback not found (timeout of ' + readyTimeout + 'ms occurred)!');\n            }\n        }\n    };\n    \n    ormma.addEventListener = function(event, listener) {\n        if (!event || !listener) {\n            broadcastEvent(EVENTS.ERROR, 'Both event and listener are required.', 'addEventListener');\n        } else if (!contains(event, EVENTS)) {\nbroadcastEvent(EVENTS.ERROR, 'Unknown event: ' + event, 'addEventListener');\n        } else {\n            if (!listeners[event]) listeners[event] = new EventListeners(event);\n            listeners[event].add(listener);\n        }\n    };\n    \n    ormma.close = function() {\n        ormmaview.close();\n    };\n    \n    ormma.expand = function(dimensions, URL) {\n   // ormmaview.logHTML();\n        broadcastEvent(EVENTS.INFO, 'expanding to ' + stringify(dimensions));\n        if (valid(dimensions, dimensionValidators, 'expand', true)) {\n            ormmaview.expand(dimensions, URL);\n        }\n    };\n    \n    ormma.getDefaultPosition = function() {\n        return clone(defaultPosition);\n    };\n    \n    ormma.getExpandProperties = function() {\n        return clone(expandProperties);\n    };\n    \n    ormma.getMaxSize = function() {\n        return clone(maxSize);\n    };\n    \n    // ormma.getResizeProperties = function() {};\n    \n    ormma.getSize = function() {\n        return clone(size);\n    };\n    \n    ormma.getState = function() {\n        return state;\n    };\n    \n    ormma.hide = function() {\n        if (state == STATES.HIDDEN) {\n            broadcastEvent(EVENTS.ERROR, 'Ad is currently hidden.', 'hide');\n        } else {\n            ormmaview.hide();\n        }\n    };\n    \n    ormma.open = function(URL, controls) {\n        if (!URL) {\n            broadcastEvent(EVENTS.ERROR, 'URL is required.', 'open');\n        } else {\n            ormmaview.open(URL, controls);\n        }\n    };\n    \n    ormma.removeEventListener = function(event, listener) {\n        if (!event) {\n            broadcastEvent(EVENTS.ERROR, 'Must specify an event.', 'removeEventListener');\n        } else {\n            if (listener && !listeners[event].remove(listener)) {\n                broadcastEvent(EVENTS.ERROR, 'Listener not currently registered for event', 'removeEventListener');\n                return;  \n            } else {\n                listeners[event].removeAll();\n            }\n            if (listeners[event].count == 0) {\n                listeners[event] = null;\n                delete listeners[event];\n            }\n        }\n    };\n    \n    ormma.resize = function(width, height) {\n        if (width == null || height == null || isNaN(width) || isNaN(height) || width < 0 || height < 0) {\n            broadcastEvent(EVENTS.ERROR, 'Requested size must be numeric values between 0 and maxSize.', 'resize');\n        } else if (width > maxSize.width || height > maxSize.height) {\n            broadcastEvent(EVENTS.ERROR, 'Request (' + width + ' x ' + height + ') exceeds maximum allowable size of (' + maxSize.width +  ' x ' + maxSize.height + ')', 'resize');\n        } else if (width == size.width && height == size.height) {\n            broadcastEvent(EVENTS.ERROR, 'Requested size equals current size.', 'resize');\n        } else {\n            ormmaview.resize(width, height);\n        }\n    };\n    \n    ormma.setExpandProperties = function(properties) {\n        if (valid(properties, expandPropertyValidators, 'setExpandProperties')) {\n            ormmaview.setExpandProperties(properties);\n        }\n    };\n    \n    // ormma.setResizeProperties = function(properties) {};\n    \n    ormma.show = function() {\n        if (state != STATES.HIDDEN) {\n            broadcastEvent(EVENTS.ERROR, 'Ad is currently visible.', 'show');\n        } else {\n            ormmaview.show();\n        }\n    };\n    \n    // LEVEL 2 ////////////////////////////////////////////////////////////////////\n    \n    ormma.createEvent = function(date, title, body) {\n        if (!supports[FEATURES.CALENDAR]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'createEvent');\n        } else if (!date || typeof date != 'object' || !date.getDate) {\n            broadcastEvent(EVENTS.ERROR, 'Valid date required.', 'createEvent');\n        } else if (!title || typeof title != 'string') {\n            broadcastEvent(EVENTS.ERROR, 'Valid title required.', 'createEvent');\n        } else {\n            ormmaview.createEvent(date, title, body);\n        }\n    };\n    \n    ormma.getHeading = function() {\n        if (!supports[FEATURES.HEADING]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'getHeading');\n        }\n        return heading;\n    };\n    \n    ormma.getKeyboardState = function() {\n        if (!supports[FEATURES.LEVEL2]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'getKeyboardState');\n        }\n        return keyboardState;\n    }\n    \n    ormma.getLocation = function() {\n        if (!supports[FEATURES.LOCATION]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'getLocation');\n        }\n        return (null == location)?null:clone(location);\n    };\n    \n    ormma.getNetwork = function() {\n        if (!supports[FEATURES.NETWORK]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'getNetwork');\n        }\n        return network;\n    };\n    \n    ormma.getOrientation = function() {\n        if (!supports[FEATURES.ORIENTATION]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'getOrientation');\n        }\n        return orientation;\n    };\n    \n    ormma.getScreenSize = function() {\n        if (!supports[FEATURES.SCREEN]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'getScreenSize');\n        } else {\n            return (null == screenSize)?null:clone(screenSize);\n        }\n    };\n    \n    ormma.getShakeProperties = function() {\n        if (!supports[FEATURES.SHAKE]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'getShakeProperties');\n        } else {\n            return (null == shakeProperties)?null:clone(shakeProperties);\n        }\n    };\n    \n    ormma.getTilt = function() {\n        if (!supports[FEATURES.TILT]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'getTilt');\n        } else {\n            return (null == tilt)?null:clone(tilt);\n        }\n    };\n    \n    ormma.makeCall = function(number) {\n        if (!supports[FEATURES.PHONE]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'makeCall');\n        } else if (!number || typeof number != 'string') {\n            broadcastEvent(EVENTS.ERROR, 'Request must provide a number to call.', 'makeCall');\n        } else {\n            ormmaview.makeCall(number);\n        }\n    };\n    \n    ormma.sendMail = function(recipient, subject, body) {\n        if (!supports[FEATURES.EMAIL]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'sendMail');\n        } else if (!recipient || typeof recipient != 'string') {\n            broadcastEvent(EVENTS.ERROR, 'Request must specify a recipient.', 'sendMail');\n        } else {\n            ormmaview.sendMail(recipient, subject, body);\n        }\n    };\n    \n    ormma.sendSMS = function(recipient, body) {\n        if (!supports[FEATURES.SMS]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'sendSMS');\n        } else if (!recipient || typeof recipient != 'string') {\n            broadcastEvent(EVENTS.ERROR, 'Request must specify a recipient.', 'sendSMS');\n        } else {\n            ormmaview.sendSMS(recipient, body);\n        }\n    };\n    \n    ormma.setShakeProperties = function(properties) {\n        if (!supports[FEATURES.SHAKE]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'setShakeProperties');\n        } else if (valid(properties, shakePropertyValidators, 'setShakeProperties')) {\n            ormmaview.setShakeProperties(properties);\n        }\n    };\n    \n//    ormma.storePicture = function(URL) {};\n    \n    ormma.supports = function(feature) {\n        if (supports[feature]) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n    \n    // LEVEL 3 ////////////////////////////////////////////////////////////////////\n    \n    ormma.addAsset = function(URL, alias) {\n        if (!URL || !alias || typeof URL != 'string' || typeof alias != 'string') {\n            broadcastEvent(EVENTS.ERROR, 'URL and alias are required.', 'addAsset');\n        } else if (supports[FEATURES.LEVEL3]) {\n            ormmaview.addAsset(URL, alias);\n        } else if (URL.indexOf('ormma://') == 0) {\n            broadcastEvent(EVENTS.ERROR, 'Native device assets not supported by this client.', 'addAsset');\n        } else {\n            assets[alias] = URL;\n            broadcastEvent(EVENTS.ASSETREADY, alias);\n        }\n    };\n    \n    ormma.addAssets = function(assets) {\n        for (var alias in assets) {\n            ormma.addAsset(assets[alias], alias);\n        }\n    };\n    \n    ormma.getAssetURL = function(alias) {\n        if (!assets[alias]) {\n            broadcastEvent(EVENTS.ERROR, 'Alias unknown.', 'getAssetURL');\n        }\n        return assets[alias];\n    };\n    \n    ormma.getCacheRemaining = function() {\n        if (!supports[FEATURES.LEVEL3]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'getCacheRemaining');\n        }\n        return cacheRemaining;\n    };\n    \n    ormma.request = function(uri, display) {\n        if (!supports[FEATURES.LEVEL3]) {\n            broadcastEvent(EVENTS.ERROR, 'Method not supported by this client.', 'request');\n        } else if (!uri || typeof uri != 'string') {\n            broadcastEvent(EVENTS.ERROR, 'URI is required.', 'request');\n        } else {\n            ormmaview.request(uri, display);\n        }\n    };\n    \n    ormma.removeAllAssets = function() {\n        for (var alias in assets) {\n            ormma.removeAsset(alias);\n        }\n    };\n    \n    ormma.removeAsset = function(alias) {\n        if (!alias || typeof alias != 'string') {\n            broadcastEvent(EVENTS.ERROR, 'Alias is required.', 'removeAsset');\n        } else if (!assets[alias]) {\n            broadcastEvent(EVENTS.ERROR, 'Alias unknown.', 'removeAsset');\n        } else if (supports[FEATURES.LEVEL3]) {\n            ormmaview.removeAsset(alias);\n        } else {\n            assets[alias] = null;\n            delete assets[alias];\n            broadcastEvent(EVENTS.ASSETREMOVED, alias);\n        }\n    };\n    \n ormma.showAlert = function( message ) {\n      ormmaview.showAlert( message );\n   };    \n   \n    ormma.logHTML = function(){\n ormmaview.logHTML();\n \n    };\n ormma.getViewable = function() { \nreturn viewable;\n};})();"
        //    15: invokevirtual   java/lang/String.getBytes:()[B
        //    18: invokespecial   java/io/ByteArrayInputStream.<init>:([B)V
        //    21: astore          4
        //    23: aload_0        
        //    24: aload           4
        //    26: aload_1        
        //    27: iconst_0       
        //    28: invokevirtual   com/nexage/ormma/controller/OrmmaAssetController.writeToDisk:(Ljava/io/InputStream;Ljava/lang/String;Z)Ljava/lang/String;
        //    31: astore          10
        //    33: aload           10
        //    35: astore          8
        //    37: aload           4
        //    39: ifnull          47
        //    42: aload           4
        //    44: invokevirtual   java/io/ByteArrayInputStream.close:()V
        //    47: aload           8
        //    49: areturn        
        //    50: aload_2        
        //    51: ldc             "ormma_bridge.js"
        //    53: invokevirtual   java/lang/String.indexOf:(Ljava/lang/String;)I
        //    56: iflt            145
        //    59: new             Ljava/io/ByteArrayInputStream;
        //    62: dup            
        //    63: ldc             "\n(function() {\n\n   var ormmaview = window.ormmaview = {};\n\n \n \n   /****************************************************/\n   /********** PROPERTIES OF THE ORMMA BRIDGE **********/\n   /****************************************************/\n \n   /** Expand Properties */\n   var expandProperties = {\n        useBackground:false,\n        backgroundColor:0xffffff,\n        backgroundOpacity:1.0,\n        isModal:false\n    };\n \n \n   /** The set of listeners for ORMMA Native Bridge Events */\n   var listeners = { };\n \n   /** Holds the current dimension values */\n   dimensions : {};\n        \n   /** A Queue of Calls to the Native SDK that still need execution */\n   var nativeCallQueue = [ ];\n \n   /** Identifies if a native call is currently in progress */\n   var nativeCallInFlight = false;\n \n   /** timer for identifying iframes */\n   var timer;\n   var totalTime;\n\n \n \n   /**********************************************/\n   /************* JAVA ENTRY POINTS **************/\n   /**********************************************/\n \n   /**\n    * Called by the JAVA SDK when an asset has been fully cached.\n    *\n    * @returns string, \"OK\"\n    */\n   ormmaview.fireAssetReadyEvent = function( alias, URL ) {\n      var handlers = listeners[\"assetReady\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n            handlers[i]( alias, URL );\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n   /**\n    * Called by the JAVA SDK when an asset has been removed from the\n* cache at the request of the creative.\n    *\n    * @returns string, \"OK\"\n    */\n   ormmaview.fireAssetRemovedEvent = function( alias ) {\n      var handlers = listeners[\"assetRemoved\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n            handlers[i]( alias );\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n ormmaview.logHTML = function(){\n ORMMADisplayControllerBridge.logHTML(document.documentElement.innerHTML);\n \n };\n \n   /**\n    * Called by the JAVA SDK when an asset has been automatically\n* removed from the cache for reasons outside the control of the creative.\n    *\n    * @returns string, \"OK\"\n    */\n   ormmaview.fireAssetRetiredEvent = function( alias ) {\n      var handlers = listeners[\"assetRetired\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n            handlers[i]( alias );\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n   /**\n* Called by the JAVA SDK when various state properties have changed.\n    *\n    * @returns string, \"OK\"\n*/\n   ormmaview.fireChangeEvent = function( properties ) {\n      var handlers = listeners[\"change\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n    handlers[i]( properties );\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n   /**\n    * Called by the JAVA SDK when an error has occured.\n    *\n    * @returns string, \"OK\"\n    */\n   ormmaview.fireErrorEvent = function( message, action ) {\n      var handlers = listeners[\"error\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n            handlers[i]( message, action );\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n   /**\n    * Called by the JAVA SDK when the user shakes the device.\n    *\n    * @returns string, \"OK\"\n    */\n   ormmaview.fireShakeEvent = function() {\n      var handlers = listeners[\"shake\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n            handlers[i]();\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n   \n \n \n   /**\n    *\n    */\n   ormmaview.showAlert = function( message ) {\n      ORMMAUtilityControllerBridge.showAlert( message );\n   };\n \n \n   /*********************************************/\n   /********** INTERNALLY USED METHODS **********/\n   /*********************************************/\n \n \n   /**\n    *\n    */\n   ormmaview.zeroPad = function( number ) {\n      var text = \"\";\n      if ( number < 10 ) {\n         text += \"0\";\n      }\n  text += number;\n      return text;\n   }\n \n \n \n \n   /***************************************************************************/\n   /********** LEVEL 0 (not part of spec, but required by public API **********/\n   /***************************************************************************/\n \n   /**\n    *\n    */\n   ormmaview.activate = function( event ) {\n    ORMMAUtilityControllerBridge.activate(event);\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.addEventListener = function( event, listener ) {\n      var handlers = listeners[event];\n  if ( handlers == null ) {\n // no handlers defined yet, set it up\n         listeners[event] = [];\n         handlers = listeners[event];\n      }\n \n      // see if the listener is already present\n  for ( var handler in handlers ) {\n     if ( listener == handler ) {\n    // listener already present, nothing to do\nturn;\n}\n}\n \n      // not present yet, go ahead and add it\n      handlers.push( listener );\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.deactivate = function( event ) {\n      ORMMAUtilityControllerBridge.deactivate(event);\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.removeEventListener = function( event, listener ) {\nvar handlers = listeners[event];\n  if ( handlers != null ) {\n         handlers.remove( listener );\n  }\n   };\n \n\n \n   /*****************************/\n   /********** LEVEL 1 **********/\n   /*****************************/\n\n   /**\n    *\n    */\n   ormmaview.close = function() {\n   try {\n     ORMMADisplayControllerBridge.close();\n  } catch ( e ) {\n     ormmaview.showAlert( \"close: \" + e );\n}\n   };\n \n \n   /**\n    *\n    */\n   ormmaview.expand = function( dimensions, URL ) {\n  try {\n this.dimensions = dimensions;\n ORMMADisplayControllerBridge.expand(ormmaview.stringify(dimensions), URL, ormmaview.stringify(expandProperties));\n  } catch ( e ) {\n     ormmaview.showAlert( \"executeNativeExpand: \" + e + \", dimensions = \" + dimensions  + \", URL = \" + URL + \", expandProperties = \" + expandProperties);\n  }\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.hide = function() {\n   try {\n  ORMMADisplayControllerBridge.hide();\n  } catch ( e ) {\n     ormmaview.showAlert( \"hide: \" + e );\n  }\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.open = function( URL, controls ) {\n  // the navigation parameter is an array, break it into its parts\n  var back = false;\n  var forward = false;\n  var refresh = false;\n  if ( controls == null ) {\n back = true;\n forward = true;\n refresh = true;\n  }\n  else {\n for ( var i = 0; i < controls.length; i++ ) {\nif ( ( controls[i] == \"none\" ) && ( i > 0 ) ) {\n   // error\n   self.fireErrorEvent( \"none must be the only navigation element present.\", \"open\" );\n   return;\n}\nelse if ( controls[i] == \"all\" ) {\n   if ( i > 0 ) {\n   // error\n   self.fireErrorEvent( \"none must be the only navigation element present.\", \"open\" );\n   return;\n}\n\n// ok\nback = true;\nforward = true;\nrefresh = true;\n}\nelse if ( controls[i] == \"back\" ) {\nback = true;\n}\nelse if ( controls[i] == \"forward\" ) {\nforward = true;\n}\nelse if ( controls[i] == \"refresh\" ) {\nrefresh = true;\n}\n     }\n  }\n\n try{\n  ORMMADisplayControllerBridge.open(URL, back, forward, refresh);\n   } catch ( e ) {\n     ormmaview.showAlert( \"open: \" + e );\n  }\n   \n   };\n \n   /**\n    *\n    */\n   ormmaview.resize = function( width, height ) {\n   try {\n  ORMMADisplayControllerBridge.resize(width, height);\n  } catch ( e ) {\n     ormmaview.showAlert( \"resize: \" + e );\n  }\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.setExpandProperties = function( properties ) {\n  expandProperties = properties;\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.show = function() {\n   try{\n  ORMMADisplayControllerBridge.show();\n  } catch ( e ) {\n     ormmaview.showAlert( \"show: \" + e );\n  }\n   };\n \n \n \n   /*****************************/\n   /********** LEVEL 2 **********/\n   /*****************************/\n\n   /**\n    *\n    */\n   ormmaview.createEvent = function( date, title, body ) {\n      var msecs=(date.getTime()-date.getMilliseconds());\n\ntry {\nORMMAUtilityControllerBridge.createEvent(msecs.toString(), title, body);\n} catch ( e ) {\n     ormmaview.showAlert( \"createEvent: \" + e );\n  }\n\n   };\n \n   /**\n    *\n    */\n   ormmaview.makeCall = function( phoneNumber ) {\n   try {\n  ORMMAUtilityControllerBridge.makeCall(phoneNumber);\n  } catch ( e ) {\n     ormmaview.showAlert( \"makeCall: \" + e );\n  }\n   };\n \n \n   /**\n    *\n    */\n   ormmaview.sendMail = function( recipient, subject, body ) {\n   try {\n  ORMMAUtilityControllerBridge.sendMail(recipient, subject, body);\n  } catch ( e ) {\n     ormmaview.showAlert( \"sendMail: \" + e );\n  }\n   };\n \n\n   /**\n    *\n    */\n   ormmaview.sendSMS = function( recipient, body ) {\n   try {\n  ORMMAUtilityControllerBridge.sendSMS(recipient, body);\n  } catch ( e ) {\n     ormmaview.showAlert( \"sendSMS: \" + e );\n  }\n   };\n \n   /**\n    *\n    */\n   ormmaview.setShakeProperties = function( properties ) {\n   };\n \n \n \n   /*****************************/\n   /********** LEVEL 3 **********/\n   /*****************************/\n\n   /**\n    *\n    */\n   ormmaview.addAsset = function( URL, alias ) {\n \n   };\n   /**\n    *\n    */\n   ormmaview.request = function( URI, display ) {\n  \n   }; \n   /**\n    *\n    */\n   ormmaview.removeAsset = function( alias ) {\n   };\n   \n   \n   ormmaview.stringify = function(args) {\n    if (typeof JSON === \"undefined\") {\n        var s = \"\";\n        var len = args.length;\n        var i;\n        if (typeof len == \"undefined\"){\n        return ormmaview.stringifyArg(args);\n        }\n        for (i = 0; i < args.length; i++) {\n            if (i > 0) {\n                s = s + \",\";\n            }\n            s = s + ormmaview.stringifyArg(args[i]);\n        }\n        s = s + \"]\";\n        return s;\n    } else {\n        return JSON.stringify(args);\n    }\n};\n\normmaview.stringifyArg = function(arg) {\n        var s, type, start, name, nameType, a;\n            type = typeof arg;\n            s = \"\";\n            if ((type === \"number\") || (type === \"boolean\")) {\n                s = s + args;\n            } else if (arg instanceof Array) {\n                s = s + \"[\" + arg + \"]\";\n            } else if (arg instanceof Object) {\n                start = true;\n                s = s + '{';\n                for (name in arg) {\n                    if (arg[name] !== null) {\n                        if (!start) {\n                            s = s + ',';\n                        }\n                        s = s + '\"' + name + '\":';\n                        nameType = typeof arg[name];\n                        if ((nameType === \"number\") || (nameType === \"boolean\")) {\n                            s = s + arg[name];\n                        } else if ((typeof arg[name]) === 'function') {\n                            // don't copy the functions\n                            s = s + '\"\"';\n                        } else if (arg[name] instanceof Object) {\n                            s = s + this.stringify(args[i][name]);\n                        } else {\n                            s = s + '\"' + arg[name] + '\"';\n                        }\n                        start = false;\n                    }\n                }\n                s = s + '}';\n            } else {\n                a = arg.replace(/\\\\/g, '\\\\\\\\');\n                a = a.replace(/\"/g, '\\\\\"');\n                s = s + '\"' + a + '\"';\n            }\n        ormmaview.showAlert(\"json:\"+ s);\nreturn s;\n}\n   \n   })();"
        //    65: invokevirtual   java/lang/String.getBytes:()[B
        //    68: invokespecial   java/io/ByteArrayInputStream.<init>:([B)V
        //    71: astore          4
        //    73: goto            23
        //    76: astore          7
        //    78: aconst_null    
        //    79: astore          4
        //    81: aload           7
        //    83: invokevirtual   java/lang/Exception.printStackTrace:()V
        //    86: aconst_null    
        //    87: astore          8
        //    89: aload           4
        //    91: ifnull          47
        //    94: aload           4
        //    96: invokevirtual   java/io/ByteArrayInputStream.close:()V
        //    99: aconst_null    
        //   100: areturn        
        //   101: astore          9
        //   103: aconst_null    
        //   104: areturn        
        //   105: astore_3       
        //   106: aconst_null    
        //   107: astore          4
        //   109: aload_3        
        //   110: astore          5
        //   112: aload           4
        //   114: ifnull          122
        //   117: aload           4
        //   119: invokevirtual   java/io/ByteArrayInputStream.close:()V
        //   122: aload           5
        //   124: athrow         
        //   125: astore          11
        //   127: aload           8
        //   129: areturn        
        //   130: astore          6
        //   132: goto            122
        //   135: astore          5
        //   137: goto            112
        //   140: astore          7
        //   142: goto            81
        //   145: aconst_null    
        //   146: astore          4
        //   148: goto            23
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  0      23     76     81     Ljava/lang/Exception;
        //  0      23     105    112    Any
        //  23     33     140    145    Ljava/lang/Exception;
        //  23     33     135    140    Any
        //  42     47     125    130    Ljava/lang/Exception;
        //  50     73     76     81     Ljava/lang/Exception;
        //  50     73     105    112    Any
        //  81     86     135    140    Any
        //  94     99     101    105    Ljava/lang/Exception;
        //  117    122    130    135    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0023:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public void deleteOldAds() {
        deleteDirectory(new File(this.getFilesDir() + File.separator + "ad"));
    }
    
    public FileOutputStream getAssetOutputString(final String s) {
        final File assetDir = this.getAssetDir(this.getAssetPath(s));
        assetDir.mkdirs();
        return new FileOutputStream(new File(assetDir, this.getAssetName(s)));
    }
    
    public String getAssetPath() {
        return "file://" + this.mContext.getFilesDir() + "/";
    }
    
    public void removeAsset(final String s) {
        final File assetDir = this.getAssetDir(this.getAssetPath(s));
        assetDir.mkdirs();
        new File(assetDir, this.getAssetName(s)).delete();
        this.mOrmmaView.injectJavaScript("OrmmaAdController.assetRemoved('" + s + "' )");
    }
    
    @Override
    public void stopAllListeners() {
    }
    
    public String writeToDisk(final InputStream p0, final String p1, final boolean p2) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aconst_null    
        //     1: astore          4
        //     3: sipush          1024
        //     6: newarray        B
        //     8: astore          5
        //    10: iload_3        
        //    11: ifeq            97
        //    14: ldc_w           "MD5"
        //    17: invokestatic    java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
        //    20: astore          14
        //    22: aload           14
        //    24: astore          6
        //    26: aload_0        
        //    27: aload_2        
        //    28: invokevirtual   com/nexage/ormma/controller/OrmmaAssetController.getAssetOutputString:(Ljava/lang/String;)Ljava/io/FileOutputStream;
        //    31: astore          4
        //    33: aload_1        
        //    34: aload           5
        //    36: invokevirtual   java/io/InputStream.read:([B)I
        //    39: istore          9
        //    41: iload           9
        //    43: ifle            103
        //    46: iload_3        
        //    47: ifeq            62
        //    50: aload           6
        //    52: ifnull          62
        //    55: aload           6
        //    57: aload           5
        //    59: invokevirtual   java/security/MessageDigest.update:([B)V
        //    62: aload           4
        //    64: aload           5
        //    66: iconst_0       
        //    67: iload           9
        //    69: invokevirtual   java/io/FileOutputStream.write:([BII)V
        //    72: goto            33
        //    75: astore          7
        //    77: aload           4
        //    79: ifnull          87
        //    82: aload           4
        //    84: invokevirtual   java/io/FileOutputStream.close:()V
        //    87: aload           7
        //    89: athrow         
        //    90: astore          13
        //    92: aload           13
        //    94: invokevirtual   java/security/NoSuchAlgorithmException.printStackTrace:()V
        //    97: aconst_null    
        //    98: astore          6
        //   100: goto            26
        //   103: aload           4
        //   105: invokevirtual   java/io/FileOutputStream.flush:()V
        //   108: aload           4
        //   110: ifnull          118
        //   113: aload           4
        //   115: invokevirtual   java/io/FileOutputStream.close:()V
        //   118: aload_0        
        //   119: invokespecial   com/nexage/ormma/controller/OrmmaAssetController.getFilesDir:()Ljava/lang/String;
        //   122: astore          10
        //   124: iload_3        
        //   125: ifeq            178
        //   128: aload           6
        //   130: ifnull          178
        //   133: aload_0        
        //   134: aload_2        
        //   135: aload           10
        //   137: aload_0        
        //   138: aload           6
        //   140: invokespecial   com/nexage/ormma/controller/OrmmaAssetController.asHex:(Ljava/security/MessageDigest;)Ljava/lang/String;
        //   143: invokespecial   com/nexage/ormma/controller/OrmmaAssetController.moveToAdDirectory:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   146: astore          11
        //   148: new             Ljava/lang/StringBuilder;
        //   151: dup            
        //   152: invokespecial   java/lang/StringBuilder.<init>:()V
        //   155: aload           11
        //   157: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   160: aload_2        
        //   161: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   164: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   167: areturn        
        //   168: astore          12
        //   170: goto            118
        //   173: astore          8
        //   175: goto            87
        //   178: aload           10
        //   180: astore          11
        //   182: goto            148
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                    
        //  -----  -----  -----  -----  ----------------------------------------
        //  14     22     90     97     Ljava/security/NoSuchAlgorithmException;
        //  26     33     75     90     Any
        //  33     41     75     90     Any
        //  55     62     75     90     Any
        //  62     72     75     90     Any
        //  82     87     173    178    Ljava/lang/Exception;
        //  103    108    75     90     Any
        //  113    118    168    173    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0087:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public String writeToDiskWrap(final InputStream p0, final String p1, final boolean p2, final String p3, final String p4, final String p5) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aconst_null    
        //     1: astore          7
        //     3: sipush          1024
        //     6: newarray        B
        //     8: astore          8
        //    10: iload_3        
        //    11: ifeq            107
        //    14: ldc_w           "MD5"
        //    17: invokestatic    java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
        //    20: astore          30
        //    22: aload           30
        //    24: astore          9
        //    26: new             Ljava/io/ByteArrayOutputStream;
        //    29: dup            
        //    30: invokespecial   java/io/ByteArrayOutputStream.<init>:()V
        //    33: astore          10
        //    35: aload_1        
        //    36: aload           8
        //    38: invokevirtual   java/io/InputStream.read:([B)I
        //    41: istore          14
        //    43: iload           14
        //    45: ifle            113
        //    48: iload_3        
        //    49: ifeq            67
        //    52: aconst_null    
        //    53: astore          7
        //    55: aload           9
        //    57: ifnull          67
        //    60: aload           9
        //    62: aload           8
        //    64: invokevirtual   java/security/MessageDigest.update:([B)V
        //    67: aload           10
        //    69: aload           8
        //    71: iconst_0       
        //    72: iload           14
        //    74: invokevirtual   java/io/ByteArrayOutputStream.write:([BII)V
        //    77: goto            35
        //    80: astore          11
        //    82: aload           10
        //    84: invokevirtual   java/io/ByteArrayOutputStream.close:()V
        //    87: aload           7
        //    89: ifnull          97
        //    92: aload           7
        //    94: invokevirtual   java/io/FileOutputStream.close:()V
        //    97: aload           11
        //    99: athrow         
        //   100: astore          29
        //   102: aload           29
        //   104: invokevirtual   java/security/NoSuchAlgorithmException.printStackTrace:()V
        //   107: aconst_null    
        //   108: astore          9
        //   110: goto            26
        //   113: aload           10
        //   115: invokevirtual   java/io/ByteArrayOutputStream.toString:()Ljava/lang/String;
        //   118: astore          15
        //   120: aload           15
        //   122: ldc_w           "<html"
        //   125: invokevirtual   java/lang/String.indexOf:(Ljava/lang/String;)I
        //   128: iflt            563
        //   131: iconst_1       
        //   132: istore          16
        //   134: aconst_null    
        //   135: astore          7
        //   137: iload           16
        //   139: ifeq            636
        //   142: new             Ljava/lang/StringBuffer;
        //   145: dup            
        //   146: aload           15
        //   148: invokespecial   java/lang/StringBuffer.<init>:(Ljava/lang/String;)V
        //   151: astore          17
        //   153: aload           17
        //   155: ldc_w           "/ormma_bridge.js"
        //   158: invokevirtual   java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I
        //   161: istore          18
        //   163: iload           18
        //   165: ifgt            177
        //   168: ldc_w           "ORMMA"
        //   171: ldc_w           "/ormma_bridge.js string not found"
        //   174: invokestatic    com/nexage/android/internal/NexageLog.w:(Ljava/lang/String;Ljava/lang/String;)V
        //   177: iload           18
        //   179: bipush          16
        //   181: iadd           
        //   182: istore          19
        //   184: aload           17
        //   186: iload           18
        //   188: iload           19
        //   190: new             Ljava/lang/StringBuilder;
        //   193: dup            
        //   194: ldc_w           "file://"
        //   197: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   200: aload           5
        //   202: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   205: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   208: invokevirtual   java/lang/StringBuffer.replace:(IILjava/lang/String;)Ljava/lang/StringBuffer;
        //   211: pop            
        //   212: aload           17
        //   214: ldc_w           "/ormma.js"
        //   217: invokevirtual   java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I
        //   220: istore          21
        //   222: iload           21
        //   224: ifgt            236
        //   227: ldc_w           "ORMMA"
        //   230: ldc_w           "/ormma.js string not found"
        //   233: invokestatic    com/nexage/android/internal/NexageLog.w:(Ljava/lang/String;Ljava/lang/String;)V
        //   236: iload           21
        //   238: bipush          9
        //   240: iadd           
        //   241: istore          22
        //   243: aload           17
        //   245: iload           21
        //   247: iload           22
        //   249: new             Ljava/lang/StringBuilder;
        //   252: dup            
        //   253: ldc_w           "file://"
        //   256: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   259: aload           6
        //   261: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   264: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   267: invokevirtual   java/lang/StringBuffer.replace:(IILjava/lang/String;)Ljava/lang/StringBuffer;
        //   270: pop            
        //   271: aload_0        
        //   272: aload_2        
        //   273: invokevirtual   com/nexage/ormma/controller/OrmmaAssetController.getAssetOutputString:(Ljava/lang/String;)Ljava/io/FileOutputStream;
        //   276: astore          7
        //   278: iload           16
        //   280: ifne            461
        //   283: aload           7
        //   285: ldc_w           "<html>"
        //   288: invokevirtual   java/lang/String.getBytes:()[B
        //   291: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   294: aload           7
        //   296: ldc_w           "<head>"
        //   299: invokevirtual   java/lang/String.getBytes:()[B
        //   302: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   305: aload           7
        //   307: ldc_w           "<meta name='viewport' content='user-scalable=no initial-scale=1.0' />"
        //   310: invokevirtual   java/lang/String.getBytes:()[B
        //   313: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   316: aload           7
        //   318: ldc_w           "<title>Advertisement</title> "
        //   321: invokevirtual   java/lang/String.getBytes:()[B
        //   324: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   327: aload           7
        //   329: new             Ljava/lang/StringBuilder;
        //   332: dup            
        //   333: ldc_w           "<script src=\"file://"
        //   336: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   339: aload           5
        //   341: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   344: ldc_w           "\" type=\"text/javascript\"></script>"
        //   347: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   350: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   353: invokevirtual   java/lang/String.getBytes:()[B
        //   356: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   359: aload           7
        //   361: new             Ljava/lang/StringBuilder;
        //   364: dup            
        //   365: ldc_w           "<script src=\"file://"
        //   368: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   371: aload           6
        //   373: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   376: ldc_w           "\" type=\"text/javascript\"></script>"
        //   379: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   382: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   385: invokevirtual   java/lang/String.getBytes:()[B
        //   388: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   391: aload           4
        //   393: ifnull          428
        //   396: aload           7
        //   398: ldc_w           "<script type=\"text/javascript\">"
        //   401: invokevirtual   java/lang/String.getBytes:()[B
        //   404: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   407: aload           7
        //   409: aload           4
        //   411: invokevirtual   java/lang/String.getBytes:()[B
        //   414: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   417: aload           7
        //   419: ldc_w           "</script>"
        //   422: invokevirtual   java/lang/String.getBytes:()[B
        //   425: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   428: aload           7
        //   430: ldc_w           "</head>"
        //   433: invokevirtual   java/lang/String.getBytes:()[B
        //   436: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   439: aload           7
        //   441: ldc_w           "<body style=\"margin:0; padding:0; overflow:hidden; background-color:transparent;\">"
        //   444: invokevirtual   java/lang/String.getBytes:()[B
        //   447: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   450: aload           7
        //   452: ldc_w           "<div align=\"center\"> "
        //   455: invokevirtual   java/lang/String.getBytes:()[B
        //   458: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   461: iload           16
        //   463: ifne            597
        //   466: aload           7
        //   468: aload           10
        //   470: invokevirtual   java/io/ByteArrayOutputStream.toByteArray:()[B
        //   473: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   476: iload           16
        //   478: ifne            514
        //   481: aload           7
        //   483: ldc_w           "</div> "
        //   486: invokevirtual   java/lang/String.getBytes:()[B
        //   489: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   492: aload           7
        //   494: ldc_w           "</body> "
        //   497: invokevirtual   java/lang/String.getBytes:()[B
        //   500: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   503: aload           7
        //   505: ldc_w           "</html> "
        //   508: invokevirtual   java/lang/String.getBytes:()[B
        //   511: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   514: aload           7
        //   516: invokevirtual   java/io/FileOutputStream.flush:()V
        //   519: aload           10
        //   521: invokevirtual   java/io/ByteArrayOutputStream.close:()V
        //   524: aload           7
        //   526: ifnull          534
        //   529: aload           7
        //   531: invokevirtual   java/io/FileOutputStream.close:()V
        //   534: aload_0        
        //   535: invokespecial   com/nexage/ormma/controller/OrmmaAssetController.getFilesDir:()Ljava/lang/String;
        //   538: astore          25
        //   540: iload_3        
        //   541: ifeq            633
        //   544: aload           9
        //   546: ifnull          633
        //   549: aload_0        
        //   550: aload_2        
        //   551: aload           25
        //   553: aload_0        
        //   554: aload           9
        //   556: invokespecial   com/nexage/ormma/controller/OrmmaAssetController.asHex:(Ljava/security/MessageDigest;)Ljava/lang/String;
        //   559: invokespecial   com/nexage/ormma/controller/OrmmaAssetController.moveToAdDirectory:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   562: areturn        
        //   563: iconst_0       
        //   564: istore          16
        //   566: goto            134
        //   569: astore          20
        //   571: ldc_w           "ORMMA"
        //   574: ldc_w           "error in StringBuffer replace"
        //   577: invokestatic    com/nexage/android/internal/NexageLog.e:(Ljava/lang/String;Ljava/lang/String;)V
        //   580: goto            212
        //   583: astore          23
        //   585: ldc_w           "ORMMA"
        //   588: ldc_w           "error in StringBuffer replace 2"
        //   591: invokestatic    com/nexage/android/internal/NexageLog.e:(Ljava/lang/String;Ljava/lang/String;)V
        //   594: goto            271
        //   597: aload           7
        //   599: aload           17
        //   601: invokevirtual   java/lang/StringBuffer.toString:()Ljava/lang/String;
        //   604: invokevirtual   java/lang/String.getBytes:()[B
        //   607: invokevirtual   java/io/FileOutputStream.write:([B)V
        //   610: goto            476
        //   613: astore          24
        //   615: goto            524
        //   618: astore          26
        //   620: goto            534
        //   623: astore          12
        //   625: goto            87
        //   628: astore          13
        //   630: goto            97
        //   633: aload           25
        //   635: areturn        
        //   636: aconst_null    
        //   637: astore          17
        //   639: goto            271
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                    
        //  -----  -----  -----  -----  ----------------------------------------
        //  14     22     100    107    Ljava/security/NoSuchAlgorithmException;
        //  35     43     80     633    Any
        //  60     67     80     633    Any
        //  67     77     80     633    Any
        //  82     87     623    628    Ljava/lang/Exception;
        //  92     97     628    633    Ljava/lang/Exception;
        //  113    131    80     633    Any
        //  142    163    80     633    Any
        //  168    177    80     633    Any
        //  184    212    569    583    Ljava/lang/Exception;
        //  184    212    80     633    Any
        //  212    222    80     633    Any
        //  227    236    80     633    Any
        //  243    271    583    597    Ljava/lang/Exception;
        //  243    271    80     633    Any
        //  271    278    80     633    Any
        //  283    391    80     633    Any
        //  396    428    80     633    Any
        //  428    461    80     633    Any
        //  466    476    80     633    Any
        //  481    514    80     633    Any
        //  514    519    80     633    Any
        //  519    524    613    618    Ljava/lang/Exception;
        //  529    534    618    623    Ljava/lang/Exception;
        //  571    580    80     633    Any
        //  585    594    80     633    Any
        //  597    610    80     633    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 267, Size: 267
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3417)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
}
