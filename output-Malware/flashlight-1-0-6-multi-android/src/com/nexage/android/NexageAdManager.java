// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.android;

import com.nexage.android.reports2.ReportManager;
import com.nexage.android.rules.RuleMgr;
import com.nexage.android.internal.NexageLog;
import com.nexage.android.internal.NexageContext;
import android.webkit.WebView;
import android.content.Context;
import com.nexage.android.internal.HttpUtils;
import java.util.Date;
import android.text.TextUtils;
import java.util.ArrayList;
import android.app.Activity;
import java.util.Hashtable;
import java.util.GregorianCalendar;
import java.util.List;

public class NexageAdManager
{
    public static final String FEATURE_NO_CALENDAR = "no-calendar";
    public static final String FEATURE_NO_PHONE = "no-phone";
    public static final String FEATURE_NO_PHOTO = "no-photo";
    public static final String FEATURE_NO_SMS = "no-sms";
    public static final String LOG = "NexageSDK";
    public static final String SDKVersion = "5.4.1";
    private static final String TAG = "NexageAdManager";
    private static List autoActionAllowedPositions;
    private static final GregorianCalendar c_Today;
    private static String[] featuresNeedSupport;
    private static boolean isMediation;
    private static boolean isPopupDisplayed;
    private static int s_Age;
    private static String s_ApplicationName;
    private static String s_ApplicationVersion;
    private static GregorianCalendar s_Birthday;
    private static String s_City;
    private static String s_Cn;
    private static String s_Company;
    private static String s_Country;
    private static String s_DCN;
    private static String s_DesignMarketArea;
    private static NexageAdManager$Ethnicity s_Ethnicity;
    private static Hashtable s_ExtraParameters;
    private static NexageAdManager$Gender s_Gender;
    private static int s_Heuristic;
    private static int s_HouseHoldIncome;
    private static Hashtable s_ImpressionGroups;
    private static String s_Keywords;
    private static DeviceLocation s_LocationAwareness;
    private static NexageAdManager$MaritalStatus s_Marital;
    private static String s_MediationURL;
    private static String s_PostalCode;
    private static String s_ReqAreaCode;
    private static String s_ReqKeywords;
    private static String s_ReqPostalCode;
    private static final NexageAdManager s_SharedInstance;
    private static String s_State;
    private static Boolean s_TestMode;
    private static Boolean s_areJavascriptPromptsAndAlertsAllowed;
    private static Boolean s_isFacebookIdPermitted;
    
    static {
        NexageAdManager.s_Age = -1;
        NexageAdManager.s_Gender = null;
        NexageAdManager.s_Ethnicity = null;
        NexageAdManager.s_Marital = null;
        NexageAdManager.s_Heuristic = 9;
        NexageAdManager.isPopupDisplayed = false;
        NexageAdManager.isMediation = false;
        s_SharedInstance = new NexageAdManager();
        c_Today = new GregorianCalendar();
    }
    
    public static boolean IsFeatureSupportNeeded(final String s) {
        final String[] featuresNeedSupport = NexageAdManager.featuresNeedSupport;
        boolean b = false;
        if (featuresNeedSupport != null) {
            final String[] featuresNeedSupport2 = NexageAdManager.featuresNeedSupport;
            final int length = featuresNeedSupport2.length;
            int n = 0;
            while (true) {
                b = false;
                if (n >= length) {
                    break;
                }
                if (featuresNeedSupport2[n].equalsIgnoreCase(s)) {
                    b = true;
                    break;
                }
                ++n;
            }
        }
        return b;
    }
    
    public static void addAutoActionAllowedPosition(final String s) {
        if (NexageAdManager.autoActionAllowedPositions == null) {
            NexageAdManager.autoActionAllowedPositions = new ArrayList();
        }
        if (!NexageAdManager.autoActionAllowedPositions.contains(s)) {
            NexageAdManager.autoActionAllowedPositions.add(s);
        }
    }
    
    public static void addCustomAttribute(final String s, final String s2) {
        synchronized (NexageAdManager.class) {
            if (NexageAdManager.s_ExtraParameters == null) {
                NexageAdManager.s_ExtraParameters = new Hashtable();
            }
            if (s != null && s2 != null) {
                NexageAdManager.s_ExtraParameters.put(s, s2);
            }
        }
    }
    
    public static void addImpressionGroup(final String s, final String s2) {
        synchronized (NexageAdManager.class) {
            if (NexageAdManager.s_ImpressionGroups == null) {
                NexageAdManager.s_ImpressionGroups = new Hashtable();
            }
            if (!TextUtils.isEmpty((CharSequence)s) && !TextUtils.isEmpty((CharSequence)s2)) {
                NexageAdManager.s_ImpressionGroups.put(s, s2);
            }
        }
    }
    
    public static boolean areJavascriptPromptsAndAlertsAllowed() {
        return NexageAdManager.s_areJavascriptPromptsAndAlertsAllowed;
    }
    
    public static int getAge() {
        return NexageAdManager.s_Age;
    }
    
    public static String getApplicationName() {
        return NexageAdManager.s_ApplicationName;
    }
    
    public static String getApplicationVersion() {
        return NexageAdManager.s_ApplicationVersion;
    }
    
    @Deprecated
    public static String getAreaCode() {
        return NexageAdManager.s_ReqAreaCode;
    }
    
    public static GregorianCalendar getBirthday() {
        return NexageAdManager.s_Birthday;
    }
    
    public static String getCity() {
        return NexageAdManager.s_City;
    }
    
    public static String getCn() {
        return NexageAdManager.s_Cn;
    }
    
    public static String getCompanyName() {
        return NexageAdManager.s_Company;
    }
    
    public static String getCountryCode() {
        return NexageAdManager.s_Country;
    }
    
    public static String getDCN() {
        return NexageAdManager.s_DCN;
    }
    
    public static String getDesignatedMarketArea() {
        return NexageAdManager.s_DesignMarketArea;
    }
    
    @Deprecated
    public static Date getDob() {
        if (NexageAdManager.s_Birthday != null) {
            return new Date(-1900 + NexageAdManager.s_Birthday.get(1), NexageAdManager.s_Birthday.get(2), NexageAdManager.s_Birthday.get(5));
        }
        return null;
    }
    
    public static NexageAdManager$Ethnicity getEthnicity() {
        return NexageAdManager.s_Ethnicity;
    }
    
    public static Hashtable getExtraParameters() {
        synchronized (NexageAdManager.class) {
            return NexageAdManager.s_ExtraParameters;
        }
    }
    
    public static NexageAdManager$Gender getGender() {
        return NexageAdManager.s_Gender;
    }
    
    public static int getHouseholdIncome() {
        return NexageAdManager.s_HouseHoldIncome;
    }
    
    public static Hashtable getImpressionsGroups() {
        return NexageAdManager.s_ImpressionGroups;
    }
    
    public static boolean getIsMediation() {
        return NexageAdManager.isMediation;
    }
    
    public static boolean getIsPopupDisplayed() {
        return NexageAdManager.isPopupDisplayed;
    }
    
    public static String getKeywords() {
        return NexageAdManager.s_Keywords;
    }
    
    public static DeviceLocation getLocationAwareness() {
        return NexageAdManager.s_LocationAwareness;
    }
    
    public static NexageAdManager$MaritalStatus getMarital() {
        return NexageAdManager.s_Marital;
    }
    
    public static String getMediationURL() {
        return NexageAdManager.s_MediationURL;
    }
    
    public static String getPostalCode() {
        return NexageAdManager.s_PostalCode;
    }
    
    public static String getRequestAreaCode() {
        return NexageAdManager.s_ReqAreaCode;
    }
    
    public static String getRequestKeywords() {
        return NexageAdManager.s_ReqKeywords;
    }
    
    public static String getRequestPostalCode() {
        return NexageAdManager.s_ReqPostalCode;
    }
    
    public static String getState() {
        return NexageAdManager.s_State;
    }
    
    public static String getVersion() {
        return "5.4.1 (126)";
    }
    
    public static int getVideoHeuristic() {
        return NexageAdManager.s_Heuristic;
    }
    
    public static boolean hasKids() {
        return HttpUtils.s_HasKids;
    }
    
    public static void init(final Context p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: iconst_1       
        //     1: istore_1       
        //     2: ldc             Lcom/nexage/android/NexageAdManager;.class
        //     4: monitorenter   
        //     5: ldc             "NexageAdManager"
        //     7: ldc_w           "init"
        //    10: invokestatic    com/nexage/android/internal/NexageLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //    13: aload_0        
        //    14: checkcast       Landroid/app/Activity;
        //    17: astore_3       
        //    18: invokestatic    com/nexage/android/internal/NexageGlobalHandler.init:()V
        //    21: aload_0        
        //    22: invokevirtual   android/content/Context.getApplicationInfo:()Landroid/content/pm/ApplicationInfo;
        //    25: astore          4
        //    27: iconst_2       
        //    28: aload           4
        //    30: getfield        android/content/pm/ApplicationInfo.flags:I
        //    33: iand           
        //    34: istore          5
        //    36: aload           4
        //    38: iload           5
        //    40: putfield        android/content/pm/ApplicationInfo.flags:I
        //    43: iload           5
        //    45: ifeq            390
        //    48: iload_1        
        //    49: istore          6
        //    51: iload           6
        //    53: ifeq            79
        //    56: ldc_w           "In Debug mode"
        //    59: invokestatic    com/nexage/android/internal/NexageLog.i:(Ljava/lang/String;)V
        //    62: new             Ljava/lang/Thread;
        //    65: dup            
        //    66: new             Lcom/nexage/android/NexageAdManager$1;
        //    69: dup            
        //    70: invokespecial   com/nexage/android/NexageAdManager$1.<init>:()V
        //    73: invokespecial   java/lang/Thread.<init>:(Ljava/lang/Runnable;)V
        //    76: invokevirtual   java/lang/Thread.start:()V
        //    79: getstatic       com/nexage/android/internal/NexageContext.s_Context:Landroid/content/Context;
        //    82: ifnonnull       549
        //    85: aload_0        
        //    86: invokevirtual   android/content/Context.getApplicationContext:()Landroid/content/Context;
        //    89: putstatic       com/nexage/android/internal/NexageContext.s_Context:Landroid/content/Context;
        //    92: aload_0        
        //    93: invokevirtual   android/content/Context.getResources:()Landroid/content/res/Resources;
        //    96: invokevirtual   android/content/res/Resources.getDisplayMetrics:()Landroid/util/DisplayMetrics;
        //    99: astore          7
        //   101: aload           7
        //   103: getfield        android/util/DisplayMetrics.density:F
        //   106: putstatic       com/nexage/android/internal/NexageContext.s_Dip2Px:F
        //   109: aload           7
        //   111: getfield        android/util/DisplayMetrics.widthPixels:I
        //   114: aload           7
        //   116: getfield        android/util/DisplayMetrics.heightPixels:I
        //   119: if_icmple       396
        //   122: aload           7
        //   124: getfield        android/util/DisplayMetrics.widthPixels:I
        //   127: istore          8
        //   129: iload           8
        //   131: putstatic       com/nexage/android/internal/NexageContext.s_LandscapeWidth:I
        //   134: aload           7
        //   136: getfield        android/util/DisplayMetrics.widthPixels:I
        //   139: aload           7
        //   141: getfield        android/util/DisplayMetrics.heightPixels:I
        //   144: if_icmple       406
        //   147: aload           7
        //   149: getfield        android/util/DisplayMetrics.heightPixels:I
        //   152: istore          9
        //   154: iload           9
        //   156: putstatic       com/nexage/android/internal/NexageContext.s_LandscapeHeight:I
        //   159: aload_0        
        //   160: invokevirtual   android/content/Context.getPackageManager:()Landroid/content/pm/PackageManager;
        //   163: aload_0        
        //   164: invokevirtual   android/content/Context.getPackageName:()Ljava/lang/String;
        //   167: sipush          128
        //   170: invokevirtual   android/content/pm/PackageManager.getApplicationInfo:(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;
        //   173: astore          11
        //   175: aload           11
        //   177: ifnull          421
        //   180: aload           11
        //   182: getfield        android/content/pm/ApplicationInfo.metaData:Landroid/os/Bundle;
        //   185: ifnull          421
        //   188: getstatic       com/nexage/android/NexageAdManager.s_DCN:Ljava/lang/String;
        //   191: ifnonnull       220
        //   194: aload           11
        //   196: getfield        android/content/pm/ApplicationInfo.metaData:Landroid/os/Bundle;
        //   199: ldc_w           "NEXAGE_DCN"
        //   202: invokevirtual   android/os/Bundle.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   205: astore          13
        //   207: aload           13
        //   209: invokestatic    android/text/TextUtils.isEmpty:(Ljava/lang/CharSequence;)Z
        //   212: ifne            220
        //   215: aload           13
        //   217: putstatic       com/nexage/android/NexageAdManager.s_DCN:Ljava/lang/String;
        //   220: getstatic       com/nexage/android/NexageAdManager.s_MediationURL:Ljava/lang/String;
        //   223: ifnonnull       252
        //   226: aload           11
        //   228: getfield        android/content/pm/ApplicationInfo.metaData:Landroid/os/Bundle;
        //   231: ldc_w           "NEXAGE_MEDIATION_URL"
        //   234: invokevirtual   android/os/Bundle.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   237: astore          12
        //   239: aload           12
        //   241: invokestatic    android/text/TextUtils.isEmpty:(Ljava/lang/CharSequence;)Z
        //   244: ifne            252
        //   247: aload           12
        //   249: putstatic       com/nexage/android/NexageAdManager.s_MediationURL:Ljava/lang/String;
        //   252: getstatic       com/nexage/android/NexageAdManager.s_TestMode:Ljava/lang/Boolean;
        //   255: ifnonnull       276
        //   258: aload           11
        //   260: getfield        android/content/pm/ApplicationInfo.metaData:Landroid/os/Bundle;
        //   263: ldc_w           "NEXAGE_TEST_MODE"
        //   266: iconst_0       
        //   267: invokevirtual   android/os/Bundle.getBoolean:(Ljava/lang/String;Z)Z
        //   270: invokestatic    java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        //   273: putstatic       com/nexage/android/NexageAdManager.s_TestMode:Ljava/lang/Boolean;
        //   276: getstatic       com/nexage/android/NexageAdManager.s_isFacebookIdPermitted:Ljava/lang/Boolean;
        //   279: ifnonnull       300
        //   282: aload           11
        //   284: getfield        android/content/pm/ApplicationInfo.metaData:Landroid/os/Bundle;
        //   287: ldc_w           "NEXAGE_FACEBOOK_ID_PERMITTED"
        //   290: iconst_0       
        //   291: invokevirtual   android/os/Bundle.getBoolean:(Ljava/lang/String;Z)Z
        //   294: invokestatic    java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        //   297: putstatic       com/nexage/android/NexageAdManager.s_isFacebookIdPermitted:Ljava/lang/Boolean;
        //   300: getstatic       com/nexage/android/NexageAdManager.s_areJavascriptPromptsAndAlertsAllowed:Ljava/lang/Boolean;
        //   303: ifnonnull       324
        //   306: aload           11
        //   308: getfield        android/content/pm/ApplicationInfo.metaData:Landroid/os/Bundle;
        //   311: ldc_w           "NEXAGE_ALLOW_JS_POPUPS"
        //   314: iconst_1       
        //   315: invokevirtual   android/os/Bundle.getBoolean:(Ljava/lang/String;Z)Z
        //   318: invokestatic    java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        //   321: putstatic       com/nexage/android/NexageAdManager.s_areJavascriptPromptsAndAlertsAllowed:Ljava/lang/Boolean;
        //   324: getstatic       com/nexage/android/internal/NexageLog.s_LogOff:Ljava/lang/Boolean;
        //   327: ifnonnull       352
        //   330: aload           11
        //   332: getfield        android/content/pm/ApplicationInfo.metaData:Landroid/os/Bundle;
        //   335: ldc_w           "NEXAGE_LOGGING"
        //   338: iconst_0       
        //   339: invokevirtual   android/os/Bundle.getBoolean:(Ljava/lang/String;Z)Z
        //   342: ifne            416
        //   345: iload_1        
        //   346: invokestatic    java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        //   349: putstatic       com/nexage/android/internal/NexageLog.s_LogOff:Ljava/lang/Boolean;
        //   352: invokestatic    com/nexage/android/internal/NexageLog.logPriv:()V
        //   355: getstatic       com/nexage/android/NexageAdManager.s_DCN:Ljava/lang/String;
        //   358: ifnonnull       481
        //   361: ldc_w           "Did not setDCN via NexageAdManager.setDCN() method"
        //   364: invokestatic    com/nexage/android/internal/NexageLog.e:(Ljava/lang/String;)V
        //   367: ldc_w           "Unable to find meta-data value for NEXAGE_DCN in AndroidManifest.xml"
        //   370: invokestatic    com/nexage/android/internal/NexageLog.e:(Ljava/lang/String;)V
        //   373: new             Ljava/lang/IllegalStateException;
        //   376: dup            
        //   377: ldc_w           "NexageSDK: NEXAGE_DCN is not set in AndroidManifest.xml and NexageAdManager.setDCN() is not called"
        //   380: invokespecial   java/lang/IllegalStateException.<init>:(Ljava/lang/String;)V
        //   383: athrow         
        //   384: astore_2       
        //   385: ldc             Lcom/nexage/android/NexageAdManager;.class
        //   387: monitorexit    
        //   388: aload_2        
        //   389: athrow         
        //   390: iconst_0       
        //   391: istore          6
        //   393: goto            51
        //   396: aload           7
        //   398: getfield        android/util/DisplayMetrics.heightPixels:I
        //   401: istore          8
        //   403: goto            129
        //   406: aload           7
        //   408: getfield        android/util/DisplayMetrics.widthPixels:I
        //   411: istore          9
        //   413: goto            154
        //   416: iconst_0       
        //   417: istore_1       
        //   418: goto            345
        //   421: getstatic       com/nexage/android/NexageAdManager.s_TestMode:Ljava/lang/Boolean;
        //   424: ifnonnull       434
        //   427: iconst_0       
        //   428: invokestatic    java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        //   431: putstatic       com/nexage/android/NexageAdManager.s_TestMode:Ljava/lang/Boolean;
        //   434: getstatic       com/nexage/android/NexageAdManager.s_isFacebookIdPermitted:Ljava/lang/Boolean;
        //   437: ifnonnull       447
        //   440: iconst_0       
        //   441: invokestatic    java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        //   444: putstatic       com/nexage/android/NexageAdManager.s_isFacebookIdPermitted:Ljava/lang/Boolean;
        //   447: getstatic       com/nexage/android/NexageAdManager.s_areJavascriptPromptsAndAlertsAllowed:Ljava/lang/Boolean;
        //   450: ifnonnull       460
        //   453: iconst_1       
        //   454: invokestatic    java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        //   457: putstatic       com/nexage/android/NexageAdManager.s_areJavascriptPromptsAndAlertsAllowed:Ljava/lang/Boolean;
        //   460: getstatic       com/nexage/android/internal/NexageLog.s_LogOff:Ljava/lang/Boolean;
        //   463: ifnonnull       352
        //   466: iconst_0       
        //   467: invokestatic    java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        //   470: putstatic       com/nexage/android/internal/NexageLog.s_LogOff:Ljava/lang/Boolean;
        //   473: goto            352
        //   476: astore          10
        //   478: goto            352
        //   481: getstatic       com/nexage/android/NexageAdManager.s_MediationURL:Ljava/lang/String;
        //   484: ifnonnull       510
        //   487: ldc_w           "Did not set MediationURL via NexageAdManager.setMediationURL() method"
        //   490: invokestatic    com/nexage/android/internal/NexageLog.e:(Ljava/lang/String;)V
        //   493: ldc_w           "Unable to find meta-data value for NEXAGE_MEDIATION_URL in AndroidManifest.xml"
        //   496: invokestatic    com/nexage/android/internal/NexageLog.e:(Ljava/lang/String;)V
        //   499: new             Ljava/lang/IllegalStateException;
        //   502: dup            
        //   503: ldc_w           "NexageSDK: NEXAGE_MEDIATION_URL is not set in AndroidManifest.xml and NexageAdManager.setMediationURL() is not called"
        //   506: invokespecial   java/lang/IllegalStateException.<init>:(Ljava/lang/String;)V
        //   509: athrow         
        //   510: aload_0        
        //   511: ldc_w           "android.permission.INTERNET"
        //   514: invokevirtual   android/content/Context.checkCallingOrSelfPermission:(Ljava/lang/String;)I
        //   517: iconst_m1      
        //   518: if_icmpne       538
        //   521: ldc_w           "No INTERNET permission, could not get ad..."
        //   524: invokestatic    com/nexage/android/internal/NexageLog.e:(Ljava/lang/String;)V
        //   527: new             Ljava/lang/IllegalStateException;
        //   530: dup            
        //   531: ldc_w           "NexageSDK: No INTERNET permission, could not get ad..."
        //   534: invokespecial   java/lang/IllegalStateException.<init>:(Ljava/lang/String;)V
        //   537: athrow         
        //   538: new             Lcom/nexage/android/NexageAdManager$2;
        //   541: dup            
        //   542: aload_3        
        //   543: invokespecial   com/nexage/android/NexageAdManager$2.<init>:(Landroid/app/Activity;)V
        //   546: invokevirtual   com/nexage/android/NexageAdManager$2.start:()V
        //   549: ldc             Lcom/nexage/android/NexageAdManager;.class
        //   551: monitorexit    
        //   552: return         
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  5      43     384    390    Any
        //  56     79     384    390    Any
        //  79     129    384    390    Any
        //  129    154    384    390    Any
        //  154    159    384    390    Any
        //  159    175    476    481    Ljava/lang/Exception;
        //  159    175    384    390    Any
        //  180    220    476    481    Ljava/lang/Exception;
        //  180    220    384    390    Any
        //  220    252    476    481    Ljava/lang/Exception;
        //  220    252    384    390    Any
        //  252    276    476    481    Ljava/lang/Exception;
        //  252    276    384    390    Any
        //  276    300    476    481    Ljava/lang/Exception;
        //  276    300    384    390    Any
        //  300    324    476    481    Ljava/lang/Exception;
        //  300    324    384    390    Any
        //  324    345    476    481    Ljava/lang/Exception;
        //  324    345    384    390    Any
        //  345    352    476    481    Ljava/lang/Exception;
        //  345    352    384    390    Any
        //  352    384    384    390    Any
        //  396    403    384    390    Any
        //  406    413    384    390    Any
        //  421    434    476    481    Ljava/lang/Exception;
        //  421    434    384    390    Any
        //  434    447    476    481    Ljava/lang/Exception;
        //  434    447    384    390    Any
        //  447    460    476    481    Ljava/lang/Exception;
        //  447    460    384    390    Any
        //  460    473    476    481    Ljava/lang/Exception;
        //  460    473    384    390    Any
        //  481    510    384    390    Any
        //  510    538    384    390    Any
        //  538    549    384    390    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0220:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private static void initHelper(final Activity activity) {
        synchronized (NexageAdManager.class) {
            activity.runOnUiThread((Runnable)new Runnable() {
                @Override
                public final void run() {
                    final WebView webView = new WebView((Context)activity);
                    final String userAgentString = webView.getSettings().getUserAgentString();
                    webView.destroy();
                    synchronized (NexageContext.class) {
                        NexageContext.s_UserAgent = userAgentString;
                        NexageContext.class.notifyAll();
                    }
                }
            });
        }
    }
    
    public static boolean isAutoActionAllowed(final String s) {
        return NexageAdManager.autoActionAllowedPositions != null && NexageAdManager.autoActionAllowedPositions.contains(s);
    }
    
    public static boolean isFacebookIdPermitted() {
        return NexageAdManager.s_isFacebookIdPermitted;
    }
    
    public static boolean isLogging() {
        return NexageLog.s_LogOff != null && !NexageLog.s_LogOff;
    }
    
    public static boolean isTestMode() {
        return NexageAdManager.s_TestMode != null && NexageAdManager.s_TestMode;
    }
    
    public static void pauseNexageSDK() {
        synchronized (NexageAdManager.class) {
            RuleMgr.pause();
            ReportManager.pause();
        }
    }
    
    public static void removeAutoActionAllowedPosition(final String s) {
        if (NexageAdManager.autoActionAllowedPositions != null && NexageAdManager.autoActionAllowedPositions.contains(s)) {
            NexageAdManager.autoActionAllowedPositions.remove(s);
        }
        if (NexageAdManager.autoActionAllowedPositions.isEmpty()) {
            NexageAdManager.autoActionAllowedPositions = null;
        }
    }
    
    public static void resumeNexageSDK() {
        synchronized (NexageAdManager.class) {
            RuleMgr.resume();
            ReportManager.resume();
        }
    }
    
    public static void setAge(final int s_Age) {
        if (s_Age < 2 || s_Age > 120) {
            return;
        }
        NexageAdManager.s_Age = s_Age;
    }
    
    public static void setApplicationName(final String s_ApplicationName) {
        NexageAdManager.s_ApplicationName = s_ApplicationName;
    }
    
    public static void setApplicationVersion(final String s_ApplicationVersion) {
        NexageAdManager.s_ApplicationVersion = s_ApplicationVersion;
    }
    
    public static void setAreJavascriptPromptsAndAlertsAllowed(final boolean b) {
        NexageAdManager.s_areJavascriptPromptsAndAlertsAllowed = b;
    }
    
    @Deprecated
    public static void setAreaCode(final String s_ReqAreaCode) {
        NexageAdManager.s_ReqAreaCode = s_ReqAreaCode;
    }
    
    public static void setBirthday(final int n, final int n2, final int n3) {
        if (1900 <= n && n <= 2100 && n2 > 0 && n2 <= 12 && n3 > 0 && n3 <= 31) {
            setBirthday(new GregorianCalendar(n, n2 - 1, n3));
            return;
        }
        NexageAdManager.s_Birthday = null;
    }
    
    public static void setBirthday(final GregorianCalendar s_Birthday) {
        if (s_Birthday == null) {
            NexageAdManager.s_Birthday = null;
            return;
        }
        final int n = NexageAdManager.c_Today.get(1) - s_Birthday.get(1);
        if (5 <= n && n <= 100) {
            NexageAdManager.s_Birthday = s_Birthday;
            return;
        }
        NexageLog.w("NexageAdManager", "setBirthday bad input: Are you really " + n + " years old?");
        NexageAdManager.s_Birthday = null;
    }
    
    public static void setCity(final String s_City) {
        NexageAdManager.s_City = s_City;
    }
    
    public static void setCn(final String s_Cn) {
        NexageAdManager.s_Cn = s_Cn;
    }
    
    public static void setCompanyName(final String s_Company) {
        NexageAdManager.s_Company = s_Company;
    }
    
    public static void setCountryCode(String substring) {
        if (substring != null && substring.length() > 4) {
            substring = substring.substring(0, 4);
        }
        NexageAdManager.s_Country = substring;
    }
    
    public static void setDCN(final String s_DCN) {
        NexageAdManager.s_DCN = s_DCN;
    }
    
    public static void setDesignatedMarketArea(final String s_DesignMarketArea) {
        NexageAdManager.s_DesignMarketArea = s_DesignMarketArea;
    }
    
    @Deprecated
    public static void setDob(final Date date) {
        if (date != null && 1900 + date.getYear() < -1 + NexageAdManager.c_Today.get(1)) {
            NexageAdManager.s_Birthday = new GregorianCalendar(1900 + date.getYear(), date.getMonth(), date.getDate());
            return;
        }
        NexageLog.w("setDob: Are you really less than 2 years old?");
    }
    
    public static void setEthnicity(final NexageAdManager$Ethnicity s_Ethnicity) {
        NexageAdManager.s_Ethnicity = s_Ethnicity;
    }
    
    public static void setExtraParameters(final Hashtable s_ExtraParameters) {
        synchronized (NexageAdManager.class) {
            NexageAdManager.s_ExtraParameters = s_ExtraParameters;
        }
    }
    
    public static void setFacebookIdPermitted(final boolean b) {
        NexageAdManager.s_isFacebookIdPermitted = b;
    }
    
    public static void setFeatures(final String[] featuresNeedSupport) {
        NexageAdManager.featuresNeedSupport = featuresNeedSupport;
    }
    
    public static void setGender(final NexageAdManager$Gender s_Gender) {
        NexageAdManager.s_Gender = s_Gender;
    }
    
    public static void setHasKids(final boolean b) {
        HttpUtils.s_HasKids = b;
    }
    
    public static void setHouseholdIncome(final int s_HouseHoldIncome) {
        NexageAdManager.s_HouseHoldIncome = s_HouseHoldIncome;
    }
    
    public static void setIsMediation(final boolean isMediation) {
        NexageAdManager.isMediation = isMediation;
    }
    
    public static void setIsPopupDisplayed(final boolean isPopupDisplayed) {
        NexageAdManager.isPopupDisplayed = isPopupDisplayed;
    }
    
    public static void setKeywords(final String s) {
        NexageAdManager.s_Keywords = validateKeyworks(s);
    }
    
    public static void setLocationAwareness(final DeviceLocation s_LocationAwareness) {
        NexageAdManager.s_LocationAwareness = s_LocationAwareness;
    }
    
    public static void setLogging(final boolean b) {
        NexageLog.s_LogOff = !b;
        NexageLog.logPriv();
    }
    
    public static void setMarital(final NexageAdManager$MaritalStatus s_Marital) {
        NexageAdManager.s_Marital = s_Marital;
    }
    
    public static void setMediationURL(final String s_MediationURL) {
        NexageAdManager.s_MediationURL = s_MediationURL;
    }
    
    public static void setPostalCode(final String s_PostalCode) {
        NexageAdManager.s_PostalCode = s_PostalCode;
    }
    
    public static void setRequestAreaCode(final String s_ReqAreaCode) {
        NexageAdManager.s_ReqAreaCode = s_ReqAreaCode;
    }
    
    public static void setRequestKeywords(final String s) {
        NexageAdManager.s_ReqKeywords = validateKeyworks(s);
    }
    
    public static void setRequestPostalCode(final String s_ReqPostalCode) {
        NexageAdManager.s_ReqPostalCode = s_ReqPostalCode;
    }
    
    public static void setState(final String s_State) {
        NexageAdManager.s_State = s_State;
    }
    
    public static void setTestMode(final boolean b) {
        NexageAdManager.s_TestMode = b;
    }
    
    public static void setVideoHeuristic(final int s_Heuristic) {
        if (s_Heuristic > 24) {
            NexageAdManager.s_Heuristic = 24;
            return;
        }
        if (s_Heuristic < 0) {
            NexageAdManager.s_Heuristic = 0;
            return;
        }
        NexageAdManager.s_Heuristic = s_Heuristic;
    }
    
    @Deprecated
    public static NexageAdManager sharedInstance() {
        return NexageAdManager.s_SharedInstance;
    }
    
    private static String validateKeyworks(final String s) {
        String string;
        if (s != null && s.length() > 256) {
            final String[] split = s.split(",");
            final int length = split.length;
            int i = 0;
            string = "";
            int n = 0;
            while (i < length) {
                final String s2 = split[i];
                String string2;
                int n3;
                if (s2.length() > 0) {
                    if (n > 0) {
                        ++n;
                    }
                    final int n2 = n + s2.length();
                    if (n2 > 256) {
                        break;
                    }
                    if (string.length() > 0) {
                        string += ",";
                    }
                    string2 = string + s2;
                    n3 = n2;
                }
                else {
                    final int n4 = n;
                    string2 = string;
                    n3 = n4;
                }
                ++i;
                final int n5 = n3;
                string = string2;
                n = n5;
            }
        }
        else {
            string = s;
        }
        return string;
    }
}
