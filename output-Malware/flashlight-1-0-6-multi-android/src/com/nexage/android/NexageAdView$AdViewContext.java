// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.android;

import android.widget.LinearLayout$LayoutParams;
import android.view.ViewGroup$LayoutParams;
import com.nexage.android.internal.NexageGlobalHandler;
import com.nexage.android.internal.SessionDepthManager;
import android.content.IntentFilter;
import com.nexage.ormma.view.OrmmaView;
import com.nexage.android.internal.OrmmaAdLayout;
import java.util.Timer;
import com.nexage.android.internal.AdLayout;
import android.annotation.SuppressLint;
import com.nexage.android.internal.PlainSwitcher;
import com.nexage.android.internal.AnimatedSwitcher;
import java.util.Hashtable;
import com.nexage.android.internal.NexageAdSwitcher;
import android.util.AttributeSet;
import com.nexage.android.internal.NexageAdFetcher;
import java.util.TimerTask;
import android.view.View$OnClickListener;
import android.content.Context;
import android.content.BroadcastReceiver;
import android.widget.RelativeLayout;
import com.nexage.android.internal.NexageLog;
import com.nexage.android.internal.Ad;
import com.nexage.android.interstitial.InterstitialLayout;
import android.view.View;
import android.app.Activity;
import com.nexage.android.internal.NexageContext;

class NexageAdView$AdViewContext extends NexageContext
{
    final /* synthetic */ NexageAdView this$0;
    
    private NexageAdView$AdViewContext(final NexageAdView this$0) {
        this.this$0 = this$0;
    }
    
    @Override
    public void SDKAdVisible(final boolean b) {
        this.this$0.SDKAdVisible(b);
    }
    
    @Override
    public void failed() {
        synchronized (this.this$0) {
            this.this$0.m_ReadyToFetch = false;
            // monitorexit(this.this$0)
            if (this.this$0.m_PrefetchAttempt > 0) {
                this.this$0.m_PrefetchAttempt--;
            }
            this.this$0.setIsFetching(false);
            if (this.this$0.listener != null) {
                ((Activity)this.this$0.m_Activity).runOnUiThread((Runnable)new Runnable() {
                    @Override
                    public void run() {
                        NexageAdView$AdViewContext.this.this$0.listener.onFailedToReceiveAd(NexageAdView$AdViewContext.this.this$0);
                    }
                });
            }
            if (!this.this$0.m_ReadyToFetch) {
                this.this$0.checkSetRefreshTimer(false);
            }
        }
    }
    
    @Override
    public Activity getActivity() {
        return (Activity)this.this$0.m_Activity;
    }
    
    @Override
    public String getPosition() {
        return this.this$0.m_Position;
    }
    
    public NexageAdView getView() {
        return this.this$0;
    }
    
    @Override
    public InterstitialLayout interstitialLayout() {
        return null;
    }
    
    @Override
    public boolean mm4rmExpanded(final Ad ad) {
        synchronized (this) {
            final boolean b = ad == this.this$0.m_CurrentAd;
            if (b) {
                final NexageAdView this$0 = this.this$0;
                ++this$0.m_MM4RM_Expanded;
                NexageLog.v(this.this$0.m_Position, "Expand refCount=" + this.this$0.m_MM4RM_Expanded);
            }
            return b;
        }
    }
    
    boolean mm4rmNotLocked() {
        synchronized (this) {
            return this.this$0.m_MM4RM_Expanded == 0;
        }
    }
    
    @Override
    public void mm4rmRestored(final Ad ad) {
        synchronized (this) {
            final NexageAdView this$0 = this.this$0;
            --this$0.m_MM4RM_Expanded;
            if (ad != this.this$0.m_CurrentAd) {
                this.this$0.switchView();
            }
            NexageLog.v(this.this$0.m_Position, "Collapse refCount=" + this.this$0.m_MM4RM_Expanded);
        }
    }
    
    @Override
    public void nudgeAdFetcher() {
        this.this$0.nudgeAdFetcher();
    }
    
    @Override
    public boolean readyForAdFetch() {
        return this.this$0.m_ReadyToFetch;
    }
    
    @Override
    public boolean showAd(final Ad ad) {
        this.this$0.m_PrefetchAttempt = 0;
        synchronized (this.this$0) {
            this.this$0.m_ReadyToFetch = false;
            if (this.this$0.isDetached && this.this$0.refreshInterval > 0) {
                return false;
            }
            this.this$0.m_PendingAd = ad;
            // monitorexit(this.this$0)
            NexageLog.d("NAV", "starting DisplayAdRunnable from showAd");
            ((Activity)this.this$0.m_Activity).runOnUiThread((Runnable)new NexageAdView$DisplayAdRunnable(this.this$0, ad));
            return true;
        }
    }
    
    @Override
    public boolean visible() {
        return this.this$0.visible();
    }
}
