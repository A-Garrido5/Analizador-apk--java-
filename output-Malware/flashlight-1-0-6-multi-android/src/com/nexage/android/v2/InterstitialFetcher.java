// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.android.v2;

import com.nexage.android.rules.RuleMgr;
import com.nexage.android.rules.AdMaxPosition;
import com.nexage.android.internal.SessionDepthManager;
import android.app.Activity;
import android.os.Message;
import java.util.TimerTask;
import com.nexage.android.reports2.ReportManager;
import com.nexage.android.internal.NexageAdFetcher;
import com.nexage.android.v2.provider.interstitial.InterstitialProvider;
import com.nexage.android.internal.NexageLog;
import java.util.Timer;
import java.util.List;
import com.nexage.android.reports2.AdService2;
import com.nexage.android.v2.provider.interstitial.InterstitialProvider$Factory;
import android.os.Handler;
import android.content.Context;

public class InterstitialFetcher extends BaseFetcher
{
    public static final int GET_RULES_ATTEMPT_INTERVAL = 2000;
    public static final int MAX_GET_RULES_ATTEMPTS = 5;
    public static final String TAG = "IntFetcher";
    private AdUpdateListener _adUpdateListener;
    private final Context _context;
    private Task _currentTask;
    private InterstitialFetcher$FetchThread _fetchThread;
    private final Handler _handler;
    private final InterstitialProvider$Factory _interstitialProviderFactory;
    private final String _position;
    private AdService2 _service;
    List _taskList;
    private Timer _timeoutTimer;
    
    public InterstitialFetcher(final Context context, final String position) {
        this._context = context;
        this._position = position;
        this._interstitialProviderFactory = InterstitialProvider$Factory.getInstance();
        this._handler = new InterstitialFetcher$FetcherHandler(this);
    }
    
    private void cancelTimeout() {
        NexageLog.i("IntFetcher", "cancelTimeout");
        if (this._timeoutTimer != null) {
            this._timeoutTimer.cancel();
            this._timeoutTimer = null;
        }
    }
    
    private void handleClick(final Task task) {
        NexageLog.w("warning: handleClick does nothing");
    }
    
    private void handleDismiss(final Task task) {
        this._adUpdateListener.onDismissScreen();
        NexageAdFetcher.nudgeAllFetchers();
    }
    
    private void handleFail(final Task task) {
        NexageLog.i("IntFetcher", "handleFail:" + task.adTag.name + ":" + task.timestamp % 10000L);
        if (this._currentTask == null || task != this._currentTask) {
            final StringBuilder sb = new StringBuilder("ignored, currentTask is ");
            String name;
            if (this._currentTask == null) {
                name = "null";
            }
            else {
                name = this._currentTask.adTag.name;
            }
            NexageLog.i("IntFetcher", sb.append(name).toString());
            return;
        }
        this.cancelTimeout();
        task.setResponseTime(System.currentTimeMillis() - task.timestamp);
        ReportManager.addAdNetRequest(this._service, task, task.status);
        if (this.isTaskListEmpty()) {
            NexageLog.i("IntFetcher", "taskList is null/empty");
            this._adUpdateListener.onFailedToReceiveAd(task);
            ReportManager.requestCompleted(this._service);
            this._currentTask = null;
            this.stopFetchThread();
            return;
        }
        NexageLog.i("IntFetcher", "taskList size " + this._taskList.size() + ", trying next task");
        synchronized (this._fetchThread) {
            this._fetchThread.notify();
        }
    }
    
    private void handleReceive(final Task task) {
        NexageLog.i("IntFetcher", "handleReceive " + task.adTag.name);
        if (this._currentTask == null || task != this._currentTask) {
            final StringBuilder sb = new StringBuilder("ignored, currentTask is ");
            String name;
            if (this._currentTask == null) {
                name = "null";
            }
            else {
                name = this._currentTask.adTag.name;
            }
            NexageLog.i("IntFetcher", sb.append(name).toString());
            return;
        }
        this.cancelTimeout();
        this.stopFetchThread();
        task.isReceived = true;
        task.setResponseTime(System.currentTimeMillis() - task.timestamp);
        ReportManager.addAdNetRequest(this._service, task, 1);
        ReportManager.requestCompleted(this._service);
        this._adUpdateListener.onReceivedAd(task);
    }
    
    private void handleTimeout(final Task task) {
        if (task != null) {
            NexageLog.i("IntFetcher", "handleTimeout:" + task.adTag.name + ":" + task.timestamp % 10000L);
        }
        else {
            NexageLog.i("IntFetcher", "handleTimeout: null task");
        }
        if (this._currentTask == null) {
            NexageLog.w("IntFetcher", "current task should not be null!");
            return;
        }
        this._currentTask.interstitialProvider.cancel();
        this._currentTask.setResponseTime(7500L);
        ReportManager.addAdNetRequest(this._service, this._currentTask, -2);
        if (this.isTaskListEmpty()) {
            NexageLog.i("IntFetcher", "taskList is null/empty");
            this._adUpdateListener.onFailedToReceiveAd(this._currentTask);
            ReportManager.requestCompleted(this._service);
            this._currentTask = null;
            this.stopFetchThread();
            return;
        }
        NexageLog.i("IntFetcher", "taskList size " + this._taskList.size() + ", trying next task");
        synchronized (this._fetchThread) {
            this._fetchThread.notify();
        }
    }
    
    private boolean isTaskListEmpty() {
        synchronized (this) {
            return this._taskList == null || this._taskList.size() == 0;
        }
    }
    
    private void startTimeoutTimer(final InterstitialProvider interstitialProvider) {
        this.cancelTimeout();
        NexageLog.i("IntFetcher", "startTimeoutTimer");
        (this._timeoutTimer = new Timer()).schedule(new TimerTask() {
            @Override
            public void run() {
                final Message message = new Message();
                message.what = 100004;
                InterstitialFetcher.this._handler.sendMessage(message);
            }
        }, 7500L);
    }
    
    private void stopFetchThread() {
        this._taskList = null;
        synchronized (this._fetchThread) {
            this._fetchThread.notify();
        }
    }
    
    public void display(final Activity appActivity) {
        NexageLog.i("IntFetcher", "calling InterstitialFetcher.display");
        if (this._currentTask != null && !this._currentTask.isReceived) {
            NexageLog.i("IntFetcher", "ignored: current ad isn't received yet");
        }
        else if (this._currentTask != null && !this._currentTask.displayed) {
            this._currentTask.appActivity = appActivity;
            this._currentTask.interstitialProvider.display(this._currentTask);
            SessionDepthManager.incrementSessionDepth();
            if (this._adUpdateListener != null) {
                this._adUpdateListener.onDisplayScreen();
            }
        }
        else {
            if (this._currentTask == null) {
                NexageLog.i("IntFetcher", "current ad null");
                return;
            }
            NexageLog.i("IntFetcher", "current ad already displayed");
        }
    }
    
    public void getAd() {
        NexageLog.i("IntFetcher", "calling InterstitialFetcher.getAd");
        if (!this.isTaskListEmpty()) {
            NexageLog.i("IntFetcher", "fetch in progress, return");
            return;
        }
        if (this._currentTask != null) {
            this._interstitialProviderFactory.getInterstitialProvider(this._currentTask.adTag.networkId, this._context, this._currentTask.adTag.useSDK).cancel();
        }
        if (AdMaxPosition.isOffline(this._context)) {
            NexageLog.i("IntFetcher", "device offline, skip interstitial fetch");
            return;
        }
        this._taskList = null;
        this._currentTask = null;
        new Thread() {
            @Override
            public void run() {
                int n = 0;
                while (true) {
                    InterstitialFetcher.this._taskList = RuleMgr.getTaskListByPosition(InterstitialFetcher.this._position);
                    ++n;
                    if (!InterstitialFetcher.this.isTaskListEmpty() || n >= 5) {
                        break;
                    }
                    try {
                        Thread.sleep(2000L);
                    }
                    catch (InterruptedException ex) {}
                }
                if (InterstitialFetcher.this.isTaskListEmpty()) {
                    NexageLog.w("IntFetcher", "failed to find rules for position " + InterstitialFetcher.this._position);
                    InterstitialFetcher.this._adUpdateListener.onFailedToReceiveAd(null);
                    return;
                }
                InterstitialFetcher.this._service = ReportManager.getService(InterstitialFetcher.this._position);
                InterstitialFetcher.this._fetchThread = new InterstitialFetcher$FetchThread(InterstitialFetcher.this, null);
                NexageLog.i("IntFetcher", "about to start _fetchThread");
                InterstitialFetcher.this._fetchThread.start();
            }
        }.start();
    }
    
    public void setAdUpdateListener(final AdUpdateListener adUpdateListener) {
        this._adUpdateListener = adUpdateListener;
    }
}
