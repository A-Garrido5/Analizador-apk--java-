// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.android.v2;

import com.nexage.android.rules.RuleMgr;
import com.nexage.android.rules.AdMaxPosition;
import com.nexage.android.internal.SessionDepthManager;
import android.app.Activity;
import android.os.Message;
import java.util.TimerTask;
import com.nexage.android.internal.NexageAdFetcher;
import java.util.Timer;
import java.util.List;
import com.nexage.android.reports2.AdService2;
import com.nexage.android.v2.provider.interstitial.InterstitialProvider$Factory;
import android.os.Handler;
import android.content.Context;
import com.nexage.android.v2.provider.interstitial.InterstitialProvider;
import com.nexage.android.reports2.ReportManager;
import com.nexage.android.internal.NexageLog;

class InterstitialFetcher$FetchThread extends Thread
{
    final /* synthetic */ InterstitialFetcher this$0;
    
    private InterstitialFetcher$FetchThread(final InterstitialFetcher this$0) {
        this.this$0 = this$0;
        this.setName("FetchThread");
    }
    
    @Override
    public void run() {
        int n = 0;
        NexageLog.i("IntFetcher", "starting fetch thread");
        while (!this.this$0.isTaskListEmpty()) {
            final StringBuilder sb = new StringBuilder("entering while loop ");
            final int n2 = n + 1;
            NexageLog.i("IntFetcher", sb.append(n).toString());
            Label_0473: {
                try {
                    this.this$0._currentTask = this.this$0._taskList.remove(0);
                    this.this$0._currentTask.adService = this.this$0._service;
                    this.this$0._currentTask.timestamp = ReportManager.getTimestamp();
                    this.this$0._currentTask.handler = this.this$0._handler;
                    this.this$0._currentTask.positionName = this.this$0._position;
                    if (this.this$0._currentTask.adTag == null) {
                        NexageLog.w("task adTag is null, moving to next task");
                        n = n2;
                        continue;
                    }
                    NexageLog.i("IntFetcher", "currentTask " + this.this$0._currentTask.adTag.name + " " + this.this$0._currentTask.timestamp % 10000L);
                    final InterstitialProvider interstitialProvider = this.this$0._interstitialProviderFactory.getInterstitialProvider(this.this$0._currentTask.adTag.networkId, this.this$0._context, this.this$0._currentTask.adTag.useSDK);
                    if (interstitialProvider == null) {
                        if (this.this$0.isTaskListEmpty()) {
                            NexageLog.i("IntFetcher", "taskList is null/empty");
                            this.this$0._adUpdateListener.onFailedToReceiveAd(this.this$0._currentTask);
                            this.this$0._currentTask = null;
                            this.this$0.stopFetchThread();
                        }
                        break Label_0473;
                    }
                    else {
                        NexageLog.i("IntFetcher", "interstitialProvider is class " + interstitialProvider.getClass().getSimpleName());
                        this.this$0._currentTask.interstitialProvider = interstitialProvider;
                        final Thread thread = new Thread(new Runnable() {
                            @Override
                            public void run() {
                                interstitialProvider.getAd(InterstitialFetcher$FetchThread.this.this$0._context, InterstitialFetcher$FetchThread.this.this$0._currentTask);
                            }
                        });
                        thread.setName("ProviderThread");
                        synchronized (this) {
                            this.this$0.startTimeoutTimer(interstitialProvider);
                            thread.start();
                            NexageLog.i("IntFetcher", "calling wait...");
                            this.wait();
                            NexageLog.i("IntFetcher", "waking up; task list is empty: " + this.this$0.isTaskListEmpty());
                            // monitorexit(this)
                            n = n2;
                        }
                    }
                }
                catch (InterruptedException ex) {
                    NexageLog.i("IntFetcher", "got InterruptedException");
                    n = n2;
                    continue;
                }
                break;
            }
            n = n2;
        }
        NexageLog.i("IntFetcher", "ending fetch thread");
    }
}
