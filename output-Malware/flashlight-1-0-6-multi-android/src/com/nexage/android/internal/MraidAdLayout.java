// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.android.internal;

import com.nexage.android.NexageAdView;
import android.view.ViewGroup$LayoutParams;
import android.widget.RelativeLayout$LayoutParams;
import android.os.Handler;
import com.nexage.android.NexageAdViewListener;
import com.nexage.android.mraid.MraidLog;
import com.nexage.android.mraid.MraidView$MraidViewListener;
import com.nexage.android.NexageAdManager;
import java.util.Iterator;
import android.view.View;
import com.nexage.android.NexageActivity;
import com.nexage.android.v2.Task;
import android.content.Context;
import com.nexage.android.mraid.MraidView;
import java.util.ArrayList;
import android.widget.RelativeLayout;

public class MraidAdLayout extends RelativeLayout
{
    private static final String TAG = "MraidAdLayout";
    private static boolean block;
    private static ArrayList s_List;
    private static volatile int s_Sequence;
    private MraidAdLayout$AdView adView;
    private boolean isReady;
    private boolean m_Closing;
    private volatile RelativeLayout m_Expanded;
    private boolean m_Expanding;
    private final AdLayout m_Layout;
    private MraidAd mraidAd;
    private MraidView mraidView;
    private short originalBottom;
    private short originalLeft;
    private short originalRight;
    private short originalTop;
    
    static {
        MraidAdLayout.s_Sequence = 0;
        MraidAdLayout.s_List = new ArrayList();
    }
    
    public MraidAdLayout(final Context context, final Task task) {
        super(context);
        this.originalLeft = -1;
        this.originalTop = -1;
        this.originalRight = -1;
        this.originalBottom = -1;
        this.m_Expanded = null;
        this.m_Layout = new MraidAdLayout$URLAdLayout(this, null);
    }
    
    public MraidAdLayout(final MraidAd mraidAd, final Context context, final boolean b) {
        super(context);
        this.originalLeft = -1;
        this.originalTop = -1;
        this.originalRight = -1;
        this.originalBottom = -1;
        this.m_Expanded = null;
        this.m_Layout = new MraidAdLayout$URLAdLayout(this, null);
        this.mraidAd = mraidAd;
        if (!mraidAd.isInterstitial()) {
            this.initWithMraidView(mraidAd, context, b);
        }
    }
    
    public static View getWebView(final int n, final NexageActivity nexageActivity) {
        while (true) {
            while (true) {
                Label_0082: {
                    synchronized (MraidAdLayout.class) {
                        MraidAdLayout$AdView mraidAdLayout$AdView = null;
                        Block_4: {
                            for (final Object o : MraidAdLayout.s_List) {
                                mraidAdLayout$AdView = (MraidAdLayout$AdView)((RelativeLayout)o).getChildAt(0);
                                if (n == mraidAdLayout$AdView.m_ID) {
                                    break Block_4;
                                }
                            }
                            break Label_0082;
                        }
                        mraidAdLayout$AdView.m_NexageActivity = nexageActivity;
                        final Object o;
                        if (o != null) {
                            MraidAdLayout.s_List.remove(o);
                        }
                        return (View)o;
                    }
                }
                Object o = null;
                continue;
            }
        }
    }
    
    private void initWithMraidView(final MraidAd mraidAd, final Context context, final boolean b) {
        this.mraidView = new MraidView(context, b, NexageAdManager.isAutoActionAllowed(mraidAd.service.position));
        MraidAdLayout.block = false;
        this.mraidView.loadHtmlData(this.mraidAd.getHtml());
        this.setLayoutParams((View)this.mraidView, mraidAd.getWidth(), mraidAd.getHeight());
        this.mraidView.setListener(new MraidView$MraidViewListener() {
            @Override
            public void handleRequest(final String s) {
                MraidLog.d("MraidAdLayout", "MRAID handleRequest " + s);
            }
            
            @Override
            public void onBillableEvent() {
                MraidLog.d("MraidAdLayout", "MRAID onBillableEvent");
                MraidAdLayout.this.mraidAd.addClickToReport();
            }
            
            @Override
            public void onClick() {
                MraidLog.d("MraidAdLayout", "MRAID onClick");
                if (!MraidAdLayout.this.isReady) {
                    MraidLog.i("MraidAdLayout", MraidAdLayout.this.mraidAd.getPosition() + " adding click to report");
                    MraidAdLayout.this.mraidAd.addClickToReport();
                }
            }
            
            @Override
            public boolean onEventFired() {
                MraidLog.d("MraidAdLayout", "MRAID onEventFired");
                return false;
            }
            
            @Override
            public boolean onExpand() {
                MraidLog.d("MraidAdLayout", "MRAID onExpand");
                MraidAdLayout.block = true;
                final Handler handler = NexageGlobalHandler.getHandler();
                if (handler != null) {
                    handler.sendEmptyMessage(1);
                }
                if (MraidAdLayout.this.mraidAd != null) {
                    final NexageAdViewListener nexageListener = MraidAdLayout.this.mraidAd.getNexageListener();
                    if (nexageListener != null) {
                        MraidAdLayout.this.post((Runnable)new Runnable() {
                            @Override
                            public void run() {
                                nexageListener.onPresentScreen(MraidAdLayout.this.mraidAd.getNexageAdView());
                            }
                        });
                    }
                }
                return false;
            }
            
            @Override
            public boolean onExpandClose() {
                MraidLog.d("MraidAdLayout", "MRAID onExpandClose");
                MraidAdLayout.block = false;
                final Handler handler = NexageGlobalHandler.getHandler();
                if (handler != null) {
                    handler.sendEmptyMessage(2);
                }
                if (MraidAdLayout.this.mraidAd != null) {
                    final NexageAdViewListener nexageListener = MraidAdLayout.this.mraidAd.getNexageListener();
                    if (nexageListener != null) {
                        MraidAdLayout.this.post((Runnable)new Runnable() {
                            @Override
                            public void run() {
                                nexageListener.onDismissScreen(MraidAdLayout.this.mraidAd.getNexageAdView());
                            }
                        });
                    }
                }
                return false;
            }
            
            @Override
            public void onFinishedLoading() {
                MraidLog.d("MraidAdLayout", "MRAID onFinishedLoading");
                final NexageAdSwitcher switcher = MraidAdLayout.this.mraidAd.getSwitcher();
                if (switcher != null) {
                    switcher.addAdView((View)MraidAdLayout.this);
                }
            }
            
            @Override
            public void onHide() {
                MraidLog.d("MraidAdLayout", "MRAID onHide");
                if (MraidAdLayout.this.mraidAd != null) {
                    final NexageAdViewListener nexageListener = MraidAdLayout.this.mraidAd.getNexageListener();
                    if (nexageListener != null) {
                        MraidAdLayout.this.post((Runnable)new Runnable() {
                            @Override
                            public void run() {
                                nexageListener.onHide(MraidAdLayout.this.mraidAd.getNexageAdView());
                            }
                        });
                    }
                }
            }
            
            @Override
            public boolean onReady() {
                MraidLog.d("MraidAdLayout", "MRAID onReady");
                MraidAdLayout.this.isReady = true;
                return false;
            }
            
            @Override
            public boolean onResize() {
                MraidLog.d("MraidAdLayout", "MRAID onResize");
                MraidAdLayout.block = true;
                final Handler handler = NexageGlobalHandler.getHandler();
                if (handler != null) {
                    handler.sendEmptyMessage(1);
                }
                final NexageAdViewListener nexageListener = MraidAdLayout.this.mraidAd.getNexageListener();
                if (nexageListener != null) {
                    MraidAdLayout.this.post((Runnable)new Runnable() {
                        @Override
                        public void run() {
                            nexageListener.onResize(MraidAdLayout.this.mraidAd.getNexageAdView(), MraidAdLayout.this.mraidView.getResizeWidth(), MraidAdLayout.this.mraidView.getResizeHeight());
                        }
                    });
                }
                return false;
            }
            
            @Override
            public boolean onResizeClose() {
                MraidLog.d("MraidAdLayout", "MRAID onResizeClose");
                MraidAdLayout.block = false;
                final Handler handler = NexageGlobalHandler.getHandler();
                if (handler != null) {
                    handler.sendEmptyMessage(2);
                }
                return false;
            }
        });
        this.addView((View)this.mraidView);
    }
    
    private void restoreAdView() {
        if (this.m_Expanded == null) {
            return;
        }
        this.m_Expanded.removeView((View)this.adView);
        this.m_Expanded = null;
        this.restoreSize((View)this.adView);
        this.addView((View)this.adView);
        this.forceLayout();
        this.mraidAd.mm4rmRestored();
        this.m_Closing = false;
    }
    
    private void restoreSize(final View view) {
        view.layout((int)this.originalLeft, (int)this.originalTop, (int)this.originalRight, (int)this.originalBottom);
        this.setLayoutParams(view, this.originalRight - this.originalLeft, this.originalBottom - this.originalTop);
    }
    
    private void setLayoutParams(final View view, final int n, final int n2) {
        final RelativeLayout$LayoutParams layoutParams = new RelativeLayout$LayoutParams(n, n2);
        layoutParams.setMargins(0, 0, 0, 0);
        view.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
    }
    
    public void addDisplayToReport() {
        if (this.mraidAd != null) {
            this.mraidAd.addDisplayToReport();
        }
    }
    
    public void clearMraidView() {
        if (this.mraidView != null) {
            this.mraidView.clearView();
        }
    }
    
    AdLayout getLayout() {
        return this.m_Layout;
    }
    
    public MraidView getMraidView() {
        return this.mraidView;
    }
    
    public NexageAdView getNexageAdView() {
        return this.mraidAd.getNexageAdView();
    }
    
    public void initForInterstitial(final Context context) {
        this.initWithMraidView(this.mraidAd, context, true);
    }
    
    public boolean isBlock() {
        return MraidAdLayout.block;
    }
    
    public boolean isExpanded() {
        return this.mraidView.isExpanded();
    }
    
    public void setBackgroundColor(final int n) {
        super.setBackgroundColor(n);
        this.mraidView.setBackgroundColor(n);
    }
    
    public void setBackgroundResource(final int n) {
        super.setBackgroundResource(n);
        this.mraidView.setBackgroundResource(n);
    }
    
    public void setVisibility(final int n) {
        super.setVisibility(n);
        this.mraidView.setVisibility(n);
    }
}
