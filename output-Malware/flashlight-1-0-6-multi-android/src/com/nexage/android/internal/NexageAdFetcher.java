// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.android.internal;

import android.app.Activity;
import com.nexage.android.reports2.AdService2;
import com.nexage.android.rules.AdTag;
import java.util.Iterator;
import java.util.Collection;
import com.nexage.android.rules.RuleMgr;
import java.util.Vector;
import java.util.HashMap;
import java.util.regex.Pattern;

public class NexageAdFetcher
{
    private static final String TAG = "NAF";
    private static String adHtml;
    private static Pattern s_AdPattern;
    private static HashMap s_FetcherMap;
    private static long tagResponseTime;
    private NexageAdFetcher$FetchThread m_FetchThread;
    private final Vector m_RequestQ;
    private boolean m_Suspended;
    private final String position;
    
    static {
        NexageAdFetcher.s_AdPattern = null;
        NexageAdFetcher.s_FetcherMap = new HashMap();
    }
    
    public NexageAdFetcher(final String position) {
        this.m_RequestQ = new Vector();
        this.m_FetchThread = null;
        this.m_Suspended = false;
        this.position = position;
    }
    
    public static void checkSuspend() {
        NexageLog.d("NAF", "entering checkSuspend");
        synchronized (NexageAdFetcher.s_FetcherMap) {
            final Collection<NexageAdFetcher> values = (Collection<NexageAdFetcher>)NexageAdFetcher.s_FetcherMap.values();
            final int size = values.size();
            NexageLog.d("NAF", "fetcher map contains " + size + " object(s)");
            if (size == 0) {
                return;
            }
            for (final NexageAdFetcher nexageAdFetcher : values) {
                NexageLog.d("NAF", "checkSuspend pos:" + nexageAdFetcher.position + " suspended:" + nexageAdFetcher.m_Suspended);
                if (!nexageAdFetcher.m_Suspended) {
                    return;
                }
            }
        }
        while (true) {
            try {
                NexageLog.d("NAF", "Suspend download for " + RuleMgr.getTimeToLive() + " ms");
                NexageAdFetcher.s_FetcherMap.wait(RuleMgr.getTimeToLive());
                NexageAdFetcher.s_FetcherMap.wait(250L);
                NexageLog.d("NAF", "Resume download");
            }
            // monitorexit(hashMap)
            catch (InterruptedException ex) {
                continue;
            }
            break;
        }
    }
    
    private static String cleanHtml(final String s, final AdTag adTag) {
        final String trim = s.replaceAll("<!--(.|\n)*?-->", "").trim();
        final String adValidateRegex = adTag.adValidateRegex;
        if (adValidateRegex == null || adValidateRegex.length() <= 0 || !Pattern.compile(adValidateRegex).matcher(trim).find()) {
            if (adTag.networkId.equals("ADTECH")) {
                return trim;
            }
            if (NexageAdFetcher.s_AdPattern == null) {
                NexageAdFetcher.s_AdPattern = Pattern.compile("(?i)<((a|ref)\\s+href|script|embed|object|link|img|http://)");
            }
            if (NexageAdFetcher.s_AdPattern.matcher(trim).find()) {
                return trim;
            }
        }
        return null;
    }
    
    private static int downloadAdHtml(final String p0, final AdTag p1, final int p2, final String p3) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aconst_null    
        //     1: astore          4
        //     3: iconst_m1      
        //     4: istore          5
        //     6: aload_1        
        //     7: getfield        com/nexage/android/rules/AdTag.adPostParams:Ljava/lang/String;
        //    10: invokevirtual   java/lang/String.length:()I
        //    13: iconst_1       
        //    14: if_icmple       420
        //    17: iconst_1       
        //    18: istore          24
        //    20: aload_1        
        //    21: getfield        com/nexage/android/rules/AdTag.adRequestUrl:Ljava/lang/String;
        //    24: astore          25
        //    26: aload_0        
        //    27: new             Ljava/lang/StringBuilder;
        //    30: dup            
        //    31: ldc             "getAd: "
        //    33: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    36: aload           25
        //    38: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    41: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    44: invokestatic    com/nexage/android/internal/NexageLog.v:(Ljava/lang/String;Ljava/lang/String;)V
        //    47: new             Ljava/util/HashMap;
        //    50: dup            
        //    51: invokespecial   java/util/HashMap.<init>:()V
        //    54: astore          26
        //    56: aload           26
        //    58: ldc             "RID"
        //    60: aload_3        
        //    61: invokevirtual   java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        //    64: pop            
        //    65: new             Ljava/net/URL;
        //    68: dup            
        //    69: aload           25
        //    71: aload           26
        //    73: invokestatic    com/nexage/android/v2/provider/MacroSub.macroSub:(Ljava/lang/String;Ljava/util/HashMap;)Ljava/lang/String;
        //    76: invokespecial   java/net/URL.<init>:(Ljava/lang/String;)V
        //    79: astore          28
        //    81: iconst_1       
        //    82: invokestatic    java/net/HttpURLConnection.setFollowRedirects:(Z)V
        //    85: aload           28
        //    87: invokevirtual   java/net/URL.openConnection:()Ljava/net/URLConnection;
        //    90: checkcast       Ljava/net/HttpURLConnection;
        //    93: astore          29
        //    95: aload           29
        //    97: iload_2        
        //    98: invokevirtual   java/net/HttpURLConnection.setConnectTimeout:(I)V
        //   101: aload           29
        //   103: iload_2        
        //   104: invokevirtual   java/net/HttpURLConnection.setReadTimeout:(I)V
        //   107: aload           29
        //   109: iconst_1       
        //   110: invokevirtual   java/net/HttpURLConnection.setDoInput:(Z)V
        //   113: aload           29
        //   115: ldc             "Connection"
        //   117: ldc             "close"
        //   119: invokevirtual   java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
        //   122: getstatic       com/nexage/android/internal/NexageContext.s_UserAgent:Ljava/lang/String;
        //   125: ifnull          148
        //   128: getstatic       com/nexage/android/internal/NexageContext.s_UserAgent:Ljava/lang/String;
        //   131: invokevirtual   java/lang/String.length:()I
        //   134: ifle            148
        //   137: aload           29
        //   139: ldc_w           "User-Agent"
        //   142: getstatic       com/nexage/android/internal/NexageContext.s_UserAgent:Ljava/lang/String;
        //   145: invokevirtual   java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
        //   148: invokestatic    com/nexage/android/reports2/ReportManager.getTimestamp:()J
        //   151: lstore          33
        //   153: iload           24
        //   155: ifeq            426
        //   158: aload           29
        //   160: ldc_w           "POST"
        //   163: invokevirtual   java/net/HttpURLConnection.setRequestMethod:(Ljava/lang/String;)V
        //   166: aload           29
        //   168: ldc_w           "Content-Type"
        //   171: ldc_w           "application/x-www-form-urlencoded; charset=utf-8"
        //   174: invokevirtual   java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
        //   177: aload           29
        //   179: iconst_1       
        //   180: invokevirtual   java/net/HttpURLConnection.setDoOutput:(Z)V
        //   183: aload           29
        //   185: invokevirtual   java/net/HttpURLConnection.getOutputStream:()Ljava/io/OutputStream;
        //   188: aload_1        
        //   189: getfield        com/nexage/android/rules/AdTag.adPostParams:Ljava/lang/String;
        //   192: ldc_w           "UTF-8"
        //   195: invokevirtual   java/lang/String.getBytes:(Ljava/lang/String;)[B
        //   198: invokevirtual   java/io/OutputStream.write:([B)V
        //   201: aload_0        
        //   202: new             Ljava/lang/StringBuilder;
        //   205: dup            
        //   206: ldc_w           "postParams: "
        //   209: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   212: aload_1        
        //   213: getfield        com/nexage/android/rules/AdTag.adPostParams:Ljava/lang/String;
        //   216: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   219: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   222: invokestatic    com/nexage/android/internal/NexageLog.v:(Ljava/lang/String;Ljava/lang/String;)V
        //   225: aload           29
        //   227: invokevirtual   java/net/HttpURLConnection.getResponseCode:()I
        //   230: istore          35
        //   232: invokestatic    com/nexage/android/reports2/ReportManager.getTimestamp:()J
        //   235: lload           33
        //   237: lsub           
        //   238: putstatic       com/nexage/android/internal/NexageAdFetcher.tagResponseTime:J
        //   241: iload           35
        //   243: sipush          200
        //   246: if_icmpeq       257
        //   249: iload           35
        //   251: sipush          201
        //   254: if_icmpne       614
        //   257: aload           29
        //   259: invokevirtual   java/net/HttpURLConnection.getInputStream:()Ljava/io/InputStream;
        //   262: astore          36
        //   264: aload           36
        //   266: astore          11
        //   268: new             Ljava/lang/StringBuilder;
        //   271: dup            
        //   272: invokespecial   java/lang/StringBuilder.<init>:()V
        //   275: astore          37
        //   277: new             Ljava/io/BufferedReader;
        //   280: dup            
        //   281: new             Ljava/io/InputStreamReader;
        //   284: dup            
        //   285: aload           11
        //   287: invokespecial   java/io/InputStreamReader.<init>:(Ljava/io/InputStream;)V
        //   290: sipush          4096
        //   293: invokespecial   java/io/BufferedReader.<init>:(Ljava/io/Reader;I)V
        //   296: astore          38
        //   298: aload           38
        //   300: invokevirtual   java/io/BufferedReader.readLine:()Ljava/lang/String;
        //   303: astore          43
        //   305: aload           43
        //   307: ifnull          456
        //   310: aload           37
        //   312: aload           43
        //   314: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   317: pop            
        //   318: aload           37
        //   320: ldc_w           "line.separator"
        //   323: invokestatic    java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        //   326: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   329: pop            
        //   330: goto            298
        //   333: astore          41
        //   335: aload           11
        //   337: astore          8
        //   339: aload           38
        //   341: astore          42
        //   343: aload           29
        //   345: astore          9
        //   347: aload           41
        //   349: astore          6
        //   351: aload           42
        //   353: astore          7
        //   355: aload_1        
        //   356: invokevirtual   java/lang/Object.toString:()Ljava/lang/String;
        //   359: new             Ljava/lang/StringBuilder;
        //   362: dup            
        //   363: ldc_w           "downloadAdHtml failed, "
        //   366: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   369: aload           6
        //   371: invokevirtual   java/net/SocketTimeoutException.getLocalizedMessage:()Ljava/lang/String;
        //   374: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   377: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   380: invokestatic    com/nexage/android/internal/NexageLog.w:(Ljava/lang/String;Ljava/lang/String;)V
        //   383: bipush          -2
        //   385: istore          15
        //   387: aload           8
        //   389: ifnull          397
        //   392: aload           8
        //   394: invokevirtual   java/io/InputStream.close:()V
        //   397: aload           7
        //   399: ifnull          407
        //   402: aload           7
        //   404: invokevirtual   java/io/BufferedReader.close:()V
        //   407: aload           9
        //   409: ifnull          417
        //   412: aload           9
        //   414: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   417: iload           15
        //   419: ireturn        
        //   420: iconst_0       
        //   421: istore          24
        //   423: goto            20
        //   426: aload           29
        //   428: ldc_w           "GET"
        //   431: invokevirtual   java/net/HttpURLConnection.setRequestMethod:(Ljava/lang/String;)V
        //   434: goto            225
        //   437: astore          32
        //   439: aload           29
        //   441: astore          9
        //   443: aload           32
        //   445: astore          6
        //   447: aconst_null    
        //   448: astore          7
        //   450: aconst_null    
        //   451: astore          8
        //   453: goto            355
        //   456: aload           37
        //   458: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   461: aload_1        
        //   462: invokestatic    com/nexage/android/internal/NexageAdFetcher.cleanHtml:(Ljava/lang/String;Lcom/nexage/android/rules/AdTag;)Ljava/lang/String;
        //   465: astore          46
        //   467: aload           46
        //   469: ifnull          523
        //   472: aload           46
        //   474: invokevirtual   java/lang/String.length:()I
        //   477: bipush          32
        //   479: if_icmple       523
        //   482: aload           46
        //   484: putstatic       com/nexage/android/internal/NexageAdFetcher.adHtml:Ljava/lang/String;
        //   487: iconst_1       
        //   488: istore          5
        //   490: aload           11
        //   492: ifnull          500
        //   495: aload           11
        //   497: invokevirtual   java/io/InputStream.close:()V
        //   500: aload           38
        //   502: ifnull          510
        //   505: aload           38
        //   507: invokevirtual   java/io/BufferedReader.close:()V
        //   510: aload           29
        //   512: ifnull          884
        //   515: aload           29
        //   517: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   520: iload           5
        //   522: ireturn        
        //   523: aconst_null    
        //   524: putstatic       com/nexage/android/internal/NexageAdFetcher.adHtml:Ljava/lang/String;
        //   527: goto            490
        //   530: astore          40
        //   532: aload           38
        //   534: astore          4
        //   536: aload           29
        //   538: astore          20
        //   540: aload           40
        //   542: astore          19
        //   544: aload_1        
        //   545: invokevirtual   java/lang/Object.toString:()Ljava/lang/String;
        //   548: new             Ljava/lang/StringBuilder;
        //   551: dup            
        //   552: ldc_w           "downloadAdHtml failed, "
        //   555: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   558: aload           19
        //   560: invokevirtual   java/lang/Exception.getLocalizedMessage:()Ljava/lang/String;
        //   563: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   566: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   569: invokestatic    com/nexage/android/internal/NexageLog.w:(Ljava/lang/String;Ljava/lang/String;)V
        //   572: bipush          -3
        //   574: istore          15
        //   576: aload           11
        //   578: ifnull          586
        //   581: aload           11
        //   583: invokevirtual   java/io/InputStream.close:()V
        //   586: aload           4
        //   588: ifnull          596
        //   591: aload           4
        //   593: invokevirtual   java/io/BufferedReader.close:()V
        //   596: aload           20
        //   598: ifnull          417
        //   601: aload           20
        //   603: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   606: iload           15
        //   608: ireturn        
        //   609: astore          21
        //   611: iload           15
        //   613: ireturn        
        //   614: ldc             "NAF"
        //   616: ldc_w           "getAd got error http status: -1"
        //   619: invokestatic    com/nexage/android/internal/NexageLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   622: aconst_null    
        //   623: astore          38
        //   625: aconst_null    
        //   626: astore          11
        //   628: goto            490
        //   631: astore          47
        //   633: iload           5
        //   635: ireturn        
        //   636: astore          10
        //   638: aconst_null    
        //   639: astore          11
        //   641: aconst_null    
        //   642: astore          9
        //   644: aload           11
        //   646: ifnull          654
        //   649: aload           11
        //   651: invokevirtual   java/io/InputStream.close:()V
        //   654: aload           4
        //   656: ifnull          664
        //   659: aload           4
        //   661: invokevirtual   java/io/BufferedReader.close:()V
        //   664: aload           9
        //   666: ifnull          674
        //   669: aload           9
        //   671: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   674: aload           10
        //   676: athrow         
        //   677: astore          49
        //   679: goto            500
        //   682: astore          48
        //   684: goto            510
        //   687: astore          18
        //   689: goto            397
        //   692: astore          17
        //   694: goto            407
        //   697: astore          16
        //   699: iload           15
        //   701: ireturn        
        //   702: astore          23
        //   704: goto            586
        //   707: astore          22
        //   709: goto            596
        //   712: astore          14
        //   714: goto            654
        //   717: astore          13
        //   719: goto            664
        //   722: astore          12
        //   724: goto            674
        //   727: astore          31
        //   729: aload           29
        //   731: astore          9
        //   733: aload           31
        //   735: astore          10
        //   737: aconst_null    
        //   738: astore          4
        //   740: aconst_null    
        //   741: astore          11
        //   743: goto            644
        //   746: astore          52
        //   748: aload           29
        //   750: astore          9
        //   752: aload           52
        //   754: astore          10
        //   756: aconst_null    
        //   757: astore          4
        //   759: goto            644
        //   762: astore          39
        //   764: aload           38
        //   766: astore          4
        //   768: aload           29
        //   770: astore          9
        //   772: aload           39
        //   774: astore          10
        //   776: goto            644
        //   779: astore          10
        //   781: aload           8
        //   783: astore          11
        //   785: aload           7
        //   787: astore          4
        //   789: goto            644
        //   792: astore          10
        //   794: aload           20
        //   796: astore          9
        //   798: goto            644
        //   801: astore          19
        //   803: aconst_null    
        //   804: astore          20
        //   806: aconst_null    
        //   807: astore          4
        //   809: aconst_null    
        //   810: astore          11
        //   812: goto            544
        //   815: astore          30
        //   817: aload           29
        //   819: astore          20
        //   821: aload           30
        //   823: astore          19
        //   825: aconst_null    
        //   826: astore          4
        //   828: aconst_null    
        //   829: astore          11
        //   831: goto            544
        //   834: astore          51
        //   836: aload           29
        //   838: astore          20
        //   840: aload           51
        //   842: astore          19
        //   844: aconst_null    
        //   845: astore          4
        //   847: goto            544
        //   850: astore          6
        //   852: aconst_null    
        //   853: astore          7
        //   855: aconst_null    
        //   856: astore          8
        //   858: aconst_null    
        //   859: astore          9
        //   861: goto            355
        //   864: astore          50
        //   866: aload           29
        //   868: astore          9
        //   870: aload           50
        //   872: astore          6
        //   874: aload           11
        //   876: astore          8
        //   878: aconst_null    
        //   879: astore          7
        //   881: goto            355
        //   884: iload           5
        //   886: ireturn        
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                             
        //  -----  -----  -----  -----  ---------------------------------
        //  6      17     850    864    Ljava/net/SocketTimeoutException;
        //  6      17     801    815    Ljava/lang/Exception;
        //  6      17     636    644    Any
        //  20     95     850    864    Ljava/net/SocketTimeoutException;
        //  20     95     801    815    Ljava/lang/Exception;
        //  20     95     636    644    Any
        //  95     148    437    456    Ljava/net/SocketTimeoutException;
        //  95     148    815    834    Ljava/lang/Exception;
        //  95     148    727    746    Any
        //  148    153    437    456    Ljava/net/SocketTimeoutException;
        //  148    153    815    834    Ljava/lang/Exception;
        //  148    153    727    746    Any
        //  158    225    437    456    Ljava/net/SocketTimeoutException;
        //  158    225    815    834    Ljava/lang/Exception;
        //  158    225    727    746    Any
        //  225    241    437    456    Ljava/net/SocketTimeoutException;
        //  225    241    815    834    Ljava/lang/Exception;
        //  225    241    727    746    Any
        //  257    264    437    456    Ljava/net/SocketTimeoutException;
        //  257    264    815    834    Ljava/lang/Exception;
        //  257    264    727    746    Any
        //  268    298    864    884    Ljava/net/SocketTimeoutException;
        //  268    298    834    850    Ljava/lang/Exception;
        //  268    298    746    762    Any
        //  298    305    333    355    Ljava/net/SocketTimeoutException;
        //  298    305    530    544    Ljava/lang/Exception;
        //  298    305    762    779    Any
        //  310    330    333    355    Ljava/net/SocketTimeoutException;
        //  310    330    530    544    Ljava/lang/Exception;
        //  310    330    762    779    Any
        //  355    383    779    792    Any
        //  392    397    687    692    Ljava/lang/Exception;
        //  402    407    692    697    Ljava/lang/Exception;
        //  412    417    697    702    Ljava/lang/Exception;
        //  426    434    437    456    Ljava/net/SocketTimeoutException;
        //  426    434    815    834    Ljava/lang/Exception;
        //  426    434    727    746    Any
        //  456    467    333    355    Ljava/net/SocketTimeoutException;
        //  456    467    530    544    Ljava/lang/Exception;
        //  456    467    762    779    Any
        //  472    487    333    355    Ljava/net/SocketTimeoutException;
        //  472    487    530    544    Ljava/lang/Exception;
        //  472    487    762    779    Any
        //  495    500    677    682    Ljava/lang/Exception;
        //  505    510    682    687    Ljava/lang/Exception;
        //  515    520    631    636    Ljava/lang/Exception;
        //  523    527    333    355    Ljava/net/SocketTimeoutException;
        //  523    527    530    544    Ljava/lang/Exception;
        //  523    527    762    779    Any
        //  544    572    792    801    Any
        //  581    586    702    707    Ljava/lang/Exception;
        //  591    596    707    712    Ljava/lang/Exception;
        //  601    606    609    614    Ljava/lang/Exception;
        //  614    622    437    456    Ljava/net/SocketTimeoutException;
        //  614    622    815    834    Ljava/lang/Exception;
        //  614    622    727    746    Any
        //  649    654    712    717    Ljava/lang/Exception;
        //  659    664    717    722    Ljava/lang/Exception;
        //  669    674    722    727    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 401, Size: 401
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3551)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3417)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public static Ad getAd(final NexageContext p0, final AdService2 p1, final Activity p2, final String p3, final AdTag p4, final int p5) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: invokestatic    com/nexage/android/NexageAdManager.getIsMediation:()Z
        //     3: ifeq            17
        //     6: invokestatic    com/nexage/android/internal/NexageContext.getNetType:()I
        //     9: ifne            295
        //    12: sipush          2000
        //    15: istore          5
        //    17: invokestatic    java/util/UUID.randomUUID:()Ljava/util/UUID;
        //    20: invokevirtual   java/util/UUID.toString:()Ljava/lang/String;
        //    23: ldc_w           "-"
        //    26: ldc             ""
        //    28: invokevirtual   java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
        //    31: astore          6
        //    33: aload_1        
        //    34: aload           6
        //    36: invokevirtual   com/nexage/android/reports2/AdService2.setAGuid:(Ljava/lang/String;)V
        //    39: aload_3        
        //    40: aload           4
        //    42: iload           5
        //    44: aload           6
        //    46: invokestatic    com/nexage/android/internal/NexageAdFetcher.downloadAdHtml:(Ljava/lang/String;Lcom/nexage/android/rules/AdTag;ILjava/lang/String;)I
        //    49: istore          7
        //    51: iload           7
        //    53: tableswitch {
        //               -6: 372
        //               -5: 341
        //               -4: 310
        //          default: 80
        //        }
        //    80: aload           4
        //    82: getfield        com/nexage/android/rules/AdTag.networkId:Ljava/lang/String;
        //    85: ldc_w           "RTB"
        //    88: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //    91: ifeq            488
        //    94: ldc             "NAF"
        //    96: ldc_w           "parsing RTB JSON"
        //    99: invokestatic    com/nexage/android/internal/NexageLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   102: new             Lorg/json/JSONObject;
        //   105: dup            
        //   106: getstatic       com/nexage/android/internal/NexageAdFetcher.adHtml:Ljava/lang/String;
        //   109: invokespecial   org/json/JSONObject.<init>:(Ljava/lang/String;)V
        //   112: astore          16
        //   114: aload           16
        //   116: ldc_w           "ad"
        //   119: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   122: putstatic       com/nexage/android/internal/NexageAdFetcher.adHtml:Ljava/lang/String;
        //   125: aload           16
        //   127: ldc_w           "ad_pru"
        //   130: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   133: astore          17
        //   135: aload           17
        //   137: astore          9
        //   139: aload           16
        //   141: ldc_w           "ad_buyer"
        //   144: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   147: astore          19
        //   149: aload           19
        //   151: astore          8
        //   153: getstatic       com/nexage/android/internal/NexageAdFetcher.adHtml:Ljava/lang/String;
        //   156: invokestatic    com/nexage/android/internal/Ad.isMraid:(Ljava/lang/String;)Z
        //   159: ifeq            452
        //   162: new             Lcom/nexage/android/internal/MraidAd;
        //   165: dup            
        //   166: aload_0        
        //   167: aload_1        
        //   168: iconst_0       
        //   169: invokespecial   com/nexage/android/internal/MraidAd.<init>:(Lcom/nexage/android/internal/NexageContext;Lcom/nexage/android/reports2/AdService2;Z)V
        //   172: astore          10
        //   174: aload           10
        //   176: getstatic       com/nexage/android/internal/NexageAdFetcher.tagResponseTime:J
        //   179: invokevirtual   com/nexage/android/internal/Ad.setResponseTime:(J)V
        //   182: aload           9
        //   184: invokestatic    android/text/TextUtils.isEmpty:(Ljava/lang/CharSequence;)Z
        //   187: ifne            207
        //   190: aload           8
        //   192: invokestatic    android/text/TextUtils.isEmpty:(Ljava/lang/CharSequence;)Z
        //   195: ifne            207
        //   198: aload           10
        //   200: aload           9
        //   202: aload           8
        //   204: invokevirtual   com/nexage/android/internal/Ad.setRTB:(Ljava/lang/String;Ljava/lang/String;)V
        //   207: aload_0        
        //   208: ifnull          254
        //   211: aload_0        
        //   212: invokevirtual   com/nexage/android/internal/NexageContext.getView:()Landroid/view/View;
        //   215: ifnull          254
        //   218: aload_0        
        //   219: invokevirtual   com/nexage/android/internal/NexageContext.getView:()Landroid/view/View;
        //   222: instanceof      Lcom/nexage/android/NexageAdView;
        //   225: ifeq            254
        //   228: aload_0        
        //   229: invokevirtual   com/nexage/android/internal/NexageContext.getView:()Landroid/view/View;
        //   232: checkcast       Lcom/nexage/android/NexageAdView;
        //   235: astore          12
        //   237: aload           10
        //   239: aload           12
        //   241: invokevirtual   com/nexage/android/internal/Ad.setNexageAdView:(Lcom/nexage/android/NexageAdView;)V
        //   244: aload           10
        //   246: aload           12
        //   248: invokevirtual   com/nexage/android/NexageAdView.getListener:()Lcom/nexage/android/NexageAdViewListener;
        //   251: invokevirtual   com/nexage/android/internal/Ad.setNexageListener:(Lcom/nexage/android/NexageAdViewListener;)V
        //   254: aload           10
        //   256: aload           4
        //   258: invokevirtual   com/nexage/android/internal/Ad.setTag:(Lcom/nexage/android/rules/AdTag;)V
        //   261: iload           7
        //   263: iconst_1       
        //   264: if_icmpne       481
        //   267: aload           10
        //   269: getstatic       com/nexage/android/internal/NexageAdFetcher.adHtml:Ljava/lang/String;
        //   272: invokevirtual   com/nexage/android/internal/Ad.prepare:(Ljava/lang/String;)I
        //   275: istore          11
        //   277: aload           10
        //   279: iload           11
        //   281: aload           4
        //   283: invokevirtual   com/nexage/android/internal/Ad.addRequestToReport:(ILcom/nexage/android/rules/AdTag;)V
        //   286: iload           11
        //   288: iconst_1       
        //   289: if_icmpne       466
        //   292: aload           10
        //   294: areturn        
        //   295: invokestatic    com/nexage/android/internal/NexageContext.getNetType:()I
        //   298: iconst_1       
        //   299: if_icmpne       497
        //   302: sipush          4000
        //   305: istore          5
        //   307: goto            17
        //   310: ldc             "NAF"
        //   312: new             Ljava/lang/StringBuilder;
        //   315: dup            
        //   316: ldc_w           "("
        //   319: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   322: aload_3        
        //   323: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   326: ldc_w           ") Error: no ad -- empty"
        //   329: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   332: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   335: invokestatic    com/nexage/android/internal/NexageLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   338: goto            80
        //   341: ldc             "NAF"
        //   343: new             Ljava/lang/StringBuilder;
        //   346: dup            
        //   347: ldc_w           "("
        //   350: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   353: aload_3        
        //   354: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   357: ldc_w           ") Error: no ad -- timeout"
        //   360: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   363: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   366: invokestatic    com/nexage/android/internal/NexageLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   369: goto            80
        //   372: ldc             "NAF"
        //   374: new             Ljava/lang/StringBuilder;
        //   377: dup            
        //   378: ldc_w           "("
        //   381: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   384: aload_3        
        //   385: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   388: ldc_w           ") Error: no ad -- unknown"
        //   391: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   394: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   397: invokestatic    com/nexage/android/internal/NexageLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   400: goto            80
        //   403: astore          13
        //   405: aload           13
        //   407: astore          14
        //   409: aconst_null    
        //   410: astore          15
        //   412: ldc             "NAF"
        //   414: new             Ljava/lang/StringBuilder;
        //   417: dup            
        //   418: ldc_w           "failed to parse RTB JSON -- "
        //   421: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   424: aload           14
        //   426: invokevirtual   java/lang/Exception.getLocalizedMessage:()Ljava/lang/String;
        //   429: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   432: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   435: invokestatic    com/nexage/android/internal/NexageLog.w:(Ljava/lang/String;Ljava/lang/String;)V
        //   438: aconst_null    
        //   439: putstatic       com/nexage/android/internal/NexageAdFetcher.adHtml:Ljava/lang/String;
        //   442: aload           15
        //   444: astore          9
        //   446: aconst_null    
        //   447: astore          8
        //   449: goto            153
        //   452: new             Lcom/nexage/android/internal/OrmmaAd;
        //   455: dup            
        //   456: aload_0        
        //   457: aload_1        
        //   458: invokespecial   com/nexage/android/internal/OrmmaAd.<init>:(Lcom/nexage/android/internal/NexageContext;Lcom/nexage/android/reports2/AdService2;)V
        //   461: astore          10
        //   463: goto            174
        //   466: aconst_null    
        //   467: areturn        
        //   468: astore          18
        //   470: aload           9
        //   472: astore          15
        //   474: aload           18
        //   476: astore          14
        //   478: goto            412
        //   481: iload           7
        //   483: istore          11
        //   485: goto            277
        //   488: aconst_null    
        //   489: astore          8
        //   491: aconst_null    
        //   492: astore          9
        //   494: goto            153
        //   497: iconst_0       
        //   498: istore          5
        //   500: goto            17
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  94     135    403    412    Ljava/lang/Exception;
        //  139    149    468    481    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0153:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public static NexageAdFetcher getFetcher(final String s) {
        NexageAdFetcher nexageAdFetcher = NexageAdFetcher.s_FetcherMap.get(s);
        if (nexageAdFetcher == null) {
            nexageAdFetcher = new NexageAdFetcher(s);
            NexageAdFetcher.s_FetcherMap.put(s, nexageAdFetcher);
        }
        return nexageAdFetcher;
    }
    
    private void myWait() {
        synchronized (this) {
            try {
                NexageLog.d("NAF", "waiting...");
                this.wait();
                NexageLog.d("NAF", "wait over");
            }
            catch (InterruptedException ex) {}
        }
    }
    
    public static void nudgeAllFetchers() {
        synchronized (NexageAdFetcher.s_FetcherMap) {
            for (final NexageAdFetcher nexageAdFetcher : NexageAdFetcher.s_FetcherMap.values()) {
                synchronized (nexageAdFetcher) {
                    nexageAdFetcher.notifyAll();
                }
            }
        }
    }
    // monitorexit(hashMap)
    
    private boolean running() {
        boolean b = true;
        synchronized (this) {
            if (this.m_RequestQ.isEmpty()) {
                this.m_FetchThread = null;
                this.m_Suspended = true;
                b = false;
            }
            return b;
        }
    }
    
    public boolean add(final NexageContext nexageContext) {
    Label_0050_Outer:
        while (true) {
            while (true) {
            Label_0079:
                while (true) {
                    synchronized (this) {
                        NexageLog.d("NAF", "add enter");
                        if (this.m_RequestQ.isEmpty()) {
                            break;
                        }
                        if (nexageContext.interstitialLayout() != null) {
                            final int n = 1;
                            if (this.m_RequestQ.get(0).interstitialLayout() == null) {
                                break Label_0079;
                            }
                            final int n2 = 1;
                            if (n != n2) {
                                throw new IllegalStateException("Cannot use the same Nexage Mediation position for both Interstitial Ad and Banner Ad");
                            }
                            break;
                        }
                    }
                    final int n = 0;
                    continue Label_0050_Outer;
                }
                final int n2 = 0;
                continue;
            }
        }
        boolean b;
        if (nexageContext.interstitialLayout() != null && !this.m_RequestQ.isEmpty()) {
            b = true;
        }
        else {
            b = false;
        }
        boolean b2;
        if (b && this.m_RequestQ.size() > 1) {
            NexageLog.d("NAF", "add discarding duplicate request");
            b2 = false;
        }
        else {
            this.m_RequestQ.add(nexageContext);
            if (b) {
                NexageLog.d("NAF", "add delaying fetch");
                b2 = true;
            }
            else {
                if (this.m_FetchThread == null) {
                    (this.m_FetchThread = new NexageAdFetcher$FetchThread(this)).start();
                }
                else {
                    nexageContext.nudgeAdFetcher();
                }
                b2 = true;
            }
        }
        // monitorexit(this)
        return b2;
    }
    
    public void remove(final NexageContext nexageContext) {
        while (true) {
            synchronized (this) {
                NexageLog.d("NAF", "remove");
                this.m_RequestQ.remove(nexageContext);
                if (nexageContext.interstitialLayout() == null) {
                    synchronized (NexageAdFetcher.s_FetcherMap) {
                        NexageAdFetcher.s_FetcherMap.notify();
                        return;
                    }
                }
            }
            if (this.m_RequestQ.isEmpty()) {
                return;
            }
            final NexageContext nexageContext2 = this.m_RequestQ.get(0);
            if (nexageContext2 != null && nexageContext2.interstitialLayout() != null) {
                nexageContext2.nudgeAdFetcher();
            }
        }
    }
    
    public void wake() {
        synchronized (this) {
            NexageLog.d("NAF", "waking...");
            this.notify();
        }
    }
}
