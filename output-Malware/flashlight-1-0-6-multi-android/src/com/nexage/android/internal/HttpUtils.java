// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.android.internal;

import java.util.Iterator;
import java.util.Map;
import java.util.List;
import java.net.HttpURLConnection;
import android.webkit.CookieManager;
import java.util.Enumeration;
import java.util.Hashtable;
import android.location.Location;
import java.util.Calendar;
import android.text.format.DateFormat;
import com.nexage.android.NexageAdManager;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import android.webkit.CookieSyncManager;
import java.util.regex.Pattern;

public class HttpUtils
{
    private static final String ADMAX_SDK_DEVICE = "ANDROID";
    static final String TAG = "HttpUtils";
    public static Boolean s_HasKids;
    private static Pattern s_KeyPattern;
    private static CookieSyncManager s_SyncMgr;
    
    static {
        HttpUtils.s_KeyPattern = null;
        HttpUtils.s_HasKids = null;
        HttpUtils.s_SyncMgr = null;
    }
    
    public static void appendParams(final StringBuilder sb, final String s, final String s2) {
        if (s2 == null || s2.length() <= 0) {
            return;
        }
        try {
            sb.append("&").append(s).append("=").append(URLEncoder.encode(s2, "UTF-8"));
        }
        catch (UnsupportedEncodingException ex) {
            NexageLog.e("HttpUtils", "UTF-8 encoding exception: " + ex);
        }
    }
    
    public static StringBuilder getNexageRequestParams() {
        StringBuilder sb;
        while (true) {
            sb = new StringBuilder();
            while (true) {
                Label_0559: {
                    try {
                        sb.append("dcn=").append(NexageAdManager.getDCN());
                        appendParams(sb, "cn", NexageAdManager.getCn());
                        appendParams(sb, "mccmnc", NexageContext.getMccmnc());
                        appendParams(sb, "net", new StringBuilder().append(NexageContext.getNetType()).toString());
                        if (NexageAdManager.isTestMode()) {
                            appendParams(sb, "mode", "test");
                        }
                        if (NexageAdManager.getLocationAwareness() != null) {
                            final Location location = NexageAdManager.getLocationAwareness().getLocation();
                            if (location != null) {
                                appendParams(sb, "req(loc)", String.valueOf(location.getLatitude()) + "," + String.valueOf(location.getLongitude()));
                            }
                        }
                        appendParams(sb, "req(ac)", NexageAdManager.getRequestAreaCode());
                        appendParams(sb, "req(keywords)", NexageAdManager.getRequestKeywords());
                        appendParams(sb, "req(zip)", NexageAdManager.getRequestPostalCode());
                        appendParams(sb, "sdk", "ANDROID");
                        appendParams(sb, "v", "5.4.1");
                        appendParams(sb, "ua", NexageContext.s_UserAgent);
                        if (NexageAdManager.getAge() > 0 && NexageAdManager.getAge() < 120) {
                            appendParams(sb, "u(age)", new StringBuilder().append(NexageAdManager.getAge()).toString());
                        }
                        appendParams(sb, "u(city)", NexageAdManager.getCity());
                        appendParams(sb, "u(country)", NexageAdManager.getCountryCode());
                        appendParams(sb, "u(dma)", NexageAdManager.getDesignatedMarketArea());
                        if (NexageAdManager.getBirthday() != null) {
                            appendParams(sb, "u(dob)", DateFormat.format((CharSequence)"yyyyMMdd", (Calendar)NexageAdManager.getBirthday()).toString());
                        }
                        if (NexageAdManager.getEthnicity() != null) {
                            appendParams(sb, "u(eth)", new StringBuilder().append(NexageAdManager.getEthnicity().code()).toString());
                        }
                        if (NexageAdManager.getGender() != null) {
                            appendParams(sb, "u(gender)", NexageAdManager.getGender().code());
                        }
                        if (NexageAdManager.getHouseholdIncome() > 0) {
                            appendParams(sb, "u(hhi)", new StringBuilder().append(NexageAdManager.getHouseholdIncome()).toString());
                        }
                        appendParams(sb, "u(keywords)", NexageAdManager.getKeywords());
                        if (HttpUtils.s_HasKids != null) {
                            if (!HttpUtils.s_HasKids) {
                                break Label_0559;
                            }
                            final String s = "Y";
                            appendParams(sb, "u(kids)", s);
                        }
                        if (NexageAdManager.getMarital() != null) {
                            appendParams(sb, "u(marital)", NexageAdManager.getMarital().code());
                        }
                        appendParams(sb, "u(state)", NexageAdManager.getState());
                        appendParams(sb, "u(zip)", NexageAdManager.getPostalCode());
                        final Hashtable extraParameters = NexageAdManager.getExtraParameters();
                        if (extraParameters != null) {
                            initPattern();
                            final Enumeration<String> keys = extraParameters.keys();
                            while (keys.hasMoreElements()) {
                                final String s2 = keys.nextElement();
                                final V value = extraParameters.get(s2);
                                if (value != null && HttpUtils.s_KeyPattern.matcher(s2).find()) {
                                    appendParams(sb, "p(" + s2 + ")", value.toString());
                                }
                            }
                        }
                    }
                    catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    break;
                }
                final String s = "N";
                continue;
            }
        }
        NexageLog.d("HttpUtils", "request params: " + (Object)sb);
        return sb;
    }
    
    public static Pattern initPattern() {
        synchronized (HttpUtils.class) {
            if (HttpUtils.s_KeyPattern == null) {
                HttpUtils.s_KeyPattern = Pattern.compile("^\\w+$");
            }
            return HttpUtils.s_KeyPattern;
        }
    }
    
    public static void loadCookies() {
        if (HttpUtils.s_SyncMgr != null) {
            return;
        }
        (HttpUtils.s_SyncMgr = CookieSyncManager.getInstance()).sync();
        CookieManager.getInstance().setAcceptCookie(true);
    }
    
    public static void saveCookies(final HttpURLConnection httpURLConnection, final String s) {
        List<String> list;
        while (true) {
            try {
                final Map<String, List<String>> headerFields = httpURLConnection.getHeaderFields();
                list = null;
                if (headerFields != null) {
                    list = headerFields.get("set-cookie");
                }
                if (list == null || list.size() == 0) {
                    NexageLog.v(s, "Did not receive any COOKIE from the Server");
                    return;
                }
            }
            catch (Exception ex) {
                final Map<String, List<String>> headerFields = null;
                continue;
            }
            break;
        }
        final CookieManager instance = CookieManager.getInstance();
        final Iterator<String> iterator = list.iterator();
        while (iterator.hasNext()) {
            instance.setCookie(NexageAdManager.getMediationURL(), (String)iterator.next());
        }
        HttpUtils.s_SyncMgr.sync();
    }
    
    public static void setCookies(final HttpURLConnection httpURLConnection) {
        final CookieManager instance = CookieManager.getInstance();
        instance.removeExpiredCookie();
        final String cookie = instance.getCookie(NexageAdManager.getMediationURL());
        if (cookie != null && cookie.length() > 0) {
            httpURLConnection.setRequestProperty("Cookie", cookie);
        }
    }
}
