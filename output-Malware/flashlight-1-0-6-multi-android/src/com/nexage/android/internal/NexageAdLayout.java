// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.android.internal;

import android.view.ViewGroup$LayoutParams;
import android.widget.RelativeLayout$LayoutParams;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import com.nexage.android.NexageAdManager;
import android.webkit.CookieSyncManager;
import android.graphics.Bitmap;
import android.webkit.WebViewClient;
import java.util.Iterator;
import android.content.Intent;
import com.nexage.android.NexageActivity;
import android.app.Activity;
import android.view.View;
import android.webkit.WebView;
import android.content.Context;
import java.util.ArrayList;
import android.widget.RelativeLayout;

public class NexageAdLayout extends RelativeLayout
{
    private static final int FP = -1;
    private static ArrayList s_List;
    private static volatile int s_Sequence;
    private NexageAd _ad;
    private NexageAdLayout$ADView _webView;
    private boolean m_Closing;
    private volatile RelativeLayout m_Expanded;
    private boolean m_Expanding;
    private boolean m_Finished;
    private boolean m_FixedHeight;
    int m_ID;
    private final AdLayout m_Layout;
    private short originalBottom;
    private short originalLeft;
    private short originalRight;
    private short originalTop;
    
    static {
        NexageAdLayout.s_Sequence = 0;
        NexageAdLayout.s_List = new ArrayList();
    }
    
    public NexageAdLayout(final NexageAd nexageAd, final Context context) {
        super(context);
        this.originalLeft = -1;
        this.originalTop = -1;
        this.originalRight = -1;
        this.originalBottom = -1;
        this.m_Expanded = null;
        this.m_Layout = new NexageAdLayout$URLAdLayout(this, null);
        this.init(nexageAd, context);
    }
    
    private void MM4RM(final WebView webView, final String s) {
        if (s.indexOf("mm4rm=expand") > 0) {
            synchronized (this) {
                if (this.m_Expanding) {
                    NexageLog.d(this._ad.getPosition(), "Expand: already expanding");
                    return;
                }
                if (this.m_Expanded != null) {
                    NexageLog.d(this._ad.getPosition(), "Expand: already expanded -- ignore");
                    return;
                }
            }
            this.m_Expanding = true;
            // monitorexit(this)
            NexageLog.v(this._ad.getPosition(), "Expand");
            if (this.originalRight == -1) {
                this.originalLeft = (short)webView.getLeft();
                this.originalTop = (short)webView.getTop();
                this.originalRight = (short)webView.getRight();
                this.originalBottom = (short)webView.getBottom();
            }
            this.post((Runnable)new Runnable() {
                @Override
                public void run() {
                    NexageAdLayout.this.expandAd();
                }
            });
            return;
        }
        if (s.indexOf("mm4rm=collapse") > 0) {
            this.mm4rmCollapse();
            return;
        }
        if (s.indexOf("mm4rm=click") > 0) {
            this.mm4rmClick();
        }
    }
    
    static boolean displayMM4RM(NexageAdLayout$ADView nexageAdLayout$ADView) {
        if (nexageAdLayout$ADView == null && !NexageAdLayout.s_List.isEmpty()) {
            final RelativeLayout relativeLayout = NexageAdLayout.s_List.get(0);
            if (relativeLayout != null && relativeLayout.getChildCount() > 0) {
                nexageAdLayout$ADView = (NexageAdLayout$ADView)relativeLayout.getChildAt(0);
            }
        }
        if (nexageAdLayout$ADView != null) {
            final Activity activity = (Activity)nexageAdLayout$ADView.getContext();
            final Intent intent = new Intent((Context)activity, (Class)NexageActivity.class);
            intent.putExtra("com.nexage.MM4RM_AdID", nexageAdLayout$ADView.m_ID);
            activity.startActivity(intent);
        }
        return nexageAdLayout$ADView != null;
    }
    
    private void expandAd() {
        synchronized (this) {
            if (this.m_Expanded != null || !this.m_Expanding) {
                NexageLog.v(this._ad.getPosition(), "Expand: already expanded");
                this.m_Expanding = false;
            }
            else {
                this.removeView((View)this._webView);
                this.setLayoutParams((View)(this.m_Expanded = new RelativeLayout((Context)this.getContext())), -1, -1);
                this.m_Expanded.addView((View)this._webView);
                this.setLayoutParams((View)this._webView, -1, -1);
                NexageAdLayout.s_List.add(this.m_Expanded);
                displayMM4RM(this._webView);
                this.m_Expanding = false;
            }
        }
    }
    
    static View getWebView(final int n, final NexageActivity nexageActivity) {
        while (true) {
            while (true) {
                Label_0082: {
                    synchronized (NexageAdLayout.class) {
                        NexageAdLayout$ADView nexageAdLayout$ADView = null;
                        Block_4: {
                            for (final Object o : NexageAdLayout.s_List) {
                                nexageAdLayout$ADView = (NexageAdLayout$ADView)((RelativeLayout)o).getChildAt(0);
                                if (n == nexageAdLayout$ADView.m_ID) {
                                    break Block_4;
                                }
                            }
                            break Label_0082;
                        }
                        nexageAdLayout$ADView.m_NexageActivity = nexageActivity;
                        final Object o;
                        if (o != null) {
                            NexageAdLayout.s_List.remove(o);
                        }
                        return (View)o;
                    }
                }
                Object o = null;
                continue;
            }
        }
    }
    
    private void init(final NexageAd ad, final Context context) {
        this._ad = ad;
        this.setLayoutParams((View)(this._webView = new NexageAdLayout$ADView(this, context)), ad.getWidth(), ad.getHeight());
        this._webView.setFocusableInTouchMode(false);
        this._webView.setVerticalScrollBarEnabled(false);
        this._webView.setHorizontalScrollBarEnabled(false);
        this._webView.getSettings().setJavaScriptEnabled(true);
        this._webView.getSettings().setCacheMode(2);
        this._webView.setWebViewClient((WebViewClient)new WebViewClient() {
            public void onLoadResource(final WebView webView, final String s) {
                NexageLog.v(NexageAdLayout.this._ad.getPosition(), "Load resource: " + s);
                super.onLoadResource(webView, s);
                if (NexageAdLayout.this.m_Finished && NexageAdLayout.this._ad.isMM4RM()) {
                    NexageAdLayout.this.MM4RM(webView, s);
                }
            }
            
            public void onPageFinished(final WebView webView, final String s) {
                super.onPageFinished(webView, s);
                if (!NexageAdLayout.this.m_Finished) {
                    final NexageAdSwitcher switcher = NexageAdLayout.this._ad.getSwitcher();
                    if (switcher != null) {
                        switcher.addAdView((View)NexageAdLayout.this);
                    }
                }
                NexageAdLayout.this.m_Finished = true;
                if (NexageAdLayout.this._ad.isMM4RM()) {
                    NexageLog.v(NexageAdLayout.this._ad.getPosition(), "MM4RM: " + s);
                    NexageAdLayout.this.MM4RM(webView, s);
                }
            }
            
            public void onPageStarted(final WebView webView, final String s, final Bitmap bitmap) {
                if (NexageAdLayout.this.m_Finished && !NexageAdLayout.this._ad.isMM4RM() && !NexageAdLayout.this.m_FixedHeight) {
                    NexageAdLayout.this.m_FixedHeight = true;
                    NexageAdLayout.this.setLayoutParams((View)NexageAdLayout.this._webView, NexageAdLayout.this._ad.getWidth(), webView.getHeight());
                }
                super.onPageStarted(webView, s, bitmap);
                NexageAdLayout.this.m_Finished = false;
            }
            
            public void onReceivedError(final WebView webView, final int n, final String s, final String s2) {
                NexageLog.w(NexageAdLayout.this._ad.getPosition(), "WebView error: " + s + " errorCode=" + n + " URL='" + s2 + "'");
            }
            
            public boolean shouldOverrideUrlLoading(final WebView webView, final String s) {
                CookieSyncManager.getInstance().sync();
                if (!NexageAdLayout.this._ad.isMM4RM() && NexageAdLayout.this._ad.addClickToReport()) {
                    NexageAdLayout.this.m_Layout.notifyClick();
                }
                NexageContext.lauchBrowser(s, NexageAdLayout.this._ad.getPosition());
                NexageLog.v(NexageAdLayout.this._ad.getPosition(), "Launch Browser: " + s);
                return true;
            }
        });
        String s = NexageAdManager.getMediationURL();
        while (true) {
            try {
                final URL url = new URL(this._ad.tag.adRequestUrl);
                final String path = url.getPath();
                s = new URL(url.getProtocol(), url.getHost(), url.getPort(), path.substring(0, path.lastIndexOf(47))).toString();
                this._webView.loadDataWithBaseURL(s, this._ad.getHtml(), "text/html", "utf-8", (String)null);
                this.setFocusable(true);
                this.setClickable(true);
                this.setBackgroundColor(0);
                this.addView((View)this._webView);
            }
            catch (MalformedURLException ex) {
                continue;
            }
            break;
        }
    }
    
    private void mm4rmClick() {
        if (this._ad.addClickToReport()) {
            this.m_Layout.notifyClick();
        }
        final String mm4RMClick = this._ad.getMM4RMClick();
        if (mm4RMClick == null || mm4RMClick.length() < 10) {
            return;
        }
        new Thread() {
            @Override
            public void run() {
                try {
                    final URL url = new URL(mm4RMClick);
                    HttpURLConnection.setFollowRedirects(true);
                    final HttpURLConnection httpURLConnection = (HttpURLConnection)url.openConnection();
                    httpURLConnection.setConnectTimeout(5000);
                    httpURLConnection.setReadTimeout(5000);
                    httpURLConnection.setRequestProperty("Connection", "close");
                    httpURLConnection.connect();
                    httpURLConnection.setConnectTimeout(30000);
                    NexageLog.d("MM4RM Click Status = " + httpURLConnection.getResponseCode());
                }
                catch (Exception ex) {
                    NexageLog.d("MM4RM Click URL error: " + ex.getMessage());
                }
            }
        }.start();
    }
    
    private void mm4rmCollapse() {
        synchronized (this) {
            if (this.m_Closing) {
                NexageLog.d(this._ad.getPosition(), "Collapse: already closing");
                return;
            }
            if (this.m_Expanded == null) {
                NexageLog.d(this._ad.getPosition(), "Collapse: already closed -- ignore");
                return;
            }
        }
        this.m_Closing = true;
        // monitorexit(this)
        NexageLog.v(this._ad.getPosition(), "Collapse");
        this._webView.m_NexageActivity.runOnUiThread((Runnable)new Runnable() {
            @Override
            public void run() {
                NexageAdLayout.this._webView.m_NexageActivity.dismiss();
            }
        });
    }
    
    private void restoreAdView() {
        if (this.m_Expanded == null) {
            return;
        }
        this.m_Expanded.removeView((View)this._webView);
        this.m_Expanded = null;
        this.restoreSize((View)this._webView);
        this.addView((View)this._webView);
        this.forceLayout();
        this._ad.mm4rmRestored();
        this.m_Closing = false;
    }
    
    private void restoreSize(final View view) {
        view.layout((int)this.originalLeft, (int)this.originalTop, (int)this.originalRight, (int)this.originalBottom);
        this.setLayoutParams(view, this.originalRight - this.originalLeft, this.originalBottom - this.originalTop);
    }
    
    private void setLayoutParams(final View view, final int n, final int n2) {
        final RelativeLayout$LayoutParams layoutParams = new RelativeLayout$LayoutParams(n, n2);
        layoutParams.setMargins(0, 0, 0, 0);
        view.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
    }
    
    AdLayout getLayout() {
        return this.m_Layout;
    }
    
    public void setBackgroundColor(final int n) {
        super.setBackgroundColor(n);
        this._webView.setBackgroundColor(n);
    }
    
    public void setBackgroundResource(final int n) {
        super.setBackgroundResource(n);
        this._webView.setBackgroundResource(n);
    }
    
    public void setVisibility(final int n) {
        super.setVisibility(n);
        this._webView.setVisibility(n);
    }
}
