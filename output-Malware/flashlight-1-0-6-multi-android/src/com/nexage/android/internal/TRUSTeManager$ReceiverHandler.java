// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.android.internal;

import android.app.Activity;
import java.util.TimerTask;
import android.os.Parcelable;
import java.io.Serializable;
import android.content.Intent;
import java.lang.reflect.Proxy;
import android.os.ResultReceiver;
import java.util.Map;
import android.os.Handler;
import android.content.pm.ApplicationInfo;
import android.text.TextUtils;
import java.util.ArrayList;
import java.util.Timer;
import java.util.List;
import android.content.Context;
import java.lang.reflect.Constructor;
import android.os.Bundle;
import java.lang.reflect.Method;
import java.lang.reflect.InvocationHandler;

class TRUSTeManager$ReceiverHandler implements InvocationHandler
{
    final /* synthetic */ TRUSTeManager this$0;
    
    private TRUSTeManager$ReceiverHandler(final TRUSTeManager this$0) {
        this.this$0 = this$0;
    }
    
    @Override
    public Object invoke(final Object o, final Method method, final Object[] array) {
        while (true) {
            while (true) {
                Label_0199: {
                    try {
                        if (method.getName().equals("onReceiveResult")) {
                            final int intValue = (int)array[0];
                            final Bundle bundle = (Bundle)array[1];
                            NexageLog.i("TRUSTeManager", "proxy --> onReceiveResult");
                            if (intValue == TRUSTeManager.CONSTANT_STATUS_FINISHED) {
                                this.this$0.stopTimeoutTimer();
                                final String s = (String)bundle.get(TRUSTeManager.CONSTANT_ERROR_MESSAGE);
                                if (s != null) {
                                    NexageLog.e("TRUSTeManager", "TPID error message: " + s);
                                    this.this$0.broadcast(false, null);
                                    return null;
                                }
                                final String s2 = (String)bundle.get(TRUSTeManager.CONSTANT_TPID);
                                NexageLog.i("TRUSTeManager", "got result tpid result back: " + s2);
                                this.this$0.gotFirstTPID = true;
                                final TRUSTeManager this$0 = this.this$0;
                                if (s2 != null) {
                                    final boolean b = true;
                                    this$0.broadcast(b, s2);
                                    return null;
                                }
                                break Label_0199;
                            }
                        }
                    }
                    catch (Exception ex) {
                        NexageLog.w("TRUSTeManager", "ReceiverHandler failed with: " + ex);
                    }
                    break;
                }
                final boolean b = false;
                continue;
            }
        }
        return null;
    }
}
