// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.android;

import com.nexage.android.v2.Task;
import android.content.Context;
import com.nexage.android.v2.InterstitialFetcher;
import com.nexage.android.v2.AdUpdateListener;
import java.util.ArrayList;
import com.nexage.android.internal.NexageAdFetcher;
import com.nexage.android.internal.NexageLog;
import android.view.View;
import android.app.Activity;
import com.nexage.android.interstitial.InterstitialLayout;
import android.os.Handler;
import com.nexage.android.internal.Ad;
import com.nexage.android.internal.NexageContext;

class NexageInterstitial$InterstitialContext extends NexageContext
{
    private Ad m_CurrentAd;
    private Handler m_Handler;
    private InterstitialLayout m_Layout;
    private boolean m_ReadyToFetch;
    final /* synthetic */ NexageInterstitial this$0;
    
    NexageInterstitial$InterstitialContext(final NexageInterstitial this$0) {
        this.this$0 = this$0;
        this.m_Handler = new Handler();
        this.m_Layout = new InterstitialLayout(this.this$0.m_Position);
        this.m_ReadyToFetch = true;
    }
    
    @Override
    public void SDKAdVisible(final boolean b) {
    }
    
    @Override
    public void failed() {
        this.m_ReadyToFetch = false;
        if (this.m_Handler == null) {
            return;
        }
        Label_0071: {
            if (this.this$0.m_Fetcher == null) {
                break Label_0071;
            }
            this.this$0.m_Fetcher.remove(this.this$0.m_NexageContext);
            this.this$0.m_NexageContext = null;
            synchronized (this.this$0.m_Fetcher) {
                this.this$0.m_Fetcher.notify();
                // monitorexit(NexageInterstitial.access$700(this.this$0))
                if (this.this$0.m_Listener != null) {
                    this.m_Handler.post((Runnable)new Runnable() {
                        @Override
                        public void run() {
                            if (NexageInterstitial$InterstitialContext.this.this$0.m_Listener == null) {
                                return;
                            }
                            try {
                                NexageInterstitial$InterstitialContext.this.this$0.m_Listener.onInterstitialFailedToReceive(NexageInterstitial$InterstitialContext.this.this$0);
                            }
                            catch (Exception ex) {}
                        }
                    });
                }
                this.m_Handler = null;
            }
        }
    }
    
    @Override
    public Activity getActivity() {
        return this.this$0.m_Activity;
    }
    
    @Override
    public Handler getHandler() {
        return this.m_Handler;
    }
    
    @Override
    public String getPosition() {
        return this.this$0.m_Position;
    }
    
    @Override
    public View getView() {
        return null;
    }
    
    @Override
    public InterstitialLayout interstitialLayout() {
        return this.m_Layout;
    }
    
    @Override
    public boolean mm4rmExpanded(final Ad ad) {
        return true;
    }
    
    @Override
    public void mm4rmRestored(final Ad ad) {
    }
    
    @Override
    public void nudgeAdFetcher() {
    }
    
    @Override
    public boolean readyForAdFetch() {
        return this.m_ReadyToFetch;
    }
    
    @Override
    public boolean showAd(final Ad currentAd) {
        if (this.m_Handler == null) {
            return false;
        }
        this.m_ReadyToFetch = false;
        this.m_CurrentAd = currentAd;
        this.m_Handler.post((Runnable)new Runnable() {
            @Override
            public void run() {
                while (true) {
                    if (NexageInterstitial$InterstitialContext.this.this$0.m_Listener == null) {
                        break Label_0035;
                    }
                    try {
                        NexageInterstitial$InterstitialContext.this.this$0.m_Listener.onInterstitialReceived(NexageInterstitial$InterstitialContext.this.this$0);
                        if (NexageInterstitial.s_AutoDisplay) {
                            synchronized (NexageInterstitial$InterstitialContext.this.this$0) {
                                NexageInterstitial$InterstitialContext.this.this$0.m_interstitialFetcher.display(NexageInterstitial$InterstitialContext.this.this$0.m_Activity);
                                return;
                            }
                        }
                        synchronized (NexageInterstitial$InterstitialContext.this.this$0.m_InterstitialQ) {
                            NexageLog.i(NexageInterstitial$InterstitialContext.this.this$0.m_Position, "adding item to m_InterstitialQ");
                            NexageInterstitial$InterstitialContext.this.this$0.m_InterstitialQ.add(NexageInterstitial$InterstitialContext.this.this$0.m_NexageContext);
                            NexageLog.i("Queue contains: " + NexageInterstitial$InterstitialContext.this.this$0.m_InterstitialQ.size());
                        }
                    }
                    catch (Exception ex) {
                        continue;
                    }
                    break;
                }
            }
        });
        return true;
    }
    
    @Override
    public boolean visible() {
        return false;
    }
}
