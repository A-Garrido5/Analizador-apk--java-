// 
// Decompiled by Procyon v0.5.30
// 

package com.nexage.android.sdks;

import com.google.android.gms.ads.AdSize;
import android.view.View;
import com.google.android.gms.ads.AdListener;
import com.nexage.android.DeviceLocation;
import com.nexage.android.NexageAdManager$Gender;
import java.util.GregorianCalendar;
import android.text.TextUtils;
import com.nexage.android.NexageAdManager;
import com.google.android.gms.ads.AdRequest$Builder;
import com.google.android.gms.ads.AdRequest;
import com.nexage.android.internal.NexageLog;
import android.os.Handler;
import android.content.Context;
import com.google.android.gms.ads.AdView;
import com.nexage.android.sdkmanager.SDKProvider;

public final class GoogleProvider extends SDKProvider
{
    public static final String TAG = "GoogleProvider";
    private AdView adView;
    
    public GoogleProvider(final Context context, final Handler handler) {
        super(context, handler);
        NexageLog.d("GoogleProvider", "entering constructor");
        this.isSdkInitialized = true;
    }
    
    private AdRequest buildAdRequest() {
        int i = 0;
        final AdRequest$Builder adRequest$Builder = new AdRequest$Builder();
        if (NexageAdManager.isTestMode()) {
            NexageLog.d("GoogleProvider", "setting test mode");
            adRequest$Builder.addTestDevice(AdRequest.DEVICE_ID_EMULATOR);
        }
        final GregorianCalendar birthday = NexageAdManager.getBirthday();
        if (birthday != null) {
            adRequest$Builder.setBirthday(birthday.getTime());
        }
        final NexageAdManager$Gender gender = NexageAdManager.getGender();
        if (gender != null) {
            switch (gender) {
                case Male: {
                    adRequest$Builder.setGender(1);
                    break;
                }
                case Female: {
                    adRequest$Builder.setGender(2);
                    break;
                }
                case Other: {
                    adRequest$Builder.setGender(0);
                    break;
                }
            }
        }
        final DeviceLocation locationAwareness = NexageAdManager.getLocationAwareness();
        if (locationAwareness != null) {
            adRequest$Builder.setLocation(locationAwareness.getLocation());
        }
        final String keywords = NexageAdManager.getKeywords();
        if (!TextUtils.isEmpty((CharSequence)keywords)) {
            for (String[] split = keywords.split(","); i < split.length; ++i) {
                adRequest$Builder.addKeyword(split[i]);
            }
        }
        return adRequest$Builder.build();
    }
    
    @Override
    protected final void cancel() {
        NexageLog.d("GoogleProvider", "cancel");
        if (this.adView != null) {
            this.adView.setAdListener(null);
        }
    }
    
    @Override
    protected final View createAdView(final int n, final int n2, final String adUnitId) {
        (this.adView = new AdView(this.context)).setAdUnitId(adUnitId);
        this.adView.setAdSize(AdSize.BANNER);
        this.adView.setAdListener(new AdListener() {
            @Override
            public void onAdClosed() {
                NexageLog.d("GoogleProvider", "onAdClosed");
                GoogleProvider.this.fireDismissScreen(GoogleProvider.this);
            }
            
            @Override
            public void onAdFailedToLoad(final int n) {
                NexageLog.d("GoogleProvider", "onAdFailedToLoad " + n);
                GoogleProvider.this.adView = null;
                GoogleProvider.this.fireAdFailed(GoogleProvider.this);
            }
            
            @Override
            public void onAdLeftApplication() {
                NexageLog.d("GoogleProvider", "onAdLeftApplication");
                GoogleProvider.this.fireLeaveApp(GoogleProvider.this);
            }
            
            @Override
            public void onAdLoaded() {
                NexageLog.d("GoogleProvider", "onAdLoaded");
                GoogleProvider.this.fireAdReceived(GoogleProvider.this);
            }
            
            @Override
            public void onAdOpened() {
                NexageLog.d("GoogleProvider", "onAdOpened");
                GoogleProvider.this.fireFullScreen(GoogleProvider.this);
            }
        });
        return (View)this.adView;
    }
    
    @Override
    protected final void destroy() {
        if (this.adView != null) {
            this.adView.destroy();
        }
    }
    
    @Override
    protected final View getAdView() {
        return (View)this.adView;
    }
    
    @Override
    protected final void loadAdView() {
        if (this.adView == null) {
            return;
        }
        this.adView.loadAd(this.buildAdRequest());
    }
    
    @Override
    protected final void pause() {
        if (this.adView != null) {
            this.adView.pause();
        }
    }
    
    @Override
    protected final void resume() {
        if (this.adView != null) {
            this.adView.resume();
        }
    }
}
