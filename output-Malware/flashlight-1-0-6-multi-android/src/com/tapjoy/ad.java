// 
// Decompiled by Procyon v0.5.30
// 

package com.tapjoy;

import org.apache.http.client.HttpClient;
import org.apache.http.HttpResponse;
import java.net.URL;
import java.net.HttpURLConnection;
import java.io.Reader;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import java.util.Map;

public final class ad
{
    public static boolean a;
    
    static {
        ad.a = false;
    }
    
    public static z a(final String s) {
        return b(s, "");
    }
    
    public static z a(final String s, final String s2) {
        return b(s, s2);
    }
    
    public static z a(final String s, final Map map) {
        return b(s, ae.a(map));
    }
    
    private static z b(final String s, final String s2) {
        z z;
        while (true) {
            z = new z();
            HttpURLConnection httpURLConnection = null;
        Label_0183_Outer:
            while (true) {
                Label_0528: {
                    while (true) {
                        Label_0620: {
                            String string = null;
                            Label_0450: {
                                try {
                                    string = s + s2;
                                    ab.a("TapjoyURLConnection", "http get: " + string);
                                    final boolean a = ad.a;
                                    httpURLConnection = null;
                                    if (!a) {
                                        break Label_0450;
                                    }
                                    final HttpResponse execute = ((HttpClient)new DefaultHttpClient()).execute((HttpUriRequest)new HttpGet(string));
                                    z.a = execute.getStatusLine().getStatusCode();
                                    final BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(execute.getEntity().getContent()));
                                    final StringBuilder sb = new StringBuilder();
                                    while (true) {
                                        final String line = bufferedReader.readLine();
                                        if (line == null) {
                                            break Label_0528;
                                        }
                                        sb.append(line + '\n');
                                    }
                                }
                                catch (Exception ex5) {}
                                final Exception ex;
                                ab.b("TapjoyURLConnection", "Exception: " + ex.toString());
                                if (httpURLConnection != null) {
                                    try {
                                        if (z.c == null) {
                                            final BufferedReader bufferedReader2 = new BufferedReader(new InputStreamReader(httpURLConnection.getErrorStream()));
                                            final StringBuilder sb2 = new StringBuilder();
                                            while (true) {
                                                final String line2 = bufferedReader2.readLine();
                                                if (line2 == null) {
                                                    break Label_0620;
                                                }
                                                sb2.append(line2 + '\n');
                                            }
                                        }
                                    }
                                    catch (Exception ex2) {
                                        ab.b("TapjoyURLConnection", "Exception trying to get error code/content: " + ex2.toString());
                                    }
                                    break;
                                }
                                break;
                            }
                            final HttpURLConnection httpURLConnection2 = (HttpURLConnection)new URL(string).openConnection();
                            try {
                                httpURLConnection2.setConnectTimeout(15000);
                                httpURLConnection2.setReadTimeout(30000);
                                httpURLConnection2.connect();
                                z.a = httpURLConnection2.getResponseCode();
                                final BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection2.getInputStream()));
                                httpURLConnection = httpURLConnection2;
                                continue Label_0183_Outer;
                                final StringBuilder sb;
                                z.c = sb.toString();
                                // iftrue(Label_0557:, z.a != 302)
                                z.d = httpURLConnection.getHeaderField("Location");
                                final String headerField;
                                Label_0557: {
                                    headerField = httpURLConnection.getHeaderField("content-length");
                                }
                                // iftrue(Label_0582:, headerField == null)
                                while (true) {
                                    try {
                                        z.b = Integer.valueOf(headerField);
                                        bufferedReader.close();
                                        break;
                                    }
                                    catch (Exception ex3) {
                                        ab.b("TapjoyURLConnection", "Exception: " + ex3.toString());
                                        continue;
                                    }
                                    break;
                                }
                                final StringBuilder sb2;
                                z.c = sb2.toString();
                                break;
                            }
                            catch (Exception ex4) {
                                httpURLConnection = httpURLConnection2;
                                final Exception ex = ex4;
                                continue;
                            }
                        }
                        break;
                    }
                }
                break;
            }
        }
        ab.a("TapjoyURLConnection", "--------------------");
        ab.a("TapjoyURLConnection", "response status: " + z.a);
        ab.a("TapjoyURLConnection", "response size: " + z.b);
        ab.e("TapjoyURLConnection", "response: ");
        ab.e("TapjoyURLConnection", new StringBuilder().append(z.c).toString());
        if (z.d != null && z.d.length() > 0) {
            ab.a("TapjoyURLConnection", "redirectURL: " + z.d);
        }
        ab.a("TapjoyURLConnection", "--------------------");
        return z;
    }
    
    public static String b(final String s) {
        while (true) {
            try {
                final String replaceAll = s.replaceAll(" ", "%20");
                ab.a("TapjoyURLConnection", "requestURL: " + replaceAll);
                final HttpURLConnection httpURLConnection = (HttpURLConnection)new URL(replaceAll).openConnection();
                httpURLConnection.setConnectTimeout(15000);
                httpURLConnection.setReadTimeout(30000);
                final String headerField = httpURLConnection.getHeaderField("content-length");
                ab.a("TapjoyURLConnection", "content-length: " + headerField);
                return headerField;
            }
            catch (Exception ex) {
                ab.b("TapjoyURLConnection", "Exception: " + ex.toString());
                final String headerField = null;
                continue;
            }
            break;
        }
    }
}
