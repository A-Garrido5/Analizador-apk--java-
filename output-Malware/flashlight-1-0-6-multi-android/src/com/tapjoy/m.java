// 
// Decompiled by Procyon v0.5.30
// 

package com.tapjoy;

import java.lang.reflect.Field;
import android.os.Build;
import android.net.Uri;
import android.content.pm.ResolveInfo;
import android.content.Intent;
import org.w3c.dom.Document;
import android.content.pm.ApplicationInfo;
import java.util.HashMap;
import android.content.SharedPreferences$Editor;
import java.util.Enumeration;
import java.util.Properties;
import android.util.Log;
import android.net.ConnectivityManager;
import java.util.Iterator;
import java.util.Map;
import java.util.Collection;
import java.util.Arrays;
import java.util.Timer;
import java.util.Vector;
import java.util.Hashtable;
import android.content.pm.PackageManager;
import android.content.Context;

public final class m
{
    private static boolean A;
    private static String B;
    private static String C;
    private static String D;
    private static String E;
    private static String F;
    private static String G;
    private static String H;
    private static String I;
    private static String J;
    private static String K;
    private static String L;
    private static String M;
    private static boolean N;
    private static String O;
    private static float P;
    private static boolean Q;
    private static boolean R;
    private static boolean S;
    private static boolean T;
    private static boolean U;
    private static String V;
    private static long Z;
    private static Context a;
    private static PackageManager ab;
    private static Hashtable ac;
    private static String ad;
    private static boolean ae;
    private static m b;
    private static ad c;
    private static q d;
    private static ak e;
    private static Vector f;
    private static String g;
    private static String h;
    private static String i;
    private static String j;
    private static String k;
    private static String l;
    private static String m;
    private static String n;
    private static String o;
    private static String p;
    private static String q;
    private static String r;
    private static String s;
    private static String t;
    private static String u;
    private static String v;
    private static int w;
    private static float x;
    private static int y;
    private static String z;
    private long W;
    private Timer X;
    private boolean Y;
    private boolean aa;
    
    static {
        com.tapjoy.m.a = null;
        com.tapjoy.m.b = null;
        com.tapjoy.m.c = null;
        com.tapjoy.m.d = null;
        com.tapjoy.m.e = null;
        com.tapjoy.m.f = new Vector((Collection<? extends E>)Arrays.asList(com.tapjoy.r.a));
        com.tapjoy.m.g = "";
        com.tapjoy.m.h = "";
        com.tapjoy.m.i = "";
        com.tapjoy.m.j = "";
        com.tapjoy.m.k = "";
        com.tapjoy.m.l = "";
        com.tapjoy.m.m = "";
        com.tapjoy.m.n = "";
        com.tapjoy.m.o = "";
        com.tapjoy.m.p = "";
        com.tapjoy.m.q = "";
        com.tapjoy.m.r = "";
        com.tapjoy.m.s = "";
        com.tapjoy.m.t = "";
        com.tapjoy.m.u = "";
        com.tapjoy.m.v = "";
        com.tapjoy.m.w = 1;
        com.tapjoy.m.x = 1.0f;
        com.tapjoy.m.y = 1;
        com.tapjoy.m.z = "";
        com.tapjoy.m.A = false;
        com.tapjoy.m.B = "";
        com.tapjoy.m.C = "";
        com.tapjoy.m.D = "";
        com.tapjoy.m.E = "";
        com.tapjoy.m.F = "";
        com.tapjoy.m.G = "";
        com.tapjoy.m.H = "";
        com.tapjoy.m.I = "";
        com.tapjoy.m.J = "";
        com.tapjoy.m.K = "native";
        com.tapjoy.m.L = "";
        com.tapjoy.m.M = "";
        com.tapjoy.m.N = false;
        com.tapjoy.m.O = "";
        com.tapjoy.m.P = 1.0f;
        com.tapjoy.m.Q = false;
        com.tapjoy.m.R = false;
        com.tapjoy.m.S = false;
        com.tapjoy.m.T = false;
        com.tapjoy.m.U = false;
        com.tapjoy.m.V = null;
        com.tapjoy.m.Z = 0L;
        com.tapjoy.m.ac = null;
        com.tapjoy.m.ad = "";
        com.tapjoy.m.ae = false;
    }
    
    private m(final Context a) {
        this.W = 0L;
        this.X = null;
        this.Y = false;
        this.aa = false;
        com.tapjoy.m.a = a;
        com.tapjoy.m.c = new ad();
        t();
        com.tapjoy.ab.a("TapjoyConnect", "URL parameters: " + b());
        new Thread(new n(this)).start();
        new Thread(new Runnable() {
            @Override
            public final void run() {
                new ad();
                for (final Map.Entry<String, V> entry : com.tapjoy.m.n().entrySet()) {
                    com.tapjoy.ab.a("TapjoyConnect", "sending offline log: ");
                    final z a = com.tapjoy.ad.a((String)entry.getValue() + "&" + com.tapjoy.ae.a(com.tapjoy.m.h()), "");
                    if (a != null && a.a == 200) {
                        com.tapjoy.m.c(entry.getKey());
                    }
                }
            }
        }).start();
        if (e("user_id") != null && e("user_id").length() > 0) {
            com.tapjoy.ab.a("TapjoyConnect", "Setting userID to: " + e("user_id"));
            com.tapjoy.m.z = e("user_id");
            com.tapjoy.ab.a("TapjoyConnect", "URL parameters: " + b());
            new Thread(new Runnable() {
                @Override
                public final void run() {
                    com.tapjoy.ab.a("TapjoyConnect", "setUserID...");
                    com.tapjoy.m.c;
                    final z a = com.tapjoy.ad.a(com.tapjoy.m.d() + "set_publisher_user_id?", com.tapjoy.m.b());
                    if (a.c != null) {
                        com.tapjoy.m.f(a.c);
                        com.tapjoy.ab.a("TapjoyConnect", "setUserID successful...");
                    }
                }
            }).start();
        }
        this.aa = true;
    }
    
    private static String A() {
        String subtypeName;
        try {
            final ConnectivityManager connectivityManager = (ConnectivityManager)com.tapjoy.m.a.getSystemService("connectivity");
            if (connectivityManager != null) {
                subtypeName = connectivityManager.getActiveNetworkInfo().getSubtypeName();
                final String s = "TapjoyConnect";
                final String s2 = "connection_sub_type: ";
                final StringBuilder sb = new StringBuilder(s2);
                final String s3 = subtypeName;
                final StringBuilder sb2 = sb.append(s3);
                final String s4 = sb2.toString();
                com.tapjoy.ab.a(s, s4);
                return subtypeName;
            }
            return "";
        }
        catch (Exception ex2) {
            subtypeName = "";
            final Exception ex = ex2;
        }
        while (true) {
            try {
                final String s = "TapjoyConnect";
                final String s2 = "connection_sub_type: ";
                final StringBuilder sb = new StringBuilder(s2);
                final String s3 = subtypeName;
                final StringBuilder sb2 = sb.append(s3);
                final String s4 = sb2.toString();
                com.tapjoy.ab.a(s, s4);
                return subtypeName;
                final Exception ex;
                com.tapjoy.ab.b("TapjoyConnect", "getConnectionSubType error: " + ex.toString());
                return subtypeName;
            }
            catch (Exception ex) {
                continue;
            }
            break;
        }
        return "";
    }
    
    private static String B() {
        com.tapjoy.ab.a("TapjoyConnect", "generating sessionID...");
        String a;
        try {
            a = com.tapjoy.ae.a(System.currentTimeMillis() / 1000L + com.tapjoy.m.s + com.tapjoy.m.i);
            com.tapjoy.m.Z = System.currentTimeMillis();
            return a;
        }
        catch (Exception ex2) {
            a = null;
            final Exception ex = ex2;
        }
        while (true) {
            try {
                com.tapjoy.m.Z = System.currentTimeMillis();
                return a;
                final Exception ex;
                com.tapjoy.ab.b("TapjoyConnect", "unable to generate session id: " + ex.toString());
                return a;
            }
            catch (Exception ex) {
                continue;
            }
            break;
        }
    }
    
    public static m a() {
        return com.tapjoy.m.b;
    }
    
    private static String a(final long n) {
        try {
            final StringBuilder append = new StringBuilder().append(com.tapjoy.m.s).append(":");
            String s;
            if (com.tapjoy.m.i != null && com.tapjoy.m.i.length() > 0) {
                s = com.tapjoy.m.i;
            }
            else if (com.tapjoy.m.k != null && com.tapjoy.m.k.length() > 0) {
                s = com.tapjoy.m.k;
            }
            else if (com.tapjoy.m.g != null && com.tapjoy.m.g.length() > 0) {
                s = com.tapjoy.m.g;
            }
            else {
                Log.e("TapjoyConnect", "Error -- no valid device identifier");
                s = null;
            }
            return com.tapjoy.ae.a(append.append(s).append(":").append(n).append(":").append(com.tapjoy.m.J).toString());
        }
        catch (Exception ex) {
            com.tapjoy.ab.b("TapjoyConnect", "getVerifier ERROR: " + ex.toString());
            return "";
        }
    }
    
    public static void a(final Context context, final String s, final String j, final Hashtable ac) {
        com.tapjoy.m.s = s;
        com.tapjoy.m.J = j;
        com.tapjoy.m.ac = ac;
        com.tapjoy.m.d = null;
        com.tapjoy.m.b = new m(context);
    }
    
    public static void a(final String l) {
        com.tapjoy.m.L = l;
    }
    
    private static void a(final Properties properties) {
        final Enumeration<String> keys = ((Hashtable<String, V>)properties).keys();
        while (keys.hasMoreElements()) {
            try {
                final String s = keys.nextElement();
                com.tapjoy.m.ac.put(s, properties.get(s));
            }
            catch (ClassCastException ex) {
                com.tapjoy.ab.b("TapjoyConnect", "Error parsing configuration properties in tapjoy_config.txt");
            }
        }
    }
    
    public static void a(final boolean n) {
        com.tapjoy.m.N = n;
    }
    
    private static String b(final long n, final String s) {
        try {
            return com.tapjoy.ae.a(com.tapjoy.m.s + ":" + com.tapjoy.m.i + ":" + n + ":" + com.tapjoy.m.J + ":" + s);
        }
        catch (Exception ex) {
            com.tapjoy.ab.b("TapjoyConnect", "getVerifier ERROR: " + ex.toString());
            return "";
        }
    }
    
    public static Map b() {
        final Map c = c();
        c.putAll(h());
        return c;
    }
    
    public static void b(final String o) {
        com.tapjoy.m.O = o;
    }
    
    public static Map c() {
        final Map s = s();
        com.tapjoy.ae.a(s, "app_id", com.tapjoy.m.s);
        return s;
    }
    
    public static void c(final String s) {
        final SharedPreferences$Editor edit = com.tapjoy.m.a.getSharedPreferences("tapjoyOfflineLog", 0).edit();
        edit.remove(s);
        edit.commit();
    }
    
    public static String d() {
        return e("TJC_SERVICE_URL");
    }
    
    public static String e() {
        return com.tapjoy.m.M;
    }
    
    public static String e(final String s) {
        String s2 = "";
        if (com.tapjoy.m.ac != null) {
            s2 = com.tapjoy.m.ac.get(s);
        }
        if (s2 == null) {
            s2 = "";
        }
        return s2;
    }
    
    public static Map f() {
        final HashMap hashMap = new HashMap();
        if (com.tapjoy.m.N) {
            if (com.tapjoy.m.O.length() > 0) {
                com.tapjoy.ae.a(hashMap, "video_offer_ids", com.tapjoy.m.O);
            }
        }
        else {
            com.tapjoy.ae.a(hashMap, "hide_videos", String.valueOf(true));
        }
        com.tapjoy.ab.a("TapjoyConnect", "video parameters: " + hashMap);
        return hashMap;
    }
    
    static /* synthetic */ boolean f(final String s) {
        final Document b = com.tapjoy.ae.b(s);
        if (b != null) {
            final String a = com.tapjoy.ae.a(b.getElementsByTagName("PackageNames"));
            if (a != null && a.length() > 0) {
                final Vector<String> vector = new Vector<String>();
                int n = 0;
                while (true) {
                    final int index = a.indexOf(44, n);
                    if (index == -1) {
                        break;
                    }
                    com.tapjoy.ab.a("TapjoyConnect", "parse: " + a.substring(n, index).trim());
                    vector.add(a.substring(n, index).trim());
                    n = index + 1;
                }
                com.tapjoy.ab.a("TapjoyConnect", "parse: " + a.substring(n).trim());
                vector.add(a.substring(n).trim());
                com.tapjoy.m.ad = "";
                for (final ApplicationInfo applicationInfo : com.tapjoy.m.ab.getInstalledApplications(0)) {
                    if ((0x1 & applicationInfo.flags) != 0x1 && vector.contains(applicationInfo.packageName)) {
                        com.tapjoy.ab.a("TapjoyConnect", "MATCH: installed packageName: " + applicationInfo.packageName);
                        if (com.tapjoy.m.ad.length() > 0) {
                            com.tapjoy.m.ad += ",";
                        }
                        com.tapjoy.m.ad += applicationInfo.packageName;
                    }
                }
            }
            final String a2 = com.tapjoy.ae.a(b.getElementsByTagName("Success"));
            if (a2 == null || !a2.equals("true")) {
                return false;
            }
        }
        return true;
    }
    
    public static String g() {
        String s = null;
    Label_0157:
        while (true) {
            s = "";
            while (true) {
                try {
                    final ConnectivityManager connectivityManager = (ConnectivityManager)com.tapjoy.m.a.getSystemService("connectivity");
                    if (connectivityManager == null || connectivityManager.getActiveNetworkInfo() == null) {
                        break;
                    }
                    switch (connectivityManager.getActiveNetworkInfo().getType()) {
                        case 1:
                        case 6: {
                            s = "wifi";
                            com.tapjoy.ab.a("TapjoyConnect", "connectivity: " + connectivityManager.getActiveNetworkInfo().getType());
                            com.tapjoy.ab.a("TapjoyConnect", "connection_type: " + s);
                            break Label_0157;
                        }
                    }
                }
                catch (Exception ex) {
                    final String s2 = s;
                    com.tapjoy.ab.b("TapjoyConnect", "getConnectionType error: " + ex.toString());
                    return s2;
                }
                s = "mobile";
                continue;
            }
        }
        return s;
    }
    
    public static Map h() {
        final HashMap hashMap = new HashMap();
        final long n = System.currentTimeMillis() / 1000L;
        final String a = a(n);
        com.tapjoy.ae.a(hashMap, "timestamp", String.valueOf(n));
        com.tapjoy.ae.a(hashMap, "verifier", a);
        return hashMap;
    }
    
    private static boolean h(final String s) {
        final Iterator<ApplicationInfo> iterator = com.tapjoy.m.ab.getInstalledApplications(0).iterator();
        while (iterator.hasNext()) {
            if (iterator.next().packageName.startsWith(s)) {
                return true;
            }
        }
        return false;
    }
    
    public static void i() {
        if (com.tapjoy.m.e != null) {
            final ak e = com.tapjoy.m.e;
        }
    }
    
    private static boolean i(final String s) {
        final Intent intent = new Intent("android.intent.action.SEND");
        intent.setType("text/plain");
        final Iterator iterator = com.tapjoy.m.ab.queryIntentActivities(intent, 0).iterator();
        while (iterator.hasNext()) {
            if (iterator.next().activityInfo.packageName.startsWith(s)) {
                return true;
            }
        }
        return false;
    }
    
    public static void j() {
        com.tapjoy.m.ae = false;
        if (com.tapjoy.m.e != null) {
            final ak e = com.tapjoy.m.e;
        }
    }
    
    private static void j(String string) {
        if (!string.endsWith("/")) {
            string += "/";
        }
        com.tapjoy.m.ac.put("TJC_SERVICE_URL", string);
    }
    
    public static void k() {
        com.tapjoy.m.ae = true;
        if (com.tapjoy.m.e != null) {
            final ak e = com.tapjoy.m.e;
        }
    }
    
    private static boolean k(final String s) {
        return com.tapjoy.m.ab.checkPermission(s, com.tapjoy.m.a.getPackageName()) == 0;
    }
    
    public static void l() {
        if (com.tapjoy.m.e != null) {
            final ak e = com.tapjoy.m.e;
        }
    }
    
    public static boolean m() {
        return com.tapjoy.m.ae;
    }
    
    public static Map n() {
        return com.tapjoy.m.a.getSharedPreferences("tapjoyOfflineLog", 0).getAll();
    }
    
    public static float o() {
        return com.tapjoy.m.x;
    }
    
    private static Map s() {
        final HashMap hashMap = new HashMap();
        if (e("sha_2_udid") != null && e("sha_2_udid").equals("true")) {
            com.tapjoy.ae.a(hashMap, "sha2_udid", com.tapjoy.m.j);
        }
        else {
            com.tapjoy.ae.a(hashMap, "udid", com.tapjoy.m.i);
        }
        com.tapjoy.ae.a(hashMap, "publisher_user_id", com.tapjoy.m.z);
        com.tapjoy.ae.a(hashMap, "android_id", com.tapjoy.m.g);
        com.tapjoy.ae.a(hashMap, "install_id", com.tapjoy.m.l);
        com.tapjoy.ae.a(hashMap, "mac_address", com.tapjoy.m.k);
        com.tapjoy.ae.a(hashMap, "device_name", com.tapjoy.m.m);
        com.tapjoy.ae.a(hashMap, "device_type", com.tapjoy.m.o);
        com.tapjoy.ae.a(hashMap, "os_version", com.tapjoy.m.p);
        com.tapjoy.ae.a(hashMap, "country_code", com.tapjoy.m.q);
        com.tapjoy.ae.a(hashMap, "language_code", com.tapjoy.m.r);
        com.tapjoy.ae.a(hashMap, "app_version", com.tapjoy.m.t);
        com.tapjoy.ae.a(hashMap, "library_version", com.tapjoy.m.u);
        com.tapjoy.ae.a(hashMap, "bridge_version", com.tapjoy.m.v);
        com.tapjoy.ae.a(hashMap, "platform", com.tapjoy.m.B);
        com.tapjoy.ae.a(hashMap, "display_multiplier", Float.toString(com.tapjoy.m.P));
        com.tapjoy.ae.a(hashMap, "carrier_name", com.tapjoy.m.C);
        com.tapjoy.ae.a(hashMap, "carrier_country_code", com.tapjoy.m.D);
        com.tapjoy.ae.a(hashMap, "mobile_country_code", com.tapjoy.m.E);
        com.tapjoy.ae.a(hashMap, "mobile_network_code", com.tapjoy.m.F);
        com.tapjoy.ae.a(hashMap, "device_manufacturer", com.tapjoy.m.n);
        com.tapjoy.ae.a(hashMap, "screen_density", new StringBuilder().append(com.tapjoy.m.w).toString());
        com.tapjoy.ae.a(hashMap, "screen_layout_size", new StringBuilder().append(com.tapjoy.m.y).toString());
        com.tapjoy.ae.a(hashMap, "connection_type", com.tapjoy.m.G = g());
        com.tapjoy.ae.a(hashMap, "connection_subtype", com.tapjoy.m.H = A());
        com.tapjoy.ae.a(hashMap, "plugin", com.tapjoy.m.K);
        com.tapjoy.ae.a(hashMap, "sdk_type", com.tapjoy.m.L);
        com.tapjoy.ae.a(hashMap, "store_name", com.tapjoy.m.I);
        com.tapjoy.ae.a(hashMap, "device_location", String.valueOf(com.tapjoy.m.A));
        com.tapjoy.ae.a(hashMap, "store_view", String.valueOf(com.tapjoy.m.U));
        if (com.tapjoy.m.h == null || com.tapjoy.m.h.length() == 0 || System.currentTimeMillis() - com.tapjoy.m.Z > 1800000L) {
            com.tapjoy.m.h = B();
        }
        else {
            com.tapjoy.m.Z = System.currentTimeMillis();
        }
        com.tapjoy.ae.a(hashMap, "session_id", com.tapjoy.m.h);
        return hashMap;
    }
    
    private static boolean t() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //     3: invokevirtual   android/content/Context.getPackageManager:()Landroid/content/pm/PackageManager;
        //     6: putstatic       com/tapjoy/m.ab:Landroid/content/pm/PackageManager;
        //     9: getstatic       com/tapjoy/m.ac:Ljava/util/Hashtable;
        //    12: ifnonnull       25
        //    15: new             Ljava/util/Hashtable;
        //    18: dup            
        //    19: invokespecial   java/util/Hashtable.<init>:()V
        //    22: putstatic       com/tapjoy/m.ac:Ljava/util/Hashtable;
        //    25: ldc_w           "enable_logging"
        //    28: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //    31: ifnull          52
        //    34: ldc_w           "enable_logging"
        //    37: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //    40: ldc_w           "true"
        //    43: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //    46: ifeq            52
        //    49: invokestatic    com/tapjoy/ab.a:()V
        //    52: invokestatic    com/tapjoy/m.w:()V
        //    55: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //    58: invokevirtual   android/content/Context.getResources:()Landroid/content/res/Resources;
        //    61: ldc_w           "raw/tapjoy_config"
        //    64: aconst_null    
        //    65: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //    68: invokevirtual   android/content/Context.getPackageName:()Ljava/lang/String;
        //    71: invokevirtual   android/content/res/Resources.getIdentifier:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
        //    74: istore_0       
        //    75: new             Ljava/util/Properties;
        //    78: dup            
        //    79: invokespecial   java/util/Properties.<init>:()V
        //    82: astore_1       
        //    83: aload_1        
        //    84: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //    87: invokevirtual   android/content/Context.getResources:()Landroid/content/res/Resources;
        //    90: iload_0        
        //    91: invokevirtual   android/content/res/Resources.openRawResource:(I)Ljava/io/InputStream;
        //    94: invokevirtual   java/util/Properties.load:(Ljava/io/InputStream;)V
        //    97: aload_1        
        //    98: invokestatic    com/tapjoy/m.a:(Ljava/util/Properties;)V
        //   101: ldc_w           "skip_integrations"
        //   104: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   107: ldc             ""
        //   109: if_acmpne       115
        //   112: invokestatic    com/tapjoy/m.x:()V
        //   115: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //   118: invokevirtual   android/content/Context.getContentResolver:()Landroid/content/ContentResolver;
        //   121: ldc_w           "android_id"
        //   124: invokestatic    android/provider/Settings$Secure.getString:(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
        //   127: astore_3       
        //   128: aload_3        
        //   129: putstatic       com/tapjoy/m.g:Ljava/lang/String;
        //   132: aload_3        
        //   133: ifnull          145
        //   136: getstatic       com/tapjoy/m.g:Ljava/lang/String;
        //   139: invokevirtual   java/lang/String.toLowerCase:()Ljava/lang/String;
        //   142: putstatic       com/tapjoy/m.g:Ljava/lang/String;
        //   145: getstatic       com/tapjoy/m.ab:Landroid/content/pm/PackageManager;
        //   148: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //   151: invokevirtual   android/content/Context.getPackageName:()Ljava/lang/String;
        //   154: iconst_0       
        //   155: invokevirtual   android/content/pm/PackageManager.getPackageInfo:(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
        //   158: getfield        android/content/pm/PackageInfo.versionName:Ljava/lang/String;
        //   161: putstatic       com/tapjoy/m.t:Ljava/lang/String;
        //   164: ldc_w           "android"
        //   167: putstatic       com/tapjoy/m.o:Ljava/lang/String;
        //   170: ldc_w           "android"
        //   173: putstatic       com/tapjoy/m.B:Ljava/lang/String;
        //   176: getstatic       android/os/Build.MODEL:Ljava/lang/String;
        //   179: putstatic       com/tapjoy/m.m:Ljava/lang/String;
        //   182: getstatic       android/os/Build.MANUFACTURER:Ljava/lang/String;
        //   185: putstatic       com/tapjoy/m.n:Ljava/lang/String;
        //   188: getstatic       android/os/Build$VERSION.RELEASE:Ljava/lang/String;
        //   191: putstatic       com/tapjoy/m.p:Ljava/lang/String;
        //   194: invokestatic    java/util/Locale.getDefault:()Ljava/util/Locale;
        //   197: invokevirtual   java/util/Locale.getCountry:()Ljava/lang/String;
        //   200: putstatic       com/tapjoy/m.q:Ljava/lang/String;
        //   203: invokestatic    java/util/Locale.getDefault:()Ljava/util/Locale;
        //   206: invokevirtual   java/util/Locale.getLanguage:()Ljava/lang/String;
        //   209: putstatic       com/tapjoy/m.r:Ljava/lang/String;
        //   212: ldc_w           "9.1.5"
        //   215: putstatic       com/tapjoy/m.u:Ljava/lang/String;
        //   218: ldc_w           "1.0.5"
        //   221: putstatic       com/tapjoy/m.v:Ljava/lang/String;
        //   224: getstatic       android/os/Build$VERSION.SDK_INT:I
        //   227: iconst_3       
        //   228: if_icmple       267
        //   231: new             Lcom/tapjoy/v;
        //   234: dup            
        //   235: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //   238: invokespecial   com/tapjoy/v.<init>:(Landroid/content/Context;)V
        //   241: astore          24
        //   243: aload           24
        //   245: invokevirtual   com/tapjoy/v.a:()I
        //   248: putstatic       com/tapjoy/m.w:I
        //   251: aload           24
        //   253: invokevirtual   com/tapjoy/v.b:()F
        //   256: putstatic       com/tapjoy/m.x:F
        //   259: aload           24
        //   261: invokevirtual   com/tapjoy/v.c:()I
        //   264: putstatic       com/tapjoy/m.y:I
        //   267: ldc_w           "android.permission.ACCESS_WIFI_STATE"
        //   270: invokestatic    com/tapjoy/m.k:(Ljava/lang/String;)Z
        //   273: ifeq            1046
        //   276: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //   279: ldc_w           "wifi"
        //   282: invokevirtual   android/content/Context.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;
        //   285: checkcast       Landroid/net/wifi/WifiManager;
        //   288: astore          21
        //   290: aload           21
        //   292: ifnull          341
        //   295: aload           21
        //   297: invokevirtual   android/net/wifi/WifiManager.getConnectionInfo:()Landroid/net/wifi/WifiInfo;
        //   300: astore          22
        //   302: aload           22
        //   304: ifnull          341
        //   307: aload           22
        //   309: invokevirtual   android/net/wifi/WifiInfo.getMacAddress:()Ljava/lang/String;
        //   312: astore          23
        //   314: aload           23
        //   316: putstatic       com/tapjoy/m.k:Ljava/lang/String;
        //   319: aload           23
        //   321: ifnull          341
        //   324: getstatic       com/tapjoy/m.k:Ljava/lang/String;
        //   327: ldc_w           ":"
        //   330: ldc             ""
        //   332: invokevirtual   java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
        //   335: invokevirtual   java/lang/String.toLowerCase:()Ljava/lang/String;
        //   338: putstatic       com/tapjoy/m.k:Ljava/lang/String;
        //   341: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //   344: ldc_w           "phone"
        //   347: invokevirtual   android/content/Context.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;
        //   350: checkcast       Landroid/telephony/TelephonyManager;
        //   353: astore          6
        //   355: aload           6
        //   357: ifnull          597
        //   360: aload           6
        //   362: invokevirtual   android/telephony/TelephonyManager.getNetworkOperatorName:()Ljava/lang/String;
        //   365: putstatic       com/tapjoy/m.C:Ljava/lang/String;
        //   368: aload           6
        //   370: invokevirtual   android/telephony/TelephonyManager.getNetworkCountryIso:()Ljava/lang/String;
        //   373: putstatic       com/tapjoy/m.D:Ljava/lang/String;
        //   376: aload           6
        //   378: invokevirtual   android/telephony/TelephonyManager.getNetworkOperator:()Ljava/lang/String;
        //   381: ifnull          434
        //   384: aload           6
        //   386: invokevirtual   android/telephony/TelephonyManager.getNetworkOperator:()Ljava/lang/String;
        //   389: invokevirtual   java/lang/String.length:()I
        //   392: iconst_5       
        //   393: if_icmpeq       409
        //   396: aload           6
        //   398: invokevirtual   android/telephony/TelephonyManager.getNetworkOperator:()Ljava/lang/String;
        //   401: invokevirtual   java/lang/String.length:()I
        //   404: bipush          6
        //   406: if_icmpne       434
        //   409: aload           6
        //   411: invokevirtual   android/telephony/TelephonyManager.getNetworkOperator:()Ljava/lang/String;
        //   414: iconst_0       
        //   415: iconst_3       
        //   416: invokevirtual   java/lang/String.substring:(II)Ljava/lang/String;
        //   419: putstatic       com/tapjoy/m.E:Ljava/lang/String;
        //   422: aload           6
        //   424: invokevirtual   android/telephony/TelephonyManager.getNetworkOperator:()Ljava/lang/String;
        //   427: iconst_3       
        //   428: invokevirtual   java/lang/String.substring:(I)Ljava/lang/String;
        //   431: putstatic       com/tapjoy/m.F:Ljava/lang/String;
        //   434: ldc_w           "android.permission.READ_PHONE_STATE"
        //   437: invokestatic    com/tapjoy/m.k:(Ljava/lang/String;)Z
        //   440: ifeq            1242
        //   443: ldc_w           "debug_device_id"
        //   446: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   449: ifnull          1057
        //   452: ldc_w           "debug_device_id"
        //   455: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   458: invokevirtual   java/lang/String.length:()I
        //   461: ifle            1057
        //   464: ldc_w           "debug_device_id"
        //   467: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   470: putstatic       com/tapjoy/m.i:Ljava/lang/String;
        //   473: ldc             "TapjoyConnect"
        //   475: new             Ljava/lang/StringBuilder;
        //   478: dup            
        //   479: ldc_w           "deviceID: "
        //   482: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   485: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //   488: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   491: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   494: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   497: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //   500: ifnonnull       1103
        //   503: ldc             "TapjoyConnect"
        //   505: ldc_w           "Device id is null."
        //   508: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //   511: iconst_0       
        //   512: istore          18
        //   514: ldc             "TapjoyConnect"
        //   516: new             Ljava/lang/StringBuilder;
        //   519: dup            
        //   520: ldc_w           "ANDROID SDK VERSION: "
        //   523: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   526: getstatic       android/os/Build$VERSION.SDK_INT:I
        //   529: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   532: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   535: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   538: getstatic       android/os/Build$VERSION.SDK_INT:I
        //   541: bipush          9
        //   543: if_icmplt       583
        //   546: ldc             "TapjoyConnect"
        //   548: ldc_w           "TRYING TO GET SERIAL OF 2.3+ DEVICE..."
        //   551: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   554: invokestatic    com/tapjoy/m.z:()Ljava/lang/String;
        //   557: astore          19
        //   559: iload           18
        //   561: ifne            569
        //   564: aload           19
        //   566: putstatic       com/tapjoy/m.i:Ljava/lang/String;
        //   569: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //   572: ifnonnull       1168
        //   575: ldc             "TapjoyConnect"
        //   577: ldc_w           "SERIAL: Device id is null."
        //   580: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //   583: iload           18
        //   585: ifeq            597
        //   588: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //   591: invokestatic    com/tapjoy/ae.a:(Ljava/lang/String;)Ljava/lang/String;
        //   594: putstatic       com/tapjoy/m.j:Ljava/lang/String;
        //   597: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //   600: ifnull          1253
        //   603: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //   606: invokevirtual   java/lang/String.length:()I
        //   609: ifle            1253
        //   612: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //   615: putstatic       com/tapjoy/m.z:Ljava/lang/String;
        //   618: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //   621: ldc_w           "tjcPrefrences"
        //   624: iconst_0       
        //   625: invokevirtual   android/content/Context.getSharedPreferences:(Ljava/lang/String;I)Landroid/content/SharedPreferences;
        //   628: astore          7
        //   630: aload           7
        //   632: ldc_w           "tapjoyInstallId"
        //   635: ldc             ""
        //   637: invokeinterface android/content/SharedPreferences.getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   642: astore          8
        //   644: aload           8
        //   646: putstatic       com/tapjoy/m.l:Ljava/lang/String;
        //   649: aload           8
        //   651: ifnull          663
        //   654: getstatic       com/tapjoy/m.l:Ljava/lang/String;
        //   657: invokevirtual   java/lang/String.length:()I
        //   660: ifne            725
        //   663: new             Ljava/lang/StringBuilder;
        //   666: dup            
        //   667: invokespecial   java/lang/StringBuilder.<init>:()V
        //   670: invokestatic    java/util/UUID.randomUUID:()Ljava/util/UUID;
        //   673: invokevirtual   java/util/UUID.toString:()Ljava/lang/String;
        //   676: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   679: invokestatic    java/lang/System.currentTimeMillis:()J
        //   682: invokevirtual   java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        //   685: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   688: invokestatic    com/tapjoy/ae.a:(Ljava/lang/String;)Ljava/lang/String;
        //   691: putstatic       com/tapjoy/m.l:Ljava/lang/String;
        //   694: aload           7
        //   696: invokeinterface android/content/SharedPreferences.edit:()Landroid/content/SharedPreferences$Editor;
        //   701: astore          14
        //   703: aload           14
        //   705: ldc_w           "tapjoyInstallId"
        //   708: getstatic       com/tapjoy/m.l:Ljava/lang/String;
        //   711: invokeinterface android/content/SharedPreferences$Editor.putString:(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;
        //   716: pop            
        //   717: aload           14
        //   719: invokeinterface android/content/SharedPreferences$Editor.commit:()Z
        //   724: pop            
        //   725: invokestatic    com/tapjoy/m.v:()V
        //   728: ldc_w           "TJC_SERVICE_URL"
        //   731: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   734: ldc             ""
        //   736: if_acmpne       745
        //   739: ldc_w           "https://ws.tapjoyads.com/"
        //   742: invokestatic    com/tapjoy/m.j:(Ljava/lang/String;)V
        //   745: ldc_w           "debug_host_url"
        //   748: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   751: ifnull          775
        //   754: ldc_w           "debug_host_url"
        //   757: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   760: invokevirtual   java/lang/String.length:()I
        //   763: ifle            775
        //   766: ldc_w           "debug_host_url"
        //   769: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   772: invokestatic    com/tapjoy/m.j:(Ljava/lang/String;)V
        //   775: ldc_w           "TJC_SERVICE_URL"
        //   778: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   781: invokestatic    com/tapjoy/ae.e:(Ljava/lang/String;)Ljava/lang/String;
        //   784: putstatic       com/tapjoy/m.M:Ljava/lang/String;
        //   787: new             Ljava/lang/StringBuilder;
        //   790: dup            
        //   791: ldc_w           "deviceID: "
        //   794: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   797: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //   800: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   803: astore          10
        //   805: ldc_w           "debug_device_id"
        //   808: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   811: ifnull          1343
        //   814: ldc_w           "debug_device_id"
        //   817: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   820: invokevirtual   java/lang/String.length:()I
        //   823: ifle            1343
        //   826: ldc_w           " *debug_device_id*"
        //   829: astore          11
        //   831: ldc             "TapjoyConnect"
        //   833: aload           10
        //   835: aload           11
        //   837: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   840: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   843: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   846: ldc             "TapjoyConnect"
        //   848: new             Ljava/lang/StringBuilder;
        //   851: dup            
        //   852: ldc_w           "sha2_udid: "
        //   855: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   858: getstatic       com/tapjoy/m.j:Ljava/lang/String;
        //   861: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   864: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   867: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   870: invokestatic    com/tapjoy/m.c:()Ljava/util/Map;
        //   873: invokeinterface java/util/Map.entrySet:()Ljava/util/Set;
        //   878: invokeinterface java/util/Set.iterator:()Ljava/util/Iterator;
        //   883: astore          12
        //   885: aload           12
        //   887: invokeinterface java/util/Iterator.hasNext:()Z
        //   892: ifeq            1350
        //   895: aload           12
        //   897: invokeinterface java/util/Iterator.next:()Ljava/lang/Object;
        //   902: checkcast       Ljava/util/Map$Entry;
        //   905: astore          13
        //   907: ldc             "TapjoyConnect"
        //   909: new             Ljava/lang/StringBuilder;
        //   912: dup            
        //   913: invokespecial   java/lang/StringBuilder.<init>:()V
        //   916: aload           13
        //   918: invokeinterface java/util/Map$Entry.getKey:()Ljava/lang/Object;
        //   923: checkcast       Ljava/lang/String;
        //   926: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   929: ldc_w           ": "
        //   932: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   935: aload           13
        //   937: invokeinterface java/util/Map$Entry.getValue:()Ljava/lang/Object;
        //   942: checkcast       Ljava/lang/String;
        //   945: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   948: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   951: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   954: goto            885
        //   957: astore_2       
        //   958: ldc             "TapjoyConnect"
        //   960: ldc_w           "No raw/tapjoy_config file present."
        //   963: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   966: goto            101
        //   969: astore          4
        //   971: new             Lcom/tapjoy/x;
        //   974: dup            
        //   975: aload           4
        //   977: invokevirtual   android/content/pm/PackageManager$NameNotFoundException.getMessage:()Ljava/lang/String;
        //   980: invokespecial   com/tapjoy/x.<init>:(Ljava/lang/String;)V
        //   983: athrow         
        //   984: astore          5
        //   986: ldc             "TapjoyConnect"
        //   988: new             Ljava/lang/StringBuilder;
        //   991: dup            
        //   992: ldc_w           "Error getting screen density/dimensions/layout: "
        //   995: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   998: aload           5
        //  1000: invokevirtual   java/lang/Exception.toString:()Ljava/lang/String;
        //  1003: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //  1006: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //  1009: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //  1012: goto            267
        //  1015: astore          20
        //  1017: ldc             "TapjoyConnect"
        //  1019: new             Ljava/lang/StringBuilder;
        //  1022: dup            
        //  1023: ldc_w           "Error getting device mac address: "
        //  1026: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //  1029: aload           20
        //  1031: invokevirtual   java/lang/Exception.toString:()Ljava/lang/String;
        //  1034: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //  1037: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //  1040: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //  1043: goto            341
        //  1046: ldc             "TapjoyConnect"
        //  1048: ldc_w           "*** ignore macAddress"
        //  1051: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //  1054: goto            341
        //  1057: aload           6
        //  1059: invokevirtual   android/telephony/TelephonyManager.getDeviceId:()Ljava/lang/String;
        //  1062: putstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1065: goto            473
        //  1068: astore          17
        //  1070: ldc             "TapjoyConnect"
        //  1072: new             Ljava/lang/StringBuilder;
        //  1075: dup            
        //  1076: ldc_w           "Cannot get deviceID. e: "
        //  1079: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //  1082: aload           17
        //  1084: invokevirtual   java/lang/Exception.toString:()Ljava/lang/String;
        //  1087: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //  1090: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //  1093: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //  1096: aconst_null    
        //  1097: putstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1100: goto            597
        //  1103: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1106: invokevirtual   java/lang/String.length:()I
        //  1109: ifeq            1136
        //  1112: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1115: ldc_w           "000000000000000"
        //  1118: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //  1121: ifne            1136
        //  1124: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1127: ldc_w           "0"
        //  1130: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //  1133: ifeq            1150
        //  1136: ldc             "TapjoyConnect"
        //  1138: ldc_w           "Device id is empty or an emulator."
        //  1141: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //  1144: iconst_0       
        //  1145: istore          18
        //  1147: goto            514
        //  1150: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1153: invokestatic    java/util/Locale.getDefault:()Ljava/util/Locale;
        //  1156: invokevirtual   java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
        //  1159: putstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1162: iconst_1       
        //  1163: istore          18
        //  1165: goto            514
        //  1168: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1171: invokevirtual   java/lang/String.length:()I
        //  1174: ifeq            1213
        //  1177: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1180: ldc_w           "000000000000000"
        //  1183: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //  1186: ifne            1213
        //  1189: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1192: ldc_w           "0"
        //  1195: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //  1198: ifne            1213
        //  1201: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1204: ldc_w           "unknown"
        //  1207: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //  1210: ifeq            1224
        //  1213: ldc             "TapjoyConnect"
        //  1215: ldc_w           "SERIAL: Device id is empty or an emulator."
        //  1218: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //  1221: goto            583
        //  1224: getstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1227: invokestatic    java/util/Locale.getDefault:()Ljava/util/Locale;
        //  1230: invokevirtual   java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
        //  1233: putstatic       com/tapjoy/m.i:Ljava/lang/String;
        //  1236: iconst_1       
        //  1237: istore          18
        //  1239: goto            583
        //  1242: ldc             "TapjoyConnect"
        //  1244: ldc_w           "*** ignore deviceID"
        //  1247: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //  1250: goto            597
        //  1253: getstatic       com/tapjoy/m.k:Ljava/lang/String;
        //  1256: ifnull          1277
        //  1259: getstatic       com/tapjoy/m.k:Ljava/lang/String;
        //  1262: invokevirtual   java/lang/String.length:()I
        //  1265: ifle            1277
        //  1268: getstatic       com/tapjoy/m.k:Ljava/lang/String;
        //  1271: putstatic       com/tapjoy/m.z:Ljava/lang/String;
        //  1274: goto            618
        //  1277: getstatic       com/tapjoy/m.g:Ljava/lang/String;
        //  1280: ifnull          1301
        //  1283: getstatic       com/tapjoy/m.g:Ljava/lang/String;
        //  1286: invokevirtual   java/lang/String.length:()I
        //  1289: ifle            1301
        //  1292: getstatic       com/tapjoy/m.g:Ljava/lang/String;
        //  1295: putstatic       com/tapjoy/m.z:Ljava/lang/String;
        //  1298: goto            618
        //  1301: new             Lcom/tapjoy/x;
        //  1304: dup            
        //  1305: ldc_w           "ERROR -- No valid device identifier"
        //  1308: invokespecial   com/tapjoy/x.<init>:(Ljava/lang/String;)V
        //  1311: athrow         
        //  1312: astore          9
        //  1314: ldc             "TapjoyConnect"
        //  1316: new             Ljava/lang/StringBuilder;
        //  1319: dup            
        //  1320: ldc_w           "Error generating install id: "
        //  1323: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //  1326: aload           9
        //  1328: invokevirtual   java/lang/Exception.toString:()Ljava/lang/String;
        //  1331: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //  1334: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //  1337: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //  1340: goto            725
        //  1343: ldc             ""
        //  1345: astore          11
        //  1347: goto            831
        //  1350: getstatic       com/tapjoy/m.ac:Ljava/util/Hashtable;
        //  1353: ifnull          1359
        //  1356: invokestatic    com/tapjoy/m.u:()V
        //  1359: iconst_1       
        //  1360: ireturn        
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                                     
        //  -----  -----  -----  -----  ---------------------------------------------------------
        //  83     101    957    969    Ljava/lang/Exception;
        //  145    164    969    984    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  224    267    984    1015   Ljava/lang/Exception;
        //  276    290    1015   1046   Ljava/lang/Exception;
        //  295    302    1015   1046   Ljava/lang/Exception;
        //  307    319    1015   1046   Ljava/lang/Exception;
        //  324    341    1015   1046   Ljava/lang/Exception;
        //  443    473    1068   1103   Ljava/lang/Exception;
        //  473    511    1068   1103   Ljava/lang/Exception;
        //  514    559    1068   1103   Ljava/lang/Exception;
        //  564    569    1068   1103   Ljava/lang/Exception;
        //  569    583    1068   1103   Ljava/lang/Exception;
        //  588    597    1068   1103   Ljava/lang/Exception;
        //  663    725    1312   1343   Ljava/lang/Exception;
        //  1057   1065   1068   1103   Ljava/lang/Exception;
        //  1103   1136   1068   1103   Ljava/lang/Exception;
        //  1136   1144   1068   1103   Ljava/lang/Exception;
        //  1150   1162   1068   1103   Ljava/lang/Exception;
        //  1168   1213   1068   1103   Ljava/lang/Exception;
        //  1213   1221   1068   1103   Ljava/lang/Exception;
        //  1224   1236   1068   1103   Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 504, Size: 504
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private static void u() {
        com.tapjoy.ab.a("TapjoyConnect", "Connect Flags:");
        com.tapjoy.ab.a("TapjoyConnect", "--------------------");
        for (final Map.Entry<String, V> entry : com.tapjoy.m.ac.entrySet()) {
            com.tapjoy.ab.a("TapjoyConnect", "key: " + entry.getKey() + ", value: " + Uri.encode((String)entry.getValue()));
            if (entry.getKey().equals("sha_2_udid") && !com.tapjoy.m.L.equals("connect")) {
                com.tapjoy.ab.c("TapjoyConnect", "WARNING -- only the Connect/Advertiser SDK can support sha_2_udid");
                com.tapjoy.m.ac.remove("sha_2_udid");
            }
        }
        com.tapjoy.ab.a("TapjoyConnect", "hostURL: [" + e("TJC_SERVICE_URL") + "]");
        com.tapjoy.ab.a("TapjoyConnect", "redirectDomain: [" + com.tapjoy.m.M + "]");
        com.tapjoy.ab.a("TapjoyConnect", "--------------------");
    }
    
    private static void v() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: iconst_1       
        //     1: istore_0       
        //     2: getstatic       com/tapjoy/m.ab:Landroid/content/pm/PackageManager;
        //     5: invokevirtual   android/content/pm/PackageManager.getSystemAvailableFeatures:()[Landroid/content/pm/FeatureInfo;
        //     8: astore          8
        //    10: aload           8
        //    12: arraylength    
        //    13: istore          9
        //    15: iconst_0       
        //    16: istore          10
        //    18: iload           10
        //    20: iload           9
        //    22: if_icmpge       251
        //    25: aload           8
        //    27: iload           10
        //    29: aaload         
        //    30: getfield        android/content/pm/FeatureInfo.name:Ljava/lang/String;
        //    33: ldc_w           "android.hardware.location"
        //    36: invokevirtual   java/lang/String.matches:(Ljava/lang/String;)Z
        //    39: ifeq            245
        //    42: getstatic       com/tapjoy/m.ab:Landroid/content/pm/PackageManager;
        //    45: ldc_w           "android.permission.ACCESS_FINE_LOCATION"
        //    48: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //    51: invokevirtual   android/content/Context.getPackageName:()Ljava/lang/String;
        //    54: invokevirtual   android/content/pm/PackageManager.checkPermission:(Ljava/lang/String;Ljava/lang/String;)I
        //    57: ifne            239
        //    60: iload_0        
        //    61: istore          11
        //    63: iload           11
        //    65: putstatic       com/tapjoy/m.A:Z
        //    68: ldc_w           "com.facebook."
        //    71: invokestatic    com/tapjoy/m.i:(Ljava/lang/String;)Z
        //    74: putstatic       com/tapjoy/m.Q:Z
        //    77: ldc_w           "com.twitter."
        //    80: invokestatic    com/tapjoy/m.i:(Ljava/lang/String;)Z
        //    83: putstatic       com/tapjoy/m.R:Z
        //    86: ldc_w           "com.google.android.apps.plus"
        //    89: invokestatic    com/tapjoy/m.i:(Ljava/lang/String;)Z
        //    92: putstatic       com/tapjoy/m.S:Z
        //    95: ldc_w           "com.linkedin."
        //    98: invokestatic    com/tapjoy/m.i:(Ljava/lang/String;)Z
        //   101: putstatic       com/tapjoy/m.T:Z
        //   104: ldc_w           "store_name"
        //   107: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   110: ifnull          180
        //   113: ldc_w           "store_name"
        //   116: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   119: invokevirtual   java/lang/String.length:()I
        //   122: ifle            180
        //   125: ldc_w           "store_name"
        //   128: invokestatic    com/tapjoy/m.e:(Ljava/lang/String;)Ljava/lang/String;
        //   131: putstatic       com/tapjoy/m.I:Ljava/lang/String;
        //   134: new             Ljava/util/ArrayList;
        //   137: dup            
        //   138: getstatic       com/tapjoy/p.b:[Ljava/lang/String;
        //   141: invokestatic    java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
        //   144: invokespecial   java/util/ArrayList.<init>:(Ljava/util/Collection;)V
        //   147: getstatic       com/tapjoy/m.I:Ljava/lang/String;
        //   150: invokevirtual   java/util/ArrayList.contains:(Ljava/lang/Object;)Z
        //   153: ifne            180
        //   156: ldc             "TapjoyConnect"
        //   158: new             Ljava/lang/StringBuilder;
        //   161: dup            
        //   162: ldc_w           "Warning -- undefined STORE_NAME: "
        //   165: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   168: getstatic       com/tapjoy/m.I:Ljava/lang/String;
        //   171: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   174: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   177: invokestatic    com/tapjoy/ab.c:(Ljava/lang/String;Ljava/lang/String;)V
        //   180: getstatic       com/tapjoy/m.I:Ljava/lang/String;
        //   183: astore          4
        //   185: new             Landroid/content/Intent;
        //   188: dup            
        //   189: ldc_w           "android.intent.action.VIEW"
        //   192: invokespecial   android/content/Intent.<init>:(Ljava/lang/String;)V
        //   195: astore          5
        //   197: aload           4
        //   199: invokevirtual   java/lang/String.length:()I
        //   202: ifgt            315
        //   205: aload           5
        //   207: ldc_w           "market://details"
        //   210: invokestatic    android/net/Uri.parse:(Ljava/lang/String;)Landroid/net/Uri;
        //   213: invokevirtual   android/content/Intent.setData:(Landroid/net/Uri;)Landroid/content/Intent;
        //   216: pop            
        //   217: getstatic       com/tapjoy/m.ab:Landroid/content/pm/PackageManager;
        //   220: aload           5
        //   222: iconst_0       
        //   223: invokevirtual   android/content/pm/PackageManager.queryIntentActivities:(Landroid/content/Intent;I)Ljava/util/List;
        //   226: invokeinterface java/util/List.size:()I
        //   231: ifle            388
        //   234: iload_0        
        //   235: putstatic       com/tapjoy/m.U:Z
        //   238: return         
        //   239: iconst_0       
        //   240: istore          11
        //   242: goto            63
        //   245: iinc            10, 1
        //   248: goto            18
        //   251: iconst_0       
        //   252: istore          11
        //   254: goto            63
        //   257: astore_1       
        //   258: ldc             "TapjoyConnect"
        //   260: new             Ljava/lang/StringBuilder;
        //   263: dup            
        //   264: ldc_w           "Error trying to detect capabilities on devicee: "
        //   267: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   270: aload_1        
        //   271: invokevirtual   java/lang/Exception.toString:()Ljava/lang/String;
        //   274: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   277: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   280: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //   283: goto            68
        //   286: astore_2       
        //   287: ldc             "TapjoyConnect"
        //   289: new             Ljava/lang/StringBuilder;
        //   292: dup            
        //   293: ldc_w           "Error trying to detect sharing applications installed on devicee: "
        //   296: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   299: aload_2        
        //   300: invokevirtual   java/lang/Exception.toString:()Ljava/lang/String;
        //   303: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   306: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   309: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //   312: goto            104
        //   315: aload           4
        //   317: ldc_w           "gfan"
        //   320: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   323: ifeq            336
        //   326: ldc_w           "com.mappn.gfan"
        //   329: invokestatic    com/tapjoy/m.h:(Ljava/lang/String;)Z
        //   332: istore_0       
        //   333: goto            234
        //   336: aload           4
        //   338: ldc_w           "skt"
        //   341: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   344: ifeq            388
        //   347: ldc_w           "com.skt.skaf.TSCINSTALL"
        //   350: invokestatic    com/tapjoy/m.h:(Ljava/lang/String;)Z
        //   353: istore          6
        //   355: iload           6
        //   357: istore_0       
        //   358: goto            234
        //   361: astore_3       
        //   362: ldc             "TapjoyConnect"
        //   364: new             Ljava/lang/StringBuilder;
        //   367: dup            
        //   368: ldc_w           "Error trying to detect store intent on devicee: "
        //   371: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   374: aload_3        
        //   375: invokevirtual   java/lang/Exception.toString:()Ljava/lang/String;
        //   378: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   381: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   384: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //   387: return         
        //   388: iconst_0       
        //   389: istore_0       
        //   390: goto            234
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  2      15     257    286    Ljava/lang/Exception;
        //  25     60     257    286    Ljava/lang/Exception;
        //  63     68     257    286    Ljava/lang/Exception;
        //  68     104    286    315    Ljava/lang/Exception;
        //  180    234    361    388    Ljava/lang/Exception;
        //  234    238    361    388    Ljava/lang/Exception;
        //  315    333    361    388    Ljava/lang/Exception;
        //  336    355    361    388    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 158, Size: 158
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private static void w() {
        while (true) {
            while (true) {
                int n;
                try {
                    if (com.tapjoy.m.ab == null) {
                        break;
                    }
                    final ApplicationInfo applicationInfo = com.tapjoy.m.ab.getApplicationInfo(com.tapjoy.m.a.getPackageName(), 128);
                    if (applicationInfo == null || applicationInfo.metaData == null) {
                        com.tapjoy.ab.a("TapjoyConnect", "No metadata present.");
                        return;
                    }
                    final String[] a = com.tapjoy.p.a;
                    final int length = a.length;
                    n = 0;
                    if (n >= length) {
                        com.tapjoy.ab.a("TapjoyConnect", "Metadata successfully loaded");
                        return;
                    }
                    final String s = a[n];
                    final String string = applicationInfo.metaData.getString("tapjoy." + s);
                    if (string != null) {
                        com.tapjoy.ab.a("TapjoyConnect", "Found manifest flag: " + s + ", " + string);
                        com.tapjoy.m.ac.put(s, string);
                    }
                }
                catch (Exception ex) {
                    com.tapjoy.ab.b("TapjoyConnect", "Error reading manifest meta-data: " + ex.toString());
                    return;
                }
                ++n;
                continue;
            }
        }
    }
    
    private static void x() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: getstatic       com/tapjoy/m.ab:Landroid/content/pm/PackageManager;
        //     3: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //     6: invokevirtual   android/content/Context.getPackageName:()Ljava/lang/String;
        //     9: iconst_1       
        //    10: invokevirtual   android/content/pm/PackageManager.getPackageInfo:(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
        //    13: getfield        android/content/pm/PackageInfo.activities:[Landroid/content/pm/ActivityInfo;
        //    16: invokestatic    java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
        //    19: astore_1       
        //    20: aload_1        
        //    21: ifnull          445
        //    24: aload_1        
        //    25: invokeinterface java/util/List.iterator:()Ljava/util/Iterator;
        //    30: astore_2       
        //    31: aload_2        
        //    32: invokeinterface java/util/Iterator.hasNext:()Z
        //    37: ifeq            445
        //    40: aload_2        
        //    41: invokeinterface java/util/Iterator.next:()Ljava/lang/Object;
        //    46: checkcast       Landroid/content/pm/ActivityInfo;
        //    49: astore          8
        //    51: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //    54: aload           8
        //    56: getfield        android/content/pm/ActivityInfo.name:Ljava/lang/String;
        //    59: invokevirtual   java/util/Vector.contains:(Ljava/lang/Object;)Z
        //    62: ifeq            31
        //    65: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //    68: aload           8
        //    70: getfield        android/content/pm/ActivityInfo.name:Ljava/lang/String;
        //    73: invokevirtual   java/util/Vector.indexOf:(Ljava/lang/Object;)I
        //    76: istore          9
        //    78: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //    81: iload           9
        //    83: invokevirtual   java/util/Vector.get:(I)Ljava/lang/Object;
        //    86: checkcast       Ljava/lang/String;
        //    89: invokestatic    java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
        //    92: pop            
        //    93: new             Ljava/util/Vector;
        //    96: dup            
        //    97: invokespecial   java/util/Vector.<init>:()V
        //   100: astore          12
        //   102: sipush          128
        //   105: aload           8
        //   107: getfield        android/content/pm/ActivityInfo.configChanges:I
        //   110: iand           
        //   111: sipush          128
        //   114: if_icmpeq       126
        //   117: aload           12
        //   119: ldc_w           "orientation"
        //   122: invokevirtual   java/util/Vector.add:(Ljava/lang/Object;)Z
        //   125: pop            
        //   126: bipush          32
        //   128: aload           8
        //   130: getfield        android/content/pm/ActivityInfo.configChanges:I
        //   133: iand           
        //   134: bipush          32
        //   136: if_icmpeq       148
        //   139: aload           12
        //   141: ldc_w           "keyboardHidden"
        //   144: invokevirtual   java/util/Vector.add:(Ljava/lang/Object;)Z
        //   147: pop            
        //   148: aload           12
        //   150: invokevirtual   java/util/Vector.size:()I
        //   153: ifeq            306
        //   156: aload           12
        //   158: invokevirtual   java/util/Vector.size:()I
        //   161: iconst_1       
        //   162: if_icmpne       260
        //   165: new             Lcom/tapjoy/aa;
        //   168: dup            
        //   169: new             Ljava/lang/StringBuilder;
        //   172: dup            
        //   173: invokespecial   java/lang/StringBuilder.<init>:()V
        //   176: aload           12
        //   178: invokevirtual   java/util/Vector.toString:()Ljava/lang/String;
        //   181: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   184: ldc_w           " property is not specified in manifest configChanges for "
        //   187: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   190: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   193: iload           9
        //   195: invokevirtual   java/util/Vector.get:(I)Ljava/lang/Object;
        //   198: checkcast       Ljava/lang/String;
        //   201: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   204: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   207: invokespecial   com/tapjoy/aa.<init>:(Ljava/lang/String;)V
        //   210: athrow         
        //   211: astore          10
        //   213: new             Lcom/tapjoy/aa;
        //   216: dup            
        //   217: new             Ljava/lang/StringBuilder;
        //   220: dup            
        //   221: ldc_w           "[ClassNotFoundException] Could not find dependency class "
        //   224: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   227: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   230: iload           9
        //   232: invokevirtual   java/util/Vector.get:(I)Ljava/lang/Object;
        //   235: checkcast       Ljava/lang/String;
        //   238: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   241: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   244: invokespecial   com/tapjoy/aa.<init>:(Ljava/lang/String;)V
        //   247: athrow         
        //   248: astore_0       
        //   249: new             Lcom/tapjoy/aa;
        //   252: dup            
        //   253: ldc_w           "NameNotFoundException: Could not find package."
        //   256: invokespecial   com/tapjoy/aa.<init>:(Ljava/lang/String;)V
        //   259: athrow         
        //   260: new             Lcom/tapjoy/aa;
        //   263: dup            
        //   264: new             Ljava/lang/StringBuilder;
        //   267: dup            
        //   268: invokespecial   java/lang/StringBuilder.<init>:()V
        //   271: aload           12
        //   273: invokevirtual   java/util/Vector.toString:()Ljava/lang/String;
        //   276: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   279: ldc_w           " properties are not specified in manifest configChanges for "
        //   282: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   285: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   288: iload           9
        //   290: invokevirtual   java/util/Vector.get:(I)Ljava/lang/Object;
        //   293: checkcast       Ljava/lang/String;
        //   296: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   299: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   302: invokespecial   com/tapjoy/aa.<init>:(Ljava/lang/String;)V
        //   305: athrow         
        //   306: getstatic       android/os/Build$VERSION.SDK_INT:I
        //   309: bipush          13
        //   311: if_icmplt       361
        //   314: sipush          1024
        //   317: aload           8
        //   319: getfield        android/content/pm/ActivityInfo.configChanges:I
        //   322: iand           
        //   323: sipush          1024
        //   326: if_icmpeq       361
        //   329: ldc             "TapjoyConnect"
        //   331: new             Ljava/lang/StringBuilder;
        //   334: dup            
        //   335: ldc_w           "WARNING -- screenSize property is not specified in manifest configChanges for "
        //   338: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   341: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   344: iload           9
        //   346: invokevirtual   java/util/Vector.get:(I)Ljava/lang/Object;
        //   349: checkcast       Ljava/lang/String;
        //   352: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   355: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   358: invokestatic    com/tapjoy/ab.c:(Ljava/lang/String;Ljava/lang/String;)V
        //   361: getstatic       android/os/Build$VERSION.SDK_INT:I
        //   364: bipush          11
        //   366: if_icmplt       433
        //   369: aload           8
        //   371: getfield        android/content/pm/ActivityInfo.name:Ljava/lang/String;
        //   374: ldc_w           "com.tapjoy.TJAdUnitView"
        //   377: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   380: ifeq            433
        //   383: sipush          512
        //   386: aload           8
        //   388: getfield        android/content/pm/ActivityInfo.flags:I
        //   391: iand           
        //   392: sipush          512
        //   395: if_icmpeq       433
        //   398: new             Lcom/tapjoy/aa;
        //   401: dup            
        //   402: new             Ljava/lang/StringBuilder;
        //   405: dup            
        //   406: ldc_w           "'hardwareAccelerated' property not specified in manifest for "
        //   409: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   412: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   415: iload           9
        //   417: invokevirtual   java/util/Vector.get:(I)Ljava/lang/Object;
        //   420: checkcast       Ljava/lang/String;
        //   423: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   426: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   429: invokespecial   com/tapjoy/aa.<init>:(Ljava/lang/String;)V
        //   432: athrow         
        //   433: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   436: iload           9
        //   438: invokevirtual   java/util/Vector.remove:(I)Ljava/lang/Object;
        //   441: pop            
        //   442: goto            31
        //   445: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   448: invokevirtual   java/util/Vector.size:()I
        //   451: ifeq            554
        //   454: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   457: invokevirtual   java/util/Vector.size:()I
        //   460: iconst_1       
        //   461: if_icmpne       509
        //   464: new             Lcom/tapjoy/aa;
        //   467: dup            
        //   468: new             Ljava/lang/StringBuilder;
        //   471: dup            
        //   472: ldc_w           "Missing "
        //   475: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   478: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   481: invokevirtual   java/util/Vector.size:()I
        //   484: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   487: ldc_w           " dependency class in manifest: "
        //   490: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   493: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   496: invokevirtual   java/util/Vector.toString:()Ljava/lang/String;
        //   499: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   502: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   505: invokespecial   com/tapjoy/aa.<init>:(Ljava/lang/String;)V
        //   508: athrow         
        //   509: new             Lcom/tapjoy/aa;
        //   512: dup            
        //   513: new             Ljava/lang/StringBuilder;
        //   516: dup            
        //   517: ldc_w           "Missing "
        //   520: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   523: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   526: invokevirtual   java/util/Vector.size:()I
        //   529: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   532: ldc_w           " dependency classes in manifest: "
        //   535: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   538: getstatic       com/tapjoy/m.f:Ljava/util/Vector;
        //   541: invokevirtual   java/util/Vector.toString:()Ljava/lang/String;
        //   544: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   547: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   550: invokespecial   com/tapjoy/aa.<init>:(Ljava/lang/String;)V
        //   553: athrow         
        //   554: invokestatic    com/tapjoy/m.y:()V
        //   557: ldc_w           "com.tapjoy.a"
        //   560: invokestatic    java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
        //   563: astore          4
        //   565: aload           4
        //   567: ldc_w           "closeRequested"
        //   570: iconst_0       
        //   571: anewarray       Ljava/lang/Class;
        //   574: invokevirtual   java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
        //   577: pop            
        //   578: ldc_w           "mraid.js"
        //   581: invokestatic    com/tapjoy/ae.d:(Ljava/lang/String;)Ljava/lang/Object;
        //   584: checkcast       Ljava/lang/String;
        //   587: astore          7
        //   589: aload           7
        //   591: ifnonnull       605
        //   594: ldc_w           "js/mraid.js"
        //   597: getstatic       com/tapjoy/m.a:Landroid/content/Context;
        //   600: invokestatic    com/tapjoy/ae.a:(Ljava/lang/String;Landroid/content/Context;)Ljava/lang/String;
        //   603: astore          7
        //   605: aload           7
        //   607: ifnonnull       646
        //   610: new             Lcom/tapjoy/aa;
        //   613: dup            
        //   614: ldc_w           "ClassNotFoundException: mraid.js was not found."
        //   617: invokespecial   com/tapjoy/aa.<init>:(Ljava/lang/String;)V
        //   620: athrow         
        //   621: astore_3       
        //   622: new             Lcom/tapjoy/aa;
        //   625: dup            
        //   626: ldc_w           "ClassNotFoundException: com.tapjoy.TJAdUnitJSBridge was not found."
        //   629: invokespecial   com/tapjoy/aa.<init>:(Ljava/lang/String;)V
        //   632: athrow         
        //   633: astore          5
        //   635: new             Lcom/tapjoy/aa;
        //   638: dup            
        //   639: ldc_w           "Try configuring Proguard or other code obfuscators to ignore com.tapjoy classes. Visit http://kc.tapjoy.com for more information."
        //   642: invokespecial   com/tapjoy/aa.<init>:(Ljava/lang/String;)V
        //   645: athrow         
        //   646: return         
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                                     
        //  -----  -----  -----  -----  ---------------------------------------------------------
        //  0      20     248    260    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  24     31     248    260    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  31     78     248    260    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  78     126    211    248    Ljava/lang/ClassNotFoundException;
        //  78     126    248    260    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  126    148    211    248    Ljava/lang/ClassNotFoundException;
        //  126    148    248    260    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  148    211    211    248    Ljava/lang/ClassNotFoundException;
        //  148    211    248    260    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  213    248    248    260    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  260    306    211    248    Ljava/lang/ClassNotFoundException;
        //  260    306    248    260    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  306    361    211    248    Ljava/lang/ClassNotFoundException;
        //  306    361    248    260    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  361    433    211    248    Ljava/lang/ClassNotFoundException;
        //  361    433    248    260    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  433    442    211    248    Ljava/lang/ClassNotFoundException;
        //  433    442    248    260    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  557    565    621    633    Ljava/lang/ClassNotFoundException;
        //  565    578    633    646    Ljava/lang/NoSuchMethodException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0605:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private static void y() {
        int i = 0;
        final Vector<String> vector = new Vector<String>();
        for (final String s : com.tapjoy.r.b) {
            if (!k(s)) {
                vector.add(s);
            }
        }
        if (vector.size() == 0) {
            final Vector<String> vector2 = new Vector<String>();
            for (String[] c = com.tapjoy.r.c; i < c.length; ++i) {
                final String s2 = c[i];
                if (!k(s2)) {
                    vector2.add(s2);
                }
            }
            if (vector2.size() != 0) {
                if (vector2.size() != 1) {
                    com.tapjoy.ab.c("TapjoyConnect", "WARNING -- " + vector2.toString() + " permissions were not found in manifest. The exclusion of these permissions could cause problems.");
                    return;
                }
                com.tapjoy.ab.c("TapjoyConnect", "WARNING -- " + vector2.toString() + " permission was not found in manifest. The exclusion of this permission could cause problems.");
            }
            return;
        }
        if (vector.size() == 1) {
            throw new aa("Missing 1 permission in manifest: " + vector.toString());
        }
        throw new aa("Missing " + vector.size() + " permissions in manifest: " + vector.toString());
    }
    
    private static String z() {
        String string;
        try {
            final Field declaredField = Class.forName("android.os.Build").getDeclaredField("SERIAL");
            if (!declaredField.isAccessible()) {
                declaredField.setAccessible(true);
            }
            string = declaredField.get(Build.class).toString();
            final String s = "TapjoyConnect";
            final String s2 = "serial: ";
            final StringBuilder sb = new StringBuilder(s2);
            final String s3 = string;
            final StringBuilder sb2 = sb.append(s3);
            final String s4 = sb2.toString();
            com.tapjoy.ab.a(s, s4);
            return string;
        }
        catch (Exception ex2) {
            string = null;
            final Exception ex = ex2;
        }
        while (true) {
            try {
                final String s = "TapjoyConnect";
                final String s2 = "serial: ";
                final StringBuilder sb = new StringBuilder(s2);
                final String s3 = string;
                final StringBuilder sb2 = sb.append(s3);
                final String s4 = sb2.toString();
                com.tapjoy.ab.a(s, s4);
                return string;
                final Exception ex;
                com.tapjoy.ab.b("TapjoyConnect", ex.toString());
                return string;
            }
            catch (Exception ex) {
                continue;
            }
            break;
        }
    }
    
    public final void d(final String s) {
        com.tapjoy.ab.a("TapjoyConnect", "actionComplete: " + s);
        final Map s2 = s();
        com.tapjoy.ae.a(s2, "app_id", s);
        s2.putAll(h());
        com.tapjoy.ab.a("TapjoyConnect", "PPA URL parameters: " + s2);
        new Thread(new o(this, s2)).start();
    }
}
