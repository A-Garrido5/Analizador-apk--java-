// 
// Decompiled by Procyon v0.5.30
// 

package com.tapjoy.mraid.a;

import android.hardware.SensorEvent;
import android.hardware.Sensor;
import android.content.Context;
import android.hardware.SensorManager;
import com.tapjoy.mraid.controller.d;
import android.hardware.SensorEventListener;

public final class a implements SensorEventListener
{
    d a;
    int b;
    int c;
    int d;
    private SensorManager e;
    private int f;
    private long g;
    private int h;
    private long i;
    private long j;
    private float[] k;
    private float[] l;
    private boolean m;
    private boolean n;
    private float[] o;
    private float[] p;
    
    public a(final Context context, final d a) {
        this.b = 0;
        this.c = 0;
        this.d = 0;
        this.f = 3;
        this.l = new float[] { 0.0f, 0.0f, 0.0f };
        this.o = new float[] { 0.0f, 0.0f, 0.0f };
        this.p = new float[] { -1.0f, -1.0f, -1.0f };
        this.a = a;
        this.e = (SensorManager)context.getSystemService("sensor");
    }
    
    public final void a() {
        this.b = 0;
        this.c = 0;
        this.d = 0;
        try {
            if (this.d == 0 && this.c == 0 && this.b == 0) {
                this.e.unregisterListener((SensorEventListener)this);
            }
        }
        catch (Exception ex) {}
    }
    
    public final void onAccuracyChanged(final Sensor sensor, final int n) {
    }
    
    public final void onSensorChanged(final SensorEvent sensorEvent) {
        switch (sensorEvent.sensor.getType()) {
            case 2: {
                this.k = sensorEvent.values.clone();
                this.m = true;
                break;
            }
            case 1: {
                this.o = this.l;
                this.l = sensorEvent.values.clone();
                this.n = true;
                break;
            }
        }
        if (this.k != null && this.l != null && this.n && this.m) {
            this.n = false;
            this.m = false;
            final float[] array = new float[9];
            SensorManager.getRotationMatrix(array, new float[9], this.l, this.k);
            SensorManager.getOrientation(array, this.p = new float[3]);
            this.a.a(this.p[0]);
        }
        if (sensorEvent.sensor.getType() == 1) {
            final long currentTimeMillis = System.currentTimeMillis();
            if (currentTimeMillis - this.g > 500L) {
                this.h = 0;
            }
            if (currentTimeMillis - this.i > 100L) {
                if (10000.0f * (Math.abs(this.l[0] + this.l[1] + this.l[2] - this.o[0] - this.o[1] - this.o[2]) / (currentTimeMillis - this.i)) > 1000.0f) {
                    final int h = 1 + this.h;
                    this.h = h;
                    if (h >= 2 && currentTimeMillis - this.j > 2000L) {
                        this.j = currentTimeMillis;
                        this.h = 0;
                        this.a.a();
                    }
                    this.g = currentTimeMillis;
                }
                this.i = currentTimeMillis;
                this.a.a(this.l[0], this.l[1], this.l[2]);
            }
        }
    }
}
