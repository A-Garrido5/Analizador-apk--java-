// 
// Decompiled by Procyon v0.5.30
// 

package com.tapjoy.mraid.controller;

import android.content.BroadcastReceiver;
import com.tapjoy.ab;
import android.util.DisplayMetrics;
import com.tapjoy.mraid.view.MraidView;
import android.content.Context;
import com.tapjoy.mraid.util.ConfigBroadcastReceiver;
import android.view.WindowManager;

public final class b extends Abstract
{
    private WindowManager c;
    private boolean d;
    private int e;
    private int f;
    private ConfigBroadcastReceiver g;
    private float h;
    private Context i;
    
    public b(final MraidView mraidView, final Context i) {
        super(mraidView, i);
        this.d = false;
        this.e = -1;
        this.f = -1;
        this.i = i;
        final DisplayMetrics displayMetrics = new DisplayMetrics();
        this.c = (WindowManager)i.getSystemService("window");
        this.c.getDefaultDisplay().getMetrics(displayMetrics);
        this.h = displayMetrics.density;
    }
    
    public final int a() {
        final int orientation = this.c.getDefaultDisplay().getOrientation();
        int n = -1;
        switch (orientation) {
            case 0: {
                n = 0;
                break;
            }
            case 1: {
                n = 90;
                break;
            }
            case 2: {
                n = 180;
                break;
            }
            case 3: {
                n = 270;
                break;
            }
        }
        ab.d("MRAID Display", "getOrientation: " + n);
        return n;
    }
    
    public final void a(final int n) {
        final String string = "window.mraidview.fireChangeEvent({ orientation: " + n + "});";
        ab.d("MRAID Display", string);
        this.a.a(string);
    }
    
    public final void a(final int e, final int f) {
        ab.a("MRAID Display", "setMaxSize: " + e + "x" + f);
        this.d = true;
        this.e = e;
        this.f = f;
    }
    
    public final String b() {
        final DisplayMetrics displayMetrics = new DisplayMetrics();
        this.c.getDefaultDisplay().getMetrics(displayMetrics);
        return "{ width: " + (int)Math.ceil(displayMetrics.widthPixels / displayMetrics.density) + ", height: " + (int)Math.ceil(displayMetrics.heightPixels / displayMetrics.density) + "}";
    }
    
    public final String c() {
        return this.a.j();
    }
    
    public final String d() {
        if (this.d) {
            return "{ width: " + this.e + ", height: " + this.f + "}";
        }
        return this.b();
    }
    
    public final void e() {
        while (true) {
            try {
                this.b.unregisterReceiver((BroadcastReceiver)this.g);
                this.g = null;
            }
            catch (Exception ex) {
                continue;
            }
            break;
        }
    }
}
