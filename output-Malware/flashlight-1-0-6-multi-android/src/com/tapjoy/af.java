// 
// Decompiled by Procyon v0.5.30
// 

package com.tapjoy;

import java.io.Serializable;
import android.content.Intent;
import java.util.Iterator;
import java.util.Map;
import java.util.Enumeration;
import org.w3c.dom.Node;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.NodeList;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import java.io.InputStream;
import java.io.ByteArrayInputStream;
import javax.xml.parsers.DocumentBuilderFactory;
import java.net.URLConnection;
import android.graphics.BitmapFactory;
import java.net.URL;
import java.io.File;
import android.os.Environment;
import java.util.Hashtable;
import java.util.Vector;
import android.content.Context;
import android.graphics.Bitmap;

public final class af
{
    private static af b;
    private static ag c;
    private static Bitmap o;
    Context a;
    private String d;
    private String e;
    private int f;
    private Vector g;
    private Hashtable h;
    private Hashtable i;
    private boolean j;
    private boolean k;
    private boolean l;
    private boolean m;
    private ah n;
    
    static {
        af.b = null;
    }
    
    public af(final Context a) {
        this.d = null;
        this.e = null;
        this.f = 5;
        this.j = false;
        this.k = false;
        this.l = false;
        this.m = false;
        this.a = a;
        af.b = this;
        if (Environment.getExternalStorageDirectory() != null) {
            this.d = Environment.getExternalStorageDirectory().toString() + "/tjcache/data/";
            this.e = Environment.getExternalStorageDirectory().toString() + "/tjcache/tmp/";
            ae.a(new File(Environment.getExternalStorageDirectory().toString() + "/tapjoy/"));
            ae.a(new File(this.e));
        }
        this.g = new Vector();
        this.h = new Hashtable();
        this.i = new Hashtable();
        while (true) {
            if (com.tapjoy.m.e("video_cache_count") != null && com.tapjoy.m.e("video_cache_count").length() > 0) {
                try {
                    ab.a("TapjoyVideo", "Setting video cache count to: " + com.tapjoy.m.e("video_cache_count"));
                    this.f = Integer.parseInt(com.tapjoy.m.e("video_cache_count"));
                    ab.a("TapjoyVideo", "initVideoAd");
                    if (com.tapjoy.m.e("disable_videos") != null && com.tapjoy.m.e("disable_videos").equals("true")) {
                        ab.a("TapjoyVideo", "disable_videos: " + com.tapjoy.m.e("disable_videos") + ". Aborting video initializing... ");
                        com.tapjoy.m.a(false);
                        return;
                    }
                }
                catch (Exception ex) {
                    ab.b("TapjoyVideo", "Error, invalid value for video_cache_count: " + com.tapjoy.m.e("video_cache_count"));
                    continue;
                }
                this.g();
                new Thread(new Runnable() {
                    @Override
                    public final void run() {
                        new ad();
                        final z a = ad.a(com.tapjoy.m.d() + "videos?", com.tapjoy.m.b());
                        final String c = a.c;
                        boolean a2 = false;
                        if (c != null) {
                            final int length = a.c.length();
                            a2 = false;
                            if (length > 0) {
                                a2 = af.this.a(a.c);
                            }
                        }
                        if (a2) {
                            af.a(af.this);
                            while (true) {
                                try {
                                    final URL url = new URL("https://s3.amazonaws.com/tapjoy/videos/assets/watermark.png");
                                    final URLConnection openConnection = url.openConnection();
                                    openConnection.setConnectTimeout(15000);
                                    openConnection.setReadTimeout(25000);
                                    openConnection.connect();
                                    af.o = BitmapFactory.decodeStream(url.openConnection().getInputStream());
                                    openConnection.getInputStream().close();
                                    af.this.g();
                                    af.this.k = true;
                                    if (af.this.j) {
                                        ab.a("TapjoyVideo", "trying to cache because of cache_auto flag...");
                                        af.this.b();
                                    }
                                    ab.a("TapjoyVideo", "------------------------------");
                                    ab.a("TapjoyVideo", "------------------------------");
                                    ab.a("TapjoyVideo", "INIT DONE!");
                                    ab.a("TapjoyVideo", "------------------------------");
                                    return;
                                }
                                catch (Exception ex) {
                                    ab.b("TapjoyVideo", "e: " + ex.toString());
                                    continue;
                                }
                                break;
                            }
                        }
                        af.c();
                    }
                }).start();
                com.tapjoy.m.a(true);
                return;
            }
            continue;
        }
    }
    
    public static af a() {
        return af.b;
    }
    
    static /* synthetic */ boolean a(final af af) {
        final File[] listFiles = new File(af.d).listFiles();
        int n;
        if (af.h == null) {
            ab.b("TapjoyVideo", "Error: uncachedVideos is null");
            n = 0;
        }
        else {
            n = 1;
        }
        if (af.i == null) {
            ab.b("TapjoyVideo", "Error: cachedVideos is null");
            n = 0;
        }
        if (af.g == null) {
            ab.b("TapjoyVideo", "Error: videoQueue is null");
            n = 0;
        }
        int i = 0;
        if (n != 0) {
            i = 0;
            if (listFiles != null) {
                while (i < listFiles.length) {
                    final String name = listFiles[i].getName();
                    ab.a("TapjoyVideo", "-----");
                    ab.a("TapjoyVideo", "Examining cached file[" + i + "]: " + listFiles[i].getAbsolutePath() + " --- " + listFiles[i].getName());
                    if (af.h.containsKey(name)) {
                        ab.a("TapjoyVideo", "Local file found");
                        final ah ah = af.h.get(name);
                        if (ah != null) {
                            new ad();
                            final String b = ad.b(ah.c);
                            ab.a("TapjoyVideo", "local file size: " + listFiles[i].length() + " vs. target: " + b);
                            if (b != null && Integer.parseInt(b) == listFiles[i].length()) {
                                ah.i = listFiles[i].getAbsolutePath();
                                af.i.put(name, ah);
                                af.h.remove(name);
                                af.g.remove(name);
                                ab.a("TapjoyVideo", "VIDEO PREVIOUSLY CACHED -- " + name + ", location: " + ah.i);
                            }
                            else {
                                ab.a("TapjoyVideo", "file size mismatch --- deleting video: " + listFiles[i].getAbsolutePath());
                                ae.a(listFiles[i]);
                            }
                        }
                    }
                    else {
                        ab.a("TapjoyVideo", "VIDEO EXPIRED? removing video from cache: " + name + " --- " + listFiles[i].getAbsolutePath());
                        ae.a(listFiles[i]);
                    }
                    ++i;
                }
                i = 1;
            }
        }
        return i != 0;
    }
    
    private boolean a(final String s) {
        while (true) {
            final DocumentBuilderFactory instance = DocumentBuilderFactory.newInstance();
            ab.a("TapjoyVideo", "========================================");
            while (true) {
                int n = 0;
                Label_1183: {
                    while (true) {
                        int n2 = 0;
                        String s5 = null;
                        String nodeValue2 = null;
                        Label_1169: {
                            String s2 = null;
                            String s3 = null;
                            Label_1161: {
                                try {
                                    final Document parse = instance.newDocumentBuilder().parse(new ByteArrayInputStream(s.getBytes("UTF-8")));
                                    parse.getDocumentElement().normalize();
                                    final NodeList elementsByTagName = parse.getElementsByTagName("TapjoyVideos");
                                    final NodeList childNodes = elementsByTagName.item(0).getChildNodes();
                                    final NamedNodeMap attributes = elementsByTagName.item(0).getAttributes();
                                    if (attributes.getNamedItem("cache_auto") != null && attributes.getNamedItem("cache_auto").getNodeValue() != null) {
                                        this.j = Boolean.valueOf(attributes.getNamedItem("cache_auto").getNodeValue());
                                    }
                                    if (attributes.getNamedItem("cache_wifi") != null && attributes.getNamedItem("cache_wifi").getNodeValue() != null) {
                                        this.l = Boolean.valueOf(attributes.getNamedItem("cache_wifi").getNodeValue());
                                    }
                                    if (attributes.getNamedItem("cache_mobile") != null && attributes.getNamedItem("cache_mobile").getNodeValue() != null) {
                                        this.m = Boolean.valueOf(attributes.getNamedItem("cache_mobile").getNodeValue());
                                    }
                                    ab.a("TapjoyVideo", "cacheAuto: " + this.j);
                                    ab.a("TapjoyVideo", "cacheWifi: " + this.l);
                                    ab.a("TapjoyVideo", "cache3g: " + this.m);
                                    ab.a("TapjoyVideo", "nodelistParent length: " + elementsByTagName.getLength());
                                    ab.a("TapjoyVideo", "nodelist length: " + childNodes.getLength());
                                    ah ah = null;
                                    NodeList childNodes2 = null;
                                    Block_26: {
                                        for (int i = 0; i < childNodes.getLength(); ++i) {
                                            final Node item = childNodes.item(i);
                                            ah = new ah();
                                            if (item != null && item.getNodeType() == 1) {
                                                final Element element = (Element)item;
                                                final String a = ae.a(element.getElementsByTagName("ClickURL"));
                                                if (a != null && !a.equals("")) {
                                                    ah.b = a;
                                                }
                                                final String a2 = ae.a(element.getElementsByTagName("OfferID"));
                                                if (a2 != null && !a2.equals("")) {
                                                    ah.a = a2;
                                                }
                                                final String a3 = ae.a(element.getElementsByTagName("Name"));
                                                if (a3 != null && !a3.equals("")) {
                                                    ah.d = a3;
                                                }
                                                final String a4 = ae.a(element.getElementsByTagName("Amount"));
                                                if (a4 != null && !a4.equals("")) {
                                                    ah.f = a4;
                                                }
                                                final String a5 = ae.a(element.getElementsByTagName("CurrencyName"));
                                                if (a5 != null && !a5.equals("")) {
                                                    ah.e = a5;
                                                }
                                                final String a6 = ae.a(element.getElementsByTagName("VideoURL"));
                                                if (a6 != null && !a6.equals("")) {
                                                    ah.c = a6;
                                                }
                                                final String a7 = ae.a(element.getElementsByTagName("IconURL"));
                                                if (a7 != null && !a7.equals("")) {
                                                    ah.g = a7;
                                                }
                                                ab.a("TapjoyVideo", "-----");
                                                ab.a("TapjoyVideo", "videoObject.offerID: " + ah.a);
                                                ab.a("TapjoyVideo", "videoObject.videoAdName: " + ah.d);
                                                ab.a("TapjoyVideo", "videoObject.videoURL: " + ah.c);
                                                childNodes2 = element.getElementsByTagName("Buttons").item(0).getChildNodes();
                                                n = 0;
                                                if (n < childNodes2.getLength()) {
                                                    break Block_26;
                                                }
                                                this.g.addElement(ah.a);
                                                this.h.put(ah.a, ah);
                                            }
                                        }
                                        break;
                                    }
                                    final NodeList childNodes3 = childNodes2.item(n).getChildNodes();
                                    if (childNodes3.getLength() == 0) {
                                        break Label_1183;
                                    }
                                    s2 = "";
                                    s3 = "";
                                    n2 = 0;
                                    if (n2 >= childNodes3.getLength()) {
                                        ab.a("TapjoyVideo", "name: " + s2 + ", url: " + s3);
                                        ah.a(s2, s3);
                                        break Label_1183;
                                    }
                                    if (childNodes3.item(n2) == null) {
                                        break Label_1161;
                                    }
                                    final String tagName = ((Element)childNodes3.item(n2)).getTagName();
                                    if (tagName.equals("Name") && childNodes3.item(n2).getFirstChild() != null) {
                                        final String nodeValue = childNodes3.item(n2).getFirstChild().getNodeValue();
                                        final String s4 = s3;
                                        s5 = nodeValue;
                                        nodeValue2 = s4;
                                        break Label_1169;
                                    }
                                    if (tagName.equals("URL") && childNodes3.item(n2).getFirstChild() != null) {
                                        nodeValue2 = childNodes3.item(n2).getFirstChild().getNodeValue();
                                        s5 = s2;
                                        break Label_1169;
                                    }
                                    break Label_1161;
                                }
                                catch (Exception ex) {
                                    ab.b("TapjoyVideo", "Error parsing XML: " + ex.toString());
                                    return false;
                                }
                                break;
                            }
                            nodeValue2 = s3;
                            s5 = s2;
                        }
                        ++n2;
                        String s2 = s5;
                        String s3 = nodeValue2;
                        continue;
                    }
                }
                ++n;
                continue;
            }
        }
        ab.a("TapjoyVideo", "========================================");
        return true;
    }
    
    static /* synthetic */ void b(final af p0, final String p1) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aconst_null    
        //     1: astore_2       
        //     2: ldc             "TapjoyVideo"
        //     4: new             Ljava/lang/StringBuilder;
        //     7: dup            
        //     8: ldc_w           "download and cache video from: "
        //    11: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    14: aload_1        
        //    15: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    18: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    21: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //    24: invokestatic    java/lang/System.currentTimeMillis:()J
        //    27: lstore_3       
        //    28: new             Ljava/net/URL;
        //    31: dup            
        //    32: aload_1        
        //    33: invokespecial   java/net/URL.<init>:(Ljava/lang/String;)V
        //    36: invokevirtual   java/net/URL.openConnection:()Ljava/net/URLConnection;
        //    39: astore          21
        //    41: aload           21
        //    43: sipush          15000
        //    46: invokevirtual   java/net/URLConnection.setConnectTimeout:(I)V
        //    49: aload           21
        //    51: sipush          30000
        //    54: invokevirtual   java/net/URLConnection.setReadTimeout:(I)V
        //    57: aload           21
        //    59: invokevirtual   java/net/URLConnection.connect:()V
        //    62: new             Ljava/io/BufferedInputStream;
        //    65: dup            
        //    66: aload           21
        //    68: invokevirtual   java/net/URLConnection.getInputStream:()Ljava/io/InputStream;
        //    71: invokespecial   java/io/BufferedInputStream.<init>:(Ljava/io/InputStream;)V
        //    74: astore          10
        //    76: new             Ljava/io/File;
        //    79: dup            
        //    80: aload_0        
        //    81: getfield        com/tapjoy/af.d:Ljava/lang/String;
        //    84: invokespecial   java/io/File.<init>:(Ljava/lang/String;)V
        //    87: astore          22
        //    89: aload_1        
        //    90: iconst_0       
        //    91: iconst_1       
        //    92: aload_1        
        //    93: ldc_w           "/"
        //    96: invokevirtual   java/lang/String.lastIndexOf:(Ljava/lang/String;)I
        //    99: iadd           
        //   100: invokevirtual   java/lang/String.substring:(II)Ljava/lang/String;
        //   103: astore          23
        //   105: aload_1        
        //   106: iconst_1       
        //   107: aload_1        
        //   108: ldc_w           "/"
        //   111: invokevirtual   java/lang/String.lastIndexOf:(Ljava/lang/String;)I
        //   114: iadd           
        //   115: invokevirtual   java/lang/String.substring:(I)Ljava/lang/String;
        //   118: astore          24
        //   120: aload           24
        //   122: iconst_0       
        //   123: aload           24
        //   125: bipush          46
        //   127: invokevirtual   java/lang/String.indexOf:(I)I
        //   130: invokevirtual   java/lang/String.substring:(II)Ljava/lang/String;
        //   133: astore          25
        //   135: ldc             "TapjoyVideo"
        //   137: new             Ljava/lang/StringBuilder;
        //   140: dup            
        //   141: ldc_w           "fileDir: "
        //   144: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   147: aload           22
        //   149: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //   152: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   155: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   158: ldc             "TapjoyVideo"
        //   160: new             Ljava/lang/StringBuilder;
        //   163: dup            
        //   164: ldc_w           "path: "
        //   167: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   170: aload           23
        //   172: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   175: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   178: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   181: ldc             "TapjoyVideo"
        //   183: new             Ljava/lang/StringBuilder;
        //   186: dup            
        //   187: ldc_w           "file name: "
        //   190: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   193: aload           25
        //   195: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   198: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   201: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   204: aload           22
        //   206: invokevirtual   java/io/File.mkdirs:()Z
        //   209: ifeq            238
        //   212: ldc             "TapjoyVideo"
        //   214: new             Ljava/lang/StringBuilder;
        //   217: dup            
        //   218: ldc_w           "created directory at: "
        //   221: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   224: aload           22
        //   226: invokevirtual   java/io/File.getPath:()Ljava/lang/String;
        //   229: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   232: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   235: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   238: new             Ljava/io/File;
        //   241: dup            
        //   242: aload_0        
        //   243: getfield        com/tapjoy/af.d:Ljava/lang/String;
        //   246: aload           25
        //   248: invokespecial   java/io/File.<init>:(Ljava/lang/String;Ljava/lang/String;)V
        //   251: astore          12
        //   253: new             Ljava/io/FileOutputStream;
        //   256: dup            
        //   257: aload           12
        //   259: invokespecial   java/io/FileOutputStream.<init>:(Ljava/io/File;)V
        //   262: astore          9
        //   264: ldc             "TapjoyVideo"
        //   266: new             Ljava/lang/StringBuilder;
        //   269: dup            
        //   270: ldc_w           "downloading video file to: "
        //   273: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   276: aload           12
        //   278: invokevirtual   java/io/File.toString:()Ljava/lang/String;
        //   281: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   284: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   287: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   290: sipush          1024
        //   293: newarray        B
        //   295: astore          26
        //   297: aload           10
        //   299: aload           26
        //   301: invokevirtual   java/io/BufferedInputStream.read:([B)I
        //   304: istore          27
        //   306: iload           27
        //   308: iconst_m1      
        //   309: if_icmpeq       521
        //   312: aload           9
        //   314: aload           26
        //   316: iconst_0       
        //   317: iload           27
        //   319: invokevirtual   java/io/OutputStream.write:([BII)V
        //   322: goto            297
        //   325: astore          5
        //   327: aload           12
        //   329: astore          6
        //   331: aload           9
        //   333: astore          7
        //   335: aload           10
        //   337: astore          8
        //   339: ldc             "TapjoyVideo"
        //   341: new             Ljava/lang/StringBuilder;
        //   344: dup            
        //   345: ldc_w           "Network timeout: "
        //   348: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   351: aload           5
        //   353: invokevirtual   java/net/SocketTimeoutException.toString:()Ljava/lang/String;
        //   356: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   359: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   362: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //   365: aload           7
        //   367: astore          9
        //   369: aload           8
        //   371: astore          10
        //   373: iconst_1       
        //   374: istore          11
        //   376: aload           6
        //   378: astore          12
        //   380: iconst_1       
        //   381: istore          13
        //   383: iload           11
        //   385: iconst_1       
        //   386: if_icmpne       407
        //   389: ldc             "TapjoyVideo"
        //   391: ldc_w           "Network timeout"
        //   394: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   397: aload           10
        //   399: invokevirtual   java/io/BufferedInputStream.close:()V
        //   402: aload           9
        //   404: invokevirtual   java/io/OutputStream.close:()V
        //   407: iload           11
        //   409: ifne            655
        //   412: iload           13
        //   414: ifne            655
        //   417: aload_0        
        //   418: getfield        com/tapjoy/af.g:Ljava/util/Vector;
        //   421: iconst_0       
        //   422: invokevirtual   java/util/Vector.elementAt:(I)Ljava/lang/Object;
        //   425: checkcast       Ljava/lang/String;
        //   428: astore          15
        //   430: aload_0        
        //   431: getfield        com/tapjoy/af.h:Ljava/util/Hashtable;
        //   434: aload           15
        //   436: invokevirtual   java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   439: checkcast       Lcom/tapjoy/ah;
        //   442: astore          16
        //   444: aload           16
        //   446: aload           12
        //   448: invokevirtual   java/io/File.getAbsolutePath:()Ljava/lang/String;
        //   451: putfield        com/tapjoy/ah.i:Ljava/lang/String;
        //   454: aload_0        
        //   455: getfield        com/tapjoy/af.i:Ljava/util/Hashtable;
        //   458: aload           15
        //   460: aload           16
        //   462: invokevirtual   java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        //   465: pop            
        //   466: aload_0        
        //   467: getfield        com/tapjoy/af.h:Ljava/util/Hashtable;
        //   470: aload           15
        //   472: invokevirtual   java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        //   475: pop            
        //   476: aload_0        
        //   477: getfield        com/tapjoy/af.g:Ljava/util/Vector;
        //   480: iconst_0       
        //   481: invokevirtual   java/util/Vector.removeElementAt:(I)V
        //   484: aload_0        
        //   485: invokespecial   com/tapjoy/af.g:()V
        //   488: ldc             "TapjoyVideo"
        //   490: new             Ljava/lang/StringBuilder;
        //   493: dup            
        //   494: ldc_w           "video cached in: "
        //   497: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   500: invokestatic    java/lang/System.currentTimeMillis:()J
        //   503: lload_3        
        //   504: lsub           
        //   505: invokevirtual   java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        //   508: ldc_w           "ms"
        //   511: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   514: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   517: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   520: return         
        //   521: aload           9
        //   523: invokevirtual   java/io/OutputStream.close:()V
        //   526: aload           10
        //   528: invokevirtual   java/io/BufferedInputStream.close:()V
        //   531: ldc             "TapjoyVideo"
        //   533: new             Ljava/lang/StringBuilder;
        //   536: dup            
        //   537: ldc_w           "FILE SIZE: "
        //   540: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   543: aload           12
        //   545: invokevirtual   java/io/File.length:()J
        //   548: invokevirtual   java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        //   551: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   554: invokestatic    com/tapjoy/ab.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   557: aload           12
        //   559: invokevirtual   java/io/File.length:()J
        //   562: lstore          28
        //   564: lload           28
        //   566: lconst_0       
        //   567: lcmp           
        //   568: ifne            738
        //   571: iconst_1       
        //   572: istore          11
        //   574: iconst_0       
        //   575: istore          13
        //   577: goto            383
        //   580: astore          20
        //   582: aconst_null    
        //   583: astore          9
        //   585: aconst_null    
        //   586: astore          10
        //   588: ldc             "TapjoyVideo"
        //   590: new             Ljava/lang/StringBuilder;
        //   593: dup            
        //   594: ldc_w           "Error caching video file: "
        //   597: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   600: aload           20
        //   602: invokevirtual   java/lang/Exception.toString:()Ljava/lang/String;
        //   605: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   608: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   611: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //   614: aload_2        
        //   615: astore          12
        //   617: iconst_1       
        //   618: istore          13
        //   620: iconst_0       
        //   621: istore          11
        //   623: goto            383
        //   626: astore          14
        //   628: ldc             "TapjoyVideo"
        //   630: new             Ljava/lang/StringBuilder;
        //   633: dup            
        //   634: ldc_w           "error caching video ???: "
        //   637: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   640: aload           14
        //   642: invokevirtual   java/lang/Exception.toString:()Ljava/lang/String;
        //   645: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   648: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   651: invokestatic    com/tapjoy/ab.b:(Ljava/lang/String;Ljava/lang/String;)V
        //   654: return         
        //   655: invokestatic    com/tapjoy/af.c:()V
        //   658: return         
        //   659: astore          19
        //   661: goto            407
        //   664: astore          20
        //   666: aconst_null    
        //   667: astore_2       
        //   668: aconst_null    
        //   669: astore          9
        //   671: goto            588
        //   674: astore          20
        //   676: aload           12
        //   678: astore_2       
        //   679: aconst_null    
        //   680: astore          9
        //   682: goto            588
        //   685: astore          20
        //   687: aload           12
        //   689: astore_2       
        //   690: goto            588
        //   693: astore          5
        //   695: aconst_null    
        //   696: astore          6
        //   698: aconst_null    
        //   699: astore          7
        //   701: aconst_null    
        //   702: astore          8
        //   704: goto            339
        //   707: astore          5
        //   709: aload           10
        //   711: astore          8
        //   713: aconst_null    
        //   714: astore          6
        //   716: aconst_null    
        //   717: astore          7
        //   719: goto            339
        //   722: astore          5
        //   724: aload           12
        //   726: astore          6
        //   728: aload           10
        //   730: astore          8
        //   732: aconst_null    
        //   733: astore          7
        //   735: goto            339
        //   738: iconst_0       
        //   739: istore          11
        //   741: iconst_0       
        //   742: istore          13
        //   744: goto            383
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                             
        //  -----  -----  -----  -----  ---------------------------------
        //  28     76     693    707    Ljava/net/SocketTimeoutException;
        //  28     76     580    588    Ljava/lang/Exception;
        //  76     238    707    722    Ljava/net/SocketTimeoutException;
        //  76     238    664    674    Ljava/lang/Exception;
        //  238    253    707    722    Ljava/net/SocketTimeoutException;
        //  238    253    664    674    Ljava/lang/Exception;
        //  253    264    722    738    Ljava/net/SocketTimeoutException;
        //  253    264    674    685    Ljava/lang/Exception;
        //  264    297    325    339    Ljava/net/SocketTimeoutException;
        //  264    297    685    693    Ljava/lang/Exception;
        //  297    306    325    339    Ljava/net/SocketTimeoutException;
        //  297    306    685    693    Ljava/lang/Exception;
        //  312    322    325    339    Ljava/net/SocketTimeoutException;
        //  312    322    685    693    Ljava/lang/Exception;
        //  397    407    659    664    Ljava/lang/Exception;
        //  417    520    626    655    Ljava/lang/Exception;
        //  521    564    325    339    Ljava/net/SocketTimeoutException;
        //  521    564    685    693    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 338, Size: 338
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public static void c() {
        if (af.c != null) {
            final ag c = af.c;
        }
    }
    
    public static void d() {
        if (af.c != null) {
            final ag c = af.c;
        }
    }
    
    public static void e() {
        if (af.c != null) {
            final ag c = af.c;
        }
    }
    
    public static Bitmap f() {
        return af.o;
    }
    
    private void g() {
        String s = "";
        if (this.i != null && this.i.size() > 0) {
            final Enumeration<String> keys = (Enumeration<String>)this.i.keys();
            String s2 = s;
            while (keys.hasMoreElements()) {
                String s3 = s2 + keys.nextElement();
                if (keys.hasMoreElements()) {
                    s3 += ",";
                }
                s2 = s3;
            }
            ab.a("TapjoyVideo", "cachedVideos size: " + this.i.size());
            s = s2;
        }
        ab.a("TapjoyVideo", "videoIDs: [" + s + "]");
        com.tapjoy.m.b(s);
    }
    
    static /* synthetic */ void l(final af af) {
        ab.a("TapjoyVideo", "cachedVideos size: " + af.i.size());
        for (final Map.Entry<String, V> entry : af.i.entrySet()) {
            ab.a("TapjoyVideo", "key: " + entry.getKey() + ", name: " + ((ah)entry.getValue()).d);
        }
    }
    
    public final boolean a(final String a, final String s, final String s2, final String s3, final String s4, final String s5) {
        ab.a("TapjoyVideo", "Starting video activity with video: " + a);
        if (a == null || s3 == null || s4 == null || a.length() == 0 || s3.length() == 0 || s4.length() == 0) {
            ab.a("TapjoyVideo", "aborting video playback... invalid or missing parameter");
            return false;
        }
        this.n = this.i.get(a);
        boolean b;
        if (this.n == null) {
            ab.a("TapjoyVideo", "video not cached... checking uncached videos");
            this.n = this.h.get(a);
            if (this.n == null) {
                if (s5 == null || s5.length() <= 0) {
                    ab.b("TapjoyVideo", "no video data and no video url - aborting playback...");
                    return false;
                }
                final ah ah = new ah();
                ah.a = a;
                ah.e = s;
                ah.f = s2;
                ah.b = s3;
                ah.h = s4;
                ah.c = s5;
                this.h.put(a, ah);
                this.n = this.h.get(a);
            }
            b = false;
        }
        else {
            b = true;
        }
        this.n.e = s;
        this.n.f = s2;
        this.n.b = s3;
        this.n.h = s4;
        this.n.c = s5;
        ab.a("TapjoyVideo", "videoToPlay: " + this.n.a);
        ab.a("TapjoyVideo", "amount: " + this.n.f);
        ab.a("TapjoyVideo", "currency: " + this.n.e);
        ab.a("TapjoyVideo", "clickURL: " + this.n.b);
        ab.a("TapjoyVideo", "location: " + this.n.i);
        ab.a("TapjoyVideo", "webviewURL: " + this.n.h);
        ab.a("TapjoyVideo", "videoURL: " + this.n.c);
        if (b && this.n.i != null && !new File(this.n.i).exists()) {
            ab.b("TapjoyVideo", "video file does not exist.");
            return false;
        }
        final Intent intent = new Intent(this.a, (Class)TapjoyVideoView.class);
        intent.setFlags(268435456);
        intent.putExtra("VIDEO_DATA", (Serializable)this.n);
        this.a.startActivity(intent);
        return true;
    }
    
    public final void b() {
        new Thread(new Runnable() {
            @Override
            public final void run() {
                ab.a("TapjoyVideo", "--- cacheAllVideos called ---");
                int n = 0;
                while (!af.this.k) {
                    try {
                        Thread.sleep(500L);
                        n += (int)500L;
                        if (n > 10000L) {
                            ab.b("TapjoyVideo", "Error during cacheVideos.  Timeout while waiting for initVideos to finish.");
                            return;
                        }
                        continue;
                    }
                    catch (Exception ex) {
                        ab.b("TapjoyVideo", "Exception in cacheAllVideos: " + ex.toString());
                        continue;
                    }
                    break;
                }
                ab.a("TapjoyVideo", "cacheVideos connection_type: " + com.tapjoy.m.g());
                ab.a("TapjoyVideo", "cache3g: " + af.this.m);
                ab.a("TapjoyVideo", "cacheWifi: " + af.this.l);
                if ((af.this.m && com.tapjoy.m.g().equals("mobile")) || (af.this.l && com.tapjoy.m.g().equals("wifi"))) {
                    if (!"mounted".equals(Environment.getExternalStorageState())) {
                        ab.a("TapjoyVideo", "Media storage unavailable.  Aborting caching videos.");
                        af.c();
                        return;
                    }
                    while (af.this.i.size() < af.this.f && af.this.g.size() > 0) {
                        af.b(af.this, af.this.h.get(af.this.g.elementAt(0)).c);
                    }
                }
                else {
                    ab.a("TapjoyVideo", " * Skipping caching videos because of video flags and connection_type...");
                }
                af.l(af.this);
            }
        }).start();
    }
}
