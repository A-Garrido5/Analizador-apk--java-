// 
// Decompiled by Procyon v0.5.30
// 

package com.tapjoy;

import android.view.KeyEvent;
import android.content.res.Configuration;
import java.io.Serializable;
import android.net.ConnectivityManager;
import java.util.TimerTask;
import java.util.Timer;
import java.util.jar.JarEntry;
import java.io.InputStream;
import android.content.res.AssetManager;
import java.net.URL;
import java.util.zip.ZipEntry;
import java.util.jar.JarFile;
import android.graphics.Rect;
import android.graphics.BitmapFactory;
import android.graphics.BitmapFactory$Options;
import android.annotation.TargetApi;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.animation.Animator;
import android.animation.Animator$AnimatorListener;
import android.os.Handler;
import android.view.View$OnClickListener;
import android.util.Log;
import android.widget.ImageButton;
import android.widget.RelativeLayout$LayoutParams;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup$LayoutParams;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.ColorDrawable;
import android.os.Build$VERSION;
import android.webkit.WebView;
import com.tapjoy.mraid.a.c;
import java.util.HashMap;
import android.app.AlertDialog;
import java.util.Map;
import android.content.DialogInterface;
import android.content.DialogInterface$OnClickListener;
import android.content.Context;
import android.app.AlertDialog$Builder;
import android.content.Intent;
import android.widget.ProgressBar;
import com.tapjoy.mraid.view.MraidView;
import android.widget.RelativeLayout;
import android.annotation.SuppressLint;
import android.app.Activity;

@SuppressLint({ "SetJavaScriptEnabled" })
public class TJAdUnitView extends Activity
{
    protected RelativeLayout a;
    protected MraidView b;
    protected String c;
    protected String d;
    protected boolean e;
    protected boolean f;
    protected a g;
    protected int h;
    protected boolean i;
    private int j;
    private f k;
    private d l;
    private String m;
    private boolean n;
    private ProgressBar o;
    private String p;
    
    public TJAdUnitView() {
        this.a = null;
        this.b = null;
        this.c = null;
        this.d = null;
        this.e = false;
        this.f = false;
        this.j = 0;
        this.n = false;
        this.h = 0;
        this.p = "A connection error occurred loading this content.";
    }
    
    private void a(final String s) {
        final Intent intent = new Intent();
        intent.putExtra("result", s);
        this.setResult(-1, intent);
        this.finish();
    }
    
    @TargetApi(12)
    private void c() {
        ab.a("TJAdUnitView", "initUI");
        final Bundle extras = this.getIntent().getExtras();
        if (extras != null) {
            if (extras.getString("DISPLAY_AD_URL") != null) {
                this.f = true;
                this.c = extras.getString("DISPLAY_AD_URL");
            }
            else if (extras.getSerializable("URL_PARAMS") != null) {
                this.f = false;
                final HashMap hashMap = (HashMap)extras.getSerializable("URL_PARAMS");
                ab.a("TJAdUnitView", "urlParams: " + hashMap);
                this.c = com.tapjoy.m.d() + "get_offers/webpage?" + ae.a(hashMap);
            }
            this.k = (f)extras.getSerializable("tjevent");
            if (this.k != null) {
                this.l = com.tapjoy.g.a(this.k.a);
            }
            this.j = extras.getInt("view_type");
            final String string = extras.getString("html");
            final String string2 = extras.getString("base_url");
            this.d = extras.getString("url");
            this.m = extras.getString("callback_id");
            this.n = extras.getBoolean("legacy_view");
            if (this.b == null) {
                this.b = new MraidView((Context)this);
                this.b.getSettings().setJavaScriptEnabled(true);
                this.b.a(new b(this, (byte)0));
                this.g = new a((Context)this, this.b, this.k);
                boolean b = false;
                Label_0288: {
                    if (this.j == 1) {
                        ab.a("TJAdUnitView", "Loading event data");
                        if (this.l != null) {
                            this.b.loadDataWithBaseURL(this.k.c, this.k.b, "text/html", "utf-8", null);
                            this.b.setVisibility(4);
                            com.tapjoy.m.k();
                            if (this.l.a() != null) {
                                this.l.a();
                                final d l = this.l;
                                b = false;
                                break Label_0288;
                            }
                        }
                        b = false;
                    }
                    else {
                        if (string != null && string.length() > 0) {
                            ab.a("TJAdUnitView", "Loading HTML data");
                            if (this.n) {
                                this.b.loadDataWithBaseURL(string2, string, "text/html", "utf-8", null);
                            }
                            else {
                                this.b.loadDataWithBaseURL(null, string, "text/html", "utf-8", null);
                            }
                        }
                        else if (this.d != null) {
                            ab.a("TJAdUnitView", "Load URL: " + this.d);
                            this.b.loadUrl(this.d);
                        }
                        else if (this.c != null) {
                            ab.a("TJAdUnitView", "Load Offer Wall URL");
                            this.b.loadUrl(this.c);
                        }
                        b = true;
                    }
                }
                if (Build$VERSION.SDK_INT >= 11) {
                    this.getWindow().setFlags(16777216, 16777216);
                }
                this.getWindow().setBackgroundDrawable((Drawable)new ColorDrawable(1610612736));
                final ViewGroup$LayoutParams viewGroup$LayoutParams = new ViewGroup$LayoutParams(-1, -1);
                (this.a = new RelativeLayout((Context)this)).setLayoutParams(viewGroup$LayoutParams);
                if (this.j == 1) {
                    this.a.setBackgroundColor(0);
                    this.a.getBackground().setAlpha(0);
                }
                else {
                    this.a.setBackgroundColor(-1);
                    this.a.getBackground().setAlpha(255);
                }
                this.b.setLayoutParams(viewGroup$LayoutParams);
                if (this.b.getParent() != null) {
                    ((ViewGroup)this.b.getParent()).removeView((View)this.b);
                }
                this.a.addView((View)this.b, -1, -1);
                this.setContentView((View)this.a);
                if (this.n && b) {
                    (this.o = new ProgressBar((Context)this, (AttributeSet)null, 16842874)).setVisibility(0);
                    final RelativeLayout$LayoutParams layoutParams = new RelativeLayout$LayoutParams(-2, -2);
                    layoutParams.addRule(13);
                    this.o.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
                    this.a.addView((View)this.o);
                }
                if (!this.b.e()) {
                    final ImageButton imageButton = new ImageButton((Context)this);
                    final Bitmap d = this.d();
                    if (d == null) {
                        Log.e("TJAdUnitView", "Error loading bitmap data for close button!");
                        return;
                    }
                    imageButton.setImageBitmap(d);
                    imageButton.setBackgroundColor(16777215);
                    imageButton.setOnClickListener((View$OnClickListener)new View$OnClickListener() {
                        public final void onClick(final View view) {
                            TJAdUnitView.this.a();
                        }
                    });
                    final RelativeLayout$LayoutParams relativeLayout$LayoutParams = new RelativeLayout$LayoutParams(-2, -2);
                    relativeLayout$LayoutParams.addRule(10);
                    relativeLayout$LayoutParams.addRule(11);
                    final int n = (int)(-10.0f * com.tapjoy.m.o());
                    relativeLayout$LayoutParams.setMargins(0, n, n, 0);
                    this.a.addView((View)imageButton, (ViewGroup$LayoutParams)relativeLayout$LayoutParams);
                    if (Build$VERSION.SDK_INT >= 12) {
                        imageButton.setAlpha(0.0f);
                        imageButton.setVisibility(0);
                        imageButton.setClickable(false);
                        new Handler().postDelayed((Runnable)new Runnable() {
                            @Override
                            public final void run() {
                                imageButton.animate().alpha(1.0f).setDuration(500L).setListener((Animator$AnimatorListener)new Animator$AnimatorListener() {
                                    public final void onAnimationCancel(final Animator animator) {
                                    }
                                    
                                    public final void onAnimationEnd(final Animator animator) {
                                        imageButton.setClickable(true);
                                    }
                                    
                                    public final void onAnimationRepeat(final Animator animator) {
                                    }
                                    
                                    public final void onAnimationStart(final Animator animator) {
                                    }
                                });
                            }
                        }, 2000L);
                    }
                }
            }
        }
    }
    
    private Bitmap d() {
        final BitmapFactory$Options bitmapFactory$Options = new BitmapFactory$Options();
        bitmapFactory$Options.inJustDecodeBounds = true;
        final byte[] array = (byte[])ae.d("tj_close_button.png");
        while (true) {
            Label_0271: {
                if (array == null) {
                    break Label_0271;
                }
                BitmapFactory.decodeByteArray(array, 0, array.length, bitmapFactory$Options);
                Bitmap bitmap = BitmapFactory.decodeByteArray(array, 0, array.length);
                Label_0107: {
                    if (bitmap != null) {
                        break Label_0107;
                    }
                    try {
                        final URL resource = TJAdUnitView.class.getClassLoader().getResource("com/tapjoy/res/tj_close_button.png");
                        InputStream inputStream;
                        if (resource == null) {
                            final AssetManager assets = this.getAssets();
                            BitmapFactory.decodeStream(assets.open("com/tapjoy/res/tj_close_button.png"), (Rect)null, bitmapFactory$Options);
                            inputStream = assets.open("com/tapjoy/res/tj_close_button.png");
                        }
                        else {
                            String s = resource.getFile();
                            if (s.startsWith("jar:")) {
                                s = s.substring(4);
                            }
                            if (s.startsWith("file:")) {
                                s = s.substring(5);
                            }
                            final int index = s.indexOf("!");
                            if (index > 0) {
                                s = s.substring(0, index);
                            }
                            final JarFile jarFile = new JarFile(s);
                            final JarEntry jarEntry = jarFile.getJarEntry("com/tapjoy/res/tj_close_button.png");
                            BitmapFactory.decodeStream(jarFile.getInputStream(jarEntry), (Rect)null, bitmapFactory$Options);
                            inputStream = jarFile.getInputStream(jarEntry);
                        }
                        bitmap = BitmapFactory.decodeStream(inputStream);
                        inputStream.close();
                        final float o = com.tapjoy.m.o();
                        if (bitmap != null) {
                            bitmap = Bitmap.createScaledBitmap(bitmap, (int)(o * bitmapFactory$Options.outWidth), (int)(o * bitmapFactory$Options.outHeight), true);
                        }
                        return bitmap;
                    }
                    catch (Exception ex) {
                        ex.printStackTrace();
                        return null;
                    }
                }
            }
            Bitmap bitmap = null;
            continue;
        }
    }
    
    private void e() {
        if (this.j == 4) {
            this.a("offer_wall");
        }
        else if (this != null) {
            this.finish();
        }
    }
    
    public final void a() {
        if (this.b.f()) {
            this.b.g();
            return;
        }
        if (this.g.d) {
            ab.a("TJAdUnitView", "customClose");
            if (!this.g.e) {
                ab.a("TJAdUnitView", "closeRequested...");
                this.g.a();
                new Timer().schedule(new TimerTask() {
                    @Override
                    public final void run() {
                        if (TJAdUnitView.this.g.e) {
                            ab.a("TJAdUnitView", "customClose timeout");
                            TJAdUnitView.this.e();
                        }
                    }
                }, 1000L);
                return;
            }
        }
        this.e();
    }
    
    public void a(final WebView webView, final int n, final String s, final String s2) {
        ab.a("TJAdUnitView", "handleWebViewError");
        if (!this.isFinishing()) {
            new AlertDialog$Builder((Context)this).setMessage((CharSequence)this.p).setPositiveButton((CharSequence)"OK", (DialogInterface$OnClickListener)new DialogInterface$OnClickListener() {
                public final void onClick(final DialogInterface dialogInterface, final int n) {
                    dialogInterface.cancel();
                }
            }).create().show();
        }
    }
    
    public void a(final WebView webView, final String s) {
        ab.a("TJAdUnitView", "handleWebViewOnPageFinished");
    }
    
    protected final boolean b() {
        final ConnectivityManager connectivityManager = (ConnectivityManager)this.getSystemService("connectivity");
        return connectivityManager.getActiveNetworkInfo() != null && connectivityManager.getActiveNetworkInfo().isAvailable() && connectivityManager.getActiveNetworkInfo().isConnected();
    }
    
    public void finish() {
        if (this.j != 1 && this.j != 4) {
            final Intent intent = new Intent();
            intent.putExtra("result", (Serializable)Boolean.TRUE);
            intent.putExtra("callback_id", this.m);
            this.setResult(-1, intent);
        }
        super.finish();
    }
    
    protected void onActivityResult(final int n, final int n2, final Intent intent) {
        super.onActivityResult(n, n2, intent);
        Log.i("TJAdUnitView", "onActivityResult requestCode:" + n + ", resultCode: " + n2);
        Bundle extras = null;
        if (intent != null) {
            extras = intent.getExtras();
        }
        if (extras != null && extras.getString("callback_id") != null) {
            ab.a("TJAdUnitView", "onActivityResult extras: " + extras.keySet());
            this.g.a(extras.getString("callback_id"), extras.getBoolean("result"), extras.getString("result_string1"), extras.getString("result_string2"));
        }
    }
    
    public void onConfigurationChanged(final Configuration configuration) {
        ab.a("TJAdUnitView", "onConfigurationChanged");
        super.onConfigurationChanged(configuration);
        this.c();
    }
    
    protected void onCreate(final Bundle bundle) {
        if (Build$VERSION.SDK_INT < 11) {
            this.setTheme(16973839);
        }
        else {
            this.requestWindowFeature(1);
            this.getWindow().setFlags(1024, 1024);
        }
        ab.a("TJAdUnitView", "TJAdUnitView onCreate: " + bundle);
        super.onCreate(bundle);
        this.c();
    }
    
    protected void onDestroy() {
        super.onDestroy();
        ab.a("TJAdUnitView", "onDestroy isFinishing: " + this.isFinishing());
        if (!this.isFinishing()) {
            return;
        }
        if (this.j == 1) {
            this.g.b();
            com.tapjoy.m.j();
            if (this.l != null && this.l.a() != null) {
                this.l.a();
                final d l = this.l;
            }
            com.tapjoy.g.b(this.k.a);
        }
        if (this.b == null) {
            return;
        }
        while (true) {
            try {
                WebView.class.getMethod("onPause", (Class<?>[])new Class[0]).invoke(this.b, new Object[0]);
                try {
                    this.b = null;
                }
                catch (Exception ex) {}
            }
            catch (Exception ex2) {
                continue;
            }
            break;
        }
    }
    
    public boolean onKeyDown(final int n, final KeyEvent keyEvent) {
        if (n == 4) {
            this.a();
            return true;
        }
        return super.onKeyDown(n, keyEvent);
    }
    
    protected void onPause() {
        super.onPause();
        this.e = true;
        try {
            WebView.class.getMethod("onPause", (Class<?>[])new Class[0]).invoke(this.b, new Object[0]);
        }
        catch (Exception ex) {}
    }
    
    protected void onRestoreInstanceState(final Bundle bundle) {
        super.onRestoreInstanceState(bundle);
        if (this.b != null) {
            this.b.restoreState(bundle);
        }
    }
    
    protected void onResume() {
        super.onResume();
        while (true) {
            try {
                WebView.class.getMethod("onResume", (Class<?>[])new Class[0]).invoke(this.b, new Object[0]);
                if (this.j == 1 && this.g.a) {
                    ab.a("TJAdUnitView", "onResume bridge.didLaunchOtherActivity callbackID: " + this.g.c);
                    this.g.a(this.g.c, Boolean.TRUE);
                    this.g.a = false;
                }
            }
            catch (Exception ex) {
                continue;
            }
            break;
        }
    }
    
    protected void onSaveInstanceState(final Bundle bundle) {
        super.onSaveInstanceState(bundle);
        if (this.b != null) {
            this.b.saveState(bundle);
        }
    }
}
