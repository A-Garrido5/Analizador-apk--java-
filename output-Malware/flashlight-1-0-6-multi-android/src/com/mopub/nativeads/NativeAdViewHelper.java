// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.nativeads;

import android.widget.Button;
import com.mopub.common.util.MoPubLog;
import android.view.LayoutInflater;
import android.view.ViewGroup;
import android.content.Context;
import android.view.View$OnClickListener;
import android.view.View;

class NativeAdViewHelper
{
    private static void attachClickListeners(final View view, final NativeViewHolder nativeViewHolder, final NativeResponse nativeResponse) {
        if (view == null || nativeResponse == null) {
            return;
        }
        final NativeAdViewHelper$NativeViewClickListener onClickListener = new NativeAdViewHelper$NativeViewClickListener(nativeResponse);
        view.setOnClickListener((View$OnClickListener)onClickListener);
        setCtaClickListener(nativeViewHolder, onClickListener);
    }
    
    private static View createConvertView(final Context context, final ViewGroup viewGroup, final ViewBinder viewBinder) {
        return LayoutInflater.from(context).inflate(viewBinder.layoutId, viewGroup, false);
    }
    
    static View getAdView(View convertView, final ViewGroup viewGroup, final Context context, final NativeResponse nativeResponse, final ViewBinder viewBinder, final MoPubNative$MoPubNativeListener moPubNative$MoPubNativeListener) {
        if (viewBinder == null) {
            MoPubLog.d("ViewBinder is null, returning empty view.");
            return new View(context);
        }
        if (convertView == null) {
            convertView = createConvertView(context, viewGroup, viewBinder);
        }
        final NativeViewHolder orCreateNativeViewHolder = getOrCreateNativeViewHolder(convertView, viewBinder);
        removeClickListeners(convertView, orCreateNativeViewHolder);
        ImpressionTrackingManager.removeView(convertView);
        if (nativeResponse == null) {
            MoPubLog.d("NativeResponse is null, returning hidden view.");
            convertView.setVisibility(8);
            return convertView;
        }
        if (nativeResponse.isDestroyed()) {
            MoPubLog.d("NativeResponse is destroyed, returning hidden view.");
            convertView.setVisibility(8);
            return convertView;
        }
        if (orCreateNativeViewHolder == null) {
            MoPubLog.d("Could not create NativeViewHolder, returning hidden view.");
            convertView.setVisibility(8);
            return convertView;
        }
        populateConvertViewSubViews(convertView, orCreateNativeViewHolder, nativeResponse, viewBinder);
        attachClickListeners(convertView, orCreateNativeViewHolder, nativeResponse);
        convertView.setVisibility(0);
        nativeResponse.prepareImpression(convertView);
        return convertView;
    }
    
    static NativeViewHolder getOrCreateNativeViewHolder(final View view, final ViewBinder viewBinder) {
        final Object viewTag = ImageViewService.getViewTag(view);
        if (viewTag == null || !(viewTag instanceof NativeViewHolder)) {
            final NativeViewHolder fromViewBinder = NativeViewHolder.fromViewBinder(view, viewBinder);
            ImageViewService.setViewTag(view, fromViewBinder);
            return fromViewBinder;
        }
        return (NativeViewHolder)viewTag;
    }
    
    private static void populateConvertViewSubViews(final View view, final NativeViewHolder nativeViewHolder, final NativeResponse nativeResponse, final ViewBinder viewBinder) {
        nativeViewHolder.update(nativeResponse);
        nativeViewHolder.updateExtras(view, nativeResponse, viewBinder);
    }
    
    private static void removeClickListeners(final View view, final NativeViewHolder nativeViewHolder) {
        if (view == null) {
            return;
        }
        view.setOnClickListener((View$OnClickListener)null);
        setCtaClickListener(nativeViewHolder, null);
    }
    
    private static void setCtaClickListener(final NativeViewHolder nativeViewHolder, final NativeAdViewHelper$NativeViewClickListener onClickListener) {
        if (nativeViewHolder != null && onClickListener != null && nativeViewHolder.callToActionView != null && nativeViewHolder.callToActionView instanceof Button) {
            nativeViewHolder.callToActionView.setOnClickListener((View$OnClickListener)onClickListener);
        }
    }
}
