// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.nativeads;

import java.io.IOException;
import com.mopub.common.util.IntentUtils;
import com.mopub.common.util.MoPubLog;
import com.mopub.common.util.AsyncTasks;
import android.os.AsyncTask;

class UrlResolutionTask extends AsyncTask
{
    private static final int REDIRECT_LIMIT = 10;
    private final UrlResolutionTask$UrlResolutionListener mListener;
    
    UrlResolutionTask(final UrlResolutionTask$UrlResolutionListener mListener) {
        this.mListener = mListener;
    }
    
    private String getRedirectLocation(final String p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aconst_null    
        //     1: astore_2       
        //     2: new             Ljava/net/URL;
        //     5: dup            
        //     6: aload_1        
        //     7: invokespecial   java/net/URL.<init>:(Ljava/lang/String;)V
        //    10: astore_3       
        //    11: aload_3        
        //    12: invokevirtual   java/net/URL.openConnection:()Ljava/net/URLConnection;
        //    15: checkcast       Ljava/net/HttpURLConnection;
        //    18: astore          5
        //    20: aload           5
        //    22: iconst_0       
        //    23: invokevirtual   java/net/HttpURLConnection.setInstanceFollowRedirects:(Z)V
        //    26: aload           5
        //    28: invokevirtual   java/net/HttpURLConnection.getResponseCode:()I
        //    31: istore          7
        //    33: iload           7
        //    35: sipush          300
        //    38: if_icmplt       71
        //    41: iload           7
        //    43: sipush          400
        //    46: if_icmpge       71
        //    49: aload           5
        //    51: ldc             "Location"
        //    53: invokevirtual   java/net/HttpURLConnection.getHeaderField:(Ljava/lang/String;)Ljava/lang/String;
        //    56: astore          8
        //    58: aload           5
        //    60: ifnull          68
        //    63: aload           5
        //    65: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //    68: aload           8
        //    70: areturn        
        //    71: aload           5
        //    73: ifnull          81
        //    76: aload           5
        //    78: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //    81: aconst_null    
        //    82: areturn        
        //    83: astore          4
        //    85: aload_2        
        //    86: ifnull          93
        //    89: aload_2        
        //    90: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //    93: aload           4
        //    95: athrow         
        //    96: astore          6
        //    98: aload           5
        //   100: astore_2       
        //   101: aload           6
        //   103: astore          4
        //   105: goto            85
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type
        //  -----  -----  -----  -----  ----
        //  11     20     83     85     Any
        //  20     33     96     108    Any
        //  49     58     96     108    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0068:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public static void getResolvedUrl(final String s, final UrlResolutionTask$UrlResolutionListener urlResolutionTask$UrlResolutionListener) {
        final UrlResolutionTask urlResolutionTask = new UrlResolutionTask(urlResolutionTask$UrlResolutionListener);
        try {
            AsyncTasks.safeExecuteOnExecutor(urlResolutionTask, s);
        }
        catch (Exception ex) {
            MoPubLog.d("Failed to resolve url", ex);
            urlResolutionTask$UrlResolutionListener.onFailure();
        }
    }
    
    protected String doInBackground(final String... array) {
        if (array != null && array.length != 0) {
            String s2 = null;
            Label_0013: {
                break Label_0013;
            Label_0055:
                while (true) {
                    String s;
                    int n;
                    do {
                        Label_0026: {
                            break Label_0026;
                            try {
                                s = array[0];
                                s2 = null;
                                n = 0;
                                continue Label_0055;
                                // iftrue(Label_0011:, !IntentUtils.isHttpUrl(s))
                                final String redirectLocation = this.getRedirectLocation(s);
                                ++n;
                                s2 = s;
                                s = redirectLocation;
                                continue Label_0055;
                            }
                            catch (IOException ex) {
                                return null;
                            }
                        }
                        continue Label_0055;
                    } while (s != null && n < 10);
                    break;
                }
            }
            return s2;
        }
        String s = null;
        Label_0011: {
            return s;
        }
    }
    
    protected void onCancelled() {
        super.onCancelled();
        this.mListener.onFailure();
    }
    
    protected void onPostExecute(final String s) {
        super.onPostExecute((Object)s);
        if (this.isCancelled() || s == null) {
            this.onCancelled();
            return;
        }
        this.mListener.onSuccess(s);
    }
}
