// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.nativeads;

import android.view.ViewTreeObserver;
import android.view.ViewTreeObserver$OnPreDrawListener;
import java.util.Map;
import java.lang.ref.WeakReference;
import java.util.WeakHashMap;
import android.os.Handler;
import java.util.Iterator;
import java.util.Collection;
import android.view.View;
import java.util.ArrayList;

class ImpressionTrackingManager$PollingRunnable implements Runnable
{
    @Override
    public void run() {
        for (final View view : new ArrayList<View>(ImpressionTrackingManager.sPollingViews.keySet())) {
            final ImpressionTrackingManager$NativeResponseWrapper impressionTrackingManager$NativeResponseWrapper = ImpressionTrackingManager.sPollingViews.get(view);
            if (impressionTrackingManager$NativeResponseWrapper == null || impressionTrackingManager$NativeResponseWrapper.mNativeResponse == null || impressionTrackingManager$NativeResponseWrapper.mNativeResponse.getRecordedImpression() || impressionTrackingManager$NativeResponseWrapper.mNativeResponse.isDestroyed()) {
                ImpressionTrackingManager.removeView(view);
            }
            else if (!ImpressionTrackingManager$VisibilityChecker.isMostlyVisible(view, impressionTrackingManager$NativeResponseWrapper.mNativeResponse.getImpressionMinPercentageViewed())) {
                ImpressionTrackingManager.waitForVisibility(view, impressionTrackingManager$NativeResponseWrapper.mNativeResponse);
            }
            else {
                if (!ImpressionTrackingManager$VisibilityChecker.hasRequiredTimeElapsed(impressionTrackingManager$NativeResponseWrapper.mFirstVisibleTimestamp, impressionTrackingManager$NativeResponseWrapper.mNativeResponse.getImpressionMinTimeViewed())) {
                    continue;
                }
                impressionTrackingManager$NativeResponseWrapper.mNativeResponse.recordImpression(view);
                ImpressionTrackingManager.removeView(view);
            }
        }
        if (!ImpressionTrackingManager.sPollingViews.isEmpty()) {
            ImpressionTrackingManager.scheduleNextPoll();
        }
    }
}
