// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.common.util;

import org.apache.http.conn.util.InetAddressUtils;

public enum DeviceUtils$IP
{
    IPv4("IPv4", 0), 
    IPv6("IPv6", 1);
    
    static /* synthetic */ int[] $SWITCH_TABLE$com$mopub$common$util$DeviceUtils$IP() {
        final int[] $switch_TABLE$com$mopub$common$util$DeviceUtils$IP = DeviceUtils$IP.$SWITCH_TABLE$com$mopub$common$util$DeviceUtils$IP;
        if ($switch_TABLE$com$mopub$common$util$DeviceUtils$IP != null) {
            return $switch_TABLE$com$mopub$common$util$DeviceUtils$IP;
        }
        final int[] $switch_TABLE$com$mopub$common$util$DeviceUtils$IP2 = new int[values().length];
        while (true) {
            try {
                $switch_TABLE$com$mopub$common$util$DeviceUtils$IP2[DeviceUtils$IP.IPv4.ordinal()] = 1;
                try {
                    $switch_TABLE$com$mopub$common$util$DeviceUtils$IP2[DeviceUtils$IP.IPv6.ordinal()] = 2;
                    return DeviceUtils$IP.$SWITCH_TABLE$com$mopub$common$util$DeviceUtils$IP = $switch_TABLE$com$mopub$common$util$DeviceUtils$IP2;
                }
                catch (NoSuchFieldError noSuchFieldError) {}
            }
            catch (NoSuchFieldError noSuchFieldError2) {
                continue;
            }
            break;
        }
    }
    
    private DeviceUtils$IP(final String s, final int n) {
    }
    
    private boolean matches(final String s) {
        switch ($SWITCH_TABLE$com$mopub$common$util$DeviceUtils$IP()[this.ordinal()]) {
            default: {
                return false;
            }
            case 1: {
                return InetAddressUtils.isIPv4Address(s);
            }
            case 2: {
                return InetAddressUtils.isIPv6Address(s);
            }
        }
    }
    
    private String toString(String s) {
        switch ($SWITCH_TABLE$com$mopub$common$util$DeviceUtils$IP()[this.ordinal()]) {
            default: {
                s = null;
                return s;
            }
            case 1: {
                return s;
            }
            case 2: {
                return s.split("%")[0];
            }
        }
    }
}
