// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.common.util;

import java.security.MessageDigest;
import java.util.concurrent.atomic.AtomicLong;

public class Utils
{
    private static final AtomicLong sNextGeneratedId;
    
    static {
        sNextGeneratedId = new AtomicLong(1L);
    }
    
    public static boolean bitMaskContainsFlag(final int n, final int n2) {
        return (n & n2) != 0x0;
    }
    
    public static long generateUniqueId() {
        long value;
        long n;
        do {
            value = Utils.sNextGeneratedId.get();
            n = value + 1L;
            if (n > 9223372036854775806L) {
                n = 1L;
            }
        } while (!Utils.sNextGeneratedId.compareAndSet(value, n));
        return value;
    }
    
    public static String sha1(final String s) {
        int i = 0;
        final StringBuilder sb = new StringBuilder();
        try {
            final MessageDigest instance = MessageDigest.getInstance("SHA-1");
            final byte[] bytes = s.getBytes("UTF-8");
            instance.update(bytes, 0, bytes.length);
            for (byte[] digest = instance.digest(); i < digest.length; ++i) {
                sb.append(String.format("%02X", digest[i]));
            }
            return sb.toString().toLowerCase();
        }
        catch (Exception ex) {
            return "";
        }
    }
}
