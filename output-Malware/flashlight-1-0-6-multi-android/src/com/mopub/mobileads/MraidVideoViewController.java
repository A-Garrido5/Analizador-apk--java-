// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.mobileads;

import com.mopub.common.util.Dips;
import android.view.ViewGroup$LayoutParams;
import android.widget.RelativeLayout$LayoutParams;
import android.view.View;
import android.view.View$OnClickListener;
import android.graphics.drawable.Drawable;
import com.mopub.common.util.Drawables;
import android.graphics.drawable.StateListDrawable;
import android.media.MediaPlayer$OnErrorListener;
import android.media.MediaPlayer;
import android.media.MediaPlayer$OnCompletionListener;
import android.os.Bundle;
import android.content.Context;
import android.widget.VideoView;
import android.widget.ImageButton;

public class MraidVideoViewController extends BaseVideoViewController
{
    private static final float CLOSE_BUTTON_PADDING = 8.0f;
    private static final float CLOSE_BUTTON_SIZE = 50.0f;
    private int mButtonPadding;
    private int mButtonSize;
    private ImageButton mCloseButton;
    private final VideoView mVideoView;
    
    MraidVideoViewController(final Context context, final Bundle bundle, final long n, final BaseVideoViewController$BaseVideoViewControllerListener baseVideoViewController$BaseVideoViewControllerListener) {
        super(context, n, baseVideoViewController$BaseVideoViewControllerListener);
        (this.mVideoView = new VideoView(context)).setOnCompletionListener((MediaPlayer$OnCompletionListener)new MediaPlayer$OnCompletionListener() {
            public void onCompletion(final MediaPlayer mediaPlayer) {
                MraidVideoViewController.this.mCloseButton.setVisibility(0);
                MraidVideoViewController.this.videoCompleted(true);
            }
        });
        this.mVideoView.setOnErrorListener((MediaPlayer$OnErrorListener)new MediaPlayer$OnErrorListener() {
            public boolean onError(final MediaPlayer mediaPlayer, final int n, final int n2) {
                MraidVideoViewController.this.mCloseButton.setVisibility(0);
                MraidVideoViewController.this.videoError(false);
                return false;
            }
        });
        this.mVideoView.setVideoPath(bundle.getString("video_url"));
    }
    
    private void createInterstitialCloseButton() {
        this.mCloseButton = new ImageButton(this.getContext());
        final StateListDrawable imageDrawable = new StateListDrawable();
        imageDrawable.addState(new int[] { -16842919 }, Drawables.INTERSTITIAL_CLOSE_BUTTON_NORMAL.decodeImage(this.getContext()));
        imageDrawable.addState(new int[] { 16842919 }, Drawables.INTERSTITIAL_CLOSE_BUTTON_PRESSED.decodeImage(this.getContext()));
        this.mCloseButton.setImageDrawable((Drawable)imageDrawable);
        this.mCloseButton.setBackgroundDrawable((Drawable)null);
        this.mCloseButton.setOnClickListener((View$OnClickListener)new View$OnClickListener() {
            public void onClick(final View view) {
                MraidVideoViewController.this.getBaseVideoViewControllerListener().onFinish();
            }
        });
        final RelativeLayout$LayoutParams relativeLayout$LayoutParams = new RelativeLayout$LayoutParams(this.mButtonSize, this.mButtonSize);
        relativeLayout$LayoutParams.addRule(11);
        relativeLayout$LayoutParams.setMargins(this.mButtonPadding, 0, this.mButtonPadding, 0);
        this.getLayout().addView((View)this.mCloseButton, (ViewGroup$LayoutParams)relativeLayout$LayoutParams);
    }
    
    @Override
    VideoView getVideoView() {
        return this.mVideoView;
    }
    
    @Override
    void onCreate() {
        super.onCreate();
        this.mButtonSize = Dips.asIntPixels(50.0f, this.getContext());
        this.mButtonPadding = Dips.asIntPixels(8.0f, this.getContext());
        this.createInterstitialCloseButton();
        this.mCloseButton.setVisibility(8);
        this.mVideoView.start();
    }
    
    @Override
    void onDestroy() {
    }
    
    @Override
    void onPause() {
    }
    
    @Override
    void onResume() {
    }
}
