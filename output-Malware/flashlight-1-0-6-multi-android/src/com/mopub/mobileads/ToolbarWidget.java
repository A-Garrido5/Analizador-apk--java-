// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.mobileads;

import android.view.View$OnTouchListener;
import android.content.Context;
import android.util.Log;
import android.graphics.drawable.Drawable;
import com.mopub.mobileads.resource.TextDrawable;
import android.text.TextUtils$TruncateAt;
import android.view.View;
import android.widget.RelativeLayout$LayoutParams;
import com.mopub.common.util.Utils;
import com.mopub.common.util.Dips;
import android.view.ViewGroup$LayoutParams;
import android.widget.LinearLayout$LayoutParams;
import android.widget.TextView;
import android.widget.ImageView;
import android.widget.RelativeLayout;

class ToolbarWidget extends RelativeLayout
{
    private static final int IMAGE_PADDING_DIPS = 5;
    private static final int IMAGE_SIDE_LENGTH_DIPS = 37;
    private static final int TEXT_PADDING_DIPS = 5;
    private final int mImagePadding;
    private final int mImageSideLength;
    private ImageView mImageView;
    private final int mTextPadding;
    private TextView mTextView;
    
    private ToolbarWidget(final ToolbarWidget$Builder toolbarWidget$Builder) {
        super(toolbarWidget$Builder.context);
        final LinearLayout$LayoutParams layoutParams = new LinearLayout$LayoutParams(0, -2, toolbarWidget$Builder.weight);
        layoutParams.gravity = toolbarWidget$Builder.widgetGravity;
        this.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
        this.mTextPadding = Dips.dipsToIntPixels(5.0f, this.getContext());
        this.mImagePadding = Dips.dipsToIntPixels(5.0f, this.getContext());
        this.mImageSideLength = Dips.dipsToIntPixels(37.0f, this.getContext());
        this.setVisibility(toolbarWidget$Builder.visibility);
        if (toolbarWidget$Builder.hasDrawable && toolbarWidget$Builder.drawable != null) {
            (this.mImageView = new ImageView(this.getContext())).setId((int)Utils.generateUniqueId());
            final RelativeLayout$LayoutParams relativeLayout$LayoutParams = new RelativeLayout$LayoutParams(this.mImageSideLength, this.mImageSideLength);
            relativeLayout$LayoutParams.addRule(15);
            relativeLayout$LayoutParams.addRule(toolbarWidget$Builder.drawableAlign);
            this.mImageView.setPadding(this.mImagePadding, this.mImagePadding, this.mImagePadding, this.mImagePadding);
            this.mImageView.setBackgroundColor(-16777216);
            this.mImageView.getBackground().setAlpha(0);
            this.mImageView.setImageDrawable(toolbarWidget$Builder.drawable);
            this.addView((View)this.mImageView, (ViewGroup$LayoutParams)relativeLayout$LayoutParams);
        }
        if (toolbarWidget$Builder.hasText) {
            (this.mTextView = new TextView(this.getContext())).setSingleLine();
            this.mTextView.setEllipsize(TextUtils$TruncateAt.END);
            this.mTextView.setText((CharSequence)toolbarWidget$Builder.defaultText);
            final RelativeLayout$LayoutParams relativeLayout$LayoutParams2 = new RelativeLayout$LayoutParams(-2, -2);
            relativeLayout$LayoutParams2.addRule(15);
            if (this.mImageView != null) {
                relativeLayout$LayoutParams2.addRule(0, this.mImageView.getId());
            }
            else {
                relativeLayout$LayoutParams2.addRule(toolbarWidget$Builder.textAlign);
            }
            this.mTextView.setPadding(this.mTextPadding, this.mTextPadding, this.mTextPadding, this.mTextPadding);
            this.addView((View)this.mTextView, (ViewGroup$LayoutParams)relativeLayout$LayoutParams2);
        }
        if (toolbarWidget$Builder.onTouchListener != null) {
            this.setOnTouchListener(toolbarWidget$Builder.onTouchListener);
        }
    }
    
    @Deprecated
    TextDrawable getImageViewDrawable() {
        return (TextDrawable)this.mImageView.getDrawable();
    }
    
    @Deprecated
    void setImageViewDrawable(final TextDrawable textDrawable) {
        this.mImageView.setImageDrawable((Drawable)textDrawable);
    }
    
    void updateImageText(final String s) {
        try {
            ((TextDrawable)this.mImageView.getDrawable()).updateText(s);
        }
        catch (Exception ex) {
            Log.d("MoPub", "Unable to update ToolbarWidget text.");
        }
    }
    
    void updateText(final String text) {
        if (this.mTextView != null) {
            this.mTextView.setText((CharSequence)text);
        }
    }
}
