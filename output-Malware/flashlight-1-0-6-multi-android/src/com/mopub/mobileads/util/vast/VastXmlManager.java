// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.mobileads.util.vast;

import java.io.Reader;
import org.xml.sax.InputSource;
import java.io.StringReader;
import javax.xml.parsers.DocumentBuilderFactory;
import java.util.Collection;
import org.w3c.dom.NodeList;
import java.util.ArrayList;
import java.util.List;
import org.w3c.dom.Document;

class VastXmlManager
{
    private static final String CLICK_THROUGH = "ClickThrough";
    private static final String CLICK_TRACKER = "ClickTracking";
    private static final String COMPANION = "Companion";
    private static final String COMPLETE = "complete";
    private static final String EVENT = "event";
    private static final String FIRST_QUARTILE = "firstQuartile";
    private static final String HEIGHT = "height";
    private static final String IMPRESSION_TRACKER = "Impression";
    private static final String MEDIA_FILE = "MediaFile";
    private static final String MIDPOINT = "midpoint";
    private static final String MP_IMPRESSION_TRACKER = "MP_TRACKING_URL";
    private static final String ROOT_TAG = "MPMoVideoXMLDocRoot";
    private static final String ROOT_TAG_CLOSE = "</MPMoVideoXMLDocRoot>";
    private static final String ROOT_TAG_OPEN = "<MPMoVideoXMLDocRoot>";
    private static final String START = "start";
    private static final String THIRD_QUARTILE = "thirdQuartile";
    private static final String VAST_AD_TAG = "VASTAdTagURI";
    private static final String VIDEO_TRACKER = "Tracking";
    private static final String WIDTH = "width";
    private Document mVastDoc;
    
    private List getVideoTrackerByAttribute(final String s) {
        return XmlUtils.getStringDataAsList(this.mVastDoc, "Tracking", "event", s);
    }
    
    String getClickThroughUrl() {
        final List stringDataAsList = XmlUtils.getStringDataAsList(this.mVastDoc, "ClickThrough");
        if (stringDataAsList.size() > 0) {
            return stringDataAsList.get(0);
        }
        return null;
    }
    
    List getClickTrackers() {
        return XmlUtils.getStringDataAsList(this.mVastDoc, "ClickTracking");
    }
    
    List getCompanionAdXmlManagers() {
        final NodeList elementsByTagName = this.mVastDoc.getElementsByTagName("Companion");
        final ArrayList list = new ArrayList<VastXmlManager$ImageCompanionAdXmlManager>(elementsByTagName.getLength());
        for (int i = 0; i < elementsByTagName.getLength(); ++i) {
            list.add(new VastXmlManager$ImageCompanionAdXmlManager(this, elementsByTagName.item(i)));
        }
        return list;
    }
    
    List getImpressionTrackers() {
        final List stringDataAsList = XmlUtils.getStringDataAsList(this.mVastDoc, "Impression");
        stringDataAsList.addAll(XmlUtils.getStringDataAsList(this.mVastDoc, "MP_TRACKING_URL"));
        return stringDataAsList;
    }
    
    String getMediaFileUrl() {
        final List stringDataAsList = XmlUtils.getStringDataAsList(this.mVastDoc, "MediaFile");
        if (stringDataAsList.size() > 0) {
            return stringDataAsList.get(0);
        }
        return null;
    }
    
    List getMediaXmlManagers() {
        final NodeList elementsByTagName = this.mVastDoc.getElementsByTagName("MediaFile");
        final ArrayList list = new ArrayList<VastXmlManager$MediaXmlManager>(elementsByTagName.getLength());
        for (int i = 0; i < elementsByTagName.getLength(); ++i) {
            list.add(new VastXmlManager$MediaXmlManager(this, elementsByTagName.item(i)));
        }
        return list;
    }
    
    String getVastAdTagURI() {
        final List stringDataAsList = XmlUtils.getStringDataAsList(this.mVastDoc, "VASTAdTagURI");
        if (stringDataAsList.size() > 0) {
            return stringDataAsList.get(0);
        }
        return null;
    }
    
    List getVideoCompleteTrackers() {
        return this.getVideoTrackerByAttribute("complete");
    }
    
    List getVideoFirstQuartileTrackers() {
        return this.getVideoTrackerByAttribute("firstQuartile");
    }
    
    List getVideoMidpointTrackers() {
        return this.getVideoTrackerByAttribute("midpoint");
    }
    
    List getVideoStartTrackers() {
        return this.getVideoTrackerByAttribute("start");
    }
    
    List getVideoThirdQuartileTrackers() {
        return this.getVideoTrackerByAttribute("thirdQuartile");
    }
    
    void parseVastXml(final String s) {
        final String string = "<MPMoVideoXMLDocRoot>" + s.replaceFirst("<\\?.*\\?>", "") + "</MPMoVideoXMLDocRoot>";
        final DocumentBuilderFactory instance = DocumentBuilderFactory.newInstance();
        instance.setCoalescing(true);
        this.mVastDoc = instance.newDocumentBuilder().parse(new InputSource(new StringReader(string)));
    }
}
