// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.mobileads.util.vast;

import org.apache.http.HttpEntity;
import com.mopub.common.util.Strings;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.client.methods.HttpGet;
import android.net.http.AndroidHttpClient;
import java.util.List;
import java.lang.ref.WeakReference;
import android.os.AsyncTask;

public class VastXmlManagerAggregator extends AsyncTask
{
    static final int MAX_TIMES_TO_FOLLOW_VAST_REDIRECT = 20;
    private int mTimesFollowedVastRedirect;
    private final WeakReference mVastXmlManagerAggregatorListener;
    
    VastXmlManagerAggregator(final VastXmlManagerAggregator$VastXmlManagerAggregatorListener vastXmlManagerAggregator$VastXmlManagerAggregatorListener) {
        this.mVastXmlManagerAggregatorListener = new WeakReference((T)vastXmlManagerAggregator$VastXmlManagerAggregatorListener);
    }
    
    protected List doInBackground(final String... p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aconst_null    
        //     1: astore_2       
        //     2: invokestatic    com/mopub/common/HttpClient.getHttpClient:()Landroid/net/http/AndroidHttpClient;
        //     5: astore          9
        //     7: aload           9
        //     9: astore          4
        //    11: aload_1        
        //    12: ifnull          214
        //    15: aload_1        
        //    16: arraylength    
        //    17: ifle            214
        //    20: aload_1        
        //    21: iconst_0       
        //    22: aaload         
        //    23: astore          11
        //    25: new             Ljava/util/ArrayList;
        //    28: dup            
        //    29: invokespecial   java/util/ArrayList.<init>:()V
        //    32: astore          12
        //    34: aload           11
        //    36: ifnull          207
        //    39: aload           11
        //    41: invokevirtual   java/lang/String.length:()I
        //    44: ifle            207
        //    47: aload_0        
        //    48: invokevirtual   com/mopub/mobileads/util/vast/VastXmlManagerAggregator.isCancelled:()Z
        //    51: istore          14
        //    53: iload           14
        //    55: ifeq            75
        //    58: aload           12
        //    60: astore          7
        //    62: aload           4
        //    64: ifnull          72
        //    67: aload           4
        //    69: invokevirtual   android/net/http/AndroidHttpClient.close:()V
        //    72: aload           7
        //    74: areturn        
        //    75: new             Lcom/mopub/mobileads/util/vast/VastXmlManager;
        //    78: dup            
        //    79: invokespecial   com/mopub/mobileads/util/vast/VastXmlManager.<init>:()V
        //    82: astore          15
        //    84: aload           15
        //    86: aload           11
        //    88: invokevirtual   com/mopub/mobileads/util/vast/VastXmlManager.parseVastXml:(Ljava/lang/String;)V
        //    91: aload           12
        //    93: aload           15
        //    95: invokeinterface java/util/List.add:(Ljava/lang/Object;)Z
        //   100: pop            
        //   101: aload_0        
        //   102: aload           4
        //   104: aload           15
        //   106: invokevirtual   com/mopub/mobileads/util/vast/VastXmlManager.getVastAdTagURI:()Ljava/lang/String;
        //   109: invokevirtual   com/mopub/mobileads/util/vast/VastXmlManagerAggregator.followVastRedirect:(Landroid/net/http/AndroidHttpClient;Ljava/lang/String;)Ljava/lang/String;
        //   112: astore          17
        //   114: aload           17
        //   116: astore          11
        //   118: goto            34
        //   121: astore          5
        //   123: aload           5
        //   125: astore          6
        //   127: aconst_null    
        //   128: astore          7
        //   130: ldc             "Failed to parse VAST XML"
        //   132: aload           6
        //   134: invokestatic    com/mopub/common/util/MoPubLog.d:(Ljava/lang/String;Ljava/lang/Throwable;)I
        //   137: pop            
        //   138: aload_2        
        //   139: ifnull          72
        //   142: aload_2        
        //   143: invokevirtual   android/net/http/AndroidHttpClient.close:()V
        //   146: aload           7
        //   148: areturn        
        //   149: astore_3       
        //   150: aconst_null    
        //   151: astore          4
        //   153: aload           4
        //   155: ifnull          163
        //   158: aload           4
        //   160: invokevirtual   android/net/http/AndroidHttpClient.close:()V
        //   163: aload_3        
        //   164: athrow         
        //   165: astore_3       
        //   166: goto            153
        //   169: astore_3       
        //   170: aload_2        
        //   171: astore          4
        //   173: goto            153
        //   176: astore          10
        //   178: aload           4
        //   180: astore_2       
        //   181: aload           10
        //   183: astore          6
        //   185: aconst_null    
        //   186: astore          7
        //   188: goto            130
        //   191: astore          13
        //   193: aload           4
        //   195: astore_2       
        //   196: aload           13
        //   198: astore          6
        //   200: aload           12
        //   202: astore          7
        //   204: goto            130
        //   207: aload           12
        //   209: astore          7
        //   211: goto            62
        //   214: aconst_null    
        //   215: astore          7
        //   217: goto            62
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  2      7      121    130    Ljava/lang/Exception;
        //  2      7      149    153    Any
        //  15     34     176    191    Ljava/lang/Exception;
        //  15     34     165    169    Any
        //  39     53     191    207    Ljava/lang/Exception;
        //  39     53     165    169    Any
        //  75     114    191    207    Ljava/lang/Exception;
        //  75     114    165    169    Any
        //  130    138    169    176    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertLocalVariables(AstBuilder.java:3035)
        //     at com.strobel.decompiler.ast.AstBuilder.performStackAnalysis(AstBuilder.java:2445)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:108)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    String followVastRedirect(final AndroidHttpClient androidHttpClient, final String s) {
        String fromStream = null;
        if (s != null) {
            final int mTimesFollowedVastRedirect = this.mTimesFollowedVastRedirect;
            fromStream = null;
            if (mTimesFollowedVastRedirect < 20) {
                ++this.mTimesFollowedVastRedirect;
                final HttpEntity entity = androidHttpClient.execute((HttpUriRequest)new HttpGet(s)).getEntity();
                fromStream = null;
                if (entity != null) {
                    fromStream = Strings.fromStream(entity.getContent());
                }
            }
        }
        return fromStream;
    }
    
    protected void onCancelled() {
        final VastXmlManagerAggregator$VastXmlManagerAggregatorListener vastXmlManagerAggregator$VastXmlManagerAggregatorListener = (VastXmlManagerAggregator$VastXmlManagerAggregatorListener)this.mVastXmlManagerAggregatorListener.get();
        if (vastXmlManagerAggregator$VastXmlManagerAggregatorListener != null) {
            vastXmlManagerAggregator$VastXmlManagerAggregatorListener.onAggregationComplete(null);
        }
    }
    
    protected void onPostExecute(final List list) {
        final VastXmlManagerAggregator$VastXmlManagerAggregatorListener vastXmlManagerAggregator$VastXmlManagerAggregatorListener = (VastXmlManagerAggregator$VastXmlManagerAggregatorListener)this.mVastXmlManagerAggregatorListener.get();
        if (vastXmlManagerAggregator$VastXmlManagerAggregatorListener != null) {
            vastXmlManagerAggregator$VastXmlManagerAggregatorListener.onAggregationComplete(list);
        }
    }
    
    @Deprecated
    void setTimesFollowedVastRedirect(final int mTimesFollowedVastRedirect) {
        this.mTimesFollowedVastRedirect = mTimesFollowedVastRedirect;
    }
}
