// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.mobileads;

import android.content.ActivityNotFoundException;
import com.mopub.common.util.IntentUtils;
import android.view.View;
import android.util.Log;
import android.os.Bundle;
import android.content.Intent;
import android.content.Context;

public class MraidVideoPlayerActivity extends BaseVideoPlayerActivity implements BaseVideoViewController$BaseVideoViewControllerListener
{
    private BaseVideoViewController mBaseVideoController;
    private long mBroadcastIdentifier;
    
    private BaseVideoViewController createVideoViewController() {
        final String stringExtra = this.getIntent().getStringExtra("video_view_class_name");
        if ("vast".equals(stringExtra)) {
            return new VastVideoViewController((Context)this, this.getIntent().getExtras(), this.mBroadcastIdentifier, this);
        }
        if ("mraid".equals(stringExtra)) {
            return new MraidVideoViewController((Context)this, this.getIntent().getExtras(), this.mBroadcastIdentifier, this);
        }
        throw new IllegalStateException("Unsupported video type: " + stringExtra);
    }
    
    private AdConfiguration getAdConfiguration() {
        try {
            return (AdConfiguration)this.getIntent().getSerializableExtra("Ad-Configuration");
        }
        catch (ClassCastException ex) {
            return null;
        }
    }
    
    @Deprecated
    BaseVideoViewController getBaseVideoViewController() {
        return this.mBaseVideoController;
    }
    
    protected void onActivityResult(final int n, final int n2, final Intent intent) {
        this.mBaseVideoController.onActivityResult(n, n2, intent);
    }
    
    public void onBackPressed() {
        if (this.mBaseVideoController.backButtonEnabled()) {
            super.onBackPressed();
        }
    }
    
    protected void onCreate(final Bundle bundle) {
        super.onCreate(bundle);
        this.requestWindowFeature(1);
        this.getWindow().addFlags(1024);
        final AdConfiguration adConfiguration = this.getAdConfiguration();
        Label_0054: {
            if (adConfiguration == null) {
                break Label_0054;
            }
            this.mBroadcastIdentifier = adConfiguration.getBroadcastIdentifier();
            try {
                while (true) {
                    (this.mBaseVideoController = this.createVideoViewController()).onCreate();
                    return;
                    Log.d("MoPub", "Unable to obtain broadcast identifier. Video interactions cannot be tracked.");
                    continue;
                }
            }
            catch (IllegalStateException ex) {
                EventForwardingBroadcastReceiver.broadcastAction((Context)this, this.mBroadcastIdentifier, "com.mopub.action.interstitial.fail");
                this.finish();
            }
        }
    }
    
    protected void onDestroy() {
        this.mBaseVideoController.onDestroy();
        super.onDestroy();
    }
    
    @Override
    public void onFinish() {
        this.finish();
    }
    
    protected void onPause() {
        this.mBaseVideoController.onPause();
        super.onPause();
    }
    
    protected void onResume() {
        super.onResume();
        this.mBaseVideoController.onResume();
    }
    
    @Override
    public void onSetContentView(final View contentView) {
        this.setContentView(contentView);
    }
    
    @Override
    public void onSetRequestedOrientation(final int requestedOrientation) {
        this.setRequestedOrientation(requestedOrientation);
    }
    
    @Override
    public void onStartActivityForResult(final Class clazz, final int n, final Bundle bundle) {
        if (clazz == null) {
            return;
        }
        final Intent startActivityIntent = IntentUtils.getStartActivityIntent((Context)this, clazz, bundle);
        try {
            this.startActivityForResult(startActivityIntent, n);
        }
        catch (ActivityNotFoundException ex) {
            Log.d("MoPub", "Activity " + clazz.getName() + " not found. Did you declare it in your AndroidManifest.xml?");
        }
    }
    
    @Deprecated
    void setBaseVideoViewController(final BaseVideoViewController mBaseVideoController) {
        this.mBaseVideoController = mBaseVideoController;
    }
}
