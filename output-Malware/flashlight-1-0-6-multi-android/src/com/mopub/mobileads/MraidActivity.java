// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.mobileads;

import com.mopub.mobileads.util.WebViews;
import android.annotation.TargetApi;
import com.mopub.common.util.VersionCode;
import android.os.Bundle;
import android.view.View;
import android.content.ActivityNotFoundException;
import android.util.Log;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import com.mopub.mobileads.factories.MraidViewFactory;
import java.io.Serializable;
import android.content.Intent;
import android.content.Context;

public class MraidActivity extends BaseInterstitialActivity
{
    private MraidView mMraidView;
    
    private static Intent createIntent(final Context context, final String s, final AdConfiguration adConfiguration) {
        final Intent intent = new Intent(context, (Class)MraidActivity.class);
        intent.putExtra("Html-Response-Body", s);
        intent.putExtra("Ad-Configuration", (Serializable)adConfiguration);
        intent.addFlags(268435456);
        return intent;
    }
    
    static void preRenderHtml(final Context context, final CustomEventInterstitial$CustomEventInterstitialListener customEventInterstitial$CustomEventInterstitialListener, final String s) {
        final MraidView create = MraidViewFactory.create(context, null, MraidView$ExpansionStyle.DISABLED, MraidView$NativeCloseButtonStyle.ALWAYS_VISIBLE, MraidView$PlacementType.INTERSTITIAL);
        create.enablePlugins(false);
        create.setMraidListener(new MraidView$MraidListener() {
            @Override
            public void onClose(final MraidView mraidView, final MraidView$ViewState mraidView$ViewState) {
            }
            
            @Override
            public void onExpand(final MraidView mraidView) {
            }
            
            @Override
            public void onFailure(final MraidView mraidView) {
                customEventInterstitial$CustomEventInterstitialListener.onInterstitialFailed(null);
            }
            
            @Override
            public void onOpen(final MraidView mraidView) {
            }
            
            @Override
            public void onReady(final MraidView mraidView) {
                customEventInterstitial$CustomEventInterstitialListener.onInterstitialLoaded();
            }
        });
        create.setWebViewClient((WebViewClient)new WebViewClient() {
            public void onPageFinished(final WebView webView, final String s) {
                customEventInterstitial$CustomEventInterstitialListener.onInterstitialLoaded();
            }
            
            public boolean shouldOverrideUrlLoading(final WebView webView, final String s) {
                return true;
            }
        });
        create.loadHtmlData(s);
    }
    
    public static void start(final Context context, final String s, final AdConfiguration adConfiguration) {
        final Intent intent = createIntent(context, s, adConfiguration);
        try {
            context.startActivity(intent);
        }
        catch (ActivityNotFoundException ex) {
            Log.d("MraidInterstitial", "MraidActivity.class not found. Did you declare MraidActivity in your manifest?");
        }
    }
    
    @Override
    public View getAdView() {
        (this.mMraidView = MraidViewFactory.create((Context)this, this.getAdConfiguration(), MraidView$ExpansionStyle.DISABLED, MraidView$NativeCloseButtonStyle.AD_CONTROLLED, MraidView$PlacementType.INTERSTITIAL)).setMraidListener(new MraidView$BaseMraidListener() {
            @Override
            public void onClose(final MraidView mraidView, final MraidView$ViewState mraidView$ViewState) {
                MraidActivity.this.mMraidView.loadUrl(BaseInterstitialActivity$JavaScriptWebViewCallbacks.WEB_VIEW_DID_CLOSE.getUrl());
                MraidActivity.this.finish();
            }
            
            @Override
            public void onOpen(final MraidView mraidView) {
                EventForwardingBroadcastReceiver.broadcastAction((Context)MraidActivity.this, MraidActivity.this.getBroadcastIdentifier(), "com.mopub.action.interstitial.click");
            }
            
            @Override
            public void onReady(final MraidView mraidView) {
                MraidActivity.this.mMraidView.loadUrl(BaseInterstitialActivity$JavaScriptWebViewCallbacks.WEB_VIEW_DID_APPEAR.getUrl());
                MraidActivity.this.showInterstitialCloseButton();
            }
        });
        this.mMraidView.setOnCloseButtonStateChange(new MraidView$OnCloseButtonStateChangeListener() {
            @Override
            public void onCloseButtonStateChange(final MraidView mraidView, final boolean b) {
                if (b) {
                    MraidActivity.this.showInterstitialCloseButton();
                    return;
                }
                MraidActivity.this.hideInterstitialCloseButton();
            }
        });
        this.mMraidView.loadHtmlData(this.getIntent().getStringExtra("Html-Response-Body"));
        return (View)this.mMraidView;
    }
    
    @TargetApi(11)
    public void onCreate(final Bundle bundle) {
        super.onCreate(bundle);
        EventForwardingBroadcastReceiver.broadcastAction((Context)this, this.getBroadcastIdentifier(), "com.mopub.action.interstitial.show");
        if (VersionCode.currentApiLevel().isAtLeast(VersionCode.ICE_CREAM_SANDWICH)) {
            this.getWindow().setFlags(16777216, 16777216);
        }
        this.addCloseEventRegion();
    }
    
    @Override
    protected void onDestroy() {
        this.mMraidView.destroy();
        EventForwardingBroadcastReceiver.broadcastAction((Context)this, this.getBroadcastIdentifier(), "com.mopub.action.interstitial.dismiss");
        super.onDestroy();
    }
    
    protected void onPause() {
        super.onPause();
        WebViews.onPause(this.mMraidView);
    }
    
    protected void onResume() {
        super.onResume();
        WebViews.onResume(this.mMraidView);
    }
}
