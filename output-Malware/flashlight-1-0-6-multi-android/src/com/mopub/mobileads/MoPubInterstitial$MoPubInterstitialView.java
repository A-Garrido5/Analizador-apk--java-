// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.mobileads;

import com.mopub.common.LocationService$LocationAwareness;
import android.location.Location;
import android.app.Activity;
import com.mopub.mobileads.factories.CustomEventInterstitialAdapterFactory;
import com.mopub.common.util.ResponseHeader;
import android.util.Log;
import java.util.Map;
import android.content.Context;

public class MoPubInterstitial$MoPubInterstitialView extends MoPubView
{
    final /* synthetic */ MoPubInterstitial this$0;
    
    public MoPubInterstitial$MoPubInterstitialView(final MoPubInterstitial this$0, final Context context) {
        this.this$0 = this$0;
        super(context);
        this.setAutorefreshEnabled(false);
    }
    
    @Override
    protected void adFailed(final MoPubErrorCode moPubErrorCode) {
        if (this.this$0.mInterstitialAdListener != null) {
            this.this$0.mInterstitialAdListener.onInterstitialFailed(this.this$0, moPubErrorCode);
        }
    }
    
    @Override
    protected void loadCustomEvent(final Map map) {
        if (map == null) {
            Log.d("MoPub", "Couldn't invoke custom event because the server did not specify one.");
            this.loadFailUrl(MoPubErrorCode.ADAPTER_NOT_FOUND);
            return;
        }
        if (this.this$0.mCustomEventInterstitialAdapter != null) {
            this.this$0.mCustomEventInterstitialAdapter.invalidate();
        }
        Log.d("MoPub", "Loading custom event interstitial adapter.");
        MoPubInterstitial.access$1(this.this$0, CustomEventInterstitialAdapterFactory.create(this.this$0, map.get(ResponseHeader.CUSTOM_EVENT_NAME.getKey()), map.get(ResponseHeader.CUSTOM_EVENT_DATA.getKey())));
        this.this$0.mCustomEventInterstitialAdapter.setAdapterListener(this.this$0);
        this.this$0.mCustomEventInterstitialAdapter.loadInterstitial();
    }
    
    protected void trackImpression() {
        Log.d("MoPub", "Tracking impression for interstitial.");
        if (this.mAdViewController != null) {
            this.mAdViewController.trackImpression();
        }
    }
}
