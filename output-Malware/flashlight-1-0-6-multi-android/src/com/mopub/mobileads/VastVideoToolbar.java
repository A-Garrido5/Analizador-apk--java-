// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.mobileads;

import com.mopub.mobileads.resource.LearnMoreDrawable;
import com.mopub.mobileads.resource.CountdownDrawable;
import android.graphics.drawable.Drawable;
import com.mopub.mobileads.resource.CloseButtonDrawable;
import android.view.ViewGroup$LayoutParams;
import android.widget.LinearLayout$LayoutParams;
import com.mopub.common.util.Dips;
import android.view.MotionEvent;
import android.view.View;
import android.view.View$OnTouchListener;
import com.mopub.common.util.Utils;
import android.content.Context;
import android.widget.LinearLayout;

class VastVideoToolbar extends LinearLayout
{
    private static final int THRESHOLD_FOR_HIDING_VIDEO_DURATION = 200;
    private static final int TOOLBAR_HEIGHT_DIPS = 44;
    private final ToolbarWidget mCloseButtonWidget;
    private final ToolbarWidget mCountdownWidget;
    private final ToolbarWidget mDurationWidget;
    private final ToolbarWidget mLearnMoreWidget;
    
    public VastVideoToolbar(final Context context) {
        super(context);
        this.setId((int)Utils.generateUniqueId());
        this.setOnTouchListener((View$OnTouchListener)new View$OnTouchListener() {
            public boolean onTouch(final View view, final MotionEvent motionEvent) {
                return true;
            }
        });
        this.setLayoutParams((ViewGroup$LayoutParams)new LinearLayout$LayoutParams(-1, Dips.dipsToIntPixels(44.0f, this.getContext())));
        this.setBackgroundColor(-16777216);
        this.getBackground().setAlpha(180);
        this.mDurationWidget = this.createDurationWidget();
        this.mLearnMoreWidget = this.createLearnMoreWidget();
        this.mCountdownWidget = this.createCountdownWidget();
        this.mCloseButtonWidget = this.createCloseButtonWidget();
        this.addView((View)this.mDurationWidget);
        this.addView((View)this.mLearnMoreWidget);
        this.addView((View)this.mCountdownWidget);
        this.addView((View)this.mCloseButtonWidget);
    }
    
    private ToolbarWidget createCloseButtonWidget() {
        return new ToolbarWidget$Builder(this.getContext()).weight(1.0f).widgetGravity(21).defaultText("Close").drawable(new CloseButtonDrawable()).visibility(8).build();
    }
    
    private ToolbarWidget createCountdownWidget() {
        return new ToolbarWidget$Builder(this.getContext()).weight(1.0f).widgetGravity(21).defaultText("Skip in").drawable(new CountdownDrawable(this.getContext())).visibility(4).build();
    }
    
    private ToolbarWidget createDurationWidget() {
        return new ToolbarWidget$Builder(this.getContext()).weight(2.0f).widgetGravity(19).hasText().textAlign(9).build();
    }
    
    private ToolbarWidget createLearnMoreWidget() {
        return new ToolbarWidget$Builder(this.getContext()).weight(1.0f).widgetGravity(21).defaultText("Learn More").drawable(new LearnMoreDrawable()).visibility(4).build();
    }
    
    @Deprecated
    ToolbarWidget getCloseButtonWidget() {
        return this.mCloseButtonWidget;
    }
    
    @Deprecated
    ToolbarWidget getCountdownWidget() {
        return this.mCountdownWidget;
    }
    
    String getDisplaySeconds(final long n) {
        return String.valueOf(Math.round(Math.ceil(n / 1000.0f)));
    }
    
    @Deprecated
    ToolbarWidget getDurationWidget() {
        return this.mDurationWidget;
    }
    
    @Deprecated
    ToolbarWidget getLearnMoreWidget() {
        return this.mLearnMoreWidget;
    }
    
    void makeInteractable() {
        this.mCountdownWidget.setVisibility(8);
        this.mLearnMoreWidget.setVisibility(0);
        this.mCloseButtonWidget.setVisibility(0);
    }
    
    void setCloseButtonOnTouchListener(final View$OnTouchListener onTouchListener) {
        this.mCloseButtonWidget.setOnTouchListener(onTouchListener);
    }
    
    void setLearnMoreButtonOnTouchListener(final View$OnTouchListener onTouchListener) {
        this.mLearnMoreWidget.setOnTouchListener(onTouchListener);
    }
    
    void updateCountdownWidget(final int n) {
        if (n >= 0 && this.mCountdownWidget.getVisibility() == 4) {
            this.mCloseButtonWidget.setVisibility(8);
            this.mCountdownWidget.setVisibility(0);
        }
        this.mCountdownWidget.updateImageText(this.getDisplaySeconds(n));
    }
    
    void updateDurationWidget(final int n) {
        if (n >= 200) {
            this.mDurationWidget.updateText("Ends in " + this.getDisplaySeconds(n) + " seconds");
        }
        else if (n >= 0) {
            this.mDurationWidget.updateText("Thanks for watching");
        }
    }
}
