// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.mobileads;

import org.apache.http.HttpEntity;
import com.mopub.common.util.Json;
import android.net.Uri;
import com.mopub.common.util.Strings;
import com.mopub.mobileads.util.HttpResponses;
import android.util.Log;
import java.util.Map;
import com.mopub.common.util.ResponseHeader;
import java.util.HashMap;
import org.apache.http.HttpResponse;

class AdLoadTask$TaskExtractor
{
    private String adType;
    private String adTypeCustomEventName;
    private final AdViewController adViewController;
    private String fullAdType;
    private final HttpResponse response;
    
    AdLoadTask$TaskExtractor(final HttpResponse response, final AdViewController adViewController) {
        this.response = response;
        this.adViewController = adViewController;
    }
    
    private AdLoadTask createCustomEventAdLoadTask(final String s) {
        final HashMap<String, String> hashMap = new HashMap<String, String>();
        hashMap.put(ResponseHeader.CUSTOM_EVENT_NAME.getKey(), this.adTypeCustomEventName);
        if (s != null) {
            hashMap.put(ResponseHeader.CUSTOM_EVENT_DATA.getKey(), s);
        }
        return new AdLoadTask$CustomEventAdLoadTask(this.adViewController, hashMap);
    }
    
    private boolean eventDataIsInResponseBody(final String s) {
        return "mraid".equals(s) || "html".equals(s) || ("interstitial".equals(s) && "vast".equals(this.fullAdType));
    }
    
    private AdLoadTask extractCustomEventAdLoadTask() {
        Log.i("MoPub", "Performing custom event.");
        this.adTypeCustomEventName = HttpResponses.extractHeader(this.response, ResponseHeader.CUSTOM_EVENT_NAME);
        if (this.adTypeCustomEventName != null) {
            return this.createCustomEventAdLoadTask(HttpResponses.extractHeader(this.response, ResponseHeader.CUSTOM_EVENT_DATA));
        }
        return new AdLoadTask$LegacyCustomEventAdLoadTask(this.adViewController, this.response.getFirstHeader(ResponseHeader.CUSTOM_SELECTOR.getKey()));
    }
    
    private AdLoadTask extractCustomEventAdLoadTaskFromNativeParams() {
        return this.createCustomEventAdLoadTask(HttpResponses.extractHeader(this.response, ResponseHeader.NATIVE_PARAMS));
    }
    
    private AdLoadTask extractCustomEventAdLoadTaskFromResponseBody() {
        final HttpEntity entity = this.response.getEntity();
        String fromStream;
        if (entity != null) {
            fromStream = Strings.fromStream(entity.getContent());
        }
        else {
            fromStream = "";
        }
        this.adViewController.getAdConfiguration().setResponseString(fromStream);
        final String header = HttpResponses.extractHeader(this.response, ResponseHeader.REDIRECT_URL);
        final String header2 = HttpResponses.extractHeader(this.response, ResponseHeader.CLICKTHROUGH_URL);
        final boolean booleanHeader = HttpResponses.extractBooleanHeader(this.response, ResponseHeader.SCROLLABLE, false);
        final HashMap<String, String> hashMap = new HashMap<String, String>();
        hashMap.put("Html-Response-Body", Uri.encode(fromStream));
        hashMap.put("Scrollable", Boolean.toString(booleanHeader));
        if (header != null) {
            hashMap.put("Redirect-Url", header);
        }
        if (header2 != null) {
            hashMap.put("Clickthrough-Url", header2);
        }
        return this.createCustomEventAdLoadTask(Json.mapToJsonString(hashMap));
    }
    
    AdLoadTask extract() {
        this.adType = HttpResponses.extractHeader(this.response, ResponseHeader.AD_TYPE);
        this.fullAdType = HttpResponses.extractHeader(this.response, ResponseHeader.FULL_AD_TYPE);
        Log.d("MoPub", "Loading ad type: " + AdTypeTranslator.getAdNetworkType(this.adType, this.fullAdType));
        this.adTypeCustomEventName = AdTypeTranslator.getCustomEventNameForAdType(this.adViewController.getMoPubView(), this.adType, this.fullAdType);
        if ("custom".equals(this.adType)) {
            return this.extractCustomEventAdLoadTask();
        }
        if (this.eventDataIsInResponseBody(this.adType)) {
            return this.extractCustomEventAdLoadTaskFromResponseBody();
        }
        return this.extractCustomEventAdLoadTaskFromNativeParams();
    }
}
