// 
// Decompiled by Procyon v0.5.30
// 

package com.mopub.mobileads;

import com.mopub.mobileads.factories.VastManagerFactory;
import com.mopub.common.CacheService;
import android.net.Uri;
import java.util.Map;
import com.mopub.mobileads.util.vast.VastVideoConfiguration;
import com.mopub.mobileads.util.vast.VastManager;
import com.mopub.mobileads.util.vast.VastManager$VastManagerListener;

class VastVideoInterstitial extends ResponseBodyInterstitial implements VastManager$VastManagerListener
{
    private CustomEventInterstitial$CustomEventInterstitialListener mCustomEventInterstitialListener;
    private VastManager mVastManager;
    private String mVastResponse;
    private VastVideoConfiguration mVastVideoConfiguration;
    
    @Override
    protected void extractExtras(final Map map) {
        this.mVastResponse = Uri.decode((String)map.get("Html-Response-Body"));
    }
    
    @Deprecated
    String getVastResponse() {
        return this.mVastResponse;
    }
    
    @Override
    protected void onInvalidate() {
        if (this.mVastManager != null) {
            this.mVastManager.cancel();
        }
        super.onInvalidate();
    }
    
    @Override
    public void onVastVideoConfigurationPrepared(final VastVideoConfiguration mVastVideoConfiguration) {
        if (mVastVideoConfiguration == null) {
            this.mCustomEventInterstitialListener.onInterstitialFailed(MoPubErrorCode.VIDEO_DOWNLOAD_ERROR);
            return;
        }
        this.mVastVideoConfiguration = mVastVideoConfiguration;
        this.mCustomEventInterstitialListener.onInterstitialLoaded();
    }
    
    @Override
    protected void preRenderHtml(final CustomEventInterstitial$CustomEventInterstitialListener mCustomEventInterstitialListener) {
        this.mCustomEventInterstitialListener = mCustomEventInterstitialListener;
        if (!CacheService.initializeDiskCache(this.mContext)) {
            this.mCustomEventInterstitialListener.onInterstitialFailed(MoPubErrorCode.VIDEO_CACHE_ERROR);
            return;
        }
        (this.mVastManager = VastManagerFactory.create(this.mContext)).prepareVastVideoConfiguration(this.mVastResponse, this);
    }
    
    @Deprecated
    void setVastManager(final VastManager mVastManager) {
        this.mVastManager = mVastManager;
    }
    
    @Override
    protected void showInterstitial() {
        BaseVideoPlayerActivity.startVast(this.mContext, this.mVastVideoConfiguration, this.mAdConfiguration);
    }
}
