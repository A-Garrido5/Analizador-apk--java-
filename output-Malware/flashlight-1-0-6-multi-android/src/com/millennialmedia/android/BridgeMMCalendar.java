// 
// Decompiled by Procyon v0.5.30
// 

package com.millennialmedia.android;

import android.annotation.TargetApi;
import java.util.Map;
import org.json.JSONObject;
import java.text.SimpleDateFormat;

class BridgeMMCalendar extends MMJSObject
{
    private static final String ADD_EVENT = "addEvent";
    private static final String TAG;
    private static final String[] mraidCreateCalendarEventDateFormats;
    private static final SimpleDateFormat rruleUntilDateFormat;
    
    static {
        TAG = BridgeMMCalendar.class.getName();
        mraidCreateCalendarEventDateFormats = new String[] { "yyyy-MM-dd'T'HH:mmZZZ", "yyyy-MM-dd'T'HH:mm:ssZZZ" };
        rruleUntilDateFormat = new SimpleDateFormat("yyyyMMdd'T'HHmmss");
    }
    
    private String convertMraidDayToRRuleDay(final int n) {
        switch (n) {
            default: {
                return null;
            }
            case 1: {
                return "MO";
            }
            case 2: {
                return "TU";
            }
            case 3: {
                return "WE";
            }
            case 4: {
                return "TH";
            }
            case 5: {
                return "FR";
            }
            case 6: {
                return "SA";
            }
            case 7: {
                return "SU";
            }
        }
    }
    
    private String convertRecurrence(final JSONObject p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: new             Ljava/lang/StringBuilder;
        //     3: dup            
        //     4: invokespecial   java/lang/StringBuilder.<init>:()V
        //     7: astore_2       
        //     8: aload_1        
        //     9: ldc             "frequency"
        //    11: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //    14: astore          23
        //    16: aload_2        
        //    17: ldc             "FREQ="
        //    19: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    22: aload           23
        //    24: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    27: ldc             ";"
        //    29: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    32: pop            
        //    33: getstatic       com/millennialmedia/android/BridgeMMCalendar.rruleUntilDateFormat:Ljava/text/SimpleDateFormat;
        //    36: aload_1        
        //    37: ldc             "expires"
        //    39: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //    42: getstatic       com/millennialmedia/android/BridgeMMCalendar.mraidCreateCalendarEventDateFormats:[Ljava/lang/String;
        //    45: invokestatic    org/apache/http/impl/cookie/DateUtils.parseDate:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;
        //    48: invokevirtual   java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
        //    51: astore          21
        //    53: aload_2        
        //    54: ldc             "UNTIL="
        //    56: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    59: aload           21
        //    61: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    64: ldc             ";"
        //    66: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    69: pop            
        //    70: aload_1        
        //    71: ldc             "daysInWeek"
        //    73: invokevirtual   org/json/JSONObject.getJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;
        //    76: astore          15
        //    78: new             Ljava/lang/StringBuilder;
        //    81: dup            
        //    82: invokespecial   java/lang/StringBuilder.<init>:()V
        //    85: astore          16
        //    87: iconst_0       
        //    88: istore          17
        //    90: iload           17
        //    92: aload           15
        //    94: invokevirtual   org/json/JSONArray.length:()I
        //    97: if_icmpge       166
        //   100: aload           16
        //   102: aload_0        
        //   103: aload           15
        //   105: iload           17
        //   107: invokevirtual   org/json/JSONArray.getInt:(I)I
        //   110: invokespecial   com/millennialmedia/android/BridgeMMCalendar.convertMraidDayToRRuleDay:(I)Ljava/lang/String;
        //   113: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   116: ldc             ","
        //   118: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   121: pop            
        //   122: iinc            17, 1
        //   125: goto            90
        //   128: astore_3       
        //   129: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   132: ldc             "Unable to get calendar event recurrence frequency"
        //   134: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   137: goto            33
        //   140: astore          20
        //   142: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   145: ldc             "Error parsing calendar event recurrence expiration date"
        //   147: invokestatic    com/millennialmedia/android/MMLog.e:(Ljava/lang/String;Ljava/lang/String;)V
        //   150: goto            70
        //   153: astore          4
        //   155: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   158: ldc             "Unable to get calendar event recurrence expiration date"
        //   160: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   163: goto            70
        //   166: aload_2        
        //   167: ldc             "BYDAY="
        //   169: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   172: aload           16
        //   174: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
        //   177: ldc             ";"
        //   179: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   182: pop            
        //   183: aload_1        
        //   184: ldc             "daysInMonth"
        //   186: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   189: ldc             "\\["
        //   191: ldc             ""
        //   193: invokevirtual   java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   196: ldc             "\\]"
        //   198: ldc             ""
        //   200: invokevirtual   java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   203: astore          13
        //   205: aload_2        
        //   206: ldc             "BYMONTHDAY="
        //   208: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   211: aload           13
        //   213: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   216: ldc             ";"
        //   218: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   221: pop            
        //   222: aload_1        
        //   223: ldc             "monthsInYear:"
        //   225: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   228: ldc             "\\["
        //   230: ldc             ""
        //   232: invokevirtual   java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   235: ldc             "\\]"
        //   237: ldc             ""
        //   239: invokevirtual   java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   242: astore          11
        //   244: aload_2        
        //   245: ldc             "BYMONTH="
        //   247: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   250: aload           11
        //   252: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   255: ldc             ";"
        //   257: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   260: pop            
        //   261: aload_1        
        //   262: ldc             "daysInYear"
        //   264: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   267: astore          9
        //   269: aload_2        
        //   270: ldc             "BYYEARDAY="
        //   272: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   275: aload           9
        //   277: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   280: ldc             ";"
        //   282: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   285: pop            
        //   286: aload_2        
        //   287: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   290: invokevirtual   java/lang/String.toUpperCase:()Ljava/lang/String;
        //   293: areturn        
        //   294: astore          5
        //   296: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   299: ldc             "Unable to get days in week"
        //   301: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   304: goto            183
        //   307: astore          6
        //   309: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   312: ldc             "Unable to get days in month"
        //   314: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   317: goto            222
        //   320: astore          7
        //   322: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   325: ldc             "Unable to get months in year:"
        //   327: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   330: goto            261
        //   333: astore          8
        //   335: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   338: ldc             "Unable to get days in year"
        //   340: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   343: goto            286
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                            
        //  -----  -----  -----  -----  ------------------------------------------------
        //  8      33     128    140    Lorg/json/JSONException;
        //  33     70     140    153    Lorg/apache/http/impl/cookie/DateParseException;
        //  33     70     153    166    Lorg/json/JSONException;
        //  70     87     294    307    Lorg/json/JSONException;
        //  90     122    294    307    Lorg/json/JSONException;
        //  166    183    294    307    Lorg/json/JSONException;
        //  183    222    307    320    Lorg/json/JSONException;
        //  222    261    320    333    Lorg/json/JSONException;
        //  261    286    333    346    Lorg/json/JSONException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 153, Size: 153
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    @TargetApi(14)
    public MMJSResponse addEvent(final Map p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //     3: new             Ljava/lang/StringBuilder;
        //     6: dup            
        //     7: ldc             "addEvent parameters: "
        //     9: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    12: aload_1        
        //    13: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //    16: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    19: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //    22: getstatic       android/os/Build$VERSION.SDK_INT:I
        //    25: bipush          14
        //    27: if_icmplt       678
        //    30: aload_1        
        //    31: ifnull          676
        //    34: aload_1        
        //    35: ldc             "parameters"
        //    37: invokeinterface java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //    42: ifnull          676
        //    45: new             Lorg/json/JSONObject;
        //    48: dup            
        //    49: aload_1        
        //    50: ldc             "parameters"
        //    52: invokeinterface java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //    57: checkcast       Ljava/lang/String;
        //    60: invokespecial   org/json/JSONObject.<init>:(Ljava/lang/String;)V
        //    63: astore_2       
        //    64: aload_2        
        //    65: ldc             "description"
        //    67: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //    70: astore          40
        //    72: aload           40
        //    74: astore          5
        //    76: aload_2        
        //    77: ldc             "summary"
        //    79: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //    82: astore          39
        //    84: aload           39
        //    86: astore          7
        //    88: aload_2        
        //    89: ldc             "transparency"
        //    91: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //    94: astore          38
        //    96: aload           38
        //    98: astore          9
        //   100: aload_2        
        //   101: ldc             "reminder"
        //   103: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   106: astore          37
        //   108: aload           37
        //   110: astore          11
        //   112: aload_2        
        //   113: ldc             "location"
        //   115: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   118: astore          36
        //   120: aload           36
        //   122: astore          13
        //   124: aload_2        
        //   125: ldc             "status"
        //   127: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   130: astore          35
        //   132: aload           35
        //   134: astore          15
        //   136: aload_0        
        //   137: aload_2        
        //   138: ldc             "recurrence"
        //   140: invokevirtual   org/json/JSONObject.getJSONObject:(Ljava/lang/String;)Lorg/json/JSONObject;
        //   143: invokespecial   com/millennialmedia/android/BridgeMMCalendar.convertRecurrence:(Lorg/json/JSONObject;)Ljava/lang/String;
        //   146: astore          34
        //   148: aload           34
        //   150: astore          17
        //   152: aload_2        
        //   153: ldc             "start"
        //   155: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   158: getstatic       com/millennialmedia/android/BridgeMMCalendar.mraidCreateCalendarEventDateFormats:[Ljava/lang/String;
        //   161: invokestatic    org/apache/http/impl/cookie/DateUtils.parseDate:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;
        //   164: astore          33
        //   166: aload           33
        //   168: astore          19
        //   170: aload_2        
        //   171: ldc             "end"
        //   173: invokevirtual   org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;
        //   176: getstatic       com/millennialmedia/android/BridgeMMCalendar.mraidCreateCalendarEventDateFormats:[Ljava/lang/String;
        //   179: invokestatic    org/apache/http/impl/cookie/DateUtils.parseDate:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;
        //   182: astore          31
        //   184: aload           31
        //   186: astore          21
        //   188: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   191: ldc             "Creating calendar event: title: %s, location: %s, start: %s, end: %s, status: %s, summary: %s, rrule: %s"
        //   193: bipush          7
        //   195: anewarray       Ljava/lang/Object;
        //   198: dup            
        //   199: iconst_0       
        //   200: aload           5
        //   202: aastore        
        //   203: dup            
        //   204: iconst_1       
        //   205: aload           13
        //   207: aastore        
        //   208: dup            
        //   209: iconst_2       
        //   210: aload           19
        //   212: aastore        
        //   213: dup            
        //   214: iconst_3       
        //   215: aload           21
        //   217: aastore        
        //   218: dup            
        //   219: iconst_4       
        //   220: aload           15
        //   222: aastore        
        //   223: dup            
        //   224: iconst_5       
        //   225: aload           7
        //   227: aastore        
        //   228: dup            
        //   229: bipush          6
        //   231: aload           17
        //   233: aastore        
        //   234: invokestatic    java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        //   237: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   240: aload           5
        //   242: ifnull          250
        //   245: aload           19
        //   247: ifnonnull       460
        //   250: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   253: ldc             "Description and start must be provided to create calendar event."
        //   255: invokestatic    com/millennialmedia/android/MMLog.e:(Ljava/lang/String;Ljava/lang/String;)V
        //   258: ldc             "Calendar Event Creation Failed.  Minimum parameters not provided"
        //   260: invokestatic    com/millennialmedia/android/MMJSResponse.responseWithError:(Ljava/lang/String;)Lcom/millennialmedia/android/MMJSResponse;
        //   263: areturn        
        //   264: astore_3       
        //   265: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   268: ldc             "Unable to get calendar event description"
        //   270: invokestatic    com/millennialmedia/android/MMLog.e:(Ljava/lang/String;Ljava/lang/String;)V
        //   273: aconst_null    
        //   274: astore          5
        //   276: goto            76
        //   279: astore          6
        //   281: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   284: ldc             "Unable to get calendar event description"
        //   286: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   289: aconst_null    
        //   290: astore          7
        //   292: goto            88
        //   295: astore          8
        //   297: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   300: ldc             "Unable to get calendar event transparency"
        //   302: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   305: aconst_null    
        //   306: astore          9
        //   308: goto            100
        //   311: astore          10
        //   313: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   316: ldc             "Unable to get calendar event reminder"
        //   318: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   321: aconst_null    
        //   322: astore          11
        //   324: goto            112
        //   327: astore          12
        //   329: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   332: ldc             "Unable to get calendar event location"
        //   334: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   337: aconst_null    
        //   338: astore          13
        //   340: goto            124
        //   343: astore          14
        //   345: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   348: ldc             "Unable to get calendar event status"
        //   350: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   353: aconst_null    
        //   354: astore          15
        //   356: goto            136
        //   359: astore          16
        //   361: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   364: ldc             "Unable to get calendar event recurrence"
        //   366: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   369: aconst_null    
        //   370: astore          17
        //   372: goto            152
        //   375: astore          32
        //   377: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   380: ldc             "Error parsing calendar event start date"
        //   382: invokestatic    com/millennialmedia/android/MMLog.e:(Ljava/lang/String;Ljava/lang/String;)V
        //   385: aconst_null    
        //   386: astore          19
        //   388: goto            170
        //   391: astore          18
        //   393: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   396: ldc_w           "Unable to get calendar event start date"
        //   399: invokestatic    com/millennialmedia/android/MMLog.e:(Ljava/lang/String;Ljava/lang/String;)V
        //   402: aconst_null    
        //   403: astore          19
        //   405: goto            170
        //   408: astore          30
        //   410: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   413: ldc_w           "Error parsing calendar event end date"
        //   416: invokestatic    com/millennialmedia/android/MMLog.e:(Ljava/lang/String;Ljava/lang/String;)V
        //   419: aconst_null    
        //   420: astore          21
        //   422: goto            188
        //   425: astore          20
        //   427: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   430: ldc_w           "Unable to get calendar event end date"
        //   433: invokestatic    com/millennialmedia/android/MMLog.d:(Ljava/lang/String;Ljava/lang/String;)V
        //   436: aconst_null    
        //   437: astore          21
        //   439: goto            188
        //   442: astore          4
        //   444: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   447: ldc_w           "Unable to parse calendar addEvent parameters"
        //   450: invokestatic    com/millennialmedia/android/MMLog.e:(Ljava/lang/String;Ljava/lang/String;)V
        //   453: ldc_w           "Calendar Event Creation Failed.  Invalid parameters"
        //   456: invokestatic    com/millennialmedia/android/MMJSResponse.responseWithError:(Ljava/lang/String;)Lcom/millennialmedia/android/MMJSResponse;
        //   459: areturn        
        //   460: new             Landroid/content/Intent;
        //   463: dup            
        //   464: ldc_w           "android.intent.action.INSERT"
        //   467: invokespecial   android/content/Intent.<init>:(Ljava/lang/String;)V
        //   470: getstatic       android/provider/CalendarContract$Events.CONTENT_URI:Landroid/net/Uri;
        //   473: invokevirtual   android/content/Intent.setData:(Landroid/net/Uri;)Landroid/content/Intent;
        //   476: astore          22
        //   478: aload           19
        //   480: ifnull          497
        //   483: aload           22
        //   485: ldc_w           "beginTime"
        //   488: aload           19
        //   490: invokevirtual   java/util/Date.getTime:()J
        //   493: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;J)Landroid/content/Intent;
        //   496: pop            
        //   497: aload           21
        //   499: ifnull          516
        //   502: aload           22
        //   504: ldc_w           "endTime"
        //   507: aload           21
        //   509: invokevirtual   java/util/Date.getTime:()J
        //   512: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;J)Landroid/content/Intent;
        //   515: pop            
        //   516: aload           5
        //   518: ifnull          532
        //   521: aload           22
        //   523: ldc_w           "title"
        //   526: aload           5
        //   528: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
        //   531: pop            
        //   532: aload           7
        //   534: ifnull          547
        //   537: aload           22
        //   539: ldc             "description"
        //   541: aload           7
        //   543: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
        //   546: pop            
        //   547: aload           13
        //   549: ifnull          563
        //   552: aload           22
        //   554: ldc_w           "eventLocation"
        //   557: aload           13
        //   559: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
        //   562: pop            
        //   563: aload           17
        //   565: ifnull          579
        //   568: aload           22
        //   570: ldc_w           "rrule"
        //   573: aload           17
        //   575: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
        //   578: pop            
        //   579: aload           15
        //   581: ifnull          593
        //   584: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   587: ldc_w           "Calendar addEvent does not support status"
        //   590: invokestatic    com/millennialmedia/android/MMLog.w:(Ljava/lang/String;Ljava/lang/String;)V
        //   593: aload           9
        //   595: ifnull          607
        //   598: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   601: ldc_w           "Calendar addEvent does not support transparency"
        //   604: invokestatic    com/millennialmedia/android/MMLog.w:(Ljava/lang/String;Ljava/lang/String;)V
        //   607: aload           11
        //   609: ifnull          621
        //   612: getstatic       com/millennialmedia/android/BridgeMMCalendar.TAG:Ljava/lang/String;
        //   615: ldc_w           "Calendar addEvent does not support reminder"
        //   618: invokestatic    com/millennialmedia/android/MMLog.w:(Ljava/lang/String;Ljava/lang/String;)V
        //   621: aload_0        
        //   622: getfield        com/millennialmedia/android/BridgeMMCalendar.contextRef:Ljava/lang/ref/WeakReference;
        //   625: invokevirtual   java/lang/ref/WeakReference.get:()Ljava/lang/Object;
        //   628: checkcast       Landroid/content/Context;
        //   631: astore          23
        //   633: aload           23
        //   635: ifnull          676
        //   638: aload           23
        //   640: aload           22
        //   642: invokestatic    com/millennialmedia/android/Utils$IntentUtils.startActivity:(Landroid/content/Context;Landroid/content/Intent;)V
        //   645: aload           23
        //   647: ldc_w           "calendar"
        //   650: aload_0        
        //   651: aload_1        
        //   652: ldc_w           "PROPERTY_EXPANDING"
        //   655: invokeinterface java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
        //   660: checkcast       Ljava/lang/String;
        //   663: invokevirtual   com/millennialmedia/android/BridgeMMCalendar.getAdImplId:(Ljava/lang/String;)J
        //   666: invokestatic    com/millennialmedia/android/MMSDK$Event.intentStarted:(Landroid/content/Context;Ljava/lang/String;J)V
        //   669: ldc_w           "Calendar Event Created"
        //   672: invokestatic    com/millennialmedia/android/MMJSResponse.responseWithSuccess:(Ljava/lang/String;)Lcom/millennialmedia/android/MMJSResponse;
        //   675: areturn        
        //   676: aconst_null    
        //   677: areturn        
        //   678: ldc_w           "Not supported"
        //   681: invokestatic    com/millennialmedia/android/MMJSResponse.responseWithError:(Ljava/lang/String;)Lcom/millennialmedia/android/MMJSResponse;
        //   684: areturn        
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                            
        //  -----  -----  -----  -----  ------------------------------------------------
        //  45     64     442    460    Lorg/json/JSONException;
        //  64     72     264    279    Lorg/json/JSONException;
        //  76     84     279    295    Lorg/json/JSONException;
        //  88     96     295    311    Lorg/json/JSONException;
        //  100    108    311    327    Lorg/json/JSONException;
        //  112    120    327    343    Lorg/json/JSONException;
        //  124    132    343    359    Lorg/json/JSONException;
        //  136    148    359    375    Lorg/json/JSONException;
        //  152    166    375    391    Lorg/apache/http/impl/cookie/DateParseException;
        //  152    166    391    408    Lorg/json/JSONException;
        //  170    184    408    425    Lorg/apache/http/impl/cookie/DateParseException;
        //  170    184    425    442    Lorg/json/JSONException;
        //  188    240    442    460    Lorg/json/JSONException;
        //  265    273    442    460    Lorg/json/JSONException;
        //  281    289    442    460    Lorg/json/JSONException;
        //  297    305    442    460    Lorg/json/JSONException;
        //  313    321    442    460    Lorg/json/JSONException;
        //  329    337    442    460    Lorg/json/JSONException;
        //  345    353    442    460    Lorg/json/JSONException;
        //  361    369    442    460    Lorg/json/JSONException;
        //  377    385    442    460    Lorg/json/JSONException;
        //  393    402    442    460    Lorg/json/JSONException;
        //  410    419    442    460    Lorg/json/JSONException;
        //  427    436    442    460    Lorg/json/JSONException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 307, Size: 307
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3417)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    @Override
    MMJSResponse executeCommand(final String s, final Map map) {
        final boolean equals = "addEvent".equals(s);
        MMJSResponse addEvent = null;
        if (equals) {
            addEvent = this.addEvent(map);
        }
        return addEvent;
    }
}
