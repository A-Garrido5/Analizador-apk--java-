// 
// Decompiled by Procyon v0.5.30
// 

package com.millennialmedia.android;

import android.graphics.Bitmap;
import java.util.Map;
import android.view.animation.Animation;
import android.view.animation.Animation$AnimationListener;
import android.view.animation.TranslateAnimation;
import android.view.animation.AlphaAnimation;
import java.util.Random;
import android.content.Context;

class MMAdView$MMAdViewMMAdImpl extends MMLayout$MMLayoutMMAdImpl
{
    final /* synthetic */ MMAdView this$0;
    
    public MMAdView$MMAdViewMMAdImpl(final MMAdView this$0, final Context context) {
        this.this$0 = this$0;
        super(this$0, context);
        this.mmWebViewClientListener = new MMAdView$MMAdViewWebViewClientListener(this);
    }
    
    @Override
    void animateTransition() {
        if (this.this$0.refreshAnimationimageView.getDrawable() != null) {
            int n = this.this$0.transitionType;
            if (n == 4) {
                n = new Random().nextInt(4);
            }
            Object o = null;
            switch (n) {
                default: {
                    o = new AlphaAnimation(1.0f, 0.0f);
                    break;
                }
                case 2: {
                    o = new TranslateAnimation(0.0f, 0.0f, 0.0f, -this.this$0.getHeight());
                    break;
                }
                case 3: {
                    o = new TranslateAnimation(0.0f, 0.0f, 0.0f, (float)this.this$0.getHeight());
                    break;
                }
            }
            ((Animation)o).setDuration(1000L);
            ((Animation)o).setAnimationListener((Animation$AnimationListener)this.this$0);
            ((Animation)o).setFillEnabled(true);
            ((Animation)o).setFillBefore(true);
            ((Animation)o).setFillAfter(true);
            MMSDK.runOnUiThread(new Runnable() {
                @Override
                public void run() {
                    MMAdView$MMAdViewMMAdImpl.this.this$0.refreshAnimationimageView.startAnimation(o);
                }
            });
        }
    }
    
    @Override
    String getReqType() {
        return "getad";
    }
    
    @Override
    String getRequestCompletedAction() {
        return "millennialmedia.action.ACTION_GETAD_SUCCEEDED";
    }
    
    @Override
    String getRequestFailedAction() {
        return "millennialmedia.action.ACTION_GETAD_FAILED";
    }
    
    @Override
    public boolean hasCachedVideoSupport() {
        return false;
    }
    
    @Override
    void insertUrlAdMetaValues(final Map map) {
        if (this.this$0.height > 0) {
            map.put("hsht", String.valueOf(this.this$0.height));
        }
        if (this.this$0.width > 0) {
            map.put("hswd", String.valueOf(this.this$0.width));
        }
        super.insertUrlAdMetaValues(map);
    }
    
    @Override
    public boolean isBanner() {
        return true;
    }
    
    @Override
    boolean isLifecycleObservable() {
        return this.this$0.getWindowToken() != null;
    }
    
    @Override
    boolean isTransitionAnimated() {
        return this.this$0.transitionType != 0;
    }
    
    @Override
    void prepareTransition(final Bitmap imageBitmap) {
        this.this$0.refreshAnimationimageView.setImageBitmap(imageBitmap);
        this.this$0.refreshAnimationimageView.setVisibility(0);
        this.this$0.refreshAnimationimageView.bringToFront();
    }
}
