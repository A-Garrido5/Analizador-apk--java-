// 
// Decompiled by Procyon v0.5.30
// 

package com.millennialmedia.android;

import com.millennialmedia.a.a.e;
import android.content.Context;
import java.util.Map;

class InlineVideoView$InlineParams
{
    boolean autoPlay;
    int bodyHeight;
    int bodyWidth;
    String cachedVideoID;
    String cachedVideoURI;
    int currentPosition;
    boolean goingFullScreen;
    int height;
    boolean isCompleted;
    boolean isInitialPlayBack;
    boolean isPlayingStreaming;
    boolean isStopped;
    int originalOrientation;
    float scaleFactor;
    boolean showControls;
    String streamVideoURI;
    String touchCallBack;
    int width;
    int x;
    int y;
    
    InlineVideoView$InlineParams(final Map map, final Context context) {
        this.isInitialPlayBack = true;
        if (map.get("x") != null) {
            this.x = (int)Float.parseFloat(map.get("x"));
        }
        if (map.get("y") != null) {
            this.y = (int)Float.parseFloat(map.get("y"));
        }
        if (map.get("width") != null) {
            this.width = (int)Float.parseFloat(map.get("width"));
        }
        if (map.get("height") != null) {
            this.height = (int)Float.parseFloat(map.get("height"));
        }
        this.streamVideoURI = map.get("streamVideoURI");
        this.cachedVideoURI = map.get("cachedVideoURI");
        this.cachedVideoID = map.get("cachedVideoID");
        if (map.get("autoPlay") != null) {
            this.autoPlay = Boolean.parseBoolean(map.get("autoPlay"));
        }
        if (map.get("showControls") != null) {
            this.showControls = Boolean.parseBoolean(map.get("showControls"));
        }
        if (map.get("bodyWidth") != null) {
            this.bodyWidth = (int)Float.parseFloat(map.get("bodyWidth"));
        }
        if (map.get("bodyHeight") != null) {
            this.bodyHeight = (int)Float.parseFloat(map.get("bodyHeight"));
        }
        this.touchCallBack = map.get("touchCallback");
        this.scaleFactor = context.getResources().getDisplayMetrics().density;
    }
    
    static InlineVideoView$InlineParams getInlineParams(final String s) {
        return (InlineVideoView$InlineParams)new e().a(s, InlineVideoView$InlineParams.class);
    }
    
    void inflateFromGson(final String s) {
        final InlineVideoView$InlineParams inlineVideoView$InlineParams = (InlineVideoView$InlineParams)new e().a(s, InlineVideoView$InlineParams.class);
        this.x = inlineVideoView$InlineParams.x;
        this.y = inlineVideoView$InlineParams.y;
        this.bodyWidth = inlineVideoView$InlineParams.bodyWidth;
        this.bodyHeight = inlineVideoView$InlineParams.bodyHeight;
        this.width = inlineVideoView$InlineParams.width;
        this.height = inlineVideoView$InlineParams.height;
        this.currentPosition = inlineVideoView$InlineParams.currentPosition;
        this.streamVideoURI = inlineVideoView$InlineParams.streamVideoURI;
        this.cachedVideoURI = inlineVideoView$InlineParams.cachedVideoURI;
        this.cachedVideoID = inlineVideoView$InlineParams.cachedVideoID;
        this.touchCallBack = inlineVideoView$InlineParams.touchCallBack;
        this.autoPlay = inlineVideoView$InlineParams.autoPlay;
        this.showControls = inlineVideoView$InlineParams.showControls;
        this.isInitialPlayBack = inlineVideoView$InlineParams.isInitialPlayBack;
        this.scaleFactor = inlineVideoView$InlineParams.scaleFactor;
        this.goingFullScreen = inlineVideoView$InlineParams.goingFullScreen;
        this.originalOrientation = inlineVideoView$InlineParams.originalOrientation;
        this.isCompleted = inlineVideoView$InlineParams.isCompleted;
        MMLog.d("InlineVideoView", "gson*****" + s);
        MMLog.d("InlineVideoView", "PARAMS*****" + inlineVideoView$InlineParams);
    }
    
    @Override
    public String toString() {
        return String.format("%s id, %d x, %d y, %d bWidth, %d bHeight, %d pos, %b autoPlay", this.cachedVideoID, this.x, this.y, this.bodyWidth, this.bodyHeight, this.currentPosition, this.autoPlay);
    }
}
