// 
// Decompiled by Procyon v0.5.30
// 

package com.millennialmedia.android;

import android.view.ViewGroup$LayoutParams;

class MMAdView$BannerBounds
{
    DTOResizeParameters resizeParams;
    final /* synthetic */ MMAdView this$0;
    int translationX;
    int translationY;
    
    MMAdView$BannerBounds(final MMAdView this$0, final DTOResizeParameters resizeParams) {
        this.this$0 = this$0;
        this.resizeParams = resizeParams;
        this.translationX = resizeParams.offsetX;
        this.translationY = resizeParams.offsetY;
    }
    
    private MMAdView$BannerBounds$BoundsResult calculateBounds(final int n, int n2, int size, final int n3) {
        if (n2 + (n + size) > n3) {
            n2 += n3 - size;
            if (n2 < 0) {
                n2 = 0;
                size = n3;
            }
            else if (n2 + size > n3) {
                n2 = n3 - size;
            }
        }
        else if (n2 <= 0) {
            n2 = n;
        }
        final MMAdView$BannerBounds$BoundsResult mmAdView$BannerBounds$BoundsResult = new MMAdView$BannerBounds$BoundsResult(this, null);
        mmAdView$BannerBounds$BoundsResult.translation = n2 - n;
        mmAdView$BannerBounds$BoundsResult.size = size;
        return mmAdView$BannerBounds$BoundsResult;
    }
    
    private void calculateXBounds() {
        final int[] array = new int[2];
        this.this$0.getLocationInWindow(array);
        final MMAdView$BannerBounds$BoundsResult calculateBounds = this.calculateBounds(array[0], this.resizeParams.offsetX, this.resizeParams.width, this.resizeParams.xMax);
        this.resizeParams.width = calculateBounds.size;
        this.translationX = calculateBounds.translation;
    }
    
    private void calculateYBounds() {
        final int[] array = new int[2];
        this.this$0.getLocationInWindow(array);
        final MMAdView$BannerBounds$BoundsResult calculateBounds = this.calculateBounds(array[1], this.resizeParams.offsetY, this.resizeParams.height, this.resizeParams.yMax);
        this.resizeParams.height = calculateBounds.size;
        this.translationY = calculateBounds.translation;
    }
    
    void calculateOnScreenBounds() {
        this.calculateXBounds();
        this.calculateYBounds();
    }
    
    ViewGroup$LayoutParams modifyLayoutParams(final ViewGroup$LayoutParams viewGroup$LayoutParams) {
        viewGroup$LayoutParams.width = this.resizeParams.width;
        viewGroup$LayoutParams.height = this.resizeParams.height;
        return viewGroup$LayoutParams;
    }
}
