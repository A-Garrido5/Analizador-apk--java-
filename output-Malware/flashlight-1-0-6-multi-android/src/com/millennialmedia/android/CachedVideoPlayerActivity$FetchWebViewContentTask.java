// 
// Decompiled by Procyon v0.5.30
// 

package com.millennialmedia.android;

import android.widget.Toast;
import android.os.Parcelable;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.graphics.Bitmap;
import java.util.ArrayList;
import android.view.View$OnClickListener;
import android.text.TextUtils;
import android.widget.ImageView$ScaleType;
import android.graphics.BitmapFactory;
import android.net.Uri;
import java.io.File;
import android.widget.ImageButton;
import java.util.Iterator;
import android.os.Message;
import android.view.MotionEvent;
import android.webkit.WebViewClient;
import android.widget.RelativeLayout$LayoutParams;
import android.view.ViewGroup;
import android.view.ViewGroup$LayoutParams;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.AlphaAnimation;
import android.os.Handler;
import android.widget.TextView;
import android.widget.RelativeLayout;
import android.os.Handler$Callback;
import android.content.Context;
import org.apache.http.HttpEntity;
import org.apache.http.StatusLine;
import org.apache.http.HttpResponse;
import android.os.AsyncTask;

class CachedVideoPlayerActivity$FetchWebViewContentTask extends AsyncTask
{
    private String baseUrl;
    private boolean cancelVideo;
    final /* synthetic */ CachedVideoPlayerActivity this$0;
    
    public CachedVideoPlayerActivity$FetchWebViewContentTask(final CachedVideoPlayerActivity this$0, final String baseUrl) {
        this.this$0 = this$0;
        this.baseUrl = baseUrl;
    }
    
    protected String doInBackground(final Void... array) {
        try {
            final HttpResponse value = new HttpGetRequest().get(this.baseUrl);
            final StatusLine statusLine = value.getStatusLine();
            if (value != null && statusLine != null && statusLine.getStatusCode() != 404) {
                final HttpEntity entity = value.getEntity();
                if (entity != null) {
                    return HttpGetRequest.convertStreamToString(entity.getContent());
                }
            }
            else {
                this.cancelVideo = true;
            }
            return null;
        }
        catch (Exception ex) {
            MMLog.e("CachedVideoPlayerActivity", "Error with http web overlay", ex);
            return null;
        }
    }
    
    protected void onPostExecute(final String s) {
        if (this.cancelVideo) {
            this.this$0.dismiss();
        }
        if (s != null && this.this$0.mWebView != null) {
            this.this$0.mWebView.setWebViewContent(s, this.baseUrl, (Context)this.this$0.activity);
            this.this$0.hasLoadedCompletionUrl = true;
        }
    }
}
