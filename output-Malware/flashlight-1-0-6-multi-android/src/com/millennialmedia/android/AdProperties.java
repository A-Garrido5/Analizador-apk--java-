// 
// Decompiled by Procyon v0.5.30
// 

package com.millennialmedia.android;

import android.util.DisplayMetrics;
import org.json.JSONException;
import android.view.View;
import org.json.JSONObject;
import android.content.Context;
import java.lang.ref.WeakReference;

class AdProperties
{
    private static final String TAG;
    WeakReference contextRef;
    
    static {
        TAG = AdProperties.class.getName();
    }
    
    AdProperties(final Context context) {
        this.contextRef = new WeakReference((T)context);
    }
    
    private JSONObject getPermissions() {
        final JSONObject jsonObject = new JSONObject();
        jsonObject.put("android.permission.ACCESS_FINE_LOCATION", this.getContext().checkCallingOrSelfPermission("android.permission.ACCESS_FINE_LOCATION") == 0);
        return jsonObject;
    }
    
    private JSONObject getScreen() {
        final JSONObject jsonObject = new JSONObject();
        jsonObject.put("height", (Object)this.getScreenDpiIndependentHeight());
        jsonObject.put("width", (Object)this.getScreenDpiIndependentWidth());
        return jsonObject;
    }
    
    private JSONObject getSupports() {
        final JSONObject jsonObject = new JSONObject();
        final Context context = this.getContext();
        jsonObject.put("sms", Boolean.parseBoolean(MMSDK.getSupportsSms(context)));
        jsonObject.put("tel", Boolean.parseBoolean(MMSDK.getSupportsTel(context)));
        jsonObject.put("calendar", MMSDK.getSupportsCalendar());
        jsonObject.put("storePicture", false);
        jsonObject.put("inlineVideo", true);
        return jsonObject;
    }
    
    String getAdDpiIndependentHeight() {
        return this.getScreenDpiIndependentHeight();
    }
    
    String getAdDpiIndependentWidth() {
        return this.getScreenDpiIndependentWidth();
    }
    
    public JSONObject getAdProperties(final View view) {
        final JSONObject jsonObject = new JSONObject();
        try {
            jsonObject.put("screen", (Object)this.getScreen());
            jsonObject.put("ad", (Object)Utils.getViewDimensions(view));
            jsonObject.put("do", (Object)MMSDK.getOrientation(this.getContext()));
            jsonObject.put("supports", (Object)this.getSupports());
            jsonObject.put("device", (Object)BridgeMMDevice.getDeviceInfo(this.getContext()));
            jsonObject.put("permissions", (Object)this.getPermissions());
            jsonObject.put("maxSize", (Object)this.getScreen());
            return jsonObject;
        }
        catch (JSONException ex) {
            MMLog.e(AdProperties.TAG, "Error when building ad properties", (Throwable)ex);
            return jsonObject;
        }
    }
    
    Context getContext() {
        return (Context)this.contextRef.get();
    }
    
    String getScreenDpiIndependentHeight() {
        final DisplayMetrics displayMetrics = this.getContext().getResources().getDisplayMetrics();
        return String.valueOf((int)(displayMetrics.heightPixels / displayMetrics.density));
    }
    
    String getScreenDpiIndependentWidth() {
        final DisplayMetrics displayMetrics = this.getContext().getResources().getDisplayMetrics();
        return String.valueOf((int)(displayMetrics.widthPixels / displayMetrics.density));
    }
}
