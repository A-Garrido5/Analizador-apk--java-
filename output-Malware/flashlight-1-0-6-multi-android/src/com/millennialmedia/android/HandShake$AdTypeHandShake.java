// 
// Decompiled by Procyon v0.5.30
// 

package com.millennialmedia.android;

import java.util.Iterator;
import org.json.JSONException;
import android.webkit.URLUtil;
import org.json.JSONArray;
import android.text.TextUtils;
import com.millennialmedia.a.a.e;
import java.util.Collection;
import android.view.WindowManager$BadTokenException;
import android.widget.Toast;
import android.os.Looper;
import java.util.ArrayList;
import android.os.Handler;
import java.lang.ref.WeakReference;
import java.util.LinkedHashMap;
import android.content.SharedPreferences$Editor;
import android.content.SharedPreferences;
import org.json.JSONObject;
import android.content.Context;

class HandShake$AdTypeHandShake
{
    boolean downloading;
    long lastVideo;
    final /* synthetic */ HandShake this$0;
    long videoInterval;
    
    HandShake$AdTypeHandShake(final HandShake this$0) {
        this.this$0 = this$0;
        this.lastVideo = 0L;
        this.videoInterval = 0L;
    }
    
    boolean canDisplayCachedAd(final long n) {
        return System.currentTimeMillis() - n < this.this$0.deferredViewTimeout;
    }
    
    boolean canRequestVideo(final Context context) {
        final long currentTimeMillis = System.currentTimeMillis();
        MMLog.d("HandShake", "canRequestVideo() Current Time:" + currentTimeMillis + " Last Video: " + this.lastVideo / 1000L + "  Diff: " + (currentTimeMillis - this.lastVideo) / 1000L + "  Video interval: " + this.videoInterval / 1000L);
        return System.currentTimeMillis() - this.lastVideo > this.videoInterval;
    }
    
    void deserializeFromObj(final JSONObject jsonObject) {
        if (jsonObject == null) {
            return;
        }
        this.videoInterval = 1000L * jsonObject.optLong("videointerval");
    }
    
    boolean load(final SharedPreferences sharedPreferences, final String s) {
        final boolean contains = sharedPreferences.contains("handshake_lastvideo_" + s);
        boolean b = false;
        if (contains) {
            this.lastVideo = sharedPreferences.getLong("handshake_lastvideo_" + s, this.lastVideo);
            b = true;
        }
        if (sharedPreferences.contains("handshake_videointerval_" + s)) {
            this.videoInterval = sharedPreferences.getLong("handshake_videointerval_" + s, this.videoInterval);
            return true;
        }
        return b;
    }
    
    void loadLastVideo(final Context context, final String s) {
        final SharedPreferences sharedPreferences = context.getSharedPreferences("MillennialMediaSettings", 0);
        if (sharedPreferences != null && sharedPreferences.contains("handshake_lastvideo_" + s)) {
            this.lastVideo = sharedPreferences.getLong("handshake_lastvideo_" + s, this.lastVideo);
        }
    }
    
    void save(final Context context, final String s) {
        final SharedPreferences$Editor edit = context.getSharedPreferences("MillennialMediaSettings", 0).edit();
        this.save(edit, s);
        edit.commit();
    }
    
    void save(final SharedPreferences$Editor sharedPreferences$Editor, final String s) {
        sharedPreferences$Editor.putLong("handshake_lastvideo_" + s, this.lastVideo);
        sharedPreferences$Editor.putLong("handshake_videointerval_" + s, this.videoInterval);
    }
    
    void updateLastVideoViewedTime(final Context context, final String s) {
        this.lastVideo = System.currentTimeMillis();
        this.save(context, s);
    }
}
