// 
// Decompiled by Procyon v0.5.30
// 

package com.millennialmedia.android;

import android.text.TextUtils;
import android.content.Context;
import java.util.Map;

class BridgeMMBanner extends MMJSObject
{
    static final String RESIZE = "resize";
    
    @Override
    MMJSResponse executeCommand(final String s, final Map map) {
        final boolean equals = "resize".equals(s);
        MMJSResponse resize = null;
        if (equals) {
            resize = this.resize(map);
        }
        return resize;
    }
    
    int getScreenHeight(final Context context) {
        return Integer.parseInt(MMSDK.getDpiHeight(context));
    }
    
    int getScreenWidth(final Context context) {
        return Integer.parseInt(MMSDK.getDpiWidth(context));
    }
    
    public MMJSResponse resize(final Map map) {
        final MMWebView mmWebView = (MMWebView)this.mmWebViewRef.get();
        if (mmWebView == null) {
            return null;
        }
        if (mmWebView.isMraidResized()) {
            return MMJSResponse.responseWithError("State is currently resized");
        }
        final String s = map.get("width");
        final String s2 = map.get("height");
        int n;
        if (!TextUtils.isEmpty((CharSequence)s)) {
            n = (int)Float.parseFloat(s);
        }
        else {
            n = 0;
        }
        int n2;
        if (!TextUtils.isEmpty((CharSequence)s2)) {
            n2 = (int)Float.parseFloat(s2);
        }
        else {
            n2 = 0;
        }
        final String s3 = map.get("customClosePosition");
        final String s4 = map.get("offsetX");
        final String s5 = map.get("offsetY");
        int n3;
        if (!TextUtils.isEmpty((CharSequence)s5)) {
            n3 = (int)Float.parseFloat(s5);
        }
        else {
            n3 = 0;
        }
        final boolean empty = TextUtils.isEmpty((CharSequence)s4);
        int n4 = 0;
        if (!empty) {
            n4 = (int)Float.parseFloat(s4);
        }
        final boolean boolean1 = Boolean.parseBoolean(map.get("allowOffscreen"));
        final Context context = mmWebView.getContext();
        mmWebView.setMraidResize(new DTOResizeParameters(context.getResources().getDisplayMetrics().density, n, n2, s3, n4, n3, boolean1, this.getScreenWidth(context), this.getScreenHeight(context)));
        return MMJSResponse.responseWithSuccess();
    }
}
