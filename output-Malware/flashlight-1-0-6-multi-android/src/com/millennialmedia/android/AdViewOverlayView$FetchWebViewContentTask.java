// 
// Decompiled by Procyon v0.5.30
// 

package com.millennialmedia.android;

import android.graphics.drawable.Drawable;
import android.view.ViewParent;
import android.view.ViewGroup;
import android.view.animation.Animation$AnimationListener;
import android.view.animation.AlphaAnimation;
import android.view.View$OnClickListener;
import android.view.animation.Animation;
import android.view.animation.ScaleAnimation;
import android.view.animation.TranslateAnimation;
import android.view.ViewGroup$LayoutParams;
import android.widget.RelativeLayout$LayoutParams;
import android.view.View;
import android.app.Activity;
import android.content.Context;
import android.widget.ProgressBar;
import android.widget.Button;
import org.apache.http.HttpEntity;
import org.apache.http.StatusLine;
import org.apache.http.HttpResponse;
import android.text.TextUtils;
import java.lang.ref.WeakReference;
import android.os.AsyncTask;

class AdViewOverlayView$FetchWebViewContentTask extends AsyncTask
{
    private WeakReference _overlayViewRef;
    private String baseUrl;
    private boolean cancelVideo;
    
    public AdViewOverlayView$FetchWebViewContentTask(final AdViewOverlayView adViewOverlayView, final String baseUrl) {
        this.baseUrl = baseUrl;
        this._overlayViewRef = new WeakReference((T)adViewOverlayView);
    }
    
    protected String doInBackground(final Void... array) {
        this.cancelVideo = true;
        if (!TextUtils.isEmpty((CharSequence)this.baseUrl)) {
            try {
                final HttpResponse value = new HttpGetRequest().get(this.baseUrl);
                if (value != null) {
                    final StatusLine statusLine = value.getStatusLine();
                    if (value != null && statusLine != null && statusLine.getStatusCode() != 404) {
                        final HttpEntity entity = value.getEntity();
                        if (entity != null) {
                            final String convertStreamToString = HttpGetRequest.convertStreamToString(entity.getContent());
                            this.cancelVideo = false;
                            return convertStreamToString;
                        }
                    }
                }
            }
            catch (Exception ex) {
                MMLog.e("AdViewOverlayView", "Unable to get weboverlay", ex);
            }
        }
        return null;
    }
    
    protected void onPostExecute(final String s) {
        final AdViewOverlayView adViewOverlayView = (AdViewOverlayView)this._overlayViewRef.get();
        if (adViewOverlayView != null) {
            if (this.cancelVideo) {
                final AdViewOverlayActivity adViewOverlayActivity = (AdViewOverlayActivity)adViewOverlayView.overlayActivityRef.get();
                if (adViewOverlayActivity != null) {
                    adViewOverlayActivity.finish();
                }
                else {
                    adViewOverlayView.removeProgressBar();
                }
            }
            if (s != null && adViewOverlayView.adImpl != null && adViewOverlayView.adImpl.controller != null) {
                adViewOverlayView.adImpl.controller.setWebViewContent(s, this.baseUrl);
            }
        }
    }
    
    protected void onPreExecute() {
        final AdViewOverlayView adViewOverlayView = (AdViewOverlayView)this._overlayViewRef.get();
        if (adViewOverlayView != null && adViewOverlayView.progressBar == null) {
            adViewOverlayView.initProgressBar();
        }
        super.onPreExecute();
    }
}
