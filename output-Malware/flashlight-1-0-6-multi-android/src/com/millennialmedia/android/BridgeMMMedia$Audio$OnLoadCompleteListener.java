// 
// Decompiled by Procyon v0.5.30
// 

package com.millennialmedia.android;

import java.util.Iterator;
import java.util.Collection;
import java.util.TimerTask;
import java.util.Timer;
import android.media.SoundPool;
import java.util.ArrayList;

abstract class BridgeMMMedia$Audio$OnLoadCompleteListener
{
    private static final int TEST_PERIOD_MS = 100;
    private ArrayList sampleIds;
    private SoundPool soundPool;
    final /* synthetic */ BridgeMMMedia$Audio this$0;
    private Timer timer;
    
    public BridgeMMMedia$Audio$OnLoadCompleteListener(final BridgeMMMedia$Audio this$0, final SoundPool soundPool) {
        this.this$0 = this$0;
        this.sampleIds = new ArrayList();
        this.soundPool = soundPool;
    }
    
    abstract void onLoadComplete(final SoundPool p0, final int p1, final int p2);
    
    void release() {
        synchronized (this) {
            if (this.timer != null) {
                this.timer.cancel();
                this.timer.purge();
            }
        }
    }
    
    void testSample(final int n) {
        synchronized (this) {
            this.sampleIds.add(n);
            if (this.sampleIds.size() == 1) {
                (this.timer = new Timer()).scheduleAtFixedRate(new TimerTask() {
                    @Override
                    public void run() {
                        final ArrayList<Integer> list = new ArrayList<Integer>();
                        for (final Integer n : BridgeMMMedia$Audio$OnLoadCompleteListener.this.sampleIds) {
                            final int play = BridgeMMMedia$Audio$OnLoadCompleteListener.this.soundPool.play((int)n, 0.0f, 0.0f, 0, 0, 1.0f);
                            if (play != 0) {
                                BridgeMMMedia$Audio$OnLoadCompleteListener.this.soundPool.stop(play);
                                BridgeMMMedia$Audio$OnLoadCompleteListener.this.onLoadComplete(BridgeMMMedia$Audio$OnLoadCompleteListener.this.soundPool, n, 0);
                                list.add(n);
                            }
                        }
                        BridgeMMMedia$Audio$OnLoadCompleteListener.this.sampleIds.removeAll(list);
                        if (BridgeMMMedia$Audio$OnLoadCompleteListener.this.sampleIds.size() == 0) {
                            BridgeMMMedia$Audio$OnLoadCompleteListener.this.timer.cancel();
                            BridgeMMMedia$Audio$OnLoadCompleteListener.this.timer.purge();
                        }
                    }
                }, 0L, 100L);
            }
        }
    }
}
