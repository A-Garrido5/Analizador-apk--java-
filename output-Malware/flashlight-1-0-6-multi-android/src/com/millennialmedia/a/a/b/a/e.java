// 
// Decompiled by Procyon v0.5.30
// 

package com.millennialmedia.a.a.b.a;

import java.util.Map;
import com.millennialmedia.a.a.l;
import com.millennialmedia.a.a.o;
import java.util.Iterator;
import com.millennialmedia.a.a.m;
import com.millennialmedia.a.a.h;
import com.millennialmedia.a.a.d.b;
import java.util.List;
import java.io.Reader;
import com.millennialmedia.a.a.d.a;

public final class e extends a
{
    private static final Reader a;
    private static final Object b;
    private final List c;
    
    static {
        a = new Reader() {
            @Override
            public final void close() {
                throw new AssertionError();
            }
            
            @Override
            public final int read(final char[] array, final int n, final int n2) {
                throw new AssertionError();
            }
        };
        b = new Object();
    }
    
    private void a(final b b) {
        if (this.f() != b) {
            throw new IllegalStateException("Expected " + b + " but was " + this.f());
        }
    }
    
    private Object q() {
        return this.c.get(-1 + this.c.size());
    }
    
    private Object r() {
        return this.c.remove(-1 + this.c.size());
    }
    
    @Override
    public final void a() {
        this.a(com.millennialmedia.a.a.d.b.a);
        this.c.add(((h)this.q()).iterator());
    }
    
    @Override
    public final void b() {
        this.a(com.millennialmedia.a.a.d.b.b);
        this.r();
        this.r();
    }
    
    @Override
    public final void c() {
        this.a(com.millennialmedia.a.a.d.b.c);
        this.c.add(((m)this.q()).n().iterator());
    }
    
    @Override
    public final void close() {
        this.c.clear();
        this.c.add(e.b);
    }
    
    @Override
    public final void d() {
        this.a(com.millennialmedia.a.a.d.b.d);
        this.r();
        this.r();
    }
    
    @Override
    public final boolean e() {
        final b f = this.f();
        return f != com.millennialmedia.a.a.d.b.d && f != com.millennialmedia.a.a.d.b.b;
    }
    
    @Override
    public final b f() {
        while (!this.c.isEmpty()) {
            final Object q = this.q();
            if (q instanceof Iterator) {
                final boolean b = this.c.get(-2 + this.c.size()) instanceof m;
                final Iterator<Object> iterator = (Iterator<Object>)q;
                if (iterator.hasNext()) {
                    if (b) {
                        return com.millennialmedia.a.a.d.b.e;
                    }
                    this.c.add(iterator.next());
                }
                else {
                    if (b) {
                        return com.millennialmedia.a.a.d.b.d;
                    }
                    return com.millennialmedia.a.a.d.b.b;
                }
            }
            else {
                if (q instanceof m) {
                    return com.millennialmedia.a.a.d.b.c;
                }
                if (q instanceof h) {
                    return com.millennialmedia.a.a.d.b.a;
                }
                if (q instanceof o) {
                    final o o = (o)q;
                    if (o.p()) {
                        return com.millennialmedia.a.a.d.b.f;
                    }
                    if (o.n()) {
                        return com.millennialmedia.a.a.d.b.h;
                    }
                    if (o.o()) {
                        return com.millennialmedia.a.a.d.b.g;
                    }
                    throw new AssertionError();
                }
                else {
                    if (q instanceof l) {
                        return com.millennialmedia.a.a.d.b.i;
                    }
                    if (q == e.b) {
                        throw new IllegalStateException("JsonReader is closed");
                    }
                    throw new AssertionError();
                }
            }
        }
        return com.millennialmedia.a.a.d.b.j;
    }
    
    @Override
    public final String g() {
        this.a(com.millennialmedia.a.a.d.b.e);
        final Map.Entry<K, Object> entry = ((Iterator)this.q()).next();
        this.c.add(entry.getValue());
        return (String)entry.getKey();
    }
    
    @Override
    public final String h() {
        final b f = this.f();
        if (f != com.millennialmedia.a.a.d.b.f && f != com.millennialmedia.a.a.d.b.g) {
            throw new IllegalStateException("Expected " + com.millennialmedia.a.a.d.b.f + " but was " + f);
        }
        return ((o)this.r()).b();
    }
    
    @Override
    public final boolean i() {
        this.a(com.millennialmedia.a.a.d.b.h);
        return ((o)this.r()).f();
    }
    
    @Override
    public final void j() {
        this.a(com.millennialmedia.a.a.d.b.i);
        this.r();
    }
    
    @Override
    public final double k() {
        final b f = this.f();
        if (f != com.millennialmedia.a.a.d.b.g && f != com.millennialmedia.a.a.d.b.f) {
            throw new IllegalStateException("Expected " + com.millennialmedia.a.a.d.b.g + " but was " + f);
        }
        final double c = ((o)this.q()).c();
        if (!this.p() && (Double.isNaN(c) || Double.isInfinite(c))) {
            throw new NumberFormatException("JSON forbids NaN and infinities: " + c);
        }
        this.r();
        return c;
    }
    
    @Override
    public final long l() {
        final b f = this.f();
        if (f != com.millennialmedia.a.a.d.b.g && f != com.millennialmedia.a.a.d.b.f) {
            throw new IllegalStateException("Expected " + com.millennialmedia.a.a.d.b.g + " but was " + f);
        }
        final long d = ((o)this.q()).d();
        this.r();
        return d;
    }
    
    @Override
    public final int m() {
        final b f = this.f();
        if (f != com.millennialmedia.a.a.d.b.g && f != com.millennialmedia.a.a.d.b.f) {
            throw new IllegalStateException("Expected " + com.millennialmedia.a.a.d.b.g + " but was " + f);
        }
        final int e = ((o)this.q()).e();
        this.r();
        return e;
    }
    
    @Override
    public final void n() {
        if (this.f() == com.millennialmedia.a.a.d.b.e) {
            this.g();
            return;
        }
        this.r();
    }
    
    public final void o() {
        this.a(com.millennialmedia.a.a.d.b.e);
        final Map.Entry<K, Object> entry = ((Iterator)this.q()).next();
        this.c.add(entry.getValue());
        this.c.add(new o((String)entry.getKey()));
    }
    
    @Override
    public final String toString() {
        return this.getClass().getSimpleName();
    }
}
