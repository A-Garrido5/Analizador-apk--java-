// 
// Decompiled by Procyon v0.5.30
// 

package com.ihandysoft.ad;

import java.util.Collection;
import android.view.animation.Animation$AnimationListener;
import android.view.animation.Animation;
import android.view.animation.TranslateAnimation;
import android.widget.FrameLayout$LayoutParams;
import android.content.SharedPreferences$Editor;
import java.util.TimerTask;
import android.os.Build;
import android.os.Build$VERSION;
import android.view.ViewParent;
import java.util.Comparator;
import java.util.Collections;
import java.util.Locale;
import android.net.NetworkInfo;
import android.content.SharedPreferences;
import android.net.ConnectivityManager;
import java.util.Iterator;
import android.text.TextUtils;
import java.util.HashMap;
import java.util.Observer;
import java.util.ArrayList;
import android.view.View;
import android.view.ViewGroup$LayoutParams;
import android.widget.RelativeLayout$LayoutParams;
import android.os.Looper;
import java.util.Observable;
import android.util.AttributeSet;
import android.content.Context;
import android.widget.FrameLayout;
import java.util.Timer;
import java.util.Date;
import com.ihandysoft.ad.a.a;
import java.util.List;
import java.util.Map;
import java.util.Random;
import com.ihs.session.c;
import android.os.Handler;
import android.os.HandlerThread;
import android.location.Location;
import com.ihs.f.a.d;
import com.ihandysoft.ad.a.b;
import android.widget.RelativeLayout;

public class HSAdBannerView extends RelativeLayout implements b, d
{
    private Location A;
    private boolean B;
    private boolean C;
    private h D;
    private HandlerThread E;
    private Handler F;
    private Handler G;
    private boolean H;
    private e I;
    private boolean J;
    private final c K;
    private Random a;
    private Map b;
    private List c;
    private List d;
    private int e;
    private int f;
    private Map g;
    private float h;
    private float i;
    private float j;
    private long k;
    private float l;
    private a m;
    private List n;
    private com.ihandysoft.ad.b o;
    private Date p;
    private Date q;
    private Date r;
    private List s;
    private List t;
    private Timer u;
    private FrameLayout v;
    private Timer w;
    private h x;
    private int y;
    private String z;
    
    public HSAdBannerView(final Context context) {
        this(context, null, 0);
    }
    
    public HSAdBannerView(final Context context, final AttributeSet set) {
        this(context, set, 0);
    }
    
    public HSAdBannerView(final Context context, final AttributeSet set, final int n) {
        super(context, set, n);
        this.a = new Random();
        this.b = null;
        this.c = null;
        this.d = null;
        this.e = -1;
        this.f = -1;
        this.g = null;
        this.h = 0.0f;
        this.i = 0.0f;
        this.j = 0.0f;
        this.k = 0L;
        this.l = 1.0f;
        this.m = null;
        this.n = null;
        this.p = null;
        this.q = null;
        this.r = null;
        this.s = null;
        this.t = null;
        this.J = true;
        this.K = new c() {
            @Override
            public final void update(final Observable observable, final Object o) {
                super.update(observable, o);
                HSAdBannerView.this.F.post((Runnable)new Runnable() {
                    private final /* synthetic */ Long b = (Long)o;
                    
                    @Override
                    public final void run() {
                        if (this.b == 0L && !HSAdBannerView.this.H) {
                            HSAdBannerView.a("Session Start");
                            HSAdBannerView.a(HSAdBannerView.this, true);
                            if (HSAdBannerView.this.c != null) {
                                HSAdBannerView.d(HSAdBannerView.this);
                            }
                            HSAdBannerView.a(HSAdBannerView.this, (Date)null);
                            HSAdBannerView.b(HSAdBannerView.this, (Date)null);
                            if (HSAdBannerView.this.p != null) {
                                HSAdBannerView.c(HSAdBannerView.this, new Date());
                            }
                            if (HSAdBannerView.this.x == com.ihandysoft.ad.h.b) {
                                HSAdBannerView.this.a(true);
                            }
                        }
                        else if (this.b != 0L && HSAdBannerView.this.H) {
                            HSAdBannerView.a("Session End");
                            HSAdBannerView.a(HSAdBannerView.this, false);
                            HSAdBannerView.g(HSAdBannerView.this);
                            HSAdBannerView.this.b();
                        }
                    }
                });
            }
        };
        (this.E = new HandlerThread(this.getClass().getName())).start();
        this.F = new Handler(this.E.getLooper());
        this.G = new Handler(Looper.getMainLooper());
        int n2 = 50;
        if (com.ihandysoft.ad.b.a.a(context)) {
            n2 = 90;
        }
        (this.v = new FrameLayout(context)).setLayoutParams((ViewGroup$LayoutParams)new RelativeLayout$LayoutParams(-1, (int)(0.5f + context.getResources().getDisplayMetrics().density * n2)));
        this.addView((View)this.v);
        this.h = 15.0f;
        this.o = com.ihandysoft.ad.b.a;
        this.x = com.ihandysoft.ad.h.a;
        this.s = new ArrayList();
        this.t = new ArrayList();
        this.H = true;
        com.ihs.session.a.a().addObserver(this.K);
    }
    
    static /* synthetic */ void B(final HSAdBannerView hsAdBannerView) {
        hsAdBannerView.C = true;
    }
    
    static /* synthetic */ String a(final long n) {
        final String[] array = { "0-1", "1-2", "2-3", "3-4", "4-5", "5-6", "6-12", "12-18", "18-24", "24-30", "30+" };
        Integer n2;
        if (n >= 6000L) {
            if (n % 6000L > 0L) {
                n2 = 5 + (int)(n / 6000L);
            }
            else {
                n2 = 4 + (int)(n / 6000L);
            }
        }
        else if (n % 1000L > 0L) {
            n2 = (int)(n / 1000L);
        }
        else {
            n2 = -1 + (int)(n / 1000L);
        }
        if (n2 >= array.length) {
            n2 = -1 + array.length;
        }
        if (n2 < 0) {
            n2 = 0;
        }
        return array[n2];
    }
    
    private static List a(final Object o) {
        if (o instanceof String) {
            final ArrayList<String> list = new ArrayList<String>();
            list.add((String)o);
            return list;
        }
        if (o instanceof List) {
            return (List)o;
        }
        return null;
    }
    
    static /* synthetic */ void a(final HSAdBannerView hsAdBannerView, final int y) {
        hsAdBannerView.y = y;
    }
    
    static /* synthetic */ void a(final HSAdBannerView hsAdBannerView, final a a) {
        if (hsAdBannerView.w != null) {
            hsAdBannerView.w.cancel();
        }
        hsAdBannerView.w = null;
        if (hsAdBannerView.m != null && !hsAdBannerView.m.C()) {
            hsAdBannerView.s.add(hsAdBannerView.m);
            hsAdBannerView.m = a;
            hsAdBannerView.s.remove(a);
            hsAdBannerView.c(hsAdBannerView.s);
            return;
        }
        if (hsAdBannerView.m != null) {
            hsAdBannerView.m.r();
        }
        hsAdBannerView.m = a;
        hsAdBannerView.s.remove(a);
    }
    
    static /* synthetic */ void a(final HSAdBannerView hsAdBannerView, final h x) {
        hsAdBannerView.x = x;
    }
    
    static /* synthetic */ void a(final HSAdBannerView hsAdBannerView, final Date q) {
        hsAdBannerView.q = q;
    }
    
    static /* synthetic */ void a(final HSAdBannerView hsAdBannerView, final Map map) {
        hsAdBannerView.a(map, false, 0);
    }
    
    static /* synthetic */ void a(final HSAdBannerView hsAdBannerView, final boolean h) {
        hsAdBannerView.H = h;
    }
    
    static /* synthetic */ void a(final String s) {
        com.ihs.g.c.a("HSAd", s);
    }
    
    private void a(final String s, final Map map) {
        if (map == null || map.isEmpty()) {
            return;
        }
        final HashMap<String, String> hashMap = new HashMap<String, String>();
        final i a = com.ihandysoft.ad.i.a(com.ihandysoft.ad.b.b.a(map.get("adType")));
        hashMap.put(String.valueOf(a.name()) + "_AdGroup", "AdGroup_" + this.f);
        final String string = "iHandyAds_Banner_" + s + "_" + a.name();
        if (a == com.ihandysoft.ad.i.b) {
            String s2 = map.get("image");
            String s3 = map.get("video");
            if (TextUtils.isEmpty((CharSequence)s2)) {
                if (s2.startsWith("http")) {
                    final String[] split = s2.split("/");
                    s2 = split[-1 + split.length];
                    hashMap.put("InternalAdImageType", "UrlImage");
                }
                else {
                    hashMap.put("InternalAdImageType", "BundleImage");
                }
                hashMap.put("InternalAdImageName", s2);
            }
            else if (TextUtils.isEmpty((CharSequence)s3)) {
                if (s3.startsWith("http")) {
                    final String[] split2 = s3.split("/");
                    s3 = split2[-1 + split2.length];
                    hashMap.put("InternalAdVideoType", "UrlVideo");
                }
                else {
                    hashMap.put("InternalAdVideoType", "BundleVideo");
                }
                hashMap.put("InternalAdVideoName", s3);
            }
        }
        if (s.equals("Shown") || s.equals("Clicked")) {
            String value;
            if (this.y < 50) {
                value = String.valueOf(this.y);
            }
            else {
                value = "50+";
            }
            hashMap.put("RoundIndex", value);
        }
        com.ihs.a.d.a();
        com.ihs.a.d.a(string, hashMap);
    }
    
    private void a(final List list) {
        if (this.p == null) {
            this.p = new Date();
        }
        this.n = this.d(this.n);
        com.ihs.g.c.a("HSAd", ">> Load ad list.");
        com.ihs.g.c.a("HSAd", ">> preloadList<?> = " + this.n);
        final List d = this.d(list);
        Label_0110: {
            if (this.c == null) {
                com.ihs.g.c.a("HSAd", "First time loading, update adList.");
                break Label_0110;
            }
            if (!this.c.equals(d)) {
                com.ihs.g.c.a("HSAd", "Ad List<?> changed, update adList.");
                break Label_0110;
            }
            com.ihs.g.c.a("HSAd", "Ad List<?> not changed, keep going.");
            return;
        }
        this.c = d;
        if ((this.c != null && !this.c.isEmpty()) || (this.n != null && !this.n.isEmpty())) {
            final ArrayList<Map<K, Boolean>> d2 = (ArrayList<Map<K, Boolean>>)new ArrayList<HashMap<K, Boolean>>(this.c.size());
            for (int i = 0; i < this.c.size(); ++i) {
                final Map<? extends K, ?> map = this.c.get(i);
                final HashMap hashMap = new HashMap<Object, Object>(map);
                hashMap.put("adName", com.ihandysoft.ad.i.a(com.ihandysoft.ad.b.b.a(map.get("adType"))).name());
                hashMap.put("maxCPM", (Boolean)hashMap.get("cpm"));
                hashMap.put("preload", Boolean.FALSE);
                hashMap.put("originalIndex", (Boolean)(Object)i);
                d2.add((HashMap<K, Boolean>)hashMap);
            }
            this.b(this.d = d2);
            this.e = 0;
            com.ihs.g.c.a("HSAd", ">> Load ad list.");
            com.ihs.g.c.a("HSAd", ">> adItemList<?> = " + this.c);
            this.a(true);
            return;
        }
        com.ihs.g.c.a("HSAd", "Ad List<?> is empty. Stop loading.");
        final Iterator<a> iterator = this.t.iterator();
        while (iterator.hasNext()) {
            iterator.next().r();
        }
        this.t.clear();
        if (this.u != null) {
            this.u.cancel();
            this.u = null;
        }
    }
    
    private void a(final Map map) {
        if (map == null || map.isEmpty()) {
            com.ihs.g.c.a("HSAd", "Ad info is empty, continue using old ad info.");
            return;
        }
        com.ihs.g.c.a("HSAd", "Load ads with info = " + this.b);
        if (map.containsKey("adTimeInterval") && com.ihandysoft.ad.b.b.b(map.get("adTimeInterval")) > 0.0f) {
            this.h = com.ihandysoft.ad.b.b.b(map.get("adTimeInterval"));
        }
        if (map.containsKey("loadDelay")) {
            final List<Map<? extends String, ? extends Boolean>> value = map.get("loadDelay");
            long n;
            if (value == null) {
                n = 0L;
            }
            else if (value instanceof String) {
                n = Long.parseLong((String)value);
            }
            else if (value instanceof Number) {
                n = ((Number)value).longValue();
            }
            else {
                if (!(value instanceof Boolean)) {
                    throw new IllegalArgumentException();
                }
                int n2;
                if (value) {
                    n2 = 1;
                }
                else {
                    n2 = 0;
                }
                n = n2;
            }
            this.k = n * 1000L;
        }
        if (map.containsKey("cpmIncreaseRate")) {
            this.i = com.ihandysoft.ad.b.b.b(map.get("cpmIncreaseRate"));
        }
        if (map.containsKey("cpmDecreaseRate")) {
            this.j = com.ihandysoft.ad.b.b.b(map.get("cpmDecreaseRate"));
        }
        if (!map.containsKey("queueJumpingRatio")) {
            this.l = 2.0f;
        }
        else {
            this.l = com.ihandysoft.ad.b.b.b(map.get("queueJumpingRatio"));
        }
        if (this.m != null) {
            this.m.A();
        }
        final List<Map<? extends String, ? extends Boolean>> list = map.get("preloadList");
        final ArrayList n3 = new ArrayList<HashMap<String, Boolean>>(list.size());
        final Iterator<Map<? extends String, ? extends Boolean>> iterator = list.iterator();
        while (iterator.hasNext()) {
            final HashMap hashMap = new HashMap<Object, Boolean>((Map<? extends K, ? extends Boolean>)iterator.next());
            hashMap.put("maxCPM", (Boolean)hashMap.get("cpm"));
            hashMap.put("preload", Boolean.TRUE);
            n3.add((HashMap<String, Boolean>)hashMap);
        }
        this.n = n3;
        if (map.containsKey("adTransitionStyle")) {
            this.o = com.ihandysoft.ad.b.a(com.ihandysoft.ad.b.b.a(map.get("adTransitionStyle")));
        }
        this.a(map.get("adItemList"));
    }
    
    private void a(final Map map, final boolean b, final int n) {
        final SharedPreferences sharedPreferences = this.getContext().getSharedPreferences("HSAd", 0);
        final a a = com.ihandysoft.ad.a.a.a(map, this.getContext());
        if (a == null) {
            com.ihs.g.c.a("HSAd", "<HSAd> There is no responding mediation.");
            b("<HSAd> Load %s Ad failed", map.get("adType"));
            this.d(a);
        }
        else {
            com.ihs.g.c.a("HSAd", " ");
            b("<HSAd> Load %s Ad", a.b());
            a.a(this);
            a.a(b);
            if (a.f()) {
                a.a(n);
            }
            if (this.z != null) {
                a.a(this.z);
            }
            else if (map.containsKey("keywords")) {
                a.a(map.get("keywords"));
            }
            if (!a.l()) {
                final String string = sharedPreferences.getString("AdUserDefaultsLocationLatitudeKey", (String)null);
                final String string2 = sharedPreferences.getString("AdUserDefaultsLocationLongitudeKey", (String)null);
                if (string != null && string2 != null) {
                    final double double1 = Double.parseDouble(string);
                    final double double2 = Double.parseDouble(string2);
                    b("Location is %lf,%lf", double1, double2);
                    (this.A = new Location("")).setLatitude(double1);
                    this.A.setLongitude(double2);
                    this.A.setTime(System.currentTimeMillis());
                }
                a.a(this.A);
            }
            final NetworkInfo activeNetworkInfo = ((ConnectivityManager)this.getContext().getSystemService("connectivity")).getActiveNetworkInfo();
            boolean b2;
            if (activeNetworkInfo != null && activeNetworkInfo.isConnected()) {
                b2 = true;
            }
            else {
                b2 = false;
            }
            if (!b2 && a.c() != com.ihandysoft.ad.i.b) {
                com.ihs.g.c.a("HSAd", "<HSAd> Network is not reachable.");
                b("<HSAd> Load %s Ad failed", a.b());
                this.d(a);
                return;
            }
            if (a.d() == com.ihandysoft.ad.g.b && activeNetworkInfo.getType() != 1) {
                com.ihs.g.c.a("HSAd", "<HSAd> Network needs wi-fi!");
                b("<HSAd> Load %s Ad failed", a.b());
                this.d(a);
                return;
            }
            if (a.d() == com.ihandysoft.ad.g.c && activeNetworkInfo.getType() != 0) {
                com.ihs.g.c.a("HSAd", "<HSAd> Network needs mobile network!");
                b("<HSAd> Load %s Ad failed", a.b());
                this.d(a);
                return;
            }
            final int ordinal = a.c().ordinal();
            while (true) {
                Label_0799: {
                    if (this.g == null || !this.g.containsKey(ordinal)) {
                        break Label_0799;
                    }
                    final Map<Object, Object> map2 = this.g.get(ordinal);
                    if (!map2.containsKey("periodByHour")) {
                        break Label_0799;
                    }
                    final float b3 = com.ihandysoft.ad.b.b.b(map2.get("periodByHour"));
                    if (b3 > 0.0f && System.currentTimeMillis() - sharedPreferences.getLong(com.ihandysoft.ad.f.a(ordinal), 0L) < 1000.0f * (b3 * 3600.0f)) {
                        com.ihs.g.c.a("HSAd", "<HSAd> The Ad Reaches the frequency cap.");
                        b("<HSAd> Load %s Ad failed", a.b());
                        this.d(a);
                        return;
                    }
                    final Iterator<a> iterator = (Iterator<a>)this.t.iterator();
                    while (true) {
                        while (iterator.hasNext()) {
                            if (iterator.next().a(map)) {
                                b("!!! %s Ad is already loading. Cancel.", a.b());
                                final int n2 = 1;
                                if (n2 == 0) {
                                    this.t.add(a);
                                }
                                if (n2 == 0) {
                                    this.a("Requested", map);
                                    a.q();
                                }
                                return;
                            }
                        }
                        final int n2 = 0;
                        continue;
                    }
                }
                final float b3 = 0.0f;
                continue;
            }
        }
    }
    
    private static boolean a(final String s, final List list, final List list2) {
        boolean b = false;
        Label_0024: {
            if (list2 != null) {
                final Iterator<String> iterator = list2.iterator();
                while (iterator.hasNext()) {
                    if (s.startsWith(iterator.next())) {
                        b = true;
                        break Label_0024;
                    }
                }
            }
            b = false;
        }
        if (!b && list != null) {
            final Iterator<String> iterator2 = list.iterator();
            while (iterator2.hasNext()) {
                if (s.startsWith(iterator2.next())) {
                    return false;
                }
            }
            b = true;
        }
        return b;
    }
    
    static /* synthetic */ void b(final HSAdBannerView hsAdBannerView, final a a) {
        hsAdBannerView.a(a.o(), true, 1 + a.k());
    }
    
    static /* synthetic */ void b(final HSAdBannerView hsAdBannerView, final h d) {
        hsAdBannerView.D = d;
    }
    
    static /* synthetic */ void b(final HSAdBannerView hsAdBannerView, final Date r) {
        hsAdBannerView.r = r;
    }
    
    static /* synthetic */ void b(final HSAdBannerView hsAdBannerView, final boolean b) {
        hsAdBannerView.B = b;
    }
    
    private static void b(final String s, final Object... array) {
        com.ihs.g.c.a("HSAd", String.format(Locale.US, s, array));
    }
    
    private void b(final List list) {
        Collections.sort((List<Object>)list, new com.ihandysoft.ad.d(this, (byte)0));
    }
    
    private static boolean b(final View view, final View view2) {
        for (ViewParent parent = (ViewParent)view; parent != null && parent.getParent() != null; parent = parent.getParent()) {
            if (parent.getParent() == view2) {
                return true;
            }
        }
        return false;
    }
    
    private float c(final a a) {
        float n = this.h;
        if (a != null) {
            n = a.i();
            if (n <= 0.0f) {
                n = this.h;
            }
        }
        return n;
    }
    
    static /* synthetic */ void c(final HSAdBannerView hsAdBannerView, final Date p2) {
        hsAdBannerView.p = p2;
    }
    
    private void c(final List list) {
        Collections.sort((List<Object>)list, new com.ihandysoft.ad.c(this, (byte)0));
    }
    
    private List d(final List list) {
        if (list == null) {
            return new ArrayList();
        }
        final String string = this.getContext().getResources().getConfiguration().locale.toString();
        com.ihs.g.c.a("HSAd", "locale = " + string);
        final String release = Build$VERSION.RELEASE;
        final int sdk_INT = Build$VERSION.SDK_INT;
        com.ihs.g.c.a("HSAd", "currentSystemVersion = " + release + "  " + sdk_INT);
        final String model = Build.MODEL;
        com.ihs.g.c.a("HSAd", "currentDeviceModel = " + model);
        com.ihs.g.c.a("HSAd", "\n");
        com.ihs.g.c.a("HSAd", "----- Begin filtering ad List<?> -----");
        final ArrayList<Map<K, String>> list2 = new ArrayList<Map<K, String>>(list.size());
        for (final Map<K, Object> map : list) {
            final i a = com.ihandysoft.ad.i.a(com.ihandysoft.ad.b.b.a(map.get("adType")));
            final String s = map.get("urlSchemeException");
            final List a2 = a(map.get("regionFilter"));
            final List a3 = a(map.get("regionException"));
            final List a4 = a(map.get("osVersionFilter"));
            final List a5 = a(map.get("osVersionException"));
            final List a6 = a(map.get("deviceFilter"));
            final List a7 = a(map.get("deviceException"));
            com.ihs.g.c.a("HSAd", "\n");
            com.ihs.g.c.a("HSAd", "urlSchemeException = " + s);
            com.ihs.g.c.a("HSAd", "regionFilter = " + a2);
            com.ihs.g.c.a("HSAd", "regionException = " + a3);
            com.ihs.g.c.a("HSAd", "osVersionFilter = " + a4);
            com.ihs.g.c.a("HSAd", "osVersionException = " + a5);
            com.ihs.g.c.a("HSAd", "deviceFilter = " + a6);
            com.ihs.g.c.a("HSAd", "deviceException = " + a7);
            if (a == com.ihandysoft.ad.i.a) {
                com.ihs.g.c.a("HSAd", "DELETE AD: unknown ad");
            }
            else if (!map.containsKey("cpm") || com.ihandysoft.ad.b.b.b(map.get("cpm")) < 0.0f) {
                com.ihs.g.c.a("HSAd", "DELETE AD: CPM < 0");
            }
            else if (a.a() == null) {
                com.ihs.g.c.a("HSAd", "DELETE AD: ad not implemented");
            }
            else if (a == com.ihandysoft.ad.i.c) {
                com.ihs.g.c.a("HSAd", "DELETE AD: iAD not available");
            }
            else if (sdk_INT < a.b()) {
                com.ihs.g.c.a("HSAd", "DELETE AD: ad not supported on this version");
            }
            else if (a(model, a6, a7)) {
                com.ihs.g.c.a("HSAd", "DELETE AD: current device is excluded by filter/exception");
            }
            else if (a2 != null && !a2.contains(string)) {
                b("DELETE AD: current region(%s) doesn't match filter(%s)", string, a2.toString());
            }
            else if (a3 != null && a3.contains(string)) {
                b("DELETE AD: current region(%s) does match exception(%s)", string, a3.toString());
            }
            else if (a(release, a4, a5)) {
                b("DELETE AD: system version(%s) is excluded by filter/exception", release);
            }
            else {
                com.ihs.g.c.a("HSAd", "ADD AD");
                list2.add((Map<K, String>)map);
            }
        }
        com.ihs.g.c.a("HSAd", "\n");
        com.ihs.g.c.a("HSAd", "----- End filtering ad List<?> -----");
        com.ihs.g.c.a("HSAd", "\n");
        return list2;
    }
    
    static /* synthetic */ void d(final HSAdBannerView hsAdBannerView) {
        final Iterator<a> iterator = hsAdBannerView.t.iterator();
        while (iterator.hasNext()) {
            iterator.next().r();
        }
        hsAdBannerView.t.clear();
        final Iterator<a> iterator2 = hsAdBannerView.s.iterator();
        while (iterator2.hasNext()) {
            iterator2.next().r();
        }
        hsAdBannerView.s.clear();
        if (hsAdBannerView.u != null) {
            hsAdBannerView.u.cancel();
            hsAdBannerView.u.purge();
            hsAdBannerView.u = null;
        }
        final ArrayList<Map<K, Boolean>> d = (ArrayList<Map<K, Boolean>>)new ArrayList<HashMap<K, Boolean>>(hsAdBannerView.c.size());
        for (int i = 0; i < hsAdBannerView.c.size(); ++i) {
            final Map<? extends K, ?> map = hsAdBannerView.c.get(i);
            final HashMap hashMap = new HashMap<Object, Object>(map);
            hashMap.put("adName", i.a(com.ihandysoft.ad.b.b.a(map.get("adType"))).name());
            hashMap.put("maxCPM", (Boolean)hashMap.get("cpm"));
            hashMap.put("preload", Boolean.FALSE);
            hashMap.put("originalIndex", (Boolean)(Object)i);
            d.add((HashMap<K, Boolean>)hashMap);
        }
        hsAdBannerView.b(hsAdBannerView.d = d);
        hsAdBannerView.e = 0;
        hsAdBannerView.y = 0;
        if (hsAdBannerView.C) {
            hsAdBannerView.h();
            return;
        }
        hsAdBannerView.a(hsAdBannerView.c);
    }
    
    private void d(final a a) {
        if (!b(a.n(), (View)this)) {
            a.r();
            int n;
            if (!a.e() && !a.f()) {
                n = 1;
            }
            else {
                n = 0;
            }
            this.t.remove(a);
            if (n != 0) {
                ++this.e;
                if (this.e < this.d.size()) {
                    final Map<K, Object> map = this.d.get(this.e);
                    if (this.m == null || this.m.C() || com.ihandysoft.ad.b.b.b(map.get("cpm")) >= this.m.g()) {
                        this.F.post((Runnable)new Runnable() {
                            @Override
                            public final void run() {
                                HSAdBannerView.a(HSAdBannerView.this, map);
                            }
                        });
                        return;
                    }
                }
                this.e = 0;
            }
            if (this.t.isEmpty() && this.s.isEmpty() && this.u == null) {
                (this.u = new Timer()).schedule(new TimerTask() {
                    @Override
                    public final void run() {
                        HSAdBannerView.this.F.post((Runnable)new Runnable() {
                            @Override
                            public final void run() {
                                HSAdBannerView.this.i();
                            }
                        });
                    }
                }, (long)(1000.0f * this.g()));
            }
        }
    }
    
    private float g() {
        return this.c(this.m);
    }
    
    static /* synthetic */ void g(final HSAdBannerView hsAdBannerView) {
        if (hsAdBannerView.s.size() > 0) {
            final int size = hsAdBannerView.s.size();
            final HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
            for (final a a : hsAdBannerView.s) {
                if (hashMap.containsKey(a.b())) {
                    hashMap.put(a.b(), String.valueOf(com.ihandysoft.ad.b.b.a(hashMap.get(a.b())) + 1));
                }
                else {
                    hashMap.put(a.b(), String.valueOf(1));
                }
            }
            hashMap.put("Total", String.valueOf(size));
            hashMap.put("totalRound", String.valueOf(hsAdBannerView.y));
            com.ihs.a.d.a();
            com.ihs.a.d.a("iHandyAd_AdWasted", hashMap);
        }
    }
    
    private void h() {
        int i = 0;
        this.b = com.ihs.f.a.c.b().d().get("Data").get("iHandyAds");
        if (this.b != null) {
            this.g = this.b.get("frequencyCaps");
            final List<Map> list = this.b.get("adGroups");
            if (list == null || list.size() <= 0) {
                com.ihs.g.c.a("HSAd", "There is no adGroups.");
            }
            else if (list.size() == 1) {
                com.ihs.g.c.a("HSAd", "There is only one group. Choose Ad Group 0");
                this.f = 0;
                this.a(list.get(0));
            }
            else {
                final Iterator<Map<K, Object>> iterator = list.iterator();
                int n = 0;
                while (iterator.hasNext()) {
                    n += com.ihandysoft.ad.b.b.a(iterator.next().get("weight"));
                }
                int nextInt = this.a.nextInt(n);
                while (i < list.size()) {
                    final Map<K, Object> map = list.get(i);
                    final int a = com.ihandysoft.ad.b.b.a(map.get("weight"));
                    if (nextInt < a) {
                        com.ihs.g.c.a("HSAd", "There are multiple groups. Choose Ad Group " + i);
                        this.f = i;
                        this.a(map);
                        break;
                    }
                    final int n2 = nextInt - a;
                    ++i;
                    nextInt = n2;
                }
            }
        }
        else {
            com.ihs.g.c.a("HSAd", "There is no iHandyAds.");
        }
        this.G.post((Runnable)new Runnable() {
            @Override
            public final void run() {
                com.ihs.f.a.c.b().a(HSAdBannerView.this);
                HSAdBannerView.B(HSAdBannerView.this);
            }
        });
    }
    
    private void i() {
        com.ihs.g.c.a("HSAd", "<HSAd> Show Ad");
        if (this.u != null) {
            this.u.cancel();
            this.u = null;
        }
        final float g = this.g();
        if (this.s.isEmpty()) {
            com.ihs.g.c.a("HSAd", "<HSAd> No Ad Available. Start Loading.");
            if (this.w == null && this.m != null) {
                (this.w = new Timer()).schedule(new TimerTask() {
                    @Override
                    public final void run() {
                        HSAdBannerView.this.F.post((Runnable)new Runnable() {
                            @Override
                            public final void run() {
                                if (HSAdBannerView.this.m != null) {
                                    HSAdBannerView.z(HSAdBannerView.this);
                                }
                                else if (HSAdBannerView.this.w != null) {
                                    HSAdBannerView.this.w.cancel();
                                    HSAdBannerView.s(HSAdBannerView.this);
                                }
                            }
                        });
                    }
                }, (long)(g * 1000.0f), (long)(g * 1000.0f));
            }
            this.l();
            return;
        }
        if (this.w != null) {
            this.w.cancel();
            this.w = null;
        }
        final a a = this.s.get(0);
        b("<HSAd> Ad (%s) with cpm %f Available.", a.b(), a.g());
        if (this.m != null) {
            b("<HSAd> Current Ad (%s) with cpm %f", this.m.b(), this.m.g());
        }
        float c;
        if (this.m == null || a.g() >= this.m.g() || this.m.j() > this.m.k() || this.m.z()) {
            com.ihs.g.c.a("HSAd", "<HSAd> New Ad is better. Switch Ad.");
            final View n = a.n();
            if (n == null) {
                this.s.remove(a);
                com.ihs.g.c.a("The ad's bannerview is null, return");
            }
            else {
                this.G.post((Runnable)new Runnable() {
                    private final /* synthetic */ Runnable c = new Runnable(a) {
                        private final /* synthetic */ a b;
                        
                        @Override
                        public final void run() {
                            final i c = this.b.c();
                            final HSAdBannerView a = HSAdBannerView.this;
                            HSAdBannerView.a(a, 1 + a.y);
                            HSAdBannerView.this.a("Shown", this.b.o());
                            if (HSAdBannerView.this.q == null) {
                                HSAdBannerView.a(HSAdBannerView.this, new Date());
                                final long n = (HSAdBannerView.this.q.getTime() - HSAdBannerView.this.p.getTime()) / 1000L;
                                String value;
                                if (n < 20L) {
                                    value = String.valueOf(n);
                                }
                                else {
                                    value = "20+";
                                }
                                com.ihs.a.d.a();
                                com.ihs.a.d.a("iHandyAds_LaunchToFirstAdDisplay_Interval", new String[] { "Interval", value });
                            }
                            if (HSAdBannerView.this.m != null && HSAdBannerView.this.r != null) {
                                final long n2 = (System.currentTimeMillis() - HSAdBannerView.this.r.getTime()) / 1000L;
                                String value2;
                                if (n2 < 200L) {
                                    value2 = String.valueOf(n2);
                                }
                                else {
                                    value2 = "200+";
                                }
                                final String format = String.format(Locale.US, "iHandyAds_Banner_DisplayTime_%s", HSAdBannerView.this.m.b());
                                com.ihs.a.d.a();
                                com.ihs.a.d.a(format, new String[] { "DisplayTime", value2 });
                            }
                            HSAdBannerView.b(HSAdBannerView.this, new Date());
                            final SharedPreferences$Editor edit = HSAdBannerView.this.getContext().getSharedPreferences("HSAd", 0).edit();
                            edit.putLong(com.ihandysoft.ad.f.a(c.ordinal()), HSAdBannerView.this.r.getTime());
                            edit.commit();
                            HSAdBannerView.a(HSAdBannerView.this, this.b);
                        }
                    };
                    private final /* synthetic */ com.ihandysoft.ad.b d = HSAdBannerView.this.o;
                    
                    @Override
                    public final void run() {
                        if (b(n, (View)HSAdBannerView.this.v)) {
                            HSAdBannerView.this.v.removeView(n);
                            HSAdBannerView.this.v.addView(n);
                            HSAdBannerView.x(HSAdBannerView.this);
                            HSAdBannerView.this.F.post(this.c);
                        }
                        else {
                            if (this.d == com.ihandysoft.ad.b.e) {
                                final FrameLayout$LayoutParams layoutParams = new FrameLayout$LayoutParams(-2, -2);
                                layoutParams.gravity = 81;
                                n.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
                                HSAdBannerView.this.v.removeAllViews();
                                HSAdBannerView.this.v.addView(n);
                                HSAdBannerView.this.F.post(this.c);
                                return;
                            }
                            final FrameLayout$LayoutParams layoutParams2 = new FrameLayout$LayoutParams(-2, -2);
                            layoutParams2.gravity = 81;
                            n.setLayoutParams((ViewGroup$LayoutParams)layoutParams2);
                            HSAdBannerView.this.v.addView(n);
                            if (HSAdBannerView.this.v.getChildCount() > 1) {
                                final View child = HSAdBannerView.this.v.getChildAt(-2 + HSAdBannerView.this.v.getChildCount());
                                final TranslateAnimation translateAnimation = new TranslateAnimation(0.0f, (float)(-HSAdBannerView.this.v.getWidth()), 0.0f, 0.0f);
                                ((Animation)translateAnimation).setDuration(500L);
                                child.startAnimation((Animation)translateAnimation);
                                final TranslateAnimation translateAnimation2 = new TranslateAnimation((float)HSAdBannerView.this.v.getWidth(), 0.0f, 0.0f, 0.0f);
                                ((Animation)translateAnimation2).setDuration(500L);
                                n.startAnimation((Animation)translateAnimation2);
                                ((Animation)translateAnimation).setAnimationListener((Animation$AnimationListener)new Animation$AnimationListener() {
                                    private final /* synthetic */ Runnable b = HSAdBannerView$21.this.c;
                                    
                                    public final void onAnimationEnd(final Animation animation) {
                                        HSAdBannerView.this.G.post((Runnable)new Runnable() {
                                            private final /* synthetic */ Runnable b = HSAdBannerView$21$1.this.b;
                                            
                                            @Override
                                            public final void run() {
                                                HSAdBannerView.a("Transition Completed");
                                                HSAdBannerView.x(HSAdBannerView.this);
                                                HSAdBannerView.this.F.post(this.b);
                                            }
                                        });
                                    }
                                    
                                    public final void onAnimationRepeat(final Animation animation) {
                                    }
                                    
                                    public final void onAnimationStart(final Animation animation) {
                                    }
                                });
                                return;
                            }
                            HSAdBannerView.this.F.post(this.c);
                            if (HSAdBannerView.this.I != null) {
                                HSAdBannerView.this.I;
                            }
                        }
                    }
                });
            }
            c = this.c(a);
        }
        else {
            com.ihs.g.c.a("HSAd", "<HSAd> Old Ad is better. Continue Showing.");
            c = g;
        }
        (this.u = new Timer()).schedule(new TimerTask() {
            @Override
            public final void run() {
                HSAdBannerView.this.F.post((Runnable)new Runnable() {
                    @Override
                    public final void run() {
                        HSAdBannerView.this.j();
                    }
                });
            }
        }, (long)(c * 1000.0f));
    }
    
    private void j() {
        if (this.m != null) {
            this.k();
            this.m.B();
            if (!this.s.isEmpty() && this.m.j() > this.m.k()) {
                this.F.post((Runnable)new Runnable() {
                    @Override
                    public final void run() {
                        HSAdBannerView.b(HSAdBannerView.this, HSAdBannerView.this.m);
                    }
                });
            }
        }
        this.i();
    }
    
    private void k() {
        int i = 0;
    Label_0217_Outer:
        while (i < this.d.size()) {
            final Map<K, Object> map = this.d.get(i);
            float b = com.ihandysoft.ad.b.b.b(map.get("cpm"));
            while (true) {
                Label_0397: {
                    if (this.m != null && map == this.m.o()) {
                        break Label_0397;
                    }
                    float n;
                    if (map.containsKey("cpmIncreaseRate")) {
                        n = com.ihandysoft.ad.b.b.b(map.get("cpmIncreaseRate"));
                    }
                    else {
                        n = this.i;
                    }
                    b *= n + 1.0f;
                    final float b2 = com.ihandysoft.ad.b.b.b(map.get("maxCPM"));
                    if (b <= b2) {
                        break Label_0397;
                    }
                    map.put((K)"cpm", b2);
                    ++i;
                    continue Label_0217_Outer;
                }
                final float b2 = b;
                continue;
            }
        }
    Label_0353_Outer:
        for (final Map<K, Object> map2 : this.n) {
            float b3 = com.ihandysoft.ad.b.b.b(map2.get("cpm"));
            while (true) {
                Label_0390: {
                    if (this.m != null && map2 == this.m.o()) {
                        break Label_0390;
                    }
                    float n2;
                    if (map2.containsKey("cpmIncreaseRate")) {
                        n2 = com.ihandysoft.ad.b.b.b(map2.get("cpmIncreaseRate"));
                    }
                    else {
                        n2 = this.i;
                    }
                    b3 *= n2 + 1.0f;
                    final float b4 = com.ihandysoft.ad.b.b.b(map2.get("maxCPM"));
                    if (b3 <= b4) {
                        break Label_0390;
                    }
                    map2.put((K)"cpm", b4);
                    continue Label_0353_Outer;
                }
                final float b4 = b3;
                continue;
            }
        }
        if (this.m != null) {
            final float g = this.m.g();
            float n3;
            if (this.m.o().containsKey("cpmDecreaseRate")) {
                n3 = this.m.h();
            }
            else {
                n3 = this.j;
            }
            this.m.o().put("cpm", g * (1.0f - n3));
        }
        this.c(this.s);
    }
    
    private void l() {
        com.ihs.g.c.a("HSAd", "<HSAd> Load Ads");
        final ArrayList<Map<K, Object>> list = new ArrayList<Map<K, Object>>(this.n);
        if (this.d.size() > 0 && this.e == 0) {
            this.b(this.d);
            list.add((Map<K, Object>)this.d.get(this.e));
        }
        final Iterator<Object> iterator = list.iterator();
        boolean b = false;
        long n = 0L;
        while (iterator.hasNext()) {
            final Map<K, Object> map = iterator.next();
            if (this.m == null || this.m.z() || com.ihandysoft.ad.b.b.b(map.get("cpm")) >= this.m.g()) {
                final long n2 = n + this.k;
                this.F.postDelayed((Runnable)new Runnable() {
                    @Override
                    public final void run() {
                        HSAdBannerView.a(HSAdBannerView.this, map);
                    }
                }, n);
                n = n2;
                b = true;
            }
        }
        if (!b && this.u == null) {
            (this.u = new Timer()).schedule(new TimerTask() {
                @Override
                public final void run() {
                    HSAdBannerView.this.F.post((Runnable)new Runnable() {
                        @Override
                        public final void run() {
                            HSAdBannerView.this.i();
                        }
                    });
                }
            }, (long)(1000.0f * this.g()));
        }
    }
    
    static /* synthetic */ void l(final HSAdBannerView hsAdBannerView) {
        hsAdBannerView.u = null;
    }
    
    static /* synthetic */ void o(final HSAdBannerView hsAdBannerView) {
        hsAdBannerView.e = 0;
    }
    
    static /* synthetic */ void q(final HSAdBannerView hsAdBannerView) {
        hsAdBannerView.m = null;
    }
    
    static /* synthetic */ void s(final HSAdBannerView hsAdBannerView) {
        hsAdBannerView.w = null;
    }
    
    static /* synthetic */ void x(final HSAdBannerView hsAdBannerView) {
        while (hsAdBannerView.v.getChildCount() > 1) {
            hsAdBannerView.v.removeView(hsAdBannerView.v.getChildAt(0));
        }
    }
    
    static /* synthetic */ void z(final HSAdBannerView hsAdBannerView) {
        hsAdBannerView.k();
        hsAdBannerView.m.B();
    }
    
    public final void a() {
        if (this.J) {
            this.J = false;
            this.F.post((Runnable)new Runnable() {
                @Override
                public final void run() {
                    HSAdBannerView.this.h();
                }
            });
        }
    }
    
    public final void a(final a a) {
        this.F.post((Runnable)new Runnable() {
            @Override
            public final void run() {
                if (a != null && !a.s() && HSAdBannerView.this.m != a && !HSAdBannerView.this.s.contains(a)) {
                    HSAdBannerView.this.a("Loaded", a.o());
                    final long n = System.currentTimeMillis() - a.m().getTime();
                    com.ihs.a.d.a();
                    final String format = String.format(Locale.US, "iHandyAds_%s_ReturnSuccess_Seconds", a.b());
                    final String[] array = { "BySeconds", null, null };
                    final HSAdBannerView a = HSAdBannerView.this;
                    array[1] = HSAdBannerView.a(n);
                    array[2] = null;
                    com.ihs.a.d.a(format, array);
                    b("<HSAd> Load %s Ad Successfully!", new Object[] { a.b() });
                    if (!a.e() && !a.f()) {
                        HSAdBannerView.o(HSAdBannerView.this);
                    }
                    HSAdBannerView.this.s.add(a);
                    HSAdBannerView.this.c(HSAdBannerView.this.s);
                    HSAdBannerView.this.t.remove(a);
                    if (HSAdBannerView.this.x == com.ihandysoft.ad.h.c) {
                        if (HSAdBannerView.this.m == null || HSAdBannerView.this.m.C()) {
                            HSAdBannerView.this.i();
                            return;
                        }
                        final float g = a.g();
                        if (HSAdBannerView.this.l <= 1.0f) {
                            if (g > HSAdBannerView.this.m.g()) {
                                HSAdBannerView.a("<HSAd> New loaded Ad is much better. Jump the queue!");
                                HSAdBannerView.this.i();
                            }
                        }
                        else if (g >= HSAdBannerView.this.m.g() * HSAdBannerView.this.l) {
                            HSAdBannerView.a("<HSAd> New loaded Ad is much better. Jump the queue!");
                            HSAdBannerView.this.i();
                        }
                    }
                }
            }
        });
    }
    
    public final void a(final a a, final Exception ex) {
        this.F.post((Runnable)new Runnable() {
            @Override
            public final void run() {
                if (a != null && !a.s() && HSAdBannerView.this.m != a && !HSAdBannerView.this.s.contains(a)) {
                    b("<HSAd> Load %s Ad Failed with Error: %s", new Object[] { a.b(), ex });
                    final long n = System.currentTimeMillis() - a.m().getTime();
                    com.ihs.a.d.a();
                    final String format = String.format(Locale.US, "iHandyAds_%s_ReturnFailure_Seconds", a.b());
                    final String[] array = { "BySeconds", null, null };
                    final HSAdBannerView a = HSAdBannerView.this;
                    array[1] = HSAdBannerView.a(n);
                    array[2] = null;
                    com.ihs.a.d.a(format, array);
                    final HSAdBannerView a2 = HSAdBannerView.this;
                    final a b = a;
                    final Exception c = ex;
                    a2.d(b);
                }
            }
        });
    }
    
    public final void a(final boolean b) {
        if (this.x == com.ihandysoft.ad.h.c) {
            if (!b) {
                return;
            }
        }
        else {
            final StringBuilder sb = new StringBuilder("<HSAd> Play Ads");
            String s;
            if (b) {
                s = " Immediately";
            }
            else {
                s = "";
            }
            com.ihs.g.c.a("HSAd", sb.append(s).toString());
            this.x = com.ihandysoft.ad.h.c;
        }
        if (this.u != null) {
            this.u.cancel();
            this.u = null;
        }
        if (this.m == null) {
            this.i();
            return;
        }
        if (b) {
            this.j();
            return;
        }
        (this.u = new Timer()).schedule(new TimerTask() {
            @Override
            public final void run() {
                HSAdBannerView.this.F.post((Runnable)new Runnable() {
                    @Override
                    public final void run() {
                        HSAdBannerView.this.j();
                    }
                });
            }
        }, (long)(1000.0f * this.g()));
    }
    
    public final void b() {
        if (this.x == com.ihandysoft.ad.h.c) {
            this.x = com.ihandysoft.ad.h.b;
            com.ihs.g.c.a("HSAd", "<HSAd> Pause Ads");
            if (this.u != null) {
                this.u.cancel();
                this.u = null;
            }
            if (this.w != null) {
                this.w.cancel();
                this.w = null;
            }
        }
    }
    
    public final void b(final a a) {
        this.F.post((Runnable)new Runnable() {
            @Override
            public final void run() {
                HSAdBannerView.this.b();
                if (HSAdBannerView.this.q != null && HSAdBannerView.this.r != null) {
                    final long currentTimeMillis = System.currentTimeMillis();
                    final long n = (currentTimeMillis - HSAdBannerView.this.q.getTime()) / 1000L;
                    final long n2 = (currentTimeMillis - HSAdBannerView.this.r.getTime()) / 1000L;
                    com.ihs.a.d.a();
                    com.ihs.a.d.a("iHandyAds_FirstAdLoadedToClick_Interval", new String[] { "Interval", String.valueOf(n) });
                    com.ihs.a.d.a();
                    com.ihs.a.d.a("iHandyAds_CurrentAdLoadedToClick_Interval", new String[] { "Interval", String.valueOf(n2) });
                }
                HSAdBannerView.this.a("Clicked", a.o());
                HSAdBannerView.b(HSAdBannerView.this, (Date)null);
            }
        });
    }
    
    public final void b(final boolean b) {
    }
    
    public final void c() {
        this.F.post((Runnable)new Runnable() {
            @Override
            public final void run() {
                if (HSAdBannerView.this.H) {
                    HSAdBannerView.a("Remote Config Data Changed!");
                    final Map<Object, Object> map = com.ihs.f.a.c.b().d().get("Data");
                    if (map == null || !HSAdBannerView.this.b.equals(map.get("iHandyAds"))) {
                        HSAdBannerView.a("AdInfo in Remote Config changed, reload ads.");
                        HSAdBannerView.this.h();
                        return;
                    }
                    HSAdBannerView.a("AdInfo in Remote Config didn't change.");
                }
            }
        });
    }
    
    public final void d() {
        this.F.post((Runnable)new Runnable() {
            @Override
            public final void run() {
                HSAdBannerView.this.a(false);
            }
        });
    }
    
    public final void e() {
        this.F.post((Runnable)new Runnable() {
            @Override
            public final void run() {
                if (!HSAdBannerView.this.B) {
                    HSAdBannerView.this.a(true);
                    return;
                }
                HSAdBannerView.a(HSAdBannerView.this, com.ihandysoft.ad.h.c);
            }
        });
    }
    
    public final void f() {
        com.ihs.g.c.a("HSAd", "Destroy Banner");
        com.ihs.session.a.a().deleteObserver(this.K);
        com.ihs.f.a.c.b().b(this);
        this.F.post((Runnable)new Runnable() {
            @Override
            public final void run() {
                HSAdBannerView.g(HSAdBannerView.this);
                if (HSAdBannerView.this.u != null) {
                    HSAdBannerView.this.u.cancel();
                    HSAdBannerView.l(HSAdBannerView.this);
                }
                if (HSAdBannerView.this.w != null) {
                    HSAdBannerView.this.w.cancel();
                    HSAdBannerView.s(HSAdBannerView.this);
                }
                final Iterator<a> iterator = HSAdBannerView.this.t.iterator();
                while (iterator.hasNext()) {
                    iterator.next().r();
                }
                final Iterator<a> iterator2 = HSAdBannerView.this.s.iterator();
                while (iterator2.hasNext()) {
                    iterator2.next().r();
                }
                HSAdBannerView.this.t.clear();
                HSAdBannerView.this.s.clear();
                if (HSAdBannerView.this.m != null) {
                    HSAdBannerView.this.m.r();
                    HSAdBannerView.q(HSAdBannerView.this);
                }
                HSAdBannerView.this.F.removeCallbacksAndMessages((Object)null);
                HSAdBannerView.this.F.getLooper().quit();
            }
        });
    }
    
    protected void onVisibilityChanged(final View view, final int n) {
        this.F.post((Runnable)new Runnable() {
            @Override
            public final void run() {
                if (n != 0 && !HSAdBannerView.this.B) {
                    HSAdBannerView.a("HSAdBannerView:banner become invisible");
                    HSAdBannerView.b(HSAdBannerView.this, true);
                    HSAdBannerView.b(HSAdBannerView.this, HSAdBannerView.this.x);
                    HSAdBannerView.this.b();
                }
                else if (n == 0 && HSAdBannerView.this.B) {
                    HSAdBannerView.a("HSAdBannerView:banner become visible");
                    HSAdBannerView.b(HSAdBannerView.this, false);
                    if (HSAdBannerView.this.D == com.ihandysoft.ad.h.c) {
                        HSAdBannerView.this.a(true);
                        return;
                    }
                    if (HSAdBannerView.this.x == com.ihandysoft.ad.h.b && HSAdBannerView.this.m != null) {
                        HSAdBannerView.this.a(true);
                    }
                }
            }
        });
        super.onVisibilityChanged(view, n);
    }
    
    protected void onWindowVisibilityChanged(final int n) {
        this.F.post((Runnable)new Runnable() {
            @Override
            public final void run() {
                if (n != 0 && !HSAdBannerView.this.B) {
                    HSAdBannerView.a("HSAdBannerView:banner become invisible");
                    HSAdBannerView.b(HSAdBannerView.this, true);
                    HSAdBannerView.b(HSAdBannerView.this, HSAdBannerView.this.x);
                    HSAdBannerView.this.b();
                }
            }
        });
        super.onWindowVisibilityChanged(n);
    }
}
