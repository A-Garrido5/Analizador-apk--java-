// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

public class ft$d implements fy, Comparable
{
    private final fn a;
    private final Object[] b;
    
    public ft$d(final fn a) {
        if (a == null || !fn$v.a.equals(a.a())) {
            throw new fk("Not a record schema: " + a);
        }
        this.a = a;
        this.b = new Object[a.b().size()];
    }
    
    public int a(final ft$d ft$d) {
        return ft.a().a(this, ft$d, this.a);
    }
    
    @Override
    public fn a() {
        return this.a;
    }
    
    @Override
    public Object a(final int n) {
        return this.b[n];
    }
    
    @Override
    public void a(final int n, final Object o) {
        this.b[n] = o;
    }
    
    @Override
    public boolean equals(final Object o) {
        if (o != this) {
            if (!(o instanceof ft$d)) {
                return false;
            }
            final ft$d ft$d = (ft$d)o;
            if (!this.a.g().equals(ft$d.a.g())) {
                return false;
            }
            if (ft.a().a(this, ft$d, this.a, true) != 0) {
                return false;
            }
        }
        return true;
    }
    
    @Override
    public int hashCode() {
        return ft.a().b(this, this.a);
    }
    
    @Override
    public String toString() {
        return ft.a().a(this);
    }
}
