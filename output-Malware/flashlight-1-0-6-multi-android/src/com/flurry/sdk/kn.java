// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.concurrent.atomic.AtomicReference;
import java.util.Iterator;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.TreeSet;
import java.util.SortedSet;
import java.util.HashSet;
import java.util.Set;
import java.util.List;
import java.util.ArrayList;
import java.util.Collection;
import java.util.TreeMap;
import java.util.SortedMap;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.HashMap;

public abstract class kn extends jb
{
    static final HashMap b;
    static final HashMap c;
    static final HashMap d;
    static final HashMap e;
    protected static final HashMap f;
    protected ml g;
    
    static {
        b = kw.a();
        c = mb.a();
        (d = new HashMap()).put(Map.class.getName(), LinkedHashMap.class);
        kn.d.put(ConcurrentMap.class.getName(), ConcurrentHashMap.class);
        kn.d.put(SortedMap.class.getName(), TreeMap.class);
        kn.d.put("java.util.NavigableMap", TreeMap.class);
        while (true) {
            try {
                kn.d.put(Class.forName("java.util.ConcurrentNavigableMap").getName(), Class.forName("java.util.ConcurrentSkipListMap"));
                (e = new HashMap()).put(Collection.class.getName(), ArrayList.class);
                kn.e.put(List.class.getName(), ArrayList.class);
                kn.e.put(Set.class.getName(), HashSet.class);
                kn.e.put(SortedSet.class.getName(), TreeSet.class);
                kn.e.put(Queue.class.getName(), LinkedList.class);
                kn.e.put("java.util.Deque", LinkedList.class);
                kn.e.put("java.util.NavigableSet", TreeSet.class);
                f = ly.a();
            }
            catch (ClassNotFoundException ex) {
                continue;
            }
            break;
        }
    }
    
    protected kn() {
        this.g = ml.a;
    }
    
    @Override
    public jg a(final iy iy, final jc jc, final qi qi, final is is) {
        final sh g = qi.g();
        jg a = (jg)g.n();
        Label_0101: {
            if (a != null) {
                break Label_0101;
            }
            jg a2 = kn.f.get(g);
            if (a2 != null) {
                final jg a3 = this.a(qi, iy, jc, is, null, null);
                if (a3 != null) {
                    a2 = a3;
                }
            }
            else {
                if (g.t()) {
                    throw new IllegalArgumentException("Internal error: primitive type (" + qi + ") passed, no array deserializer found");
                }
                break Label_0101;
            }
            return a2;
        }
        final jy jy = (jy)g.o();
        jy b;
        if (jy == null) {
            b = this.b(iy, g, is);
        }
        else {
            b = jy;
        }
        jg a2 = this.a(qi, iy, jc, is, b, a);
        if (a2 == null) {
            if (a == null) {
                a = jc.a(iy, g, is);
            }
            return new lx(qi, a, b);
        }
        return a2;
    }
    
    @Override
    public jg a(final iy iy, final jc jc, final qk qk, final is is) {
        final qk qk2 = (qk)this.a(iy, qk);
        final mw mw = (mw)iy.c(qk2.p());
        final jg a = this.a(iy, mw.c(), is);
        if (a != null) {
            return a;
        }
        final qk qk3 = (qk)this.a(iy, mw.c(), qk2, null);
        final sh g = qk3.g();
        final jg jg = (jg)g.n();
        final jy jy = (jy)g.o();
        jy b;
        if (jy == null) {
            b = this.b(iy, g, is);
        }
        else {
            b = jy;
        }
        return this.a(qk3, iy, jc, mw, is, b, jg);
    }
    
    @Override
    public jg a(final iy iy, final jc jc, final ql ql, final is is) {
        final ql ql2 = (ql)this.a(iy, ql);
        final Class p4 = ql2.p();
        mw mw = (mw)iy.c(ql2);
        final jg a = this.a(iy, mw.c(), is);
        jg a2;
        if (a != null) {
            a2 = a;
        }
        else {
            ql ql3 = (ql)this.a(iy, mw.c(), ql2, null);
            final sh g = ql3.g();
            jg a3 = (jg)g.n();
            final jy jy = (jy)g.o();
            jy b;
            if (jy == null) {
                b = this.b(iy, g, is);
            }
            else {
                b = jy;
            }
            a2 = this.a(ql3, iy, jc, mw, is, b, a3);
            if (a2 == null) {
                if (a3 == null) {
                    if (EnumSet.class.isAssignableFrom(p4)) {
                        return new ls(g.p(), this.b(iy, jc, g, is));
                    }
                    a3 = jc.a(iy, g, is);
                }
                if (ql3.s() || ql3.c()) {
                    final Class clazz = kn.e.get(p4.getName());
                    if (clazz == null) {
                        throw new IllegalArgumentException("Can not find a deserializer for non-concrete Collection type " + ql3);
                    }
                    final ql ql4 = (ql)iy.a(ql3, clazz);
                    mw = (mw)iy.c(ql4);
                    ql3 = ql4;
                }
                final kx a4 = this.a(iy, mw);
                if (g.p() == String.class) {
                    return new me(ql3, a3, a4);
                }
                return new ln(ql3, a3, b, a4);
            }
        }
        return a2;
    }
    
    @Override
    public jg a(final iy iy, final jc jc, final qn qn, final is is) {
        final qn qn2 = (qn)this.a(iy, qn);
        final mw mw = (mw)iy.c(qn2);
        final jg a = this.a(iy, mw.c(), is);
        if (a != null) {
            return a;
        }
        final qn qn3 = (qn)this.a(iy, mw.c(), qn2, null);
        final sh k = qn3.k();
        final sh g = qn3.g();
        final jg jg = (jg)g.n();
        final jl jl = (jl)k.n();
        jl c;
        if (jl == null) {
            c = jc.c(iy, k, is);
        }
        else {
            c = jl;
        }
        final jy jy = (jy)g.o();
        jy b;
        if (jy == null) {
            b = this.b(iy, g, is);
        }
        else {
            b = jy;
        }
        return this.a(qn3, iy, jc, mw, is, c, b, jg);
    }
    
    @Override
    public jg a(final iy iy, final jc jc, final qo qo, final is is) {
        final qo qo2 = (qo)this.a(iy, qo);
        final mw mw = (mw)iy.c(qo2);
        final jg a = this.a(iy, mw.c(), is);
        jg a2;
        if (a != null) {
            a2 = a;
        }
        else {
            qo qo3 = (qo)this.a(iy, mw.c(), qo2, null);
            final sh k = qo3.k();
            final sh g = qo3.g();
            jg a3 = (jg)g.n();
            final jl jl = (jl)k.n();
            jl c;
            if (jl == null) {
                c = jc.c(iy, k, is);
            }
            else {
                c = jl;
            }
            final jy jy = (jy)g.o();
            jy b;
            if (jy == null) {
                b = this.b(iy, g, is);
            }
            else {
                b = jy;
            }
            a2 = this.a(qo3, iy, jc, mw, is, c, b, a3);
            if (a2 == null) {
                if (a3 == null) {
                    a3 = jc.a(iy, g, is);
                }
                final Class p4 = qo3.p();
                if (!EnumMap.class.isAssignableFrom(p4)) {
                    mw mw2;
                    if (qo3.s() || qo3.c()) {
                        final Class clazz = kn.d.get(p4.getName());
                        if (clazz == null) {
                            throw new IllegalArgumentException("Can not find a deserializer for non-concrete Map type " + qo3);
                        }
                        final qo qo4 = (qo)iy.a(qo3, clazz);
                        mw2 = (mw)iy.c(qo4);
                        qo3 = qo4;
                    }
                    else {
                        mw2 = mw;
                    }
                    final lw lw = new lw(qo3, this.a(iy, mw2), c, a3, b);
                    lw.a(iy.a().c(mw2.c()));
                    return lw;
                }
                final Class p5 = k.p();
                if (p5 == null || !p5.isEnum()) {
                    throw new IllegalArgumentException("Can not construct EnumMap; generic (key) type not available");
                }
                return new lr(k.p(), this.b(iy, jc, k, is), a3);
            }
        }
        return a2;
    }
    
    protected jg a(final iy iy, final mm mm, final is is) {
        final Object h = iy.a().h(mm);
        if (h != null) {
            return this.a(iy, mm, is, h);
        }
        return null;
    }
    
    jg a(final iy iy, final mm mm, final is is, final Object o) {
        if (o instanceof jg) {
            jg a = (jg)o;
            if (a instanceof iv) {
                a = ((iv)a).a(iy, is);
            }
            return a;
        }
        if (!(o instanceof Class)) {
            throw new IllegalStateException("AnnotationIntrospector returned deserializer definition of type " + o.getClass().getName() + "; expected type JsonDeserializer or Class<JsonDeserializer> instead");
        }
        final Class clazz = (Class)o;
        if (!jg.class.isAssignableFrom(clazz)) {
            throw new IllegalStateException("AnnotationIntrospector returned Class " + clazz.getName() + "; expected Class<JsonDeserializer>");
        }
        jg jg = iy.a(mm, clazz);
        if (jg instanceof iv) {
            jg = ((iv)jg).a(iy, is);
        }
        return jg;
    }
    
    protected abstract jg a(final qi p0, final iy p1, final jc p2, final is p3, final jy p4, final jg p5);
    
    protected abstract jg a(final qk p0, final iy p1, final jc p2, final mw p3, final is p4, final jy p5, final jg p6);
    
    protected abstract jg a(final ql p0, final iy p1, final jc p2, final mw p3, final is p4, final jy p5, final jg p6);
    
    protected abstract jg a(final qn p0, final iy p1, final jc p2, final mw p3, final is p4, final jl p5, final jy p6, final jg p7);
    
    protected abstract jg a(final qo p0, final iy p1, final jc p2, final mw p3, final is p4, final jl p5, final jy p6, final jg p7);
    
    protected abstract jg a(final Class p0, final iy p1, final is p2);
    
    protected abstract jg a(final Class p0, final iy p1, final mw p2, final is p3);
    
    public jy a(final iy iy, final sh sh, final mq mq, final is is) {
        final iq a = iy.a();
        final ni a2 = a.a(iy, mq, sh);
        if (a2 == null) {
            return this.b(iy, sh, is);
        }
        return a2.a(iy, sh, iy.l().a(mq, iy, a), is);
    }
    
    public abstract kx a(final iy p0, final mw p1);
    
    protected ra a(final Class clazz, final iy iy) {
        if (iy.a(iy$a.j)) {
            return ra.b(clazz);
        }
        return ra.b(clazz, iy.a());
    }
    
    protected sh a(final iy p0, final mm p1, final sh p2, final String p3) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_1        
        //     1: invokevirtual   com/flurry/sdk/iy.a:()Lcom/flurry/sdk/iq;
        //     4: astore          5
        //     6: aload           5
        //     8: aload_2        
        //     9: aload_3        
        //    10: aload           4
        //    12: invokevirtual   com/flurry/sdk/iq.a:(Lcom/flurry/sdk/mm;Lcom/flurry/sdk/sh;Ljava/lang/String;)Ljava/lang/Class;
        //    15: astore          6
        //    17: aload           6
        //    19: ifnull          447
        //    22: aload_3        
        //    23: aload           6
        //    25: invokevirtual   com/flurry/sdk/sh.f:(Ljava/lang/Class;)Lcom/flurry/sdk/sh;
        //    28: astore          19
        //    30: aload           19
        //    32: astore          7
        //    34: aload           7
        //    36: invokevirtual   com/flurry/sdk/sh.f:()Z
        //    39: ifeq            326
        //    42: aload           5
        //    44: aload_2        
        //    45: aload           7
        //    47: invokevirtual   com/flurry/sdk/sh.k:()Lcom/flurry/sdk/sh;
        //    50: aload           4
        //    52: invokevirtual   com/flurry/sdk/iq.b:(Lcom/flurry/sdk/mm;Lcom/flurry/sdk/sh;Ljava/lang/String;)Ljava/lang/Class;
        //    55: astore          8
        //    57: aload           8
        //    59: ifnull          189
        //    62: aload           7
        //    64: instanceof      Lcom/flurry/sdk/qn;
        //    67: ifne            173
        //    70: new             Lcom/flurry/sdk/jh;
        //    73: dup            
        //    74: new             Ljava/lang/StringBuilder;
        //    77: dup            
        //    78: ldc_w           "Illegal key-type annotation: type "
        //    81: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    84: aload           7
        //    86: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //    89: ldc_w           " is not a Map(-like) type"
        //    92: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    95: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    98: invokespecial   com/flurry/sdk/jh.<init>:(Ljava/lang/String;)V
        //   101: athrow         
        //   102: astore          18
        //   104: new             Lcom/flurry/sdk/jh;
        //   107: dup            
        //   108: new             Ljava/lang/StringBuilder;
        //   111: dup            
        //   112: ldc_w           "Failed to narrow type "
        //   115: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   118: aload_3        
        //   119: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //   122: ldc_w           " with concrete-type annotation (value "
        //   125: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   128: aload           6
        //   130: invokevirtual   java/lang/Class.getName:()Ljava/lang/String;
        //   133: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   136: ldc_w           "), method '"
        //   139: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   142: aload_2        
        //   143: invokevirtual   com/flurry/sdk/mm.b:()Ljava/lang/String;
        //   146: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   149: ldc_w           "': "
        //   152: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   155: aload           18
        //   157: invokevirtual   java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
        //   160: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   163: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   166: aconst_null    
        //   167: aload           18
        //   169: invokespecial   com/flurry/sdk/jh.<init>:(Ljava/lang/String;Lcom/flurry/sdk/hg;Ljava/lang/Throwable;)V
        //   172: athrow         
        //   173: aload           7
        //   175: checkcast       Lcom/flurry/sdk/qn;
        //   178: aload           8
        //   180: invokevirtual   com/flurry/sdk/qn.d:(Ljava/lang/Class;)Lcom/flurry/sdk/sh;
        //   183: astore          17
        //   185: aload           17
        //   187: astore          7
        //   189: aload           7
        //   191: invokevirtual   com/flurry/sdk/sh.k:()Lcom/flurry/sdk/sh;
        //   194: astore          9
        //   196: aload           9
        //   198: ifnull          242
        //   201: aload           9
        //   203: invokevirtual   com/flurry/sdk/sh.n:()Ljava/lang/Object;
        //   206: ifnonnull       242
        //   209: aload           5
        //   211: aload_2        
        //   212: invokevirtual   com/flurry/sdk/iq.i:(Lcom/flurry/sdk/mm;)Ljava/lang/Class;
        //   215: astore          15
        //   217: aload           15
        //   219: ifnull          242
        //   222: aload           15
        //   224: ldc_w           Lcom/flurry/sdk/jl$a;.class
        //   227: if_acmpeq       242
        //   230: aload           9
        //   232: aload_1        
        //   233: aload_2        
        //   234: aload           15
        //   236: invokevirtual   com/flurry/sdk/iy.b:(Lcom/flurry/sdk/mm;Ljava/lang/Class;)Lcom/flurry/sdk/jl;
        //   239: invokevirtual   com/flurry/sdk/sh.j:(Ljava/lang/Object;)V
        //   242: aload           5
        //   244: aload_2        
        //   245: aload           7
        //   247: invokevirtual   com/flurry/sdk/sh.g:()Lcom/flurry/sdk/sh;
        //   250: aload           4
        //   252: invokevirtual   com/flurry/sdk/iq.c:(Lcom/flurry/sdk/mm;Lcom/flurry/sdk/sh;Ljava/lang/String;)Ljava/lang/Class;
        //   255: astore          10
        //   257: aload           10
        //   259: ifnull          275
        //   262: aload           7
        //   264: aload           10
        //   266: invokevirtual   com/flurry/sdk/sh.b:(Ljava/lang/Class;)Lcom/flurry/sdk/sh;
        //   269: astore          14
        //   271: aload           14
        //   273: astore          7
        //   275: aload           7
        //   277: invokevirtual   com/flurry/sdk/sh.g:()Lcom/flurry/sdk/sh;
        //   280: invokevirtual   com/flurry/sdk/sh.n:()Ljava/lang/Object;
        //   283: ifnonnull       326
        //   286: aload           5
        //   288: aload_2        
        //   289: invokevirtual   com/flurry/sdk/iq.j:(Lcom/flurry/sdk/mm;)Ljava/lang/Class;
        //   292: astore          11
        //   294: aload           11
        //   296: ifnull          326
        //   299: aload           11
        //   301: ldc_w           Lcom/flurry/sdk/jg$a;.class
        //   304: if_acmpeq       326
        //   307: aload_1        
        //   308: aload_2        
        //   309: aload           11
        //   311: invokevirtual   com/flurry/sdk/iy.a:(Lcom/flurry/sdk/mm;Ljava/lang/Class;)Lcom/flurry/sdk/jg;
        //   314: astore          12
        //   316: aload           7
        //   318: invokevirtual   com/flurry/sdk/sh.g:()Lcom/flurry/sdk/sh;
        //   321: aload           12
        //   323: invokevirtual   com/flurry/sdk/sh.j:(Ljava/lang/Object;)V
        //   326: aload           7
        //   328: areturn        
        //   329: astore          16
        //   331: new             Lcom/flurry/sdk/jh;
        //   334: dup            
        //   335: new             Ljava/lang/StringBuilder;
        //   338: dup            
        //   339: ldc_w           "Failed to narrow key type "
        //   342: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   345: aload           7
        //   347: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //   350: ldc_w           " with key-type annotation ("
        //   353: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   356: aload           8
        //   358: invokevirtual   java/lang/Class.getName:()Ljava/lang/String;
        //   361: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   364: ldc_w           "): "
        //   367: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   370: aload           16
        //   372: invokevirtual   java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
        //   375: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   378: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   381: aconst_null    
        //   382: aload           16
        //   384: invokespecial   com/flurry/sdk/jh.<init>:(Ljava/lang/String;Lcom/flurry/sdk/hg;Ljava/lang/Throwable;)V
        //   387: athrow         
        //   388: astore          13
        //   390: new             Lcom/flurry/sdk/jh;
        //   393: dup            
        //   394: new             Ljava/lang/StringBuilder;
        //   397: dup            
        //   398: ldc_w           "Failed to narrow content type "
        //   401: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   404: aload           7
        //   406: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //   409: ldc_w           " with content-type annotation ("
        //   412: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   415: aload           10
        //   417: invokevirtual   java/lang/Class.getName:()Ljava/lang/String;
        //   420: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   423: ldc_w           "): "
        //   426: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   429: aload           13
        //   431: invokevirtual   java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
        //   434: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   437: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   440: aconst_null    
        //   441: aload           13
        //   443: invokespecial   com/flurry/sdk/jh.<init>:(Ljava/lang/String;Lcom/flurry/sdk/hg;Ljava/lang/Throwable;)V
        //   446: athrow         
        //   447: aload_3        
        //   448: astore          7
        //   450: goto            34
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                
        //  -----  -----  -----  -----  ------------------------------------
        //  22     30     102    173    Ljava/lang/IllegalArgumentException;
        //  173    185    329    388    Ljava/lang/IllegalArgumentException;
        //  262    271    388    447    Ljava/lang/IllegalArgumentException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0275:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    protected sh a(final iy iy, final mw mw, sh sh, final mq mq, final is is) {
        if (sh.f()) {
            final iq a = iy.a();
            final sh k = sh.k();
            if (k != null) {
                final Class i = a.i(mq);
                if (i != null && i != jl$a.class) {
                    k.j(iy.b(mq, i));
                }
            }
            final Class j = a.j(mq);
            if (j != null && j != jg$a.class) {
                sh.g().j(iy.a(mq, j));
            }
            if (mq instanceof mq) {
                final jy b = this.b(iy, sh, mq, is);
                if (b != null) {
                    sh = sh.e(b);
                }
            }
        }
        jy jy;
        if (mq instanceof mq) {
            jy = this.a(iy, sh, mq, is);
        }
        else {
            jy = this.b(iy, sh, null);
        }
        if (jy != null) {
            sh = sh.f(jy);
        }
        return sh;
    }
    
    public abstract sh a(final iy p0, final sh p1);
    
    @Override
    public jg b(final iy iy, final jc jc, final sh sh, final is is) {
        final mw mw = (mw)iy.c(sh);
        final jg a = this.a(iy, mw.c(), is);
        if (a != null) {
            return a;
        }
        final Class p4 = sh.p();
        final jg a2 = this.a(p4, iy, mw, is);
        if (a2 != null) {
            return a2;
        }
        for (final mr mr : mw.o()) {
            if (iy.a().k(mr)) {
                if (mr.f() == 1 && mr.d().isAssignableFrom(p4)) {
                    return lq.a(iy, p4, mr);
                }
                throw new IllegalArgumentException("Unsuitable method (" + mr + ") decorated with @JsonCreator (for Enum type " + p4.getName() + ")");
            }
        }
        return new lq(this.a(p4, iy));
    }
    
    @Override
    public jy b(final iy iy, final sh sh, final is is) {
        final mn c = ((mw)iy.c(sh.p())).c();
        final iq a = iy.a();
        final ni a2 = a.a(iy, c, sh);
        ni a3;
        Collection a4;
        if (a2 == null) {
            final ni d = iy.d(sh);
            if (d == null) {
                return null;
            }
            a3 = d;
            a4 = null;
        }
        else {
            a4 = iy.l().a(c, iy, a);
            a3 = a2;
        }
        if (a3.a() == null && sh.c()) {
            final sh a5 = this.a(iy, sh);
            if (a5 != null && a5.p() != sh.p()) {
                a3 = a3.a(a5.p());
            }
        }
        return a3.a(iy, sh, a4, is);
    }
    
    public jy b(final iy iy, final sh sh, final mq mq, final is is) {
        final iq a = iy.a();
        final ni b = a.b(iy, mq, sh);
        final sh g = sh.g();
        if (b == null) {
            return this.b(iy, g, is);
        }
        return b.a(iy, g, iy.l().a(mq, iy, a), is);
    }
    
    @Override
    public jg c(final iy iy, final jc jc, final sh sh, final is is) {
        final Class p4 = sh.p();
        final jg a = this.a(p4, iy, is);
        if (a != null) {
            return a;
        }
        return lv.a(p4);
    }
    
    protected jg d(final iy iy, final jc jc, final sh sh, final is is) {
        final Class p4 = sh.p();
        jg a = kn.b.get(new qj(p4));
        if (a == null) {
            if (AtomicReference.class.isAssignableFrom(p4)) {
                final sh[] b = iy.m().b(sh, AtomicReference.class);
                sh b2;
                if (b == null || b.length <= 0) {
                    b2 = qs.b();
                }
                else {
                    b2 = b[0];
                }
                return new lj(b2, is);
            }
            a = this.g.a(sh, iy, jc);
            if (a == null) {
                return null;
            }
        }
        return a;
    }
}
