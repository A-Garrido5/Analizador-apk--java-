// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import android.annotation.TargetApi;
import android.widget.RelativeLayout$LayoutParams;
import android.view.View;
import android.view.ViewGroup$LayoutParams;
import android.os.Build$VERSION;
import android.content.Context;
import android.widget.ImageView;
import android.app.ProgressDialog;
import android.webkit.WebChromeClient;
import android.webkit.WebViewClient;
import android.webkit.WebView;
import android.annotation.SuppressLint;
import android.view.View$OnClickListener;
import android.widget.RelativeLayout;

@SuppressLint({ "SetJavaScriptEnabled" })
public final class n extends RelativeLayout implements View$OnClickListener
{
    private final String a;
    private WebView b;
    private WebViewClient c;
    private WebChromeClient d;
    private boolean e;
    private boolean f;
    private ProgressDialog g;
    private ImageView h;
    private ImageView i;
    private ImageView j;
    private final int k;
    private final int l;
    private final int m;
    private n$f n;
    private n$c o;
    private n$d p;
    private boolean q;
    
    public n(final Context context, final String s, final boolean f) {
        super(context);
        this.a = this.getClass().getSimpleName();
        this.f = true;
        this.k = 0;
        this.l = 1;
        this.m = 2;
        this.b = new WebView(context);
        this.c = new n$b(this, null);
        this.d = new n$a(this, null);
        this.f = f;
        this.b.getSettings().setJavaScriptEnabled(true);
        this.b.getSettings().setUseWideViewPort(true);
        this.b.getSettings().setLoadWithOverviewMode(true);
        this.b.getSettings().setBuiltInZoomControls(true);
        if (Build$VERSION.SDK_INT >= 11) {
            this.b.getSettings().setDisplayZoomControls(false);
        }
        this.b.setWebViewClient(this.c);
        this.b.setWebChromeClient(this.d);
        this.b.loadUrl(s);
        (this.h = new ImageView(context)).setId(0);
        this.h.setImageDrawable(this.getResources().getDrawable(17301560));
        this.h.setOnClickListener((View$OnClickListener)this);
        (this.i = new ImageView(context)).setId(1);
        this.i.setImageDrawable(this.getResources().getDrawable(17301580));
        this.i.setOnClickListener((View$OnClickListener)this);
        (this.j = new ImageView(context)).setId(2);
        this.j.setImageDrawable(this.getResources().getDrawable(17301565));
        this.j.setOnClickListener((View$OnClickListener)this);
        this.setLayoutParams(new ViewGroup$LayoutParams(-1, -1));
        this.addView((View)this.b);
        final RelativeLayout$LayoutParams relativeLayout$LayoutParams = new RelativeLayout$LayoutParams(-2, -2);
        relativeLayout$LayoutParams.addRule(14);
        this.addView((View)this.h, (ViewGroup$LayoutParams)relativeLayout$LayoutParams);
        final RelativeLayout$LayoutParams relativeLayout$LayoutParams2 = new RelativeLayout$LayoutParams(-2, -2);
        relativeLayout$LayoutParams2.addRule(9);
        this.addView((View)this.i, (ViewGroup$LayoutParams)relativeLayout$LayoutParams2);
        final RelativeLayout$LayoutParams relativeLayout$LayoutParams3 = new RelativeLayout$LayoutParams(-2, -2);
        relativeLayout$LayoutParams3.addRule(11);
        this.addView((View)this.j, (ViewGroup$LayoutParams)relativeLayout$LayoutParams3);
    }
    
    public final void a(final Context context) {
        if (this.g == null) {
            if (context == null) {
                eo.a(3, this.a, "Context is null, cannot create progress dialog.");
                return;
            }
            (this.g = new ProgressDialog(context)).setProgressStyle(0);
            this.g.setMessage((CharSequence)"Loading...");
            this.g.setCancelable(true);
            this.g.setCanceledOnTouchOutside(false);
            this.g.show();
        }
        else if (!this.g.isShowing()) {
            this.g.show();
        }
    }
    
    public final boolean a() {
        return this.e || (this.b != null && this.b.canGoBack());
    }
    
    public final boolean b() {
        return this.f;
    }
    
    public final void c() {
        if (this.e) {
            this.d.onHideCustomView();
        }
        else if (this.b != null) {
            this.b.goBack();
        }
    }
    
    @TargetApi(11)
    public final void d() {
        if (this.b != null) {
            this.e();
            this.removeView((View)this.b);
            this.b.stopLoading();
            if (Build$VERSION.SDK_INT >= 11) {
                this.b.onPause();
            }
            this.b.destroy();
            this.b = null;
        }
    }
    
    public final void e() {
        if (this.g != null && this.g.isShowing()) {
            this.g.dismiss();
            this.g = null;
        }
    }
    
    public final n$c getBasicWebViewClosingHandler() {
        return this.o;
    }
    
    public final n$d getBasicWebViewFullScreenTransitionHandler() {
        return this.p;
    }
    
    public final n$f getBasicWebViewUrlLoadingHandler() {
        return this.n;
    }
    
    public final String getUrl() {
        final WebView b = this.b;
        String url = null;
        if (b != null) {
            url = this.b.getUrl();
        }
        return url;
    }
    
    public final void onClick(final View view) {
        switch (view.getId()) {
            case 0: {
                if (this.o != null) {
                    this.o.a(this, n$e.c);
                    return;
                }
                break;
            }
            case 2: {
                if (this.b != null && this.b.canGoForward()) {
                    this.b.goForward();
                    return;
                }
                break;
            }
            case 1: {
                if (this.b != null && this.b.canGoBack()) {
                    this.b.goBack();
                    return;
                }
                if (this.o == null) {
                    break;
                }
                if (this.b()) {
                    this.o.a(this, n$e.c);
                    return;
                }
                this.o.a(this, n$e.b);
            }
        }
    }
    
    public final void setBasicWebViewClosingHandler(final n$c o) {
        this.o = o;
    }
    
    public final void setBasicWebViewFullScreenTransitionHandler(final n$d p) {
        this.p = p;
    }
    
    public final void setBasicWebViewUrlLoadingHandler(final n$f n) {
        this.n = n;
    }
}
