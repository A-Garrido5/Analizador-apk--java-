// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.Iterator;
import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;

public final class y
{
    private static final String a;
    private static y b;
    private HashMap c;
    
    static {
        a = y.class.getSimpleName();
    }
    
    y() {
        this.c = new HashMap();
    }
    
    public static y a() {
        if (y.b == null) {
            y.b = new y();
        }
        return y.b;
    }
    
    public final x a(final String s) {
        try {
            synchronized (this) {
                if (this.c.containsKey(s)) {
                    return this.c.get(s);
                }
                return null;
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
            return null;
        }
    }
    
    public final void a(final x x) {
        while (true) {
            try {
                if (x.b().length() == 0) {
                    return;
                }
                synchronized (this) {
                    if (this.c.containsKey(x.b())) {
                        this.c.remove(x.b());
                        if (x.e() != -1) {
                            this.c.put(x.b(), x);
                        }
                        return;
                    }
                }
            }
            catch (Exception ex) {
                ex.printStackTrace();
                return;
            }
            this.c.put(x.b(), x);
        }
    }
    
    public final boolean a(final long n) {
        return n <= System.currentTimeMillis();
    }
    
    public final HashMap b() {
        return this.c;
    }
    
    public final void b(final String s) {
        try {
            synchronized (this) {
                if (this.c.containsKey(s)) {
                    this.c.remove(s);
                }
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    public final List c() {
        ArrayList<x> list;
        try {
            synchronized (this) {
                list = new ArrayList<x>();
                final Iterator<x> iterator = this.b().values().iterator();
                while (iterator.hasNext()) {
                    list.add(iterator.next().a());
                }
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
            return null;
        }
        // monitorexit(this)
        return list;
    }
    
    public final void d() {
        try {
            synchronized (this) {
                for (final x x : this.c()) {
                    if (this.a(x.h())) {
                        eo.a(3, y.a, "expiring adunit freq cap for idHash: " + x.b() + " adunit exp: " + x.h() + " device epoch" + System.currentTimeMillis());
                        this.b(x.b());
                    }
                }
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
            return;
        }
    }
    // monitorexit(this)
}
