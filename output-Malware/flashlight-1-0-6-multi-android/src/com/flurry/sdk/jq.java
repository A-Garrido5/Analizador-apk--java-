// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.io.IOException;
import java.io.EOFException;
import java.io.OutputStream;
import java.io.Closeable;
import java.io.Writer;
import java.lang.reflect.Type;
import java.io.InputStream;
import java.util.concurrent.ConcurrentHashMap;

public class jq extends hn
{
    protected static final iu a;
    protected static final iq b;
    protected static final ne c;
    private static final sh n;
    protected final hd d;
    protected ng e;
    protected qs f;
    protected jf g;
    protected ju h;
    protected jw i;
    protected jv j;
    protected iy k;
    protected jc l;
    protected final ConcurrentHashMap m;
    
    static {
        n = qp.d(hh.class);
        a = mx.i;
        b = new my();
        c = ne$a.a();
    }
    
    public jq() {
        this(null, null, null);
    }
    
    public jq(final hd hd) {
        this(hd, null, null);
    }
    
    public jq(final hd hd, final jw jw, final jc jc) {
        this(hd, jw, jc, null, null);
    }
    
    public jq(final hd d, jw i, jc l, ju h, iy k) {
        this.m = new ConcurrentHashMap(64, 0.6f, 2);
        if (d == null) {
            this.d = new jo(this);
        }
        else {
            this.d = d;
            if (d.a() == null) {
                this.d.a(this);
            }
        }
        this.f = qs.a();
        if (h == null) {
            h = new ju(jq.a, jq.b, jq.c, null, null, this.f, null);
        }
        this.h = h;
        if (k == null) {
            k = new iy(jq.a, jq.b, jq.c, null, null, this.f, null);
        }
        this.k = k;
        if (i == null) {
            i = new or();
        }
        this.i = i;
        if (l == null) {
            l = new kv();
        }
        this.l = l;
        this.j = ol.e;
    }
    
    private final void a(final hf p0, final Object p1, final ju p2) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_2        
        //     1: checkcast       Ljava/io/Closeable;
        //     4: astore          4
        //     6: aload_0        
        //     7: getfield        com/flurry/sdk/jq.i:Lcom/flurry/sdk/jw;
        //    10: aload_3        
        //    11: aload_1        
        //    12: aload_2        
        //    13: aload_0        
        //    14: getfield        com/flurry/sdk/jq.j:Lcom/flurry/sdk/jv;
        //    17: invokevirtual   com/flurry/sdk/jw.a:(Lcom/flurry/sdk/ju;Lcom/flurry/sdk/hf;Ljava/lang/Object;Lcom/flurry/sdk/jv;)V
        //    20: aload_1        
        //    21: invokevirtual   com/flurry/sdk/hf.close:()V
        //    24: aload           4
        //    26: invokeinterface java/io/Closeable.close:()V
        //    31: return         
        //    32: astore          5
        //    34: aload           4
        //    36: astore          6
        //    38: aload           5
        //    40: astore          7
        //    42: aload_1        
        //    43: ifnull          50
        //    46: aload_1        
        //    47: invokevirtual   com/flurry/sdk/hf.close:()V
        //    50: aload           6
        //    52: ifnull          62
        //    55: aload           6
        //    57: invokeinterface java/io/Closeable.close:()V
        //    62: aload           7
        //    64: athrow         
        //    65: astore          9
        //    67: goto            50
        //    70: astore          8
        //    72: goto            62
        //    75: astore          10
        //    77: aload           10
        //    79: astore          7
        //    81: aload           4
        //    83: astore          6
        //    85: aconst_null    
        //    86: astore_1       
        //    87: goto            42
        //    90: astore          7
        //    92: aconst_null    
        //    93: astore          6
        //    95: aconst_null    
        //    96: astore_1       
        //    97: goto            42
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  6      20     32     42     Any
        //  20     24     75     90     Any
        //  24     31     90     100    Any
        //  46     50     65     70     Ljava/io/IOException;
        //  55     62     70     75     Ljava/io/IOException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 49, Size: 49
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private final void b(final hf p0, final Object p1, final ju p2) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_2        
        //     1: checkcast       Ljava/io/Closeable;
        //     4: astore          4
        //     6: aload_0        
        //     7: getfield        com/flurry/sdk/jq.i:Lcom/flurry/sdk/jw;
        //    10: aload_3        
        //    11: aload_1        
        //    12: aload_2        
        //    13: aload_0        
        //    14: getfield        com/flurry/sdk/jq.j:Lcom/flurry/sdk/jv;
        //    17: invokevirtual   com/flurry/sdk/jw.a:(Lcom/flurry/sdk/ju;Lcom/flurry/sdk/hf;Ljava/lang/Object;Lcom/flurry/sdk/jv;)V
        //    20: aload_3        
        //    21: getstatic       com/flurry/sdk/ju$a.p:Lcom/flurry/sdk/ju$a;
        //    24: invokevirtual   com/flurry/sdk/ju.a:(Lcom/flurry/sdk/ju$a;)Z
        //    27: ifeq            34
        //    30: aload_1        
        //    31: invokevirtual   com/flurry/sdk/hf.g:()V
        //    34: aload           4
        //    36: invokeinterface java/io/Closeable.close:()V
        //    41: return         
        //    42: astore          5
        //    44: aload           4
        //    46: astore          6
        //    48: aload           5
        //    50: astore          7
        //    52: aload           6
        //    54: ifnull          64
        //    57: aload           6
        //    59: invokeinterface java/io/Closeable.close:()V
        //    64: aload           7
        //    66: athrow         
        //    67: astore          8
        //    69: goto            64
        //    72: astore          7
        //    74: aconst_null    
        //    75: astore          6
        //    77: goto            52
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  6      34     42     52     Any
        //  34     41     72     80     Any
        //  57     64     67     72     Ljava/io/IOException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0034:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public hh a(final hj hj) {
        final iy b = this.b();
        hh hh;
        if (hj.e() == null && hj.b() == null) {
            hh = null;
        }
        else {
            hh = (hh)this.a(b, hj, jq.n);
            if (hh == null) {
                return this.c().a();
            }
        }
        return hh;
    }
    
    protected iz a(final hj hj, final iy iy) {
        return new ku(iy, hj, this.l, this.g);
    }
    
    protected jg a(final iy iy, final sh sh) {
        final jg jg = this.m.get(sh);
        if (jg != null) {
            return jg;
        }
        final jg b = this.l.b(iy, sh, null);
        if (b == null) {
            throw new jh("Can not find a deserializer for type " + sh);
        }
        this.m.put(sh, b);
        return b;
    }
    
    public jq a(final ju$a ju$a, final boolean b) {
        this.h.a(ju$a, b);
        return this;
    }
    
    public ju a() {
        return this.h.a(this.e);
    }
    
    protected Object a(final hj p0, final sh p1) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_0        
        //     1: aload_1        
        //     2: invokevirtual   com/flurry/sdk/jq.b:(Lcom/flurry/sdk/hj;)Lcom/flurry/sdk/hm;
        //     5: astore          5
        //     7: aload           5
        //     9: getstatic       com/flurry/sdk/hm.m:Lcom/flurry/sdk/hm;
        //    12: if_acmpne       40
        //    15: aload_0        
        //    16: aload_0        
        //    17: getfield        com/flurry/sdk/jq.k:Lcom/flurry/sdk/iy;
        //    20: aload_2        
        //    21: invokevirtual   com/flurry/sdk/jq.a:(Lcom/flurry/sdk/iy;Lcom/flurry/sdk/sh;)Lcom/flurry/sdk/jg;
        //    24: invokevirtual   com/flurry/sdk/jg.b:()Ljava/lang/Object;
        //    27: astore          6
        //    29: aload_1        
        //    30: invokevirtual   com/flurry/sdk/hj.f:()V
        //    33: aload_1        
        //    34: invokevirtual   com/flurry/sdk/hj.close:()V
        //    37: aload           6
        //    39: areturn        
        //    40: aload           5
        //    42: getstatic       com/flurry/sdk/hm.e:Lcom/flurry/sdk/hm;
        //    45: if_acmpeq       143
        //    48: aload           5
        //    50: getstatic       com/flurry/sdk/hm.c:Lcom/flurry/sdk/hm;
        //    53: if_acmpne       59
        //    56: goto            143
        //    59: aload_0        
        //    60: invokevirtual   com/flurry/sdk/jq.b:()Lcom/flurry/sdk/iy;
        //    63: astore          8
        //    65: aload_0        
        //    66: aload_1        
        //    67: aload           8
        //    69: invokevirtual   com/flurry/sdk/jq.a:(Lcom/flurry/sdk/hj;Lcom/flurry/sdk/iy;)Lcom/flurry/sdk/iz;
        //    72: astore          9
        //    74: aload_0        
        //    75: aload           8
        //    77: aload_2        
        //    78: invokevirtual   com/flurry/sdk/jq.a:(Lcom/flurry/sdk/iy;Lcom/flurry/sdk/sh;)Lcom/flurry/sdk/jg;
        //    81: astore          10
        //    83: aload           8
        //    85: getstatic       com/flurry/sdk/iy$a.p:Lcom/flurry/sdk/iy$a;
        //    88: invokevirtual   com/flurry/sdk/iy.a:(Lcom/flurry/sdk/iy$a;)Z
        //    91: ifeq            109
        //    94: aload_0        
        //    95: aload_1        
        //    96: aload_2        
        //    97: aload           9
        //    99: aload           10
        //   101: invokevirtual   com/flurry/sdk/jq.a:(Lcom/flurry/sdk/hj;Lcom/flurry/sdk/sh;Lcom/flurry/sdk/iz;Lcom/flurry/sdk/jg;)Ljava/lang/Object;
        //   104: astore          6
        //   106: goto            29
        //   109: aload           10
        //   111: aload_1        
        //   112: aload           9
        //   114: invokevirtual   com/flurry/sdk/jg.a:(Lcom/flurry/sdk/hj;Lcom/flurry/sdk/iz;)Ljava/lang/Object;
        //   117: astore          11
        //   119: aload           11
        //   121: astore          6
        //   123: goto            29
        //   126: astore_3       
        //   127: aload_1        
        //   128: invokevirtual   com/flurry/sdk/hj.close:()V
        //   131: aload_3        
        //   132: athrow         
        //   133: astore          7
        //   135: aload           6
        //   137: areturn        
        //   138: astore          4
        //   140: goto            131
        //   143: aconst_null    
        //   144: astore          6
        //   146: goto            29
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  0      29     126    133    Any
        //  29     33     126    133    Any
        //  33     37     133    138    Ljava/io/IOException;
        //  40     56     126    133    Any
        //  59     106    126    133    Any
        //  109    119    126    133    Any
        //  127    131    138    143    Ljava/io/IOException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 73, Size: 73
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    protected Object a(final hj hj, final sh sh, final iz iz, final jg jg) {
        final im a = this.l.a(iz.a(), sh);
        if (hj.e() != hm.b) {
            throw jh.a(hj, "Current token not START_OBJECT (needed to unwrap root name '" + a + "'), but " + hj.e());
        }
        if (hj.b() != hm.f) {
            throw jh.a(hj, "Current token not FIELD_NAME (to contain expected root name '" + a + "'), but " + hj.e());
        }
        final String g = hj.g();
        if (!a.a().equals(g)) {
            throw jh.a(hj, "Root name '" + g + "' does not match expected ('" + a + "') for type " + sh);
        }
        hj.b();
        final Object a2 = jg.a(hj, iz);
        if (hj.b() != hm.c) {
            throw jh.a(hj, "Current token not END_OBJECT (to match wrapper object with root name '" + a + "'), but " + hj.e());
        }
        return a2;
    }
    
    protected Object a(final iy iy, final hj hj, final sh sh) {
        final hm b = this.b(hj);
        Object o;
        if (b == hm.m) {
            o = this.a(iy, sh).b();
        }
        else if (b == hm.e || b == hm.c) {
            o = null;
        }
        else {
            final iz a = this.a(hj, iy);
            final jg a2 = this.a(iy, sh);
            if (iy.a(iy$a.p)) {
                o = this.a(hj, sh, a, a2);
            }
            else {
                o = a2.a(hj, a);
            }
        }
        hj.f();
        return o;
    }
    
    public Object a(final InputStream inputStream, final Class clazz) {
        return this.a(this.d.a(inputStream), this.f.a((Type)clazz));
    }
    
    public String a(final Object o) {
        final il il = new il(this.d.b());
        this.b(this.d.a(il), o);
        return il.a();
    }
    
    @Override
    public void a(final hf hf, final hh hh) {
        final ju a = this.a();
        this.i.a(a, hf, hh, this.j);
        if (a.a(ju$a.p)) {
            hf.g();
        }
    }
    
    @Override
    public void a(final hf hf, final Object o) {
        final ju a = this.a();
        if (a.a(ju$a.o) && o instanceof Closeable) {
            this.b(hf, o, a);
        }
        else {
            this.i.a(a, hf, o, this.j);
            if (a.a(ju$a.p)) {
                hf.g();
            }
        }
    }
    
    public void a(final jp jp) {
        if (jp.a() == null) {
            throw new IllegalArgumentException("Module without defined name");
        }
        if (jp.b() == null) {
            throw new IllegalArgumentException("Module without defined version");
        }
        jp.a(new jp$a() {
            @Override
            public void a(final ip ip) {
                jq.this.l = jq.this.l.a(ip);
            }
            
            @Override
            public void a(final jd jd) {
                jq.this.l = jq.this.l.a(jd);
            }
            
            @Override
            public void a(final jm jm) {
                jq.this.l = jq.this.l.a(jm);
            }
            
            @Override
            public void a(final jx jx) {
                jq.this.j = jq.this.j.a(jx);
            }
            
            @Override
            public void a(final ky ky) {
                jq.this.l = jq.this.l.a(ky);
            }
            
            @Override
            public void a(final Class clazz, final Class clazz2) {
                jq.this.k.a(clazz, clazz2);
                jq.this.h.a(clazz, clazz2);
            }
            
            @Override
            public void b(final jx jx) {
                jq.this.j = jq.this.j.b(jx);
            }
        });
    }
    
    public void a(final OutputStream outputStream, final Object o) {
        this.b(this.d.a(outputStream, hc.a), o);
    }
    
    protected hm b(final hj hj) {
        hm hm = hj.e();
        if (hm == null) {
            hm = hj.b();
            if (hm == null) {
                throw new EOFException("No content to map to Object due to end of input");
            }
        }
        return hm;
    }
    
    public iy b() {
        return this.k.a(this.e).a(this.h.i);
    }
    
    protected final void b(final hf hf, final Object o) {
        final ju a = this.a();
        if (a.a(ju$a.k)) {
            hf.a();
        }
        if (a.a(ju$a.o) && o instanceof Closeable) {
            this.a(hf, o, a);
            return;
        }
        boolean b = false;
        try {
            this.i.a(a, hf, o, this.j);
            b = true;
            hf.close();
        }
        finally {
            Label_0081: {
                if (b) {
                    break Label_0081;
                }
                try {
                    hf.close();
                }
                catch (IOException ex) {}
            }
        }
    }
    
    public rs c() {
        return this.k.h();
    }
}
