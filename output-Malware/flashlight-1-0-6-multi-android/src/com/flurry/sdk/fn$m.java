// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.io.IOException;
import java.io.Writer;
import java.io.StringWriter;
import java.util.LinkedHashSet;
import java.util.Iterator;
import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.IdentityHashMap;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import java.util.Map;

class fn$m
{
    private final String a;
    private final String b;
    private final String c;
    
    public fn$m(final String s, final String b) {
        if (s == null) {
            this.c = null;
            this.b = null;
            this.a = null;
            return;
        }
        final int lastIndex = s.lastIndexOf(46);
        if (lastIndex < 0) {
            this.b = b;
            this.a = h(s);
        }
        else {
            this.b = s.substring(0, lastIndex);
            this.a = h(s.substring(lastIndex + 1, s.length()));
        }
        String c;
        if (this.b == null) {
            c = this.a;
        }
        else {
            c = this.b + "." + this.a;
        }
        this.c = c;
    }
    
    public String a(final String s) {
        if (this.b == null || this.b.equals(s)) {
            return this.a;
        }
        return this.c;
    }
    
    public void a(final fn$o fn$o, final hf hf) {
        if (this.a != null) {
            hf.a("name", this.a);
        }
        if (this.b != null) {
            if (!this.b.equals(fn$o.a())) {
                hf.a("namespace", this.b);
            }
            if (fn$o.a() == null) {
                fn$o.a(this.b);
            }
        }
    }
    
    @Override
    public boolean equals(final Object o) {
        if (o != this) {
            if (!(o instanceof fn$m)) {
                return false;
            }
            final fn$m fn$m = (fn$m)o;
            if (this.c != null) {
                return this.c.equals(fn$m.c);
            }
            if (fn$m.c != null) {
                return false;
            }
        }
        return true;
    }
    
    @Override
    public int hashCode() {
        if (this.c == null) {
            return 0;
        }
        return this.c.hashCode();
    }
    
    @Override
    public String toString() {
        return this.c;
    }
}
