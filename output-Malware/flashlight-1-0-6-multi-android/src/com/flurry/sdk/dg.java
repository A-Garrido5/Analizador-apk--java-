// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import android.os.Looper;
import java.util.Iterator;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.io.File;
import java.util.LinkedHashMap;

public class dg
{
    static final Integer a;
    private static final String d;
    String b;
    LinkedHashMap c;
    
    static {
        d = dg.class.getSimpleName();
        a = 50;
    }
    
    public dg(final String s) {
        this.a(s);
    }
    
    private boolean a(final File file) {
        // monitorenter(this)
        boolean delete = false;
        if (file == null) {
            return delete;
        }
        try {
            final boolean exists = file.exists();
            delete = false;
            if (exists) {
                eo.a(4, dg.d, "Trying to delete persistence file : " + file.getAbsolutePath());
                delete = file.delete();
                if (delete) {
                    eo.a(4, dg.d, "Deleted persistence file");
                }
                else {
                    eo.a(6, dg.d, "Cannot delete persistence file");
                }
            }
            return delete;
        }
        finally {
        }
        // monitorexit(this)
    }
    
    private boolean a(final String p0, final List p1) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: iconst_0       
        //     1: istore_3       
        //     2: aload_0        
        //     3: monitorenter   
        //     4: invokestatic    android/os/Looper.myLooper:()Landroid/os/Looper;
        //     7: invokestatic    android/os/Looper.getMainLooper:()Landroid/os/Looper;
        //    10: if_acmpne       23
        //    13: bipush          6
        //    15: getstatic       com/flurry/sdk/dg.d:Ljava/lang/String;
        //    18: ldc             "saveToFile(byte[], ID) running on the MAIN thread!"
        //    20: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;)V
        //    23: invokestatic    com/flurry/sdk/do.a:()Lcom/flurry/sdk/do;
        //    26: invokevirtual   com/flurry/sdk/do.b:()Landroid/content/Context;
        //    29: new             Ljava/lang/StringBuilder;
        //    32: dup            
        //    33: ldc             ".FlurrySenderIndex.info."
        //    35: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    38: aload_1        
        //    39: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    42: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    45: invokevirtual   android/content/Context.getFileStreamPath:(Ljava/lang/String;)Ljava/io/File;
        //    48: astore          5
        //    50: aload           5
        //    52: invokestatic    com/flurry/sdk/fd.a:(Ljava/io/File;)Z
        //    55: istore          10
        //    57: iload           10
        //    59: ifne            70
        //    62: aconst_null    
        //    63: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //    66: aload_0        
        //    67: monitorexit    
        //    68: iload_3        
        //    69: ireturn        
        //    70: new             Ljava/io/DataOutputStream;
        //    73: dup            
        //    74: new             Ljava/io/FileOutputStream;
        //    77: dup            
        //    78: aload           5
        //    80: invokespecial   java/io/FileOutputStream.<init>:(Ljava/io/File;)V
        //    83: invokespecial   java/io/DataOutputStream.<init>:(Ljava/io/OutputStream;)V
        //    86: astore          7
        //    88: aload           7
        //    90: aload_2        
        //    91: invokeinterface java/util/List.size:()I
        //    96: invokevirtual   java/io/DataOutputStream.writeShort:(I)V
        //    99: iconst_0       
        //   100: istore          11
        //   102: iload           11
        //   104: aload_2        
        //   105: invokeinterface java/util/List.size:()I
        //   110: if_icmpge       188
        //   113: aload_2        
        //   114: iload           11
        //   116: invokeinterface java/util/List.get:(I)Ljava/lang/Object;
        //   121: checkcast       Ljava/lang/String;
        //   124: invokevirtual   java/lang/String.getBytes:()[B
        //   127: astore          12
        //   129: aload           12
        //   131: arraylength    
        //   132: istore          13
        //   134: iconst_4       
        //   135: getstatic       com/flurry/sdk/dg.d:Ljava/lang/String;
        //   138: new             Ljava/lang/StringBuilder;
        //   141: dup            
        //   142: ldc             "write iter "
        //   144: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   147: iload           11
        //   149: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   152: ldc             " dataLength = "
        //   154: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   157: iload           13
        //   159: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   162: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   165: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;)V
        //   168: aload           7
        //   170: iload           13
        //   172: invokevirtual   java/io/DataOutputStream.writeShort:(I)V
        //   175: aload           7
        //   177: aload           12
        //   179: invokevirtual   java/io/DataOutputStream.write:([B)V
        //   182: iinc            11, 1
        //   185: goto            102
        //   188: aload           7
        //   190: iconst_0       
        //   191: invokevirtual   java/io/DataOutputStream.writeShort:(I)V
        //   194: iconst_1       
        //   195: istore          9
        //   197: aload           7
        //   199: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   202: iload           9
        //   204: istore_3       
        //   205: goto            66
        //   208: astore          8
        //   210: aconst_null    
        //   211: astore          7
        //   213: bipush          6
        //   215: getstatic       com/flurry/sdk/dg.d:Ljava/lang/String;
        //   218: ldc             ""
        //   220: aload           8
        //   222: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   225: aload           7
        //   227: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   230: iconst_0       
        //   231: istore          9
        //   233: goto            202
        //   236: aload           7
        //   238: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   241: aload           6
        //   243: athrow         
        //   244: astore          4
        //   246: aload_0        
        //   247: monitorexit    
        //   248: aload           4
        //   250: athrow         
        //   251: astore          6
        //   253: goto            236
        //   256: astore          8
        //   258: goto            213
        //   261: astore          6
        //   263: aconst_null    
        //   264: astore          7
        //   266: goto            236
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  4      23     244    251    Any
        //  23     50     244    251    Any
        //  50     57     208    213    Ljava/lang/Throwable;
        //  50     57     261    269    Any
        //  62     66     244    251    Any
        //  70     88     208    213    Ljava/lang/Throwable;
        //  70     88     261    269    Any
        //  88     99     256    261    Ljava/lang/Throwable;
        //  88     99     251    256    Any
        //  102    182    256    261    Ljava/lang/Throwable;
        //  102    182    251    256    Any
        //  188    194    256    261    Ljava/lang/Throwable;
        //  188    194    251    256    Any
        //  197    202    244    251    Any
        //  213    225    251    256    Any
        //  225    230    244    251    Any
        //  236    244    244    251    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0102:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private void c() {
        synchronized (this) {
            final LinkedList list = new LinkedList(this.c.keySet());
            this.b();
            if (!list.isEmpty()) {
                this.a(this.b, list);
            }
        }
    }
    
    private List e(final String p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aconst_null    
        //     1: astore_2       
        //     2: aload_0        
        //     3: monitorenter   
        //     4: invokestatic    android/os/Looper.myLooper:()Landroid/os/Looper;
        //     7: invokestatic    android/os/Looper.getMainLooper:()Landroid/os/Looper;
        //    10: if_acmpne       23
        //    13: bipush          6
        //    15: getstatic       com/flurry/sdk/dg.d:Ljava/lang/String;
        //    18: ldc             "readFromFile(byte[], ID) running on the MAIN thread!"
        //    20: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;)V
        //    23: invokestatic    com/flurry/sdk/do.a:()Lcom/flurry/sdk/do;
        //    26: invokevirtual   com/flurry/sdk/do.b:()Landroid/content/Context;
        //    29: new             Ljava/lang/StringBuilder;
        //    32: dup            
        //    33: ldc             ".FlurrySenderIndex.info."
        //    35: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    38: aload_1        
        //    39: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    42: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    45: invokevirtual   android/content/Context.getFileStreamPath:(Ljava/lang/String;)Ljava/io/File;
        //    48: astore          4
        //    50: aload           4
        //    52: invokevirtual   java/io/File.exists:()Z
        //    55: istore          5
        //    57: iload           5
        //    59: ifeq            266
        //    62: new             Ljava/io/DataInputStream;
        //    65: dup            
        //    66: new             Ljava/io/FileInputStream;
        //    69: dup            
        //    70: aload           4
        //    72: invokespecial   java/io/FileInputStream.<init>:(Ljava/io/File;)V
        //    75: invokespecial   java/io/DataInputStream.<init>:(Ljava/io/InputStream;)V
        //    78: astore          7
        //    80: aload           7
        //    82: invokevirtual   java/io/DataInputStream.readUnsignedShort:()I
        //    85: istore          11
        //    87: iload           11
        //    89: ifne            101
        //    92: aload           7
        //    94: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //    97: aload_0        
        //    98: monitorexit    
        //    99: aload_2        
        //   100: areturn        
        //   101: new             Ljava/util/ArrayList;
        //   104: dup            
        //   105: iload           11
        //   107: invokespecial   java/util/ArrayList.<init>:(I)V
        //   110: astore          6
        //   112: iconst_0       
        //   113: istore          12
        //   115: iload           12
        //   117: iload           11
        //   119: if_icmpge       199
        //   122: aload           7
        //   124: invokevirtual   java/io/DataInputStream.readUnsignedShort:()I
        //   127: istore          14
        //   129: iconst_4       
        //   130: getstatic       com/flurry/sdk/dg.d:Ljava/lang/String;
        //   133: new             Ljava/lang/StringBuilder;
        //   136: dup            
        //   137: ldc             "read iter "
        //   139: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   142: iload           12
        //   144: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   147: ldc             " dataLength = "
        //   149: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   152: iload           14
        //   154: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   157: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   160: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;)V
        //   163: iload           14
        //   165: newarray        B
        //   167: astore          15
        //   169: aload           7
        //   171: aload           15
        //   173: invokevirtual   java/io/DataInputStream.readFully:([B)V
        //   176: aload           6
        //   178: new             Ljava/lang/String;
        //   181: dup            
        //   182: aload           15
        //   184: invokespecial   java/lang/String.<init>:([B)V
        //   187: invokeinterface java/util/List.add:(Ljava/lang/Object;)Z
        //   192: pop            
        //   193: iinc            12, 1
        //   196: goto            115
        //   199: aload           7
        //   201: invokevirtual   java/io/DataInputStream.readUnsignedShort:()I
        //   204: pop            
        //   205: aload           7
        //   207: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   210: aload           6
        //   212: astore_2       
        //   213: goto            97
        //   216: astore          17
        //   218: aconst_null    
        //   219: astore          7
        //   221: aconst_null    
        //   222: astore          6
        //   224: aload           17
        //   226: astore          9
        //   228: bipush          6
        //   230: getstatic       com/flurry/sdk/dg.d:Ljava/lang/String;
        //   233: ldc             "Error when loading persistent file"
        //   235: aload           9
        //   237: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   240: aload           7
        //   242: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   245: goto            210
        //   248: astore_3       
        //   249: aload_0        
        //   250: monitorexit    
        //   251: aload_3        
        //   252: athrow         
        //   253: astore          10
        //   255: aconst_null    
        //   256: astore          7
        //   258: aload           7
        //   260: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   263: aload           10
        //   265: athrow         
        //   266: iconst_5       
        //   267: getstatic       com/flurry/sdk/dg.d:Ljava/lang/String;
        //   270: ldc             "Agent cache file doesn't exist."
        //   272: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;)V
        //   275: aconst_null    
        //   276: astore          6
        //   278: goto            210
        //   281: astore          10
        //   283: goto            258
        //   286: astore          8
        //   288: aload           8
        //   290: astore          9
        //   292: aconst_null    
        //   293: astore          6
        //   295: goto            228
        //   298: astore          9
        //   300: goto            228
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  4      23     248    253    Any
        //  23     57     248    253    Any
        //  62     80     216    228    Ljava/lang/Throwable;
        //  62     80     253    258    Any
        //  80     87     286    298    Ljava/lang/Throwable;
        //  80     87     281    286    Any
        //  92     97     248    253    Any
        //  101    112    286    298    Ljava/lang/Throwable;
        //  101    112    281    286    Any
        //  122    193    298    303    Ljava/lang/Throwable;
        //  122    193    281    286    Any
        //  199    205    298    303    Ljava/lang/Throwable;
        //  199    205    281    286    Any
        //  205    210    248    253    Any
        //  228    240    281    286    Any
        //  240    245    248    253    Any
        //  258    266    248    253    Any
        //  266    275    248    253    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 140, Size: 140
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public List a() {
        return new ArrayList(this.c.keySet());
    }
    
    public void a(final df df, final String s) {
        while (true) {
            while (true) {
                final List<String> list;
                synchronized (this) {
                    eo.a(4, dg.d, "addBlockInfo");
                    final String a = df.a();
                    list = this.c.get(s);
                    if (list == null) {
                        eo.a(4, dg.d, "New Data Key");
                        final List<String> list2 = new LinkedList<String>();
                        final int n = 1;
                        list2.add(a);
                        if (list2.size() > dg.a) {
                            this.b(list2.get(0));
                            list2.remove(0);
                        }
                        this.c.put(s, list2);
                        this.a(s, list2);
                        if (n != 0) {
                            this.c();
                        }
                        return;
                    }
                }
                final List<String> list2 = list;
                final int n = 0;
                continue;
            }
        }
    }
    
    void a(final String s) {
        this.c = new LinkedHashMap();
        this.b = s + "Main";
        final List e = this.e(this.b);
        if (e != null) {
            for (final String s2 : e) {
                final List e2 = this.e(s2);
                if (e2 != null) {
                    this.c.put(s2, e2);
                }
            }
        }
    }
    
    public boolean a(final String s, final String s2) {
        final List list = this.c.get(s2);
        boolean remove = false;
        if (list != null) {
            this.b(s);
            remove = list.remove(s);
        }
        if (list != null && !list.isEmpty()) {
            this.c.put(s2, list);
            this.a(s2, list);
            return remove;
        }
        this.d(s2);
        return remove;
    }
    
    void b() {
        this.a(do.a().b().getFileStreamPath(".FlurrySenderIndex.info." + this.b));
    }
    
    boolean b(final String s) {
        return new df(s).c();
    }
    
    public List c(final String s) {
        return this.c.get(s);
    }
    
    public boolean d(final String s) {
        synchronized (this) {
            if (Looper.myLooper() == Looper.getMainLooper()) {
                eo.a(6, dg.d, "discardOutdatedBlocksForDataKey(ID) running on the MAIN thread!");
            }
            final File fileStreamPath = do.a().b().getFileStreamPath(".FlurrySenderIndex.info." + s);
            final List c = this.c(s);
            if (c != null) {
                eo.a(4, dg.d, "discardOutdatedBlocksForDataKey: notSentBlocks = " + c.size());
                for (int i = 0; i < c.size(); ++i) {
                    final String s2 = c.get(i);
                    this.b(s2);
                    eo.a(4, dg.d, "discardOutdatedBlocksForDataKey: removed block = " + s2);
                }
            }
            this.c.remove(s);
            final boolean a = this.a(fileStreamPath);
            this.c();
            return a;
        }
    }
}
