// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import android.view.KeyEvent;
import android.annotation.TargetApi;
import android.os.Build$VERSION;
import android.view.ViewParent;
import java.util.Collection;
import java.util.ArrayList;
import android.content.DialogInterface$OnClickListener;
import android.app.AlertDialog$Builder;
import android.view.View$OnClickListener;
import java.io.File;
import android.widget.RelativeLayout$LayoutParams;
import android.net.Uri;
import java.util.Collections;
import android.content.Intent;
import android.content.DialogInterface;
import android.content.DialogInterface$OnDismissListener;
import android.view.ViewGroup$LayoutParams;
import android.widget.FrameLayout$LayoutParams;
import java.util.Iterator;
import android.text.TextUtils;
import java.util.LinkedList;
import com.flurry.android.impl.ads.avro.protocol.v10.AdFrame;
import java.util.HashMap;
import android.app.Activity;
import com.flurry.android.impl.ads.avro.protocol.v10.AdUnit;
import com.flurry.android.impl.ads.FlurryAdModule;
import android.content.Context;
import com.flurry.android.FlurryFullscreenTakeoverActivity;
import android.widget.FrameLayout;
import android.app.Dialog;
import android.webkit.WebChromeClient$CustomViewCallback;
import android.view.View;
import android.webkit.WebChromeClient;
import android.webkit.WebViewClient;
import android.widget.Button;
import android.webkit.WebView;
import android.app.ProgressDialog;
import java.util.Map;
import java.util.List;
import android.app.AlertDialog;
import android.annotation.SuppressLint;
import android.content.DialogInterface$OnKeyListener;

@SuppressLint({ "SetJavaScriptEnabled" })
public class g extends i implements DialogInterface$OnKeyListener, ad
{
    private AlertDialog A;
    private List B;
    private boolean C;
    private Map D;
    private Map E;
    private List F;
    private boolean G;
    private boolean H;
    private boolean I;
    String a;
    private final String b;
    private final String c;
    private ProgressDialog d;
    private f e;
    private boolean f;
    private WebView g;
    private Button h;
    private int i;
    private boolean j;
    private WebViewClient k;
    private WebChromeClient l;
    private View m;
    private int n;
    private WebChromeClient$CustomViewCallback o;
    private Dialog p;
    private FrameLayout q;
    private int r;
    private Dialog s;
    private FrameLayout t;
    private boolean u;
    private boolean v;
    private boolean w;
    private boolean x;
    private boolean y;
    private FlurryFullscreenTakeoverActivity z;
    
    public g(final Context context, final FlurryAdModule flurryAdModule, final e e, final AdUnit adUnit, final int adFrameIndex) {
        super(context, flurryAdModule, e);
        this.b = g.class.getSimpleName();
        this.c = "mraid.js";
        this.a = null;
        this.G = false;
        this.H = false;
        this.setClickable(this.I = true);
        this.setAdUnit(adUnit);
        this.setAdFrameIndex(adFrameIndex);
        if (this.getContext() instanceof Activity) {
            this.i = ((Activity)this.getContext()).getRequestedOrientation();
        }
        if (this.getAdUnit() != null) {
            this.B = this.getAdUnit().d();
            this.w = this.getAdUnit().r();
            this.C = (this.getAdUnit().e() == 1);
            if (this.C) {
                this.E = new HashMap();
                this.D = new HashMap();
                this.E.put(e.b(), e);
                this.D.put(adUnit.d().get(0).g().toString(), adUnit);
            }
            this.F = new LinkedList();
            return;
        }
        eo.a(3, this.b, "adunit is Null");
    }
    
    private boolean A() {
        eo.a(3, "viewAttached", "fViewAttachedToActivity =" + this.G);
        return this.G;
    }
    
    private void B() {
        if (this.d != null && this.d.isShowing()) {
            this.d.dismiss();
            this.d = null;
        }
    }
    
    private String a(final List list, final String s) {
        final StringBuilder sb = new StringBuilder();
        sb.append("'{\"adComponents\":[");
        final String url = this.g.getUrl();
        final String b = cf.b(url);
        final String a = cf.a(b, url);
        final Iterator<AdUnit> iterator = list.iterator();
        while (iterator.hasNext()) {
            String s2 = iterator.next().d().get(0).d().toString();
            if (!TextUtils.isEmpty((CharSequence)s2) && !TextUtils.isEmpty((CharSequence)a) && a != b) {
                s2 = s2.replace(b, a);
            }
            sb.append(fe.e(s2));
            if (iterator.hasNext()) {
                sb.append(",");
            }
        }
        sb.append("]}'");
        return sb.toString();
    }
    
    private List a(final String s, final int n, final int n2) {
        final List a = this.getPlatformModule().d().a(this.getAdUnit().b().toString(), n, n2);
        for (final AdUnit adUnit : a) {
            if (adUnit.d().size() > 0) {
                this.D.put(((AdFrame)adUnit.d().get(0)).g().toString(), adUnit);
            }
        }
        return a;
    }
    
    private void a(final int n, final int n2) {
        if (!(this.getContext() instanceof Activity)) {
            eo.a(3, this.b, "no activity present");
        }
        else {
            final Activity activity = (Activity)this.getContext();
            if (this.s == null) {
                eo.a(3, this.b, "expand(" + n + "," + n2 + ")");
                if (this.g != null && -1 != this.indexOfChild((View)this.g)) {
                    this.removeView((View)this.g);
                }
                this.r = activity.getRequestedOrientation();
                if (this.t == null) {
                    (this.t = new FrameLayout((Context)activity)).setBackgroundColor(-16777216);
                    if (this.g != null && this.g.getParent() == null) {
                        this.t.addView((View)this.g, (ViewGroup$LayoutParams)new FrameLayout$LayoutParams(-1, -1, 17));
                    }
                }
                if (this.s == null) {
                    this.s = new Dialog((Context)activity, 16973834);
                    ch.a(this.s.getWindow());
                    this.s.setContentView((View)this.t, new ViewGroup$LayoutParams(-1, -1));
                    this.s.setOnDismissListener((DialogInterface$OnDismissListener)new DialogInterface$OnDismissListener() {
                        public void onDismiss(final DialogInterface dialogInterface) {
                            eo.a(3, com.flurry.sdk.g.this.b, "extendedWebViewDialog.onDismiss()");
                            if (com.flurry.sdk.g.this.g != null) {
                                com.flurry.sdk.g.this.g.loadUrl("javascript:if(window.mraid){window.mraid.close();};");
                            }
                        }
                    });
                    this.s.setCancelable(true);
                    this.s.show();
                }
                cb.a(activity, cb.a(), true);
                this.getPlatformModule().a((Context)activity, this.getAdUnit().b().toString());
            }
        }
    }
    
    private void a(final Context context) {
        if (this.d == null) {
            if (context == null) {
                eo.a(3, this.b, "Context is null, cannot create progress dialog.");
                return;
            }
            (this.d = new ProgressDialog(context)).setProgressStyle(0);
            this.d.setMessage((CharSequence)"Loading...");
            this.d.setCancelable(true);
            this.d.setCanceledOnTouchOutside(false);
            this.d.setOnKeyListener((DialogInterface$OnKeyListener)this);
            this.d.show();
        }
        else if (!this.d.isShowing()) {
            this.d.show();
        }
    }
    
    private void a(final a a) {
        if (this.F.contains(a.c.a) && this.g != null) {
            this.g.loadUrl("javascript:flurryadapter.callComplete('" + a.c.a + "');");
            this.F.remove(a.c.a);
        }
    }
    
    private void a(final a a, final int n) {
        if (!this.C) {
            if (n != this.getAdFrameIndex() && n < this.B.size()) {
                final AdFrame adFrame = this.getAdUnit().d().get(n);
                final e a2 = this.getPlatformModule().a(adFrame.g().toString());
                final String currentFormat = this.getCurrentFormat();
                final String string = adFrame.e().e().toString();
                if (string.equals(currentFormat)) {
                    this.setAdLog(a2);
                    this.setAdFrameIndex(n);
                    this.initLayout();
                    return;
                }
                if (string.equals("takeover")) {
                    this.getPlatformModule().a(a2);
                    this.getPlatformModule().a(this.getAdUnit());
                    final Intent intent = new Intent(do.a().b(), (Class)FlurryFullscreenTakeoverActivity.class);
                    intent.putExtra("frameIndex", n);
                    this.getPlatformModule().a().a(this.getContext(), intent, this.getAdUnit().b().toString());
                }
            }
        }
        else {
            final String s = a.c.b.get("guid");
            if (s != null) {
                this.setAdUnit(this.c(s));
                this.B = this.getAdUnit().d();
                final e a3 = this.getPlatformModule().a(this.getAdUnit().d().get(n).g().toString());
                this.setAdLog(a.c.d);
                if (this.e()) {
                    this.getPlatformModule().a(this.getAdUnit());
                    this.getPlatformModule().a(a3);
                }
                this.setAdLog(a3);
                this.setAdFrameIndex(n);
                this.C = false;
                this.initLayout();
            }
        }
    }
    
    private void a(final String s) {
        final el el = new el();
        el.a(s);
        el.b(new ey());
        el.a(new el$a() {
            public void a(final el el, final String s) {
                eo.a(3, com.flurry.sdk.g.this.b, "Prerender: HTTP status code is:" + el.e() + " for url: " + s);
                if (el.c()) {
                    final String c = cf.c(s);
                    com.flurry.sdk.g.this.a("rendered", Collections.emptyMap(), com.flurry.sdk.g.this.getAdUnit(), com.flurry.sdk.g.this.getAdLog(), com.flurry.sdk.g.this.getAdFrameIndex(), 0);
                    do.a().a(new ff() {
                        @Override
                        public void a() {
                            if (g.this.g != null) {
                                g.this.g.loadDataWithBaseURL(c, s, "text/html", "utf-8", c);
                            }
                        }
                    });
                    return;
                }
                do.a().a(new ff() {
                    @Override
                    public void a() {
                        final HashMap<String, String> hashMap = new HashMap<String, String>();
                        hashMap.put("errorCode", Integer.toString(com.flurry.sdk.b.k.a()));
                        g.this.a("renderFailed", hashMap, g.this.getAdUnit(), g.this.getAdLog(), g.this.getAdFrameIndex(), 0);
                    }
                });
            }
        });
        em.a().a(this, el);
    }
    
    private void a(final String s, final boolean b) {
        boolean b2 = true;
        if (s == null) {
            return;
        }
        final Context context = this.getContext();
        final long longValue = this.getAdUnit().m();
        final boolean booleanValue = this.getAdUnit().q();
        final am c = this.getPlatformModule().c(this.B.get(this.getAdFrameIndex()).g().toString());
        final int a = c.a();
        if (this.e == null) {
            final z z = new z(context, longValue, booleanValue, b2, b);
            z.setVideoState(c);
            this.e = new f(context, this, this.getFullScreenTakeover(), z);
        }
        if (this.z != null) {
            this.z.setVideoOrientation();
        }
        while (true) {
            while (true) {
                try {
                    eo.a(3, this.b, "Precaching: Getting video from cache: " + s);
                    final File a2 = ap.a().a(s);
                    if (a2 != null) {
                        this.e.a(Uri.parse("file://" + a2.getAbsolutePath()), a);
                        if (!b2) {
                            eo.a(3, this.b, "Precaching: Error using cached file. Loading with url: " + s);
                            this.e.a(Uri.parse(s), a);
                        }
                        this.e.a();
                        this.e.setLayoutParams((ViewGroup$LayoutParams)new RelativeLayout$LayoutParams(-1, -1));
                        this.addView((View)this.e);
                        return;
                    }
                }
                catch (Exception ex) {
                    eo.a(3, this.b, "Precaching: Error accessing cached file.", ex);
                }
                b2 = false;
                continue;
            }
        }
    }
    
    private e b(final String s) {
        e e;
        if (this.E == null) {
            e = null;
        }
        else {
            e = this.E.get(s);
            if (e == null) {
                final e a = this.getPlatformModule().a(s);
                this.E.put(s, a);
                return a;
            }
        }
        return e;
    }
    
    private void b(final int n, final int n2) {
        if (!(this.getContext() instanceof Activity)) {
            eo.a(3, this.b, "no activity present");
        }
        else {
            final Activity activity = (Activity)this.getContext();
            if (this.s != null) {
                eo.a(3, this.b, "collapse(" + n + "," + n2 + ")");
                if (this.s != null && this.s.isShowing()) {
                    this.s.hide();
                    this.s.setOnDismissListener((DialogInterface$OnDismissListener)null);
                    this.s.dismiss();
                }
                this.s = null;
                cb.a(activity, this.r);
                if (this.t != null) {
                    if (this.g != null && -1 != this.t.indexOfChild((View)this.g)) {
                        this.t.removeView((View)this.g);
                    }
                    this.t = null;
                }
                if (this.g != null && this.g.getParent() == null) {
                    this.addView((View)this.g);
                }
                this.getPlatformModule().b((Context)activity, this.getAdUnit().b().toString());
            }
        }
    }
    
    private AdUnit c(final String s) {
        if (this.D == null) {
            return null;
        }
        return this.D.get(s);
    }
    
    private boolean h() {
        synchronized (this) {
            return this.j;
        }
    }
    
    private void i() {
        synchronized (this) {
            if (!this.h()) {
                this.k();
                this.setFlurryJsEnvInitialized(true);
            }
        }
    }
    
    private void j() {
        synchronized (this) {
            this.setFlurryJsEnvInitialized(false);
        }
    }
    
    private void k() {
        eo.a(3, this.b, "initializeFlurryJsEnv");
        final StringBuilder sb = new StringBuilder();
        sb.append("javascript:(function() {");
        sb.append("var Hogan={};(function(Hogan,useArrayBuffer){Hogan.Template=function(renderFunc,text,compiler,options){this.r=renderFunc||this.r;this.c=compiler;this.options=options;this.text=text||\"\";this.buf=useArrayBuffer?[]:\"\"};Hogan.Template.prototype={r:function(context,partials,indent){return\"\"},v:hoganEscape,t:coerceToString,render:function render(context,partials,indent){return this.ri([context],partials||{},indent)},ri:function(context,partials,indent){return this.r(context,partials,indent)},rp:function(name,context,partials,indent){var partial=partials[name];if(!partial){return\"\"}if(this.c&&typeof partial==\"string\"){partial=this.c.compile(partial,this.options)}return partial.ri(context,partials,indent)},rs:function(context,partials,section){var tail=context[context.length-1];if(!isArray(tail)){section(context,partials,this);return}for(var i=0;i<tail.length;i++){context.push(tail[i]);section(context,partials,this);context.pop()}},s:function(val,ctx,partials,inverted,start,end,tags){var pass;if(isArray(val)&&val.length===0){return false}if(typeof val==\"function\"){val=this.ls(val,ctx,partials,inverted,start,end,tags)}pass=(val===\"\")||!!val;if(!inverted&&pass&&ctx){ctx.push((typeof val==\"object\")?val:ctx[ctx.length-1])}return pass},d:function(key,ctx,partials,returnFound){var names=key.split(\".\"),val=this.f(names[0],ctx,partials,returnFound),cx=null;if(key===\".\"&&isArray(ctx[ctx.length-2])){return ctx[ctx.length-1]}for(var i=1;i<names.length;i++){if(val&&typeof val==\"object\"&&names[i] in val){cx=val;val=val[names[i]]}else{val=\"\"}}if(returnFound&&!val){return false}if(!returnFound&&typeof val==\"function\"){ctx.push(cx);val=this.lv(val,ctx,partials);ctx.pop()}return val},f:function(key,ctx,partials,returnFound){var val=false,v=null,found=false;for(var i=ctx.length-1;i>=0;i--){v=ctx[i];if(v&&typeof v==\"object\"&&key in v){val=v[key];found=true;break}}if(!found){return(returnFound)?false:\"\"}if(!returnFound&&typeof val==\"function\"){val=this.lv(val,ctx,partials)}return val},ho:function(val,cx,partials,text,tags){var compiler=this.c;var options=this.options;options.delimiters=tags;var text=val.call(cx,text);text=(text==null)?String(text):text.toString();this.b(compiler.compile(text,options).render(cx,partials));return false},b:(useArrayBuffer)?function(s){this.buf.push(s)}:function(s){this.buf+=s},fl:(useArrayBuffer)?function(){var r=this.buf.join(\"\");this.buf=[];return r}:function(){var r=this.buf;this.buf=\"\";return r},ls:function(val,ctx,partials,inverted,start,end,tags){var cx=ctx[ctx.length-1],t=null;if(!inverted&&this.c&&val.length>0){return this.ho(val,cx,partials,this.text.substring(start,end),tags)}t=val.call(cx);if(typeof t==\"function\"){if(inverted){return true}else{if(this.c){return this.ho(t,cx,partials,this.text.substring(start,end),tags)}}}return t},lv:function(val,ctx,partials){var cx=ctx[ctx.length-1];var result=val.call(cx);if(typeof result==\"function\"){result=coerceToString(result.call(cx));if(this.c&&~result.indexOf(\"{\\u007B\")){return this.c.compile(result,this.options).render(cx,partials)}}return coerceToString(result)}};var rAmp=/&/g,rLt=/</g,rGt=/>/g,rApos=/\\'/g,rQuot=/\\\"/g,hChars=/[&<>\\\"\\']/;function coerceToString(val){return String((val===null||val===undefined)?\"\":val)}function hoganEscape(str){str=coerceToString(str);return hChars.test(str)?str.replace(rAmp,\"&amp;\").replace(rLt,\"&lt;\").replace(rGt,\"&gt;\").replace(rApos,\"&#39;\").replace(rQuot,\"&quot;\"):str}var isArray=Array.isArray||function(a){return Object.prototype.toString.call(a)===\"[object Array]\"}})(typeof exports!==\"undefined\"?exports:Hogan);(function(Hogan){var rIsWhitespace=/\\S/,rQuot=/\\\"/g,rNewline=/\\n/g,rCr=/\\r/g,rSlash=/\\\\/g,tagTypes={\"#\":1,\"^\":2,\"/\":3,\"!\":4,\">\":5,\"<\":6,\"=\":7,_v:8,\"{\":9,\"&\":10};Hogan.scan=function scan(text,delimiters){var len=text.length,IN_TEXT=0,IN_TAG_TYPE=1,IN_TAG=2,state=IN_TEXT,tagType=null,tag=null,buf=\"\",tokens=[],seenTag=false,i=0,lineStart=0,otag=\"{{\",ctag=\"}}\";function addBuf(){if(buf.length>0){tokens.push(new String(buf));buf=\"\"}}function lineIsWhitespace(){var isAllWhitespace=true;for(var j=lineStart;j<tokens.length;j++){isAllWhitespace=(tokens[j].tag&&tagTypes[tokens[j].tag]<tagTypes._v)||(!tokens[j].tag&&tokens[j].match(rIsWhitespace)===null);if(!isAllWhitespace){return false}}return isAllWhitespace}function filterLine(haveSeenTag,noNewLine){addBuf();if(haveSeenTag&&lineIsWhitespace()){for(var j=lineStart,next;j<tokens.length;j++){if(!tokens[j].tag){if((next=tokens[j+1])&&next.tag==\">\"){next.indent=tokens[j].toString()}tokens.splice(j,1)}}}else{if(!noNewLine){tokens.push({tag:\"\\n\"})}}seenTag=false;lineStart=tokens.length}function changeDelimiters(text,index){var close=\"=\"+ctag,closeIndex=text.indexOf(close,index),delimiters=trim(text.substring(text.indexOf(\"=\",index)+1,closeIndex)).split(\" \");otag=delimiters[0];ctag=delimiters[1];return closeIndex+close.length-1}if(delimiters){delimiters=delimiters.split(\" \");otag=delimiters[0];ctag=delimiters[1]}for(i=0;i<len;i++){if(state==IN_TEXT){if(tagChange(otag,text,i)){--i;addBuf();state=IN_TAG_TYPE}else{if(text.charAt(i)==\"\\n\"){filterLine(seenTag)}else{buf+=text.charAt(i)}}}else{if(state==IN_TAG_TYPE){i+=otag.length-1;tag=tagTypes[text.charAt(i+1)];tagType=tag?text.charAt(i+1):\"_v\";if(tagType==\"=\"){i=changeDelimiters(text,i);state=IN_TEXT}else{if(tag){i++}state=IN_TAG}seenTag=i}else{if(tagChange(ctag,text,i)){tokens.push({tag:tagType,n:trim(buf),otag:otag,ctag:ctag,i:(tagType==\"/\")?seenTag-ctag.length:i+otag.length});buf=\"\";i+=ctag.length-1;state=IN_TEXT;if(tagType==\"{\"){if(ctag==\"}}\"){i++}else{cleanTripleStache(tokens[tokens.length-1])}}}else{buf+=text.charAt(i)}}}}filterLine(seenTag,true);return tokens};function cleanTripleStache(token){if(token.n.substr(token.n.length-1)===\"}\"){token.n=token.n.substring(0,token.n.length-1)}}function trim(s){if(s.trim){return s.trim()}return s.replace(/^\\s*|\\s*$/g,\"\")}function tagChange(tag,text,index){if(text.charAt(index)!=tag.charAt(0)){return false}for(var i=1,l=tag.length;i<l;i++){if(text.charAt(index+i)!=tag.charAt(i)){return false}}return true}function buildTree(tokens,kind,stack,customTags){var instructions=[],opener=null,token=null;while(tokens.length>0){token=tokens.shift();if(token.tag==\"#\"||token.tag==\"^\"||isOpener(token,customTags)){stack.push(token);token.nodes=buildTree(tokens,token.tag,stack,customTags);instructions.push(token)}else{if(token.tag==\"/\"){if(stack.length===0){throw new Error(\"Closing tag without opener: /\"+token.n)}opener=stack.pop();if(token.n!=opener.n&&!isCloser(token.n,opener.n,customTags)){throw new Error(\"Nesting error: \"+opener.n+\" vs. \"+token.n)}opener.end=token.i;return instructions}else{instructions.push(token)}}}if(stack.length>0){throw new Error(\"missing closing tag: \"+stack.pop().n)}return instructions}function isOpener(token,tags){for(var i=0,l=tags.length;i<l;i++){if(tags[i].o==token.n){token.tag=\"#\";return true}}}function isCloser(close,open,tags){for(var i=0,l=tags.length;i<l;i++){if(tags[i].c==close&&tags[i].o==open){return true}}}Hogan.generate=function(tree,text,options){var code='var _=this;_.b(i=i||\"\");'+walk(tree)+\"return _.fl();\";if(options.asString){return\"function(c,p,i){\"+code+\";}\"}return new Hogan.Template(new Function(\"c\",\"p\",\"i\",code),text,Hogan,options)};function esc(s){return s.replace(rSlash,\"\\\\\\\\\").replace(rQuot,'\\\\\"').replace(rNewline,\"\\\\n\").replace(rCr,\"\\\\r\")}function chooseMethod(s){return(~s.indexOf(\".\"))?\"d\":\"f\"}function walk(tree){var code=\"\";for(var i=0,l=tree.length;i<l;i++){var tag=tree[i].tag;if(tag==\"#\"){code+=section(tree[i].nodes,tree[i].n,chooseMethod(tree[i].n),tree[i].i,tree[i].end,tree[i].otag+\" \"+tree[i].ctag)}else{if(tag==\"^\"){code+=invertedSection(tree[i].nodes,tree[i].n,chooseMethod(tree[i].n))}else{if(tag==\"<\"||tag==\">\"){code+=partial(tree[i])}else{if(tag==\"{\"||tag==\"&\"){code+=tripleStache(tree[i].n,chooseMethod(tree[i].n))}else{if(tag==\"\\n\"){code+=text('\"\\\\n\"'+(tree.length-1==i?\"\":\" + i\"))}else{if(tag==\"_v\"){code+=variable(tree[i].n,chooseMethod(tree[i].n))}else{if(tag===undefined){code+=text('\"'+esc(tree[i])+'\"')}}}}}}}}return code}function section(nodes,id,method,start,end,tags){return\"if(_.s(_.\"+method+'(\"'+esc(id)+'\",c,p,1),c,p,0,'+start+\",\"+end+',\"'+tags+'\")){_.rs(c,p,function(c,p,_){'+walk(nodes)+\"});c.pop();}\"}function invertedSection(nodes,id,method){return\"if(!_.s(_.\"+method+'(\"'+esc(id)+'\",c,p,1),c,p,1,0,0,\"\")){'+walk(nodes)+\"};\"}function partial(tok){return'_.b(_.rp(\"'+esc(tok.n)+'\",c,p,\"'+(tok.indent||\"\")+'\"));'}function tripleStache(id,method){return\"_.b(_.t(_.\"+method+'(\"'+esc(id)+'\",c,p,0)));'}function variable(id,method){return\"_.b(_.v(_.\"+method+'(\"'+esc(id)+'\",c,p,0)));'}function text(id){return\"_.b(\"+id+\");\"}Hogan.parse=function(tokens,text,options){options=options||{};return buildTree(tokens,\"\",[],options.sectionTags||[])},Hogan.cache={};Hogan.compile=function(text,options){options=options||{};var key=text+\"||\"+!!options.asString;var t=this.cache[key];if(t){return t}t=this.generate(this.parse(this.scan(text,options.delimiters),text,options),text,options);return this.cache[key]=t}})(typeof exports!==\"undefined\"?exports:Hogan);");
        sb.append("var flurryBridgeCtor=function(w){var flurryadapter={};flurryadapter.flurryCallQueue=[];flurryadapter.flurryCallInProgress=false;flurryadapter.callComplete=function(cmd){if(this.flurryCallQueue.length==0){this.flurryCallInProgress=false;return}var adapterCall=this.flurryCallQueue.splice(0,1)[0];this.executeNativeCall(adapterCall);return\"OK\"};flurryadapter.executeCall=function(command){var adapterCall=\"flurry://flurrycall?event=\"+command;var value;for(var i=1;i<arguments.length;i+=2){value=arguments[i+1];if(value==null)continue;adapterCall+=\"&\"+arguments[i]+\"=\"+escape(value)}if(this.flurryCallInProgress)this.flurryCallQueue.push(adapterCall);else this.executeNativeCall(adapterCall)};flurryadapter.executeNativeCall=function(adapterCall){if(adapterCall.length==0)return;this.flurryCallInProgress=true;w.location=adapterCall};return flurryadapter};");
        sb.append("window.Hogan=Hogan;window.flurryadapter=flurryBridgeCtor(window);");
        sb.append("window.flurryAdapterAvailable=true;if(typeof window.FlurryAdapterReady === 'function'){window.FlurryAdapterReady();}");
        sb.append("})();");
        if (this.g != null) {
            this.g.loadUrl(sb.toString());
        }
    }
    
    private void l() {
        eo.a(3, this.b, "activateFlurryJsEnv");
        String s = this.getCurrentContent();
        if (!this.C && s != null && s.length() > 0 && !s.equals("{}")) {
            final String url = this.g.getUrl();
            final String b = cf.b(url);
            final String a = cf.a(b, url);
            if (!TextUtils.isEmpty((CharSequence)a) && a != b) {
                eo.a(3, this.b, "content before {{mustached}} tags replacement = '" + s + "'");
                s = s.replace(b, a);
                eo.a(3, this.b, "content after {{mustached}} tags replacement = '" + s + "'");
            }
            final StringBuilder sb = new StringBuilder();
            sb.append("javascript:");
            sb.append("(function(){");
            sb.append("if(!window.Hogan){var Hogan={};(function(Hogan,useArrayBuffer){Hogan.Template=function(renderFunc,text,compiler,options){this.r=renderFunc||this.r;this.c=compiler;this.options=options;this.text=text||\"\";this.buf=useArrayBuffer?[]:\"\"};Hogan.Template.prototype={r:function(context,partials,indent){return\"\"},v:hoganEscape,t:coerceToString,render:function render(context,partials,indent){return this.ri([context],partials||{},indent)},ri:function(context,partials,indent){return this.r(context,partials,indent)},rp:function(name,context,partials,indent){var partial=partials[name];if(!partial){return\"\"}if(this.c&&typeof partial==\"string\"){partial=this.c.compile(partial,this.options)}return partial.ri(context,partials,indent)},rs:function(context,partials,section){var tail=context[context.length-1];if(!isArray(tail)){section(context,partials,this);return}for(var i=0;i<tail.length;i++){context.push(tail[i]);section(context,partials,this);context.pop()}},s:function(val,ctx,partials,inverted,start,end,tags){var pass;if(isArray(val)&&val.length===0){return false}if(typeof val==\"function\"){val=this.ls(val,ctx,partials,inverted,start,end,tags)}pass=(val===\"\")||!!val;if(!inverted&&pass&&ctx){ctx.push((typeof val==\"object\")?val:ctx[ctx.length-1])}return pass},d:function(key,ctx,partials,returnFound){var names=key.split(\".\"),val=this.f(names[0],ctx,partials,returnFound),cx=null;if(key===\".\"&&isArray(ctx[ctx.length-2])){return ctx[ctx.length-1]}for(var i=1;i<names.length;i++){if(val&&typeof val==\"object\"&&names[i] in val){cx=val;val=val[names[i]]}else{val=\"\"}}if(returnFound&&!val){return false}if(!returnFound&&typeof val==\"function\"){ctx.push(cx);val=this.lv(val,ctx,partials);ctx.pop()}return val},f:function(key,ctx,partials,returnFound){var val=false,v=null,found=false;for(var i=ctx.length-1;i>=0;i--){v=ctx[i];if(v&&typeof v==\"object\"&&key in v){val=v[key];found=true;break}}if(!found){return(returnFound)?false:\"\"}if(!returnFound&&typeof val==\"function\"){val=this.lv(val,ctx,partials)}return val},ho:function(val,cx,partials,text,tags){var compiler=this.c;var options=this.options;options.delimiters=tags;var text=val.call(cx,text);text=(text==null)?String(text):text.toString();this.b(compiler.compile(text,options).render(cx,partials));return false},b:(useArrayBuffer)?function(s){this.buf.push(s)}:function(s){this.buf+=s},fl:(useArrayBuffer)?function(){var r=this.buf.join(\"\");this.buf=[];return r}:function(){var r=this.buf;this.buf=\"\";return r},ls:function(val,ctx,partials,inverted,start,end,tags){var cx=ctx[ctx.length-1],t=null;if(!inverted&&this.c&&val.length>0){return this.ho(val,cx,partials,this.text.substring(start,end),tags)}t=val.call(cx);if(typeof t==\"function\"){if(inverted){return true}else{if(this.c){return this.ho(t,cx,partials,this.text.substring(start,end),tags)}}}return t},lv:function(val,ctx,partials){var cx=ctx[ctx.length-1];var result=val.call(cx);if(typeof result==\"function\"){result=coerceToString(result.call(cx));if(this.c&&~result.indexOf(\"{\\u007B\")){return this.c.compile(result,this.options).render(cx,partials)}}return coerceToString(result)}};var rAmp=/&/g,rLt=/</g,rGt=/>/g,rApos=/\\'/g,rQuot=/\\\"/g,hChars=/[&<>\\\"\\']/;function coerceToString(val){return String((val===null||val===undefined)?\"\":val)}function hoganEscape(str){str=coerceToString(str);return hChars.test(str)?str.replace(rAmp,\"&amp;\").replace(rLt,\"&lt;\").replace(rGt,\"&gt;\").replace(rApos,\"&#39;\").replace(rQuot,\"&quot;\"):str}var isArray=Array.isArray||function(a){return Object.prototype.toString.call(a)===\"[object Array]\"}})(typeof exports!==\"undefined\"?exports:Hogan);(function(Hogan){var rIsWhitespace=/\\S/,rQuot=/\\\"/g,rNewline=/\\n/g,rCr=/\\r/g,rSlash=/\\\\/g,tagTypes={\"#\":1,\"^\":2,\"/\":3,\"!\":4,\">\":5,\"<\":6,\"=\":7,_v:8,\"{\":9,\"&\":10};Hogan.scan=function scan(text,delimiters){var len=text.length,IN_TEXT=0,IN_TAG_TYPE=1,IN_TAG=2,state=IN_TEXT,tagType=null,tag=null,buf=\"\",tokens=[],seenTag=false,i=0,lineStart=0,otag=\"{{\",ctag=\"}}\";function addBuf(){if(buf.length>0){tokens.push(new String(buf));buf=\"\"}}function lineIsWhitespace(){var isAllWhitespace=true;for(var j=lineStart;j<tokens.length;j++){isAllWhitespace=(tokens[j].tag&&tagTypes[tokens[j].tag]<tagTypes._v)||(!tokens[j].tag&&tokens[j].match(rIsWhitespace)===null);if(!isAllWhitespace){return false}}return isAllWhitespace}function filterLine(haveSeenTag,noNewLine){addBuf();if(haveSeenTag&&lineIsWhitespace()){for(var j=lineStart,next;j<tokens.length;j++){if(!tokens[j].tag){if((next=tokens[j+1])&&next.tag==\">\"){next.indent=tokens[j].toString()}tokens.splice(j,1)}}}else{if(!noNewLine){tokens.push({tag:\"\\n\"})}}seenTag=false;lineStart=tokens.length}function changeDelimiters(text,index){var close=\"=\"+ctag,closeIndex=text.indexOf(close,index),delimiters=trim(text.substring(text.indexOf(\"=\",index)+1,closeIndex)).split(\" \");otag=delimiters[0];ctag=delimiters[1];return closeIndex+close.length-1}if(delimiters){delimiters=delimiters.split(\" \");otag=delimiters[0];ctag=delimiters[1]}for(i=0;i<len;i++){if(state==IN_TEXT){if(tagChange(otag,text,i)){--i;addBuf();state=IN_TAG_TYPE}else{if(text.charAt(i)==\"\\n\"){filterLine(seenTag)}else{buf+=text.charAt(i)}}}else{if(state==IN_TAG_TYPE){i+=otag.length-1;tag=tagTypes[text.charAt(i+1)];tagType=tag?text.charAt(i+1):\"_v\";if(tagType==\"=\"){i=changeDelimiters(text,i);state=IN_TEXT}else{if(tag){i++}state=IN_TAG}seenTag=i}else{if(tagChange(ctag,text,i)){tokens.push({tag:tagType,n:trim(buf),otag:otag,ctag:ctag,i:(tagType==\"/\")?seenTag-ctag.length:i+otag.length});buf=\"\";i+=ctag.length-1;state=IN_TEXT;if(tagType==\"{\"){if(ctag==\"}}\"){i++}else{cleanTripleStache(tokens[tokens.length-1])}}}else{buf+=text.charAt(i)}}}}filterLine(seenTag,true);return tokens};function cleanTripleStache(token){if(token.n.substr(token.n.length-1)===\"}\"){token.n=token.n.substring(0,token.n.length-1)}}function trim(s){if(s.trim){return s.trim()}return s.replace(/^\\s*|\\s*$/g,\"\")}function tagChange(tag,text,index){if(text.charAt(index)!=tag.charAt(0)){return false}for(var i=1,l=tag.length;i<l;i++){if(text.charAt(index+i)!=tag.charAt(i)){return false}}return true}function buildTree(tokens,kind,stack,customTags){var instructions=[],opener=null,token=null;while(tokens.length>0){token=tokens.shift();if(token.tag==\"#\"||token.tag==\"^\"||isOpener(token,customTags)){stack.push(token);token.nodes=buildTree(tokens,token.tag,stack,customTags);instructions.push(token)}else{if(token.tag==\"/\"){if(stack.length===0){throw new Error(\"Closing tag without opener: /\"+token.n)}opener=stack.pop();if(token.n!=opener.n&&!isCloser(token.n,opener.n,customTags)){throw new Error(\"Nesting error: \"+opener.n+\" vs. \"+token.n)}opener.end=token.i;return instructions}else{instructions.push(token)}}}if(stack.length>0){throw new Error(\"missing closing tag: \"+stack.pop().n)}return instructions}function isOpener(token,tags){for(var i=0,l=tags.length;i<l;i++){if(tags[i].o==token.n){token.tag=\"#\";return true}}}function isCloser(close,open,tags){for(var i=0,l=tags.length;i<l;i++){if(tags[i].c==close&&tags[i].o==open){return true}}}Hogan.generate=function(tree,text,options){var code='var _=this;_.b(i=i||\"\");'+walk(tree)+\"return _.fl();\";if(options.asString){return\"function(c,p,i){\"+code+\";}\"}return new Hogan.Template(new Function(\"c\",\"p\",\"i\",code),text,Hogan,options)};function esc(s){return s.replace(rSlash,\"\\\\\\\\\").replace(rQuot,'\\\\\"').replace(rNewline,\"\\\\n\").replace(rCr,\"\\\\r\")}function chooseMethod(s){return(~s.indexOf(\".\"))?\"d\":\"f\"}function walk(tree){var code=\"\";for(var i=0,l=tree.length;i<l;i++){var tag=tree[i].tag;if(tag==\"#\"){code+=section(tree[i].nodes,tree[i].n,chooseMethod(tree[i].n),tree[i].i,tree[i].end,tree[i].otag+\" \"+tree[i].ctag)}else{if(tag==\"^\"){code+=invertedSection(tree[i].nodes,tree[i].n,chooseMethod(tree[i].n))}else{if(tag==\"<\"||tag==\">\"){code+=partial(tree[i])}else{if(tag==\"{\"||tag==\"&\"){code+=tripleStache(tree[i].n,chooseMethod(tree[i].n))}else{if(tag==\"\\n\"){code+=text('\"\\\\n\"'+(tree.length-1==i?\"\":\" + i\"))}else{if(tag==\"_v\"){code+=variable(tree[i].n,chooseMethod(tree[i].n))}else{if(tag===undefined){code+=text('\"'+esc(tree[i])+'\"')}}}}}}}}return code}function section(nodes,id,method,start,end,tags){return\"if(_.s(_.\"+method+'(\"'+esc(id)+'\",c,p,1),c,p,0,'+start+\",\"+end+',\"'+tags+'\")){_.rs(c,p,function(c,p,_){'+walk(nodes)+\"});c.pop();}\"}function invertedSection(nodes,id,method){return\"if(!_.s(_.\"+method+'(\"'+esc(id)+'\",c,p,1),c,p,1,0,0,\"\")){'+walk(nodes)+\"};\"}function partial(tok){return'_.b(_.rp(\"'+esc(tok.n)+'\",c,p,\"'+(tok.indent||\"\")+'\"));'}function tripleStache(id,method){return\"_.b(_.t(_.\"+method+'(\"'+esc(id)+'\",c,p,0)));'}function variable(id,method){return\"_.b(_.v(_.\"+method+'(\"'+esc(id)+'\",c,p,0)));'}function text(id){return\"_.b(\"+id+\");\"}Hogan.parse=function(tokens,text,options){options=options||{};return buildTree(tokens,\"\",[],options.sectionTags||[])},Hogan.cache={};Hogan.compile=function(text,options){options=options||{};var key=text+\"||\"+!!options.asString;var t=this.cache[key];if(t){return t}t=this.generate(this.parse(this.scan(text,options.delimiters),text,options),text,options);return this.cache[key]=t}})(typeof exports!==\"undefined\"?exports:Hogan);window.Hogan=Hogan;}");
            sb.append("if(!window.flurryadapter){var flurryBridgeCtor=function(w){var flurryadapter={};flurryadapter.flurryCallQueue=[];flurryadapter.flurryCallInProgress=false;flurryadapter.callComplete=function(cmd){if(this.flurryCallQueue.length==0){this.flurryCallInProgress=false;return}var adapterCall=this.flurryCallQueue.splice(0,1)[0];this.executeNativeCall(adapterCall);return\"OK\"};flurryadapter.executeCall=function(command){var adapterCall=\"flurry://flurrycall?event=\"+command;var value;for(var i=1;i<arguments.length;i+=2){value=arguments[i+1];if(value==null)continue;adapterCall+=\"&\"+arguments[i]+\"=\"+escape(value)}if(this.flurryCallInProgress)this.flurryCallQueue.push(adapterCall);else this.executeNativeCall(adapterCall)};flurryadapter.executeNativeCall=function(adapterCall){if(adapterCall.length==0)return;this.flurryCallInProgress=true;w.location=adapterCall};return flurryadapter};window.flurryadapter=flurryBridgeCtor(window);}");
            sb.append("if(!window.flurryAdapterAvailable){window.flurryAdapterAvailable=true;if(typeof window.FlurryAdapterReady === 'function'){window.FlurryAdapterReady();} }");
            final String e = fe.e(s);
            sb.append("var content='");
            sb.append(e);
            sb.append("';var compiled=window.Hogan.compile(document.body.innerHTML);var rendered=compiled.render(JSON.parse(content));document.body.innerHTML=rendered;");
            sb.append("})();");
            if (this.g != null) {
                this.g.loadUrl(sb.toString());
            }
        }
    }
    
    private boolean m() {
        synchronized (this) {
            return this.y;
        }
    }
    
    private void n() {
        synchronized (this) {
            if (!this.m()) {
                this.p();
                this.setMraidJsEnvInitialized(true);
            }
        }
    }
    
    private void o() {
        synchronized (this) {
            this.setMraidJsEnvInitialized(false);
        }
    }
    
    private void p() {
        eo.a(3, this.b, "initializeMraid");
        String s;
        if (this.e()) {
            s = "interstitial";
        }
        else {
            s = "inline";
        }
        final String string = "{useCustomClose:false,isModal:false,width:undefined,height:undefined,placementType:\"" + s + "\"}";
        final StringBuilder sb = new StringBuilder();
        sb.append("javascript:(function() {");
        sb.append("var mraidCtor=function(flurryBridge,initState){var mraid={};var STATES=mraid.STATES={LOADING:\"loading\",UNKNOWN:\"unknown\",DEFAULT:\"default\",EXPANDED:\"expanded\",HIDDEN:\"hidden\"};var EVENTS=mraid.EVENTS={ASSETREADY:\"assetReady\",ASSETREMOVED:\"assetRemoved\",ASSETRETIRED:\"assetRetired\",INFO:\"info\",ERROR:\"error\",ORIENTATIONCHANGE:\"orientationChange\",READY:\"ready\",STATECHANGE:\"stateChange\",VIEWABLECHANGE:\"viewableChange\"};var listeners={};var currentState=STATES.LOADING;var expandProperties={width:initState.width,height:initState.height,isModal:initState.isModal,useCustomClose:false};var collapseProperties={};var placementType=initState.placementType;var disable=false;var closeId=\"flurry-mraid-default-close\";var imgUrl=\"http://flurry.cachefly.net/adSpaceStyles/images/bttn-close-bw.png\";var safeClose=function(){try{if(window.mraid)window.mraid.close();else if(window.flurryadapter)flurryadapter.executeCall(\"adWillClose\");else console.log(\"unable to close\")}catch(error){console.log(\"unable to close: \"+error)}};var makeDefaultClose=function(){var img=document.createElement(\"img\");img.src=imgUrl;img.id=closeId;img.style.position=\"absolute\";img.style.top=\"10px\";img.style.right=\"10px\";img.style.width=\"50px\";img.style.height=\"50px\";img.style.zIndex=1E4;return img};var updateDefaultClose=function(){if(!expandProperties.useCustomClose&&(placementType===\"interstitial\"||currentState===STATES.EXPANDED))addDefaultClose();else removeDefaultClose()};var addDefaultClose=function(){var closeButton=document.getElementById(closeId);if(!closeButton){closeButton=makeDefaultClose();document.body.appendChild(closeButton)}};var removeDefaultClose=function(){var closeButton=document.getElementById(closeId);if(closeButton)document.body.removeChild(closeButton)};var setupDefaultCloseHandler=function(){document.body.addEventListener(\"click\",function(e){e=e||window.event;var target=e.target||e.srcElement;if(target.id===closeId)safeClose()})};var contains=function(value,obj){for(var i in obj)if(obj[i]===value)return true;return false};var stringify=function(obj){if(typeof obj==\"object\")if(obj.push){var out=[];for(var p in obj)if(obj.hasOwnProperty(p))out.push(obj[p]);return\"[\"+out.join(\",\")+\"]\"}else{var out=[];for(var p in obj)if(obj.hasOwnProperty(p))out.push(\"'\"+p+\"':\"+obj[p]);return\"{\"+out.join(\",\")+\"}\"}else return new String(obj)};var broadcastEvent=function(){var args=new Array(arguments.length);for(var i=0;i<arguments.length;i++)args[i]=arguments[i];var event=args.shift();try{if(listeners[event])for(var j=0;j<listeners[event].length;j++)if(typeof listeners[event][j]===\"function\")listeners[event][j].apply(undefined,args);else if(typeof listeners[event][j]===\"string\"&&typeof window[listeners[event][j]]===\"function\")window[listeners[event][j]].apply(undefined,args)}catch(e){console.log(e)}};mraid.disable=function(){removeDefaultClose();disable=true};mraid.addEventListener=function(event,listener){if(disable)return;if(!event||!listener)broadcastEvent(EVENTS.ERROR,\"Both event and listener are required.\",\"addEventListener\");else if(!contains(event,EVENTS))broadcastEvent(EVENTS.ERROR,\"Unknown event: \"+event,\"addEventListener\");else if(!listeners[event])listeners[event]=[listener];else listeners[event].push(listener);flurryBridge.executeCall(\"eventListenerAdded\")};mraid.stateChange=function(newState){if(disable)return;if(currentState===newState)return;broadcastEvent(EVENTS.INFO,\"setting state to \"+stringify(newState));var oldState=currentState;currentState=newState;if(oldState===STATES.LOADING&&newState===STATES.DEFAULT){setupDefaultCloseHandler();updateDefaultClose();broadcastEvent(EVENTS.READY)}else if(oldState===STATES.HIDDEN||newState===STATES.HIDDEN)broadcastEvent(EVENTS.VIEWABLECHANGE);else if(oldState===STATES.DEFAULT&&newState===STATES.EXPANDED)updateDefaultClose();else if(newState===STATES.DEFAULT&&oldState===STATES.EXPANDED)updateDefaultClose();broadcastEvent(EVENTS.STATECHANGE,currentState)};mraid.close=function(){if(disable)return;var state=mraid.getState();if(state===STATES.DEFAULT){mraid.stateChange(STATES.HIDDEN);flurryBridge.executeCall(\"adWillClose\")}else if(state===STATES.EXPANDED){mraid.stateChange(STATES.DEFAULT);flurryBridge.executeCall(\"collapse\")}else console.log(\"close() called in state \"+state)};mraid.expand=function(url){if(disable)return;var state=mraid.getState();if(state!==STATES.DEFAULT){console.log(\"expand() called in state \"+state);return}if(placementType===\"interstitial\"){console.log(\"expand() called for placement type \"+placementType);return}if(url)flurryBridge.executeCall(\"expand\",\"width\",expandProperties.width,\"height\",expandProperties.height,\"url\",url);else flurryBridge.executeCall(\"expand\",\"width\",expandProperties.width,\"height\",expandProperties.height);mraid.stateChange(STATES.EXPANDED)};mraid.setExpandProperties=function(properties){if(disable)return;if(typeof properties.width===\"number\"&&!isNaN(properties.width))expandProperties.width=properties.width;if(typeof properties.height===\"number\"&&!isNaN(properties.height))expandProperties.height=properties.height;if(typeof properties.useCustomClose===\"boolean\"){expandProperties.useCustomClose=properties.useCustomClose;updateDefaultClose()}};mraid.getExpandProperties=function(properties){if(disable)return;var ret={};ret.width=expandProperties.width;ret.height=expandProperties.height;ret.isModal=expandProperties.isModal;ret.useCustomClose=expandProperties.useCustomClose;return ret};mraid.getPlacementType=function(){return placementType};mraid.getVersion=function(){if(disable)return\"\";return\"1.0\"};mraid.getState=function(){if(disable)return\"\";return currentState};mraid.isViewable=function(){if(disable)return false;if(mraid.getState()===\"hidden\")return false;else return true};mraid.open=function(url){if(disable)return;try{flurryBridge.executeCall(\"open\",\"url\",url)}catch(e){console.log(e)}};mraid.playVideo=function(url){if(disable){return;}try{flurryBridge.executeCall(\"playVideo\",\"url\",url);}catch(e){console.log(e);}};mraid.removeEventListener=function(event,listener){if(disable)return;if(!event)broadcastEvent(\"error\",\"Must specify an event.\",\"removeEventListener\");else if(listener&&listeners[event])for(var i=0;i<listeners[event].length;i++){if(listeners[event][i]===listener)listeners[event].splice(i,1)}else if(listeners[event])listeners[event]=[]};mraid.useCustomClose=function(use){if(disable)return;if(typeof use===\"boolean\"){expandProperties.useCustomClose=use;updateDefaultClose()}};return mraid};");
        sb.append("window.mraid=mraidCtor(window.flurryadapter," + string + ");");
        sb.append("})();");
        if (this.g != null) {
            this.g.loadUrl(sb.toString());
        }
    }
    
    private void q() {
        eo.a(3, this.b, "activateMraid");
        final StringBuilder sb = new StringBuilder();
        sb.append("javascript:");
        sb.append("if(window.mraid){window.mraid.stateChange(window.mraid.STATES.DEFAULT);}");
        if (this.g != null) {
            this.g.loadUrl(sb.toString());
        }
    }
    
    private void r() {
        if (!(this.getContext() instanceof Activity)) {
            eo.a(3, this.b, "no activity present");
        }
        else {
            final Activity activity = (Activity)this.getContext();
            if (this.e()) {
                cb.a(activity, cb.a(), true);
            }
        }
    }
    
    private void s() {
        if (this.getContext() instanceof Activity) {
            final Activity activity = (Activity)this.getContext();
            if (this.e()) {
                final int a = cb.a(activity, this.getAdUnit().u());
                if (-1 != a) {
                    cb.a(activity, a, true);
                }
            }
        }
    }
    
    private void setFlurryJsEnvInitialized(final boolean j) {
        synchronized (this) {
            this.j = j;
        }
    }
    
    private void setMraidJsEnvInitialized(final boolean y) {
        synchronized (this) {
            this.y = y;
        }
    }
    
    private boolean t() {
        return this.p != null;
    }
    
    private void u() {
        eo.a(3, this.b, "closing ad");
        if (this.e() || this.f()) {
            if (this.getContext() instanceof Activity) {
                ((Activity)this.getContext()).finish();
                return;
            }
            eo.a(3, this.b, "no activity present");
        }
    }
    
    private boolean v() {
        return this.s != null;
    }
    
    private void w() {
        this.g.loadUrl("javascript:(function() { document.getElementById('flurry_interstitial_close').style.display = 'none'; })()");
    }
    
    private void x() {
        if (this.e() && !this.x) {
            this.x = true;
            this.h = new Button(this.getContext());
            final RelativeLayout$LayoutParams layoutParams = new RelativeLayout$LayoutParams(-2, -2);
            layoutParams.addRule(10);
            layoutParams.addRule(11);
            final float density = this.getResources().getDisplayMetrics().density;
            final int n = (int)(10.0f * density);
            layoutParams.setMargins(0, n, n, 0);
            final int n2 = (int)(density * 50.0f);
            layoutParams.height = n2;
            layoutParams.width = n2;
            this.h.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
            this.h.setBackgroundColor(0);
            this.h.setOnClickListener((View$OnClickListener)new View$OnClickListener() {
                public void onClick(final View view) {
                    com.flurry.sdk.g.this.a();
                }
            });
            this.addView((View)this.h);
        }
    }
    
    private void y() {
        this.g.loadUrl("javascript:if(window.mraid && typeof window.mraid.disable === 'function'){window.mraid.disable();}");
    }
    
    private void z() {
        this.g.loadUrl("javascript:var closeButtonDiv =  document.getElementById('flurry_interstitial_close');if (typeof(element) == 'undefined' || element == null){var newdiv = document.createElement('div');var divIdName = 'flurry_interstitial_close';newdiv.setAttribute('id',divIdName);newdiv.innerHTML = '<a href=\"flurry://flurrycall?event=adWillClose\"><div id=\"rtb_close\"><img src=\"http://cdn.flurry.com/adSpaceStyles.dev/images/bttn-close-bw.png\" alt=\"close advertisement\" /></div></a></div>';document.body.appendChild(newdiv);}");
    }
    
    public void a() {
        this.a("adWillClose", Collections.emptyMap(), this.getAdUnit(), this.getAdLog(), this.getAdFrameIndex(), 0);
    }
    
    public void a(final a a, final ae ae, final int n) {
        final String a2 = a.a;
        final q c = a.c;
        final Map b = a.b;
        if (n <= 10) {
            if (c.a.equals("clicked")) {
                final String s = c.b.get("noop");
                if (s != null && s.equals("true")) {
                    eo.a(4, this.b, "'clicked' event is a noop");
                    return;
                }
            }
            eo.a(3, this.b, "performAction(action=" + a2 + ",params=" + a.b + ",triggering event=" + c.a + ")");
            Label_0260: {
                if (a2.equals("nextFrame")) {
                    final int n2 = 1 + this.getAdFrameIndex();
                    final String s2 = b.get("offset");
                    while (true) {
                        Label_0323: {
                            if (s2 == null) {
                                break Label_0323;
                            }
                            int int1;
                            if (s2.equals("next")) {
                                int1 = 1 + this.getAdFrameIndex();
                            }
                            else {
                                if (!s2.equals("current")) {
                                    try {
                                        int1 = Integer.parseInt(s2);
                                        break Label_0253;
                                    }
                                    catch (NumberFormatException ex) {
                                        eo.a(6, this.b, "caught: " + ex.getMessage());
                                    }
                                    break Label_0323;
                                }
                                return;
                            }
                            this.a(a, int1);
                            break Label_0260;
                        }
                        int int1 = n2;
                        continue;
                    }
                }
                if (a2.equals("closeAd")) {
                    this.u();
                }
                else if (a2.equals("notifyUser")) {
                    if (!this.A()) {
                        eo.a(6, this.b, "View not attached to any window.");
                        return;
                    }
                    final AlertDialog$Builder alertDialog$Builder = new AlertDialog$Builder(this.getContext());
                    String message;
                    String s3;
                    String s4;
                    if (b.containsKey("message") && b.containsKey("confirmDisplay") && b.containsKey("cancelDisplay")) {
                        message = b.get("message");
                        s3 = b.get("confirmDisplay");
                        s4 = b.get("cancelDisplay");
                    }
                    else {
                        message = "Are you sure?";
                        s3 = "Cancel";
                        s4 = "OK";
                    }
                    alertDialog$Builder.setMessage((CharSequence)message).setCancelable(false).setPositiveButton((CharSequence)s4, (DialogInterface$OnClickListener)new DialogInterface$OnClickListener() {
                        public void onClick(final DialogInterface dialogInterface, final int n) {
                            final HashMap<String, String> hashMap = new HashMap<String, String>();
                            hashMap.put("sourceEvent", c.a);
                            com.flurry.sdk.g.this.a("userConfirmed", hashMap, com.flurry.sdk.g.this.getAdUnit(), com.flurry.sdk.g.this.getAdLog(), com.flurry.sdk.g.this.getAdFrameIndex(), 1 + n);
                            dialogInterface.dismiss();
                            if (com.flurry.sdk.g.this.e != null && com.flurry.sdk.g.this.getCurrentBinding() == 3) {
                                com.flurry.sdk.g.this.e.start();
                            }
                        }
                    }).setNegativeButton((CharSequence)s3, (DialogInterface$OnClickListener)new DialogInterface$OnClickListener() {
                        public void onClick(final DialogInterface dialogInterface, final int n) {
                            final HashMap<String, String> hashMap = new HashMap<String, String>();
                            hashMap.put("sourceEvent", c.a);
                            com.flurry.sdk.g.this.a("userCanceled", hashMap, com.flurry.sdk.g.this.getAdUnit(), com.flurry.sdk.g.this.getAdLog(), com.flurry.sdk.g.this.getAdFrameIndex(), 1 + n);
                            dialogInterface.dismiss();
                            if (com.flurry.sdk.g.this.e != null && com.flurry.sdk.g.this.getCurrentBinding() == 3) {
                                com.flurry.sdk.g.this.e.setCloseConfirmDialogClicked(true);
                                com.flurry.sdk.g.this.e.start();
                            }
                        }
                    });
                    this.A = alertDialog$Builder.create();
                    if (this.e != null && this.getCurrentBinding() == 3) {
                        this.e.pause();
                    }
                    this.A.show();
                }
                else if (a2.equals("loadAdComponents")) {
                    int int2 = 1;
                    int int3 = 3;
                    Label_0954: {
                        while (true) {
                            if (!b.containsKey("min") || !b.containsKey("max")) {
                                break Label_0662;
                            }
                            try {
                                int2 = Integer.parseInt(b.get("min"));
                                int3 = Integer.parseInt(b.get("max"));
                                if (1 < int2) {
                                    --int2;
                                }
                                if (1 < int3) {
                                    --int3;
                                }
                                final ArrayList<AdUnit> list = new ArrayList<AdUnit>();
                                list.add(this.getAdUnit());
                                list.addAll((Collection<?>)this.a(this.getAdUnit().b().toString(), int2, int3));
                                if (list.size() <= 0) {
                                    break Label_0954;
                                }
                                final String a3 = this.a(list, this.getAdUnit().b().toString());
                                if (this.g != null) {
                                    this.g.loadUrl("javascript:(function() {var multiadwraps=document.getElementsByClassName('multiAdWrap');if(multiadwraps.length>0){var template=document.getElementsByClassName('multiAdWrap')[0];var compiled=Hogan.compile(template.innerHTML);template.innerHTML='';template.innerHTML=compiled.render(JSON.parse(" + a3 + "));}})();");
                                    this.g.loadUrl("javascript:flurryadapter.callComplete();");
                                }
                                for (final AdUnit adUnit : list) {
                                    final HashMap<String, String> hashMap = new HashMap<String, String>();
                                    hashMap.put("guid", adUnit.d().get(0).g().toString());
                                    this.a("rendered", hashMap, adUnit, this.b(adUnit.d().get(0).g().toString()), 0, 0);
                                }
                            }
                            catch (NumberFormatException ex3) {
                                int2 = 1;
                                int3 = 3;
                                continue;
                            }
                            break;
                        }
                        if (this.g != null && !this.a((View)this.g)) {
                            this.addView((View)this.g);
                        }
                        break Label_0260;
                    }
                    final HashMap hashMap2 = new HashMap();
                    b.put("errorCode", Integer.toString(com.flurry.sdk.b.d.a()));
                    this.a("renderFailed", hashMap2, this.getAdUnit(), this.getAdLog(), this.getAdFrameIndex(), 0);
                }
                else {
                    if (a2.equals("doExpand")) {
                        final int e = fc.e();
                        final int f = fc.f();
                        while (true) {
                            if (!a.c.b.containsKey("width") || !a.c.b.containsKey("height")) {
                                final int n3 = e;
                                final int n4 = f;
                                break Label_1125;
                            }
                            try {
                                final int b2 = fc.b(Integer.parseInt(a.c.b.get("width")));
                                final int b3 = fc.b(Integer.parseInt(a.c.b.get("height")));
                                final int n3 = b2;
                                final int n4 = b3;
                                eo.a(3, this.b, "expand to width = " + n3 + " height = " + n4);
                                if (this.getHolder() != null) {
                                    this.a("clicked", Collections.emptyMap(), this.getAdUnit(), this.getAdLog(), this.getAdFrameIndex(), 0);
                                    this.a(n3, n4);
                                }
                                if (a.c.b.containsKey("url")) {
                                    this.a = a.c.b.get("url");
                                    final Intent intent = new Intent(do.a().b(), (Class)FlurryFullscreenTakeoverActivity.class);
                                    intent.putExtra("url", this.a);
                                    intent.putExtra("is_mraid_ad", true);
                                    this.getPlatformModule().a().a(this.getContext(), intent, this.getAdUnit().b().toString());
                                }
                                break Label_0260;
                            }
                            catch (NumberFormatException ex2) {
                                eo.a(6, this.b, ex2.getMessage());
                                final int e2 = fc.e();
                                final int f2 = fc.f();
                                final int n3 = e2;
                                final int n4 = f2;
                                continue;
                            }
                            break;
                        }
                    }
                    if (a2.equals("doCollapse")) {
                        final int intValue = this.getCurrentAdFrame().e().b();
                        final int intValue2 = this.getCurrentAdFrame().e().c();
                        final int b4 = fc.b(intValue);
                        final int b5 = fc.b(intValue2);
                        if (this.a != null) {
                            this.a = null;
                            this.initLayout();
                        }
                        if (this.getHolder() != null) {
                            this.b(b4, b5);
                        }
                    }
                    else {
                        if (a2.equals("directOpen")) {
                            final HashMap<String, String> hashMap3 = new HashMap<String, String>();
                            hashMap3.put("noop", "true");
                            this.a("clicked", hashMap3, this.getAdUnit(), this.getAdLog(), this.getAdFrameIndex(), 0);
                        }
                        this.getPlatformModule().a().a(a, ae, n);
                    }
                }
            }
            this.a(a);
            return;
        }
        eo.a(5, this.b, "Maximum depth for event/action loop exceeded when performing action:" + a2 + "," + b + ",triggered by:" + c.a);
    }
    
    public void a(final String s, final Map map, final AdUnit adUnit, final e e, final int n, final int n2) {
        eo.a(3, this.b, "fireEvent(event=" + s + ",params=" + map + ")");
        this.getPlatformModule().a(new q(s, map, this.getContext(), adUnit, e, n), this, n2);
    }
    
    boolean a(final View view) {
        final ViewParent parent = view.getParent();
        return parent != null && parent == this;
    }
    
    @TargetApi(11)
    public void b() {
        if (this.g != null && Build$VERSION.SDK_INT >= 11) {
            this.f = true;
            this.g.onResume();
        }
        if (this.e != null) {
            if (this.A != null && this.H) {
                this.A.show();
                this.H = false;
                eo.a(3, this.b, "Alert dialog in foreground. Do nothing and wait for user input.");
            }
            else {
                this.f = true;
                this.e.e();
            }
        }
        this.I = true;
    }
    
    @TargetApi(11)
    public void c() {
        if (this.g != null && Build$VERSION.SDK_INT >= 11) {
            this.g.onPause();
        }
        if (this.e != null) {
            if (this.A != null && this.A.isShowing()) {
                this.A.dismiss();
                this.H = true;
            }
            this.e.pause();
            this.e.d();
        }
        this.f = false;
        this.I = true;
    }
    
    public boolean d() {
        return this.A != null && this.A.isShowing();
    }
    
    boolean e() {
        return this.getCurrentFormat().equals("takeover");
    }
    
    boolean f() {
        return this.getPlatformModule().S() != null;
    }
    
    @Override
    boolean g() {
        final boolean c = ev.a().c();
        if (!c) {
            eo.a(5, this.b, "There is no network connectivity (ad will not rotate)");
        }
        return !this.v() && !this.t() && c;
    }
    
    AdFrame getCurrentAdFrame() {
        return this.B.get(this.getAdFrameIndex());
    }
    
    public int getCurrentBinding() {
        return this.getCurrentAdFrame().b();
    }
    
    String getCurrentContent() {
        return this.getCurrentAdFrame().d().toString();
    }
    
    String getCurrentDisplay() {
        return this.getCurrentAdFrame().c().toString();
    }
    
    String getCurrentFormat() {
        return this.getCurrentAdFrame().e().e().toString();
    }
    
    public FlurryFullscreenTakeoverActivity getFullScreenTakeover() {
        return this.z;
    }
    
    l getHolder() {
        final ViewParent parent = this.getParent();
        if (parent instanceof l) {
            return (l)parent;
        }
        return null;
    }
    
    public f getVideoView() {
        return this.e;
    }
    
    @Override
    public void initLayout() {
        eo.a(3, this.b, "initLayout: ad creative layout: {width = " + this.getCurrentAdFrame().e().b() + ", height = " + this.getCurrentAdFrame().e().c() + "}");
        final Context context = this.getContext();
        this.removeAllViews();
        this.setFocusable(true);
        this.setFocusableInTouchMode(true);
        switch (this.getCurrentBinding()) {
            default: {
                final HashMap<String, String> hashMap = new HashMap<String, String>();
                hashMap.put("errorCode", Integer.toString(com.flurry.sdk.b.f.a()));
                this.a("renderFailed", hashMap, this.getAdUnit(), this.getAdLog(), this.getAdFrameIndex(), 0);
            }
            case 3: {
                this.a(this.getCurrentDisplay().toString(), false);
            }
            case 2: {
                final ci b = this.getPlatformModule().b(this.B.get(this.getAdFrameIndex()).g().toString());
                if (b != null) {
                    final boolean empty = TextUtils.isEmpty((CharSequence)cf.a(b.a(cp.b)));
                    boolean b2 = false;
                    if (!empty) {
                        b2 = true;
                    }
                    this.a(b.f(), b2);
                    return;
                }
                if (this.g == null) {
                    this.g = new WebView(context);
                    this.g.getSettings().setJavaScriptEnabled(true);
                    this.g.setVerticalScrollBarEnabled(false);
                    this.g.setHorizontalScrollBarEnabled(false);
                    this.g.setBackgroundColor(0);
                    this.g.clearCache(false);
                    this.l = new g$a(this, null);
                    this.g.setWebChromeClient(this.l);
                    this.k = new g$b(this, null);
                    this.g.setWebViewClient(this.k);
                }
                this.g.loadDataWithBaseURL("base://url/", this.getCurrentDisplay(), "text/html", "utf-8", "base://url/");
                this.a("rendered", Collections.emptyMap(), this.getAdUnit(), this.getAdLog(), this.getAdFrameIndex(), 0);
                this.g.setLayoutParams((ViewGroup$LayoutParams)new RelativeLayout$LayoutParams(-1, -1));
                this.B();
                if (this.e()) {
                    this.a(context);
                }
                this.s();
            }
            case 1: {
                if (this.g == null) {
                    this.g = new WebView(context);
                    this.g.getSettings().setJavaScriptEnabled(true);
                    this.g.setVerticalScrollBarEnabled(false);
                    this.g.setHorizontalScrollBarEnabled(false);
                    this.g.setBackgroundColor(0);
                    this.g.clearCache(false);
                    this.l = new g$a(this, null);
                    this.g.setWebChromeClient(this.l);
                    this.k = new g$b(this, null);
                    this.g.setWebViewClient(this.k);
                }
                Label_0566: {
                    if (this.a != null) {
                        this.a(this.a);
                    }
                    else {
                        if (this.getAdFrameIndex() == 0) {
                            final String b3 = this.getPlatformModule().d().b(this.getAdUnit().b().toString());
                            if (b3 != null) {
                                final String c = cf.c(this.getCurrentDisplay());
                                this.g.loadDataWithBaseURL(c, b3, "text/html", "utf-8", c);
                                this.a("rendered", Collections.emptyMap(), this.getAdUnit(), this.getAdLog(), this.getAdFrameIndex(), 0);
                                break Label_0566;
                            }
                        }
                        this.a(this.getCurrentDisplay());
                    }
                }
                this.g.setLayoutParams((ViewGroup$LayoutParams)new RelativeLayout$LayoutParams(-1, -1));
                this.B();
                if (this.e()) {
                    this.a(context);
                }
                this.s();
            }
        }
    }
    
    protected void onAttachedToWindow() {
        super.onAttachedToWindow();
        this.G = true;
    }
    
    @TargetApi(11)
    @Override
    public void onDestroy() {
        eo.a(3, this.b, "onDestroy");
        if (this.getCurrentBinding() == 3 && this.e != null && this.e.isPlaying()) {
            this.e.c();
        }
        this.B();
        if (this.A != null && this.A.isShowing()) {
            this.A.dismiss();
        }
        if (this.e != null) {
            this.e.f();
        }
        if (this.g != null) {
            if (this.m != null && this.l != null) {
                this.l.onHideCustomView();
            }
            if (this.s != null) {
                this.b(0, 0);
            }
            this.removeView((View)this.g);
            this.g.stopLoading();
            if (Build$VERSION.SDK_INT >= 11) {
                this.g.onPause();
            }
            this.g.destroy();
            this.g = null;
        }
        if (this.e()) {
            this.a("adClosed", Collections.emptyMap(), this.getAdUnit(), this.getAdLog(), this.getAdFrameIndex(), 0);
        }
    }
    
    protected void onDetachedFromWindow() {
        super.onDetachedFromWindow();
        this.G = false;
    }
    
    public boolean onKey(final DialogInterface dialogInterface, final int n, final KeyEvent keyEvent) {
        eo.a(3, "listeners", "onkey,keycode=" + n + ",event=" + keyEvent.getAction());
        if (dialogInterface == this.d && n == 4 && keyEvent.getAction() == 1) {
            this.a();
            dialogInterface.dismiss();
            return true;
        }
        return false;
    }
    
    public void setFullScreenTakeover(final FlurryFullscreenTakeoverActivity z) {
        this.z = z;
    }
    
    public void setVideoState(final am videoState) {
        if (this.e != null) {
            this.e.setVideoState(videoState);
        }
    }
}
