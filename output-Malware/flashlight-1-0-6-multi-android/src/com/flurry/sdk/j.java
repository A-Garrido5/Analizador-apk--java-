// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import com.flurry.android.ICustomAdNetworkHandler;
import com.flurry.android.AdCreative;
import java.util.List;
import java.util.Collections;
import android.widget.FrameLayout;
import android.widget.AbsoluteLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import java.util.HashMap;
import android.widget.RelativeLayout$LayoutParams;
import android.view.View;
import android.content.Context;
import android.view.ViewGroup$LayoutParams;
import com.flurry.android.impl.ads.avro.protocol.v10.AdSpaceLayout;
import com.flurry.android.impl.ads.avro.protocol.v10.AdFrame;
import android.view.ViewGroup;
import com.flurry.android.impl.ads.avro.protocol.v10.AdUnit;
import com.flurry.android.impl.ads.FlurryAdModule;
import java.util.Map;

public final class j extends ah
{
    private static final String a;
    private static final Map b;
    private i c;
    
    static {
        a = j.class.getSimpleName();
        b = f();
    }
    
    public j(final FlurryAdModule flurryAdModule, final AdUnit adUnit, final e e) {
        super(flurryAdModule, adUnit, e);
    }
    
    private int a(final ViewGroup viewGroup) {
        final int childCount = viewGroup.getChildCount();
        if (this.c() == null || this.c().d().size() <= 0) {
            return childCount;
        }
        final AdSpaceLayout e = this.c().d().get(0).e();
        if (e != null) {
            final String[] split = e.f().toString().split("-");
            if (split.length == 2 && "t".equals(split[0])) {
                return 0;
            }
        }
        return childCount;
    }
    
    private ViewGroup$LayoutParams a(final ViewGroup viewGroup, final l l) {
        ViewGroup$LayoutParams a;
        if (this.c() == null || this.c().d().size() <= 0) {
            a = null;
        }
        else {
            final AdSpaceLayout e = this.c().d().get(0).e();
            if (e == null) {
                return null;
            }
            final j$c b = b(viewGroup);
            if (b == null) {
                eo.a(5, j.a, "Ad space layout and alignment from the server is being ignored for ViewGroup subclass " + viewGroup.getClass().getSimpleName());
                return null;
            }
            a = b.a(e);
            if (a == null) {
                eo.a(6, j.a, "Ad space layout and alignment from the server is being ignored for ViewGroup subclass " + viewGroup.getClass().getSimpleName());
                return a;
            }
        }
        return a;
    }
    
    private void a(final Context context, final ViewGroup viewGroup, final FlurryAdModule flurryAdModule) {
        final l a = flurryAdModule.a(context, viewGroup, this.e());
        if (a == null) {
            eo.a(6, j.a, "failed to render banner ad for holder = " + a + " for adSpaceName = " + this.e());
            return;
        }
        final ViewGroup viewGroup2 = (ViewGroup)a.getParent();
        if (viewGroup2 != null) {
            viewGroup2.removeView((View)a);
        }
        a.d();
        a.removeAllViews();
        final ViewGroup viewGroup3 = (ViewGroup)this.c.getParent();
        if (viewGroup3 != null) {
            viewGroup3.removeView((View)this.c);
        }
        a.addView((View)this.c, (ViewGroup$LayoutParams)new RelativeLayout$LayoutParams(-1, -1));
        this.c.initLayout();
        final ViewGroup$LayoutParams a2 = this.a(viewGroup, a);
        if (a2 != null) {
            a.setLayoutParams(a2);
            eo.a(3, j.a, "banner ad holder layout params = " + a2.getClass().getName() + " {width = " + a2.width + ", height = " + a2.height + "} for banner ad with adSpaceName = " + this.e());
        }
        viewGroup.addView((View)a, this.a(viewGroup));
    }
    
    private static j$c b(final ViewGroup viewGroup) {
        return j.b.get(viewGroup.getClass());
    }
    
    private static Map f() {
        final HashMap<Class<RelativeLayout>, j$d> hashMap = new HashMap<Class<RelativeLayout>, j$d>();
        hashMap.put(LinearLayout.class, new j$d());
        hashMap.put((Class<LinearLayout>)AbsoluteLayout.class, (j$d)new j$a());
        hashMap.put((Class<LinearLayout>)FrameLayout.class, (j$d)new j$b());
        hashMap.put((Class<LinearLayout>)RelativeLayout.class, (j$d)new j$e());
        return Collections.unmodifiableMap((Map<?, ?>)hashMap);
    }
    
    @Override
    public final void a(final Context context, final ViewGroup viewGroup) {
        eo.a(3, j.a, "render(" + context + ", " + viewGroup + ")");
        if (context == null || viewGroup == null) {
            eo.a(6, j.a, "failed to render banner ad for adspace: " + this.e() + " context: " + context + " viewGroup: " + viewGroup);
            return;
        }
        final FlurryAdModule b = this.b();
        final AdUnit c = this.c();
        final e d = this.d();
        if (c == null) {
            eo.a(6, j.a, "failed to render banner ad, adUnit is null for adspace: " + this.e() + " context: " + context + " viewGroup: " + viewGroup);
            return;
        }
        final List d2 = c.d();
        if (d2 == null || d2.isEmpty()) {
            eo.a(6, j.a, "failed to render banner ad, no adFrames for adspace: " + this.e() + " context: " + context + " viewGroup: " + viewGroup);
            return;
        }
        final AdFrame adFrame = d2.get(0);
        final int intValue = adFrame.b();
        final String string = adFrame.d().toString();
        final AdCreative a = cc.a(adFrame.e());
        final ICustomAdNetworkHandler q = b.q();
        final k b2 = b.b();
        if (intValue == 4 && q != null) {
            this.c = q.getAdFromNetwork(context, a, string);
            if (this.c != null) {
                this.c.setPlatformModule(b);
                this.c.setAdLog(d);
                this.c.setAdFrameIndex(0);
                this.c.setAdUnit(c);
            }
        }
        else {
            this.c = b2.a(context, b, d, c);
        }
        if (this.c == null) {
            eo.d(j.a, "Failed to create view for ad network: " + string + ", network is unsupported on Android, or no ICustomAdNetworkHandler was registered or it failed to return a view.");
            final HashMap<String, String> hashMap = new HashMap<String, String>();
            hashMap.put("errorCode", Integer.toString(com.flurry.sdk.b.p.a()));
            if (intValue == 4) {
                hashMap.put("binding_3rd_party", Integer.toString(4));
            }
            b.a(new q("renderFailed", hashMap, context, c, d, 0), b.a(), 1);
            return;
        }
        this.a(context, viewGroup, b);
    }
}
