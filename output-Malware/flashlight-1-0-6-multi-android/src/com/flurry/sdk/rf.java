// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

public abstract class rf
{
    Object a;
    rf$a b;
    rf$a c;
    int d;
    
    public Object a() {
        this.b();
        if (this.a == null) {
            return this.b(12);
        }
        return this.a;
    }
    
    public final Object a(final Object o, final int n) {
        final rf$a c = new rf$a(o, n);
        if (this.b == null) {
            this.c = c;
            this.b = c;
        }
        else {
            this.c.a(c);
            this.c = c;
        }
        this.d += n;
        int n2;
        if (n < 16384) {
            n2 = n + n;
        }
        else {
            n2 = n + (n >> 2);
        }
        return this.b(n2);
    }
    
    protected abstract Object b(final int p0);
    
    public Object b(final Object o, final int n) {
        final int n2 = n + this.d;
        final Object b = this.b(n2);
        rf$a rf$a = this.b;
        int a = 0;
        while (rf$a != null) {
            a = rf$a.a(b, a);
            rf$a = rf$a.b();
        }
        System.arraycopy(o, 0, b, a, n);
        final int n3 = a + n;
        if (n3 != n2) {
            throw new IllegalStateException("Should have gotten " + n2 + " entries, got " + n3);
        }
        return b;
    }
    
    protected void b() {
        if (this.c != null) {
            this.a = this.c.a();
        }
        this.c = null;
        this.b = null;
        this.d = 0;
    }
}
