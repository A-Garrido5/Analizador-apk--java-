// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.math.BigInteger;
import java.math.BigDecimal;

@kb
public final class os$g extends pt
{
    public static final os$g a;
    
    static {
        a = new os$g();
    }
    
    public os$g() {
        super(Number.class);
    }
    
    public final void a(final Number n, final hf hf, final jw jw) {
        if (n instanceof BigDecimal) {
            hf.a((BigDecimal)n);
            return;
        }
        if (n instanceof BigInteger) {
            hf.a((BigInteger)n);
            return;
        }
        if (n instanceof Integer) {
            hf.b(n.intValue());
            return;
        }
        if (n instanceof Long) {
            hf.a(n.longValue());
            return;
        }
        if (n instanceof Double) {
            hf.a(n.doubleValue());
            return;
        }
        if (n instanceof Float) {
            hf.a(n.floatValue());
            return;
        }
        if (n instanceof Byte || n instanceof Short) {
            hf.b(n.intValue());
            return;
        }
        hf.e(n.toString());
    }
}
