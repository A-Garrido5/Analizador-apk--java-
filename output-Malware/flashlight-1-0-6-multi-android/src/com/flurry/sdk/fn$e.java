// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.Iterator;
import java.util.HashMap;
import java.util.Map;
import java.util.List;

class fn$e extends fn$n
{
    private final List i;
    private final Map j;
    
    public fn$e(final fn$m fn$m, final String s, final fn$j fn$j) {
        super(fn$v.b, fn$m, s);
        this.i = fn$j.a();
        this.j = new HashMap();
        final Iterator<String> iterator = (Iterator<String>)fn$j.iterator();
        int n = 0;
        while (iterator.hasNext()) {
            final String s2 = iterator.next();
            final Map j = this.j;
            final String g = fn.g(s2);
            final int n2 = n + 1;
            if (j.put(g, n) != null) {
                throw new fo("Duplicate enum symbol: " + s2);
            }
            n = n2;
        }
    }
    
    @Override
    void a(final fn$o fn$o, final hf hf) {
        if (this.c(fn$o, hf)) {
            return;
        }
        hf.d();
        hf.a("type", "enum");
        this.d(fn$o, hf);
        if (this.e() != null) {
            hf.a("doc", this.e());
        }
        hf.f("symbols");
        final Iterator<String> iterator = this.i.iterator();
        while (iterator.hasNext()) {
            hf.b(iterator.next());
        }
        hf.c();
        this.c.a(hf);
        this.a(hf);
        hf.e();
    }
    
    @Override
    public int c(final String s) {
        return this.j.get(s);
    }
    
    @Override
    public List c() {
        return this.i;
    }
    
    @Override
    public boolean equals(final Object o) {
        if (o != this) {
            if (!(o instanceof fn$e)) {
                return false;
            }
            final fn$e fn$e = (fn$e)o;
            if (!this.c(fn$e) || !this.a(fn$e) || !this.i.equals(fn$e.i) || !this.c.equals(fn$e.c)) {
                return false;
            }
        }
        return true;
    }
    
    @Override
    int m() {
        return super.m() + this.i.hashCode();
    }
}
