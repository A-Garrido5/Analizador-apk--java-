// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.LinkedHashMap;

class fn$o extends LinkedHashMap
{
    private String a;
    
    public fn$o() {
    }
    
    public fn$o(final String a) {
        this.a = a;
    }
    
    public fn a(final fn$m fn$m, final fn fn) {
        if (this.containsKey(fn$m)) {
            throw new fo("Can't redefine: " + fn$m);
        }
        return super.put(fn$m, fn);
    }
    
    public fn a(final Object o) {
        fn$m fn$m;
        if (o instanceof String) {
            final fn$v fn$v = fn.e.get(o);
            if (fn$v != null) {
                return fn.a(fn$v);
            }
            fn$m = new fn$m((String)o, this.a);
        }
        else {
            fn$m = (fn$m)o;
        }
        return (fn)super.get(fn$m);
    }
    
    public String a() {
        return this.a;
    }
    
    public void a(final String a) {
        this.a = a;
    }
    
    public boolean a(final fn fn) {
        return this.a(((fn$n)fn).f) != null;
    }
    
    public void b(final fn fn) {
        this.a(((fn$n)fn).f, fn);
    }
}
