// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.io.IOException;
import java.io.OutputStream;

public class gd extends gc
{
    private byte[] a;
    private int b;
    private gd$a c;
    private int d;
    
    gd(final OutputStream outputStream, final int n) {
        this.a(outputStream, n);
    }
    
    private void d(final int n) {
        if (this.a.length - this.b < n) {
            this.h();
        }
    }
    
    private void e(final int n) {
        if (this.b == this.a.length) {
            this.h();
        }
        this.a[this.b++] = (byte)(n & 0xFF);
    }
    
    private void h() {
        if (this.b > 0) {
            this.c.a(this.a, 0, this.b);
            this.b = 0;
        }
    }
    
    gd a(final OutputStream outputStream, final int n) {
        if (outputStream == null) {
            throw new NullPointerException("OutputStream cannot be null!");
        }
        Label_0032: {
            if (this.c == null || this.b <= 0) {
                break Label_0032;
            }
            try {
                this.h();
                this.c = new gd$b(outputStream, null);
                this.b = 0;
                if (this.a == null || this.a.length != n) {
                    this.a = new byte[n];
                }
                this.d = this.a.length >>> 1;
                if (this.d > 512) {
                    this.d = 512;
                }
                return this;
            }
            catch (IOException ex) {
                throw new fk("Failure flushing old output", ex);
            }
        }
    }
    
    @Override
    public void a(final double n) {
        this.d(8);
        this.b += ga.a(n, this.a, this.b);
    }
    
    @Override
    public void a(final float n) {
        this.d(4);
        this.b += ga.a(n, this.a, this.b);
    }
    
    @Override
    public void a(final boolean b) {
        if (this.a.length == this.b) {
            this.h();
        }
        this.b += ga.a(b, this.a, this.b);
    }
    
    @Override
    public void b(final long n) {
        this.d(10);
        this.b += ga.a(n, this.a, this.b);
    }
    
    @Override
    public void b(final byte[] array, final int n, final int n2) {
        if (n2 > this.d) {
            this.h();
            this.c.a(array, n, n2);
            return;
        }
        this.d(n2);
        System.arraycopy(array, n, this.a, this.b, n2);
        this.b += n2;
    }
    
    @Override
    public void c(final int n) {
        this.d(5);
        this.b += ga.a(n, this.a, this.b);
    }
    
    @Override
    public void flush() {
        this.h();
        this.c.a();
    }
    
    @Override
    protected void g() {
        this.e(0);
    }
}
