// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.EnumMap;
import java.util.EnumSet;

public class nr extends nw
{
    public nr(final sh sh, final qs qs) {
        super(sh, qs);
    }
    
    @Override
    public sh a(final String s) {
        if (s.indexOf(60) > 0) {
            return qs.a(s);
        }
        try {
            return this.c.a(this.d, Class.forName(s, true, Thread.currentThread().getContextClassLoader()));
        }
        catch (ClassNotFoundException ex2) {
            throw new IllegalArgumentException("Invalid type id '" + s + "' (for id type 'Id.class'): no such class found");
        }
        catch (Exception ex) {
            throw new IllegalArgumentException("Invalid type id '" + s + "' (for id type 'Id.class'): " + ex.getMessage(), ex);
        }
    }
    
    @Override
    public String a(final Object o) {
        return this.b(o, o.getClass());
    }
    
    @Override
    public String a(final Object o, final Class clazz) {
        return this.b(o, clazz);
    }
    
    protected final String b(final Object o, Class superclass) {
        if (Enum.class.isAssignableFrom(superclass) && !superclass.isEnum()) {
            superclass = superclass.getSuperclass();
        }
        String s = superclass.getName();
        if (s.startsWith("java.util")) {
            if (o instanceof EnumSet) {
                s = qs.a().b(EnumSet.class, qy.a((EnumSet)o)).m();
            }
            else {
                if (o instanceof EnumMap) {
                    return qs.a().a(EnumMap.class, qy.a((EnumMap)o), Object.class).m();
                }
                final String substring = s.substring(9);
                if ((substring.startsWith(".Arrays$") || substring.startsWith(".Collections$")) && s.indexOf("List") >= 0) {
                    return "java.util.ArrayList";
                }
            }
        }
        else if (s.indexOf(36) >= 0 && qy.b(superclass) != null && qy.b(this.d.p()) == null) {
            return this.d.p().getName();
        }
        return s;
    }
}
