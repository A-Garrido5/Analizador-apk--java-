// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.nio.ByteBuffer;
import java.io.IOException;
import java.io.InputStream;
import java.io.EOFException;

class gb$b extends gb$c
{
    private byte[] b;
    private int c;
    private int d;
    private boolean e;
    
    private gb$b(final byte[] b, final int c, final int d) {
        this.e = false;
        if (b.length < 16 || d < 16) {
            System.arraycopy(b, c, this.b = new byte[16], 0, d);
            this.c = 0;
            this.d = d;
            return;
        }
        this.b = b;
        this.c = c;
        this.d = c + d;
    }
    
    @Override
    protected void a(final int n, final gb gb) {
        gb.b = this.b;
        gb.d = this.c;
        gb.c = this.c;
        gb.e = this.d;
        this.a = new gb$a(gb, null);
    }
    
    @Override
    protected void a(final long n) {
        if (this.b(n) < n) {
            throw new EOFException();
        }
    }
    
    @Override
    protected void a(final byte[] array, final int n, final int n2) {
        if (this.b(array, n, n2) < n2) {
            throw new EOFException();
        }
    }
    
    @Override
    protected void a(final byte[] array, final int n, final int n2, final int n3) {
        if (!this.e) {
            final byte[] array2 = new byte[n3 + 16];
            System.arraycopy(array, n, array2, 0, n3);
            this.a.a(array2, 0, n3);
            this.e = true;
        }
    }
    
    @Override
    protected int b(final byte[] array, final int n, final int n2) {
        return 0;
    }
    
    @Override
    protected long b(final long n) {
        this.d = this.a.c();
        this.c = this.a.b();
        final long n2 = this.d - this.c;
        if (n2 >= n) {
            this.c += (int)n;
            this.a.a(this.c);
            return n;
        }
        this.c += (int)n2;
        this.a.a(this.c);
        return n2;
    }
    
    @Override
    public void close() {
        this.a.a(this.a.c());
    }
    
    @Override
    public int read() {
        this.d = this.a.c();
        this.c = this.a.b();
        if (this.c >= this.d) {
            return -1;
        }
        final int n = 0xFF & this.a.d()[this.c++];
        this.a.a(this.c);
        return n;
    }
}
