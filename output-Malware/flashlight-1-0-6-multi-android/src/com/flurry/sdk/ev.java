// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.Iterator;
import android.content.Intent;
import android.content.IntentFilter;
import java.util.List;
import android.net.NetworkInfo;
import android.net.ConnectivityManager;
import android.content.Context;
import android.content.BroadcastReceiver;

public class ev extends BroadcastReceiver
{
    private static ev e;
    boolean a;
    Boolean b;
    private final dt c;
    private boolean d;
    
    public ev() {
        this.d = false;
        this.c = new dt();
    }
    
    public static ev a() {
        synchronized (ev.class) {
            if (ev.e == null) {
                ev.e = new ev();
            }
            return ev.e;
        }
    }
    
    private boolean a(final Context context) {
        if (!this.d || context == null) {
            return true;
        }
        final NetworkInfo activeNetworkInfo = ((ConnectivityManager)context.getSystemService("connectivity")).getActiveNetworkInfo();
        return activeNetworkInfo != null && activeNetworkInfo.isConnected();
    }
    
    private List f() {
        synchronized (this) {
            return this.c.a();
        }
    }
    
    public void a(final eu eu) {
        synchronized (this) {
            this.c.a(eu);
        }
    }
    
    public void b() {
        synchronized (this) {
            final Context b = do.a().b();
            this.d = (b.checkCallingOrSelfPermission("android.permission.ACCESS_NETWORK_STATE") == 0);
            this.a = this.a(b);
            if (this.d) {
                this.d();
            }
        }
    }
    
    public boolean c() {
        if (this.b != null) {
            return this.b;
        }
        return this.a;
    }
    
    void d() {
        final Context b = do.a().b();
        this.a = this.a(b);
        b.registerReceiver((BroadcastReceiver)this, new IntentFilter("android.net.conn.CONNECTIVITY_CHANGE"));
    }
    
    public ev$a e() {
        if (!this.d) {
            return ev$a.a;
        }
        final NetworkInfo activeNetworkInfo = ((ConnectivityManager)do.a().b().getSystemService("connectivity")).getActiveNetworkInfo();
        if (activeNetworkInfo == null || !activeNetworkInfo.isConnected()) {
            return ev$a.a;
        }
        switch (activeNetworkInfo.getType()) {
            default: {
                return ev$a.c;
            }
            case 1:
            case 9: {
                return ev$a.b;
            }
            case 0:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7: {
                return ev$a.c;
            }
            case 8: {
                return ev$a.a;
            }
        }
    }
    
    public void onReceive(final Context context, final Intent intent) {
        final boolean a = this.a(context);
        if (this.a != a) {
            this.a = a;
            final Iterator<eu> iterator = this.f().iterator();
            while (iterator.hasNext()) {
                iterator.next().a(this.a);
            }
        }
    }
}
