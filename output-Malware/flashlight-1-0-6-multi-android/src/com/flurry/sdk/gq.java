// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.List;
import java.util.Map;

public abstract class gq
{
    public static final gq c;
    public static final gq d;
    public static final gq e;
    public static final gq f;
    public static final gq g;
    public static final gq h;
    public static final gq i;
    public static final gq j;
    public static final gq k;
    public static final gq l;
    public static final gq m;
    public static final gq n;
    public static final gq o;
    public static final gq p;
    public static final gq q;
    public static final gq r;
    public static final gq s;
    public static final gq t;
    public static final gq u;
    public static final gq v;
    public static final gq w;
    public static final gq x;
    public static final gq y;
    public final gq$i a;
    public final gq[] b;
    
    static {
        c = new gq$o("null");
        d = new gq$o("boolean");
        e = new gq$o("int");
        f = new gq$o("long");
        g = new gq$o("float");
        h = new gq$o("double");
        i = new gq$o("string");
        j = new gq$o("bytes");
        k = new gq$o("fixed");
        l = new gq$o("enum");
        m = new gq$o("union");
        n = new gq$o("array-start");
        o = new gq$o("array-end");
        p = new gq$o("map-start");
        q = new gq$o("map-end");
        r = new gq$o("item-end");
        s = new gq$o("field-action");
        t = new gq$g(false, null);
        u = new gq$g(true, null);
        v = new gq$g(true, null);
        w = new gq$g(true, null);
        x = new gq$g(true, null);
        y = new gq$o("map-key-marker");
    }
    
    protected gq(final gq$i gq$i) {
        this(gq$i, null);
    }
    
    protected gq(final gq$i a, final gq[] b) {
        this.b = b;
        this.a = a;
    }
    
    protected static int a(final gq[] array, int i) {
        int n = 0;
        while (i < array.length) {
            int n2;
            if (array[i] instanceof gq$m) {
                n2 = n + ((gq$m)array[i]).a();
            }
            else {
                n2 = n + 1;
            }
            ++i;
            n = n2;
        }
        return n;
    }
    
    static gq a(final gq gq, final gq gq2) {
        return new gq$k(gq, gq2, null);
    }
    
    static gq a(final gq gq, final gq... array) {
        return new gq$j(gq, array, null);
    }
    
    static gq a(final String s) {
        return new gq$d(s, null);
    }
    
    static gq a(final gq... array) {
        return new gq$l(array, null);
    }
    
    static gq a(final gq[] array, final String[] array2) {
        return new gq$a(array, array2, null);
    }
    
    static void a(final gq[] array, int i, final gq[] array2, int n, final Map map, final Map map2) {
        while (i < array.length) {
            final gq a = array[i].a(map, map2);
            if (a instanceof gq$m) {
                final gq[] b = a.b;
                final List<Object> list = map2.get(a);
                if (list == null) {
                    System.arraycopy(b, 0, array2, n, b.length);
                }
                else {
                    list.add(new gq$f(array2, n));
                }
                n += b.length;
            }
            else {
                final int n2 = n + 1;
                array2[n] = a;
                n = n2;
            }
            ++i;
        }
    }
    
    static gq b(final gq... array) {
        return new gq$m(array, null);
    }
    
    public int a() {
        return 1;
    }
    
    public gq a(final Map map, final Map map2) {
        return this;
    }
}
