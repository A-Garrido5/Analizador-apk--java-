// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.Iterator;
import java.util.LinkedList;

public class jh extends hk
{
    protected LinkedList b;
    
    public jh(final String s) {
        super(s);
    }
    
    public jh(final String s, final hg hg) {
        super(s, hg);
    }
    
    public jh(final String s, final hg hg, final Throwable t) {
        super(s, hg, t);
    }
    
    public jh(final String s, final Throwable t) {
        super(s, t);
    }
    
    public static jh a(final hj hj, final String s) {
        return new jh(s, hj.h());
    }
    
    public static jh a(final hj hj, final String s, final Throwable t) {
        return new jh(s, hj.h(), t);
    }
    
    public static jh a(final Throwable t, final jh$a jh$a) {
        jh jh;
        if (t instanceof jh) {
            jh = (jh)t;
        }
        else {
            String s = t.getMessage();
            if (s == null || s.length() == 0) {
                s = "(was " + t.getClass().getName() + ")";
            }
            jh = new jh(s, null, t);
        }
        jh.a(jh$a);
        return jh;
    }
    
    public static jh a(final Throwable t, final Object o, final int n) {
        return a(t, new jh$a(o, n));
    }
    
    public static jh a(final Throwable t, final Object o, final String s) {
        return a(t, new jh$a(o, s));
    }
    
    public void a(final jh$a jh$a) {
        if (this.b == null) {
            this.b = new LinkedList();
        }
        if (this.b.size() < 1000) {
            this.b.addFirst(jh$a);
        }
    }
    
    public void a(final Object o, final String s) {
        this.a(new jh$a(o, s));
    }
    
    protected void a(final StringBuilder sb) {
        final Iterator iterator = this.b.iterator();
        while (iterator.hasNext()) {
            sb.append(iterator.next().toString());
            if (iterator.hasNext()) {
                sb.append("->");
            }
        }
    }
    
    @Override
    public String getMessage() {
        final String message = super.getMessage();
        if (this.b == null) {
            return message;
        }
        StringBuilder sb;
        if (message == null) {
            sb = new StringBuilder();
        }
        else {
            sb = new StringBuilder(message);
        }
        sb.append(" (through reference chain: ");
        this.a(sb);
        sb.append(')');
        return sb.toString();
    }
    
    @Override
    public String toString() {
        return this.getClass().getName() + ": " + this.getMessage();
    }
}
