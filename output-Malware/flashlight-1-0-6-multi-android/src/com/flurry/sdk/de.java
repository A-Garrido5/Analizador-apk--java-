// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.Iterator;
import java.util.List;
import java.util.HashSet;
import java.util.Set;

public abstract class de implements eu
{
    protected final String d;
    Set e;
    dg f;
    protected String g;
    
    public de(final String s, final String d) {
        this.e = new HashSet();
        this.g = "defaultDataKey_";
        this.d = d;
        ev.a().a(this);
        this.a(s);
    }
    
    protected String a(final String s, final String s2) {
        return this.g + s + "_" + s2;
    }
    
    protected void a(final de$a de$a) {
        this.a(new ff() {
            @Override
            public void a() {
                de.this.f();
                if (de$a != null) {
                    de$a.a();
                }
            }
        });
    }
    
    protected void a(final ff ff) {
        do.a().c(ff);
    }
    
    protected void a(final String s) {
        this.a(new ff() {
            @Override
            public void a() {
                de.this.f = new dg(s);
            }
        });
    }
    
    protected void a(final String s, final String s2, final int n) {
        this.a(new ff() {
            @Override
            public void a() {
                if (!de.this.f.a(s, s2)) {
                    eo.a(6, de.this.d, "Internal error. Block wasn't deleted with id = " + s);
                }
                if (!de.this.e.remove(s)) {
                    eo.a(6, de.this.d, "Internal error. Block with id = " + s + " was not in progress state");
                }
            }
        });
    }
    
    @Override
    public void a(final boolean b) {
        eo.a(4, this.d, "onNetworkStateChanged : isNetworkEnable = " + b);
        if (b) {
            this.d();
        }
    }
    
    protected abstract void a(final byte[] p0, final String p1, final String p2);
    
    protected void a(final byte[] array, final String s, final String s2, final de$a de$a) {
        if (array == null || array.length == 0) {
            eo.a(6, this.d, "Report that has to be sent is EMPTY or NULL");
            return;
        }
        this.c(array, s, s2);
        this.a(de$a);
    }
    
    protected void b(final String s, final String s2) {
        this.a(new ff() {
            @Override
            public void a() {
                if (!de.this.e.remove(s)) {
                    eo.a(6, de.this.d, "Internal error. Block with id = " + s + " was not in progress state");
                }
            }
        });
    }
    
    public void b(final byte[] array, final String s, final String s2) {
        this.a(array, s, s2, null);
    }
    
    protected int c() {
        return this.e.size();
    }
    
    protected void c(final String s, final String s2) {
        if (!this.f.a(s, s2)) {
            eo.a(6, this.d, "Internal error. Block wasn't deleted with id = " + s);
        }
        if (!this.e.remove(s)) {
            eo.a(6, this.d, "Internal error. Block with id = " + s + " was not in progress state");
        }
    }
    
    protected void c(final byte[] array, final String s, final String s2) {
        this.a(new ff() {
            @Override
            public void a() {
                de.this.d(array, s, s2);
            }
        });
    }
    
    protected String d(final byte[] array, final String s, final String s2) {
        final String a = this.a(s, s2);
        final df df = new df();
        df.a(array);
        final String a2 = df.a();
        this.f.a(df, a);
        return a2;
    }
    
    protected void d() {
        this.a((de$a)null);
    }
    
    protected boolean e() {
        return this.c() <= 5;
    }
    
    protected void f() {
        if (!ev.a().c()) {
            eo.a(5, this.d, "Reports were not sent! No Internet connection!");
        }
        else {
            final List a = this.f.a();
            if (a == null || a.isEmpty()) {
                eo.a(4, this.d, "No more reports to send.");
                return;
            }
            for (final String s : a) {
                if (!this.e()) {
                    break;
                }
                final List c = this.f.c(s);
                eo.a(4, this.d, "Number of not sent blocks = " + c.size());
                for (int i = 0; i < c.size(); ++i) {
                    final String s2 = c.get(i);
                    if (!this.e.contains(s2)) {
                        if (!this.e()) {
                            break;
                        }
                        final byte[] b = new df(s2).b();
                        if (b == null || b.length == 0) {
                            eo.a(6, this.d, "Internal ERROR! Report is empty!");
                            this.f.a(s2, s);
                        }
                        else {
                            this.e.add(s2);
                            this.a(b, s2, s);
                        }
                    }
                }
            }
        }
    }
}
