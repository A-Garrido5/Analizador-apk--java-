// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

public final class sq$b
{
    private static final hm[] d;
    protected sq$b a;
    protected long b;
    protected final Object[] c;
    
    static {
        d = new hm[16];
        final hm[] values = hm.values();
        System.arraycopy(values, 1, sq$b.d, 1, Math.min(15, -1 + values.length));
    }
    
    public sq$b() {
        this.c = new Object[16];
    }
    
    public final hm a(final int n) {
        long b = this.b;
        if (n > 0) {
            b >>= n << 2;
        }
        return sq$b.d[0xF & (int)b];
    }
    
    public final sq$b a() {
        return this.a;
    }
    
    public final sq$b a(final int n, final hm hm) {
        if (n < 16) {
            this.b(n, hm);
            return null;
        }
        (this.a = new sq$b()).b(0, hm);
        return this.a;
    }
    
    public final sq$b a(final int n, final hm hm, final Object o) {
        if (n < 16) {
            this.b(n, hm, o);
            return null;
        }
        (this.a = new sq$b()).b(0, hm, o);
        return this.a;
    }
    
    public final Object b(final int n) {
        return this.c[n];
    }
    
    public final void b(final int n, final hm hm) {
        long n2 = hm.ordinal();
        if (n > 0) {
            n2 <<= n << 2;
        }
        this.b |= n2;
    }
    
    public final void b(final int n, final hm hm, final Object o) {
        this.c[n] = o;
        long n2 = hm.ordinal();
        if (n > 0) {
            n2 <<= n << 2;
        }
        this.b |= n2;
    }
}
