// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.lang.reflect.Type;
import java.util.Map;
import java.util.HashMap;
import java.lang.reflect.Field;
import java.lang.reflect.Method;

public class oi implements is
{
    protected final mq a;
    protected final qv b;
    protected final sh c;
    protected final Method d;
    protected final Field e;
    protected HashMap f;
    protected final im g;
    protected final sh h;
    protected final jk i;
    protected ov j;
    protected final boolean k;
    protected final Object l;
    protected Class[] m;
    protected jz n;
    protected sh o;
    
    public oi(final mq a, final qv b, final im g, final sh c, final jk i, final jz n, final sh h, final Method d, final Field e, final boolean k, final Object l) {
        this.a = a;
        this.b = b;
        this.g = g;
        this.c = c;
        this.i = i;
        ov a2;
        if (i == null) {
            a2 = ov.a();
        }
        else {
            a2 = null;
        }
        this.j = a2;
        this.n = n;
        this.h = h;
        this.d = d;
        this.e = e;
        this.k = k;
        this.l = l;
    }
    
    public oi(final mq mq, final qv qv, final String s, final sh sh, final jk jk, final jz jz, final sh sh2, final Method method, final Field field, final boolean b, final Object o) {
        this(mq, qv, new im(s), sh, jk, jz, sh2, method, field, b, o);
    }
    
    protected oi(final oi oi) {
        this(oi, oi.i);
    }
    
    protected oi(final oi oi, final jk i) {
        this.i = i;
        this.a = oi.a;
        this.b = oi.b;
        this.c = oi.c;
        this.d = oi.d;
        this.e = oi.e;
        if (oi.f != null) {
            this.f = new HashMap(oi.f);
        }
        this.g = oi.g;
        this.h = oi.h;
        this.j = oi.j;
        this.k = oi.k;
        this.l = oi.l;
        this.m = oi.m;
        this.n = oi.n;
        this.o = oi.o;
    }
    
    protected jk a(final ov ov, final Class clazz, final jw jw) {
        ov$d ov$d;
        if (this.o != null) {
            ov$d = ov.a(jw.a(this.o, clazz), jw, this);
        }
        else {
            ov$d = ov.a(clazz, jw, this);
        }
        if (ov != ov$d.b) {
            this.j = ov$d.b;
        }
        return ov$d.a;
    }
    
    public oi a(final jk jk) {
        if (this.getClass() != oi.class) {
            throw new IllegalStateException("BeanPropertyWriter sub-class does not override 'withSerializer()'; needs to!");
        }
        return new oi(this, jk);
    }
    
    @Override
    public sh a() {
        return this.c;
    }
    
    public final Object a(final Object o) {
        if (this.d != null) {
            return this.d.invoke(o, new Object[0]);
        }
        return this.e.get(o);
    }
    
    public void a(final sh o) {
        this.o = o;
    }
    
    public void a(final Object o, final hf hf, final jw jw) {
        final Object a = this.a(o);
        if (a == null) {
            if (!this.k) {
                hf.a(this.g);
                jw.a(hf);
            }
        }
        else {
            if (a == o) {
                this.b(o);
            }
            if (this.l == null || !this.l.equals(a)) {
                jk jk = this.i;
                if (jk == null) {
                    final Class<?> class1 = a.getClass();
                    final ov j = this.j;
                    jk = j.a(class1);
                    if (jk == null) {
                        jk = this.a(j, class1, jw);
                    }
                }
                hf.a(this.g);
                if (this.n == null) {
                    jk.a(a, hf, jw);
                    return;
                }
                jk.a(a, hf, jw, this.n);
            }
        }
    }
    
    public void a(final Class[] m) {
        this.m = m;
    }
    
    @Override
    public mq b() {
        return this.a;
    }
    
    protected void b(final Object o) {
        throw new jh("Direct self-reference leading to cycle");
    }
    
    public oi c() {
        return new oz(this);
    }
    
    public String d() {
        return this.g.a();
    }
    
    public boolean e() {
        return this.i != null;
    }
    
    public sh f() {
        return this.h;
    }
    
    public Type g() {
        if (this.d != null) {
            return this.d.getGenericReturnType();
        }
        return this.e.getGenericType();
    }
    
    public Class[] h() {
        return this.m;
    }
    
    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder(40);
        sb.append("property '").append(this.d()).append("' (");
        if (this.d != null) {
            sb.append("via method ").append(this.d.getDeclaringClass().getName()).append("#").append(this.d.getName());
        }
        else {
            sb.append("field \"").append(this.e.getDeclaringClass().getName()).append("#").append(this.e.getName());
        }
        if (this.i == null) {
            sb.append(", no static serializer");
        }
        else {
            sb.append(", static serializer of type " + this.i.getClass().getName());
        }
        sb.append(')');
        return sb.toString();
    }
}
