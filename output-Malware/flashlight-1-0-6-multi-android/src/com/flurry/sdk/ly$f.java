// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

@kb
final class ly$f extends ly$a
{
    public ly$f() {
        super(float[].class);
    }
    
    private final float[] c(final hj hj, final iz iz) {
        if (hj.e() == hm.h && iz.a(iy$a.q) && hj.k().length() == 0) {
            return null;
        }
        if (!iz.a(iy$a.o)) {
            throw iz.b(this.q);
        }
        return new float[] { this.y(hj, iz) };
    }
    
    public final float[] b(final hj hj, final iz iz) {
        if (!hj.j()) {
            return this.c(hj, iz);
        }
        final qw$e f = iz.h().f();
        float[] array = (float[])f.a();
        int n = 0;
        while (hj.b() != hm.e) {
            final float y = this.y(hj, iz);
            int n2;
            if (n >= array.length) {
                final float[] array2 = (float[])f.a(array, n);
                n2 = 0;
                array = array2;
            }
            else {
                n2 = n;
            }
            n = n2 + 1;
            array[n2] = y;
        }
        return (float[])f.b(array, n);
    }
}
