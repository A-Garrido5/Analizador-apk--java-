// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import android.content.Context;
import android.location.LocationListener;
import android.os.Looper;
import android.text.TextUtils;
import android.location.Location;
import android.location.Criteria;
import android.location.LocationManager;

public class dz implements dq$a, fb$a
{
    private static final String c;
    private static dz q;
    boolean a;
    boolean b;
    private final int d;
    private final long e;
    private final long f;
    private final long g;
    private long h;
    private LocationManager i;
    private Criteria j;
    private Location k;
    private dz$a l;
    private String m;
    private int n;
    private int o;
    private volatile Location p;
    
    static {
        c = dz.class.getSimpleName();
    }
    
    private dz() {
        this.d = 3;
        this.e = 10000L;
        this.f = 90000L;
        this.g = 0L;
        this.h = 0L;
        this.a = false;
        this.n = 0;
        this.o = 0;
        this.l = new dz$a(this);
        final dq a = dp.a();
        this.j = (Criteria)a.a("LocationCriteria");
        a.a("LocationCriteria", this);
        eo.a(4, dz.c, "initSettings, LocationCriteria = " + this.j);
        this.b = (boolean)a.a("ReportLocation");
        a.a("ReportLocation", this);
        eo.a(4, dz.c, "initSettings, ReportLocation = " + this.b);
    }
    
    public static dz a() {
        synchronized (dz.class) {
            if (dz.q == null) {
                dz.q = new dz();
            }
            return dz.q;
        }
    }
    
    private void a(final String s) {
        if (!TextUtils.isEmpty((CharSequence)s)) {
            this.i.requestLocationUpdates(s, 10000L, 0.0f, (LocationListener)this.l, Looper.getMainLooper());
        }
    }
    
    private Location b(final String s) {
        final boolean empty = TextUtils.isEmpty((CharSequence)s);
        Location lastKnownLocation = null;
        if (!empty) {
            lastKnownLocation = this.i.getLastKnownLocation(s);
        }
        return lastKnownLocation;
    }
    
    private void i() {
        this.i.removeUpdates((LocationListener)this.l);
        this.a = false;
        this.o = 0;
        this.h = 0L;
        this.m();
        eo.a(4, dz.c, "LocationProvider stopped");
    }
    
    private void j() {
        if (this.b && this.p == null) {
            final Context b = do.a().b();
            if (b.checkCallingOrSelfPermission("android.permission.ACCESS_FINE_LOCATION") == 0 || b.checkCallingOrSelfPermission("android.permission.ACCESS_COARSE_LOCATION") == 0) {
                this.i();
                final String k = this.k();
                this.a(k);
                this.k = this.b(k);
                this.h = 90000L + System.currentTimeMillis();
                this.l();
                this.a = true;
                eo.a(4, dz.c, "LocationProvider started");
            }
        }
    }
    
    private String k() {
        Criteria j = this.j;
        if (j == null) {
            j = new Criteria();
        }
        String s;
        if (TextUtils.isEmpty((CharSequence)this.m)) {
            s = this.i.getBestProvider(j, true);
        }
        else {
            s = this.m;
        }
        eo.a(4, dz.c, "provider = " + s);
        return s;
    }
    
    private void l() {
        eo.a(4, dz.c, "Register location timer");
        fa.a().a(this);
    }
    
    private void m() {
        eo.a(4, dz.c, "Unregister location timer");
        fa.a().b(this);
    }
    
    public void a(final float n, final float n2) {
        (this.p = new Location("Explicit")).setLatitude((double)n);
        this.p.setLongitude((double)n2);
    }
    
    @Override
    public void a(final fb fb) {
        if (this.h > 0L && this.h < System.currentTimeMillis()) {
            eo.a(4, dz.c, "No location received in 90 seconds , stopping LocationManager");
            this.i();
        }
    }
    
    @Override
    public void a(final String s, final Object o) {
        if (s.equals("LocationCriteria")) {
            this.j = (Criteria)o;
            eo.a(4, dz.c, "onSettingUpdate, LocationCriteria = " + this.j);
            if (this.a) {
                this.j();
            }
        }
        else {
            if (!s.equals("ReportLocation")) {
                eo.a(6, dz.c, "LocationProvider internal error! Had to be LocationCriteria or ReportLocation key.");
                return;
            }
            this.b = (boolean)o;
            eo.a(4, dz.c, "onSettingUpdate, ReportLocation = " + this.b);
            if (!this.b) {
                this.i();
                return;
            }
            if (!this.a && this.n > 0) {
                this.j();
            }
        }
    }
    
    public void b() {
        synchronized (this) {
            if (this.i == null) {
                this.i = (LocationManager)do.a().b().getSystemService("location");
            }
        }
    }
    
    public void c() {
        synchronized (this) {
            eo.a(4, dz.c, "Location provider subscribed");
            ++this.n;
            if (!this.a && this.o < 3) {
                this.j();
            }
        }
    }
    
    public void d() {
        synchronized (this) {
            eo.a(4, dz.c, "Location provider unsubscribed");
            if (this.n <= 0) {
                eo.a(6, dz.c, "Error! Unsubscribed too many times!");
            }
            else {
                --this.n;
                if (this.n == 0) {
                    this.i();
                }
            }
        }
    }
    
    public void e() {
        this.p = null;
    }
    
    public Location f() {
        if (this.p != null) {
            return this.p;
        }
        final boolean b = this.b;
        Object k = null;
        if (b) {
            final Location b2 = this.b(this.k());
            if (b2 != null) {
                this.k = b2;
            }
            k = this.k;
        }
        eo.a(4, dz.c, "getLocation() = " + k);
        return (Location)k;
    }
    
    public void g() {
        this.n = 0;
        this.i();
    }
}
