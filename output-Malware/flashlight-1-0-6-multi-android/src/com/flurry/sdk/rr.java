// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

public final class rr extends rv
{
    private static final rr[] d;
    final int c;
    
    static {
        d = new rr[12];
        for (int i = 0; i < 12; ++i) {
            rr.d[i] = new rr(i - 1);
        }
    }
    
    public rr(final int c) {
        this.c = c;
    }
    
    public static rr a(final int n) {
        if (n > 10 || n < -1) {
            return new rr(n);
        }
        return rr.d[n + 1];
    }
    
    @Override
    public final void a(final hf hf, final jw jw) {
        hf.b(this.c);
    }
    
    @Override
    public final boolean e() {
        return true;
    }
    
    @Override
    public final boolean equals(final Object o) {
        if (o != this) {
            if (o == null) {
                return false;
            }
            if (o.getClass() != this.getClass()) {
                return false;
            }
            if (((rr)o).c != this.c) {
                return false;
            }
        }
        return true;
    }
    
    @Override
    public final int hashCode() {
        return this.c;
    }
    
    @Override
    public final int k() {
        return this.c;
    }
    
    @Override
    public final long l() {
        return this.c;
    }
    
    @Override
    public final double m() {
        return this.c;
    }
    
    @Override
    public final String n() {
        return ij.a(this.c);
    }
}
