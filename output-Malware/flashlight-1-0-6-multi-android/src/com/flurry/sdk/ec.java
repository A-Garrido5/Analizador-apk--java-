// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.Set;
import java.util.Iterator;
import java.util.WeakHashMap;
import java.util.Map;

public final class ec
{
    private static ec a;
    private final Thread.UncaughtExceptionHandler b;
    private final Map c;
    
    private ec() {
        this.c = new WeakHashMap();
        this.b = Thread.getDefaultUncaughtExceptionHandler();
        Thread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler)new ec$a(this, null));
    }
    
    public static ec a() {
        synchronized (ec.class) {
            if (ec.a == null) {
                ec.a = new ec();
            }
            return ec.a;
        }
    }
    
    private void a(final Thread thread, final Throwable t) {
        for (final Thread.UncaughtExceptionHandler uncaughtExceptionHandler : this.b()) {
            try {
                uncaughtExceptionHandler.uncaughtException(thread, t);
            }
            catch (Throwable t2) {}
        }
    }
    
    private Set b() {
        synchronized (this.c) {
            return this.c.keySet();
        }
    }
    
    private void b(final Thread thread, final Throwable t) {
        if (this.b != null) {
            this.b.uncaughtException(thread, t);
        }
    }
    
    public final void a(final Thread.UncaughtExceptionHandler uncaughtExceptionHandler) {
        synchronized (this.c) {
            this.c.put(uncaughtExceptionHandler, null);
        }
    }
}
