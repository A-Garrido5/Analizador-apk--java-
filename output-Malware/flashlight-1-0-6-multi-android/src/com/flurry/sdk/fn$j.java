// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.Collection;
import java.util.List;
import java.util.ArrayList;

class fn$j extends ArrayList
{
    private boolean a;
    
    public fn$j() {
        this.a = false;
    }
    
    public fn$j(final int n) {
        super(n);
        this.a = false;
    }
    
    public fn$j(final List list) {
        super(list);
        this.a = false;
    }
    
    private void b() {
        if (this.a) {
            throw new IllegalStateException();
        }
    }
    
    public List a() {
        this.a = true;
        return this;
    }
    
    @Override
    public boolean add(final Object o) {
        this.b();
        return super.add(o);
    }
    
    @Override
    public boolean addAll(final int n, final Collection collection) {
        this.b();
        return super.addAll(n, collection);
    }
    
    @Override
    public boolean addAll(final Collection collection) {
        this.b();
        return super.addAll(collection);
    }
    
    @Override
    public void clear() {
        this.b();
        super.clear();
    }
    
    @Override
    public Object remove(final int n) {
        this.b();
        return super.remove(n);
    }
    
    @Override
    public boolean remove(final Object o) {
        this.b();
        return super.remove(o);
    }
    
    @Override
    public boolean removeAll(final Collection collection) {
        this.b();
        return super.removeAll(collection);
    }
    
    @Override
    public boolean retainAll(final Collection collection) {
        this.b();
        return super.retainAll(collection);
    }
}
