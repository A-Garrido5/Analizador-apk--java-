// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.HashMap;
import java.util.concurrent.ConcurrentHashMap;

public class kv extends jc
{
    protected final ConcurrentHashMap a;
    protected final HashMap b;
    protected final rh c;
    protected jb d;
    
    public kv() {
        this(kq.h);
    }
    
    public kv(final jb d) {
        this.a = new ConcurrentHashMap(64, 0.75f, 2);
        this.b = new HashMap(8);
        this.d = d;
        this.c = new rh();
    }
    
    @Override
    public im a(final iy iy, final sh sh) {
        return this.c.a(sh, iy);
    }
    
    @Override
    public jc a(final ip ip) {
        return this.a(this.d.a(ip));
    }
    
    @Override
    public jc a(final jd jd) {
        return this.a(this.d.a(jd));
    }
    
    @Override
    public jc a(final jm jm) {
        return this.a(this.d.a(jm));
    }
    
    @Override
    public jc a(final ky ky) {
        return this.a(this.d.a(ky));
    }
    
    @Override
    public jg a(final iy iy, final sh sh, final is is) {
        jg jg = this.a(sh);
        if (jg != null) {
            if (jg instanceof iv) {
                jg = ((iv)jg).a(iy, is);
            }
        }
        else {
            jg = this.d(iy, sh, is);
            if (jg == null) {
                jg = this.b(sh);
            }
            if (jg instanceof iv) {
                return ((iv)jg).a(iy, is);
            }
        }
        return jg;
    }
    
    protected jg a(final sh sh) {
        if (sh == null) {
            throw new IllegalArgumentException();
        }
        return this.a.get(sh);
    }
    
    public kv a(final jb jb) {
        if (this.getClass() != kv.class) {
            throw new IllegalStateException("DeserializerProvider of type " + this.getClass().getName() + " does not override 'withFactory()' method");
        }
        return new kv(jb);
    }
    
    protected void a(final iy iy, final js js) {
        js.a(iy, this);
    }
    
    @Override
    public jg b(final iy iy, final sh sh, final is is) {
        final jg a = this.a(iy, sh, is);
        final jy b = this.d.b(iy, sh, is);
        if (b != null) {
            return new kv$a(b, a);
        }
        return a;
    }
    
    protected jg b(final sh sh) {
        if (!qy.d(sh.p())) {
            throw new jh("Can not find a Value deserializer for abstract type " + sh);
        }
        throw new jh("Can not find a Value deserializer for type " + sh);
    }
    
    @Override
    public jl c(final iy iy, final sh sh, final is is) {
        jl jl = this.d.a(iy, sh, is);
        if (jl instanceof iw) {
            jl = ((iw)jl).a(iy, is);
        }
        if (jl == null) {
            jl = this.c(sh);
        }
        return jl;
    }
    
    protected jl c(final sh sh) {
        throw new jh("Can not find a (Map) Key deserializer for type " + sh);
    }
    
    protected jg d(final iy iy, final sh sh, final is is) {
        final int size;
        synchronized (this.b) {
            final jg a = this.a(sh);
            if (a != null) {
                return a;
            }
            size = this.b.size();
            if (size > 0) {
                final jg jg = this.b.get(sh);
                if (jg != null) {
                    return jg;
                }
            }
        }
        try {
            final jg e = this.e(iy, sh, is);
            if (size == 0 && this.b.size() > 0) {
                this.b.clear();
            }
            // monitorexit(hashMap)
            return e;
        }
        finally {
            if (size == 0 && this.b.size() > 0) {
                this.b.clear();
            }
        }
    }
    
    protected jg e(final iy iy, final sh sh, final is is) {
        jg f;
        while (true) {
            try {
                f = this.f(iy, sh, is);
                if (f == null) {
                    f = null;
                    return f;
                }
            }
            catch (IllegalArgumentException ex) {
                throw new jh(ex.getMessage(), null, ex);
            }
            final boolean b = f instanceof js;
            boolean booleanValue;
            if (f.getClass() == ko.class) {
                booleanValue = true;
            }
            else {
                booleanValue = false;
            }
            if (!booleanValue && iy.a(iy$a.a)) {
                final iq a = iy.a();
                final Boolean a2 = a.a(mn.a(f.getClass(), a, null));
                if (a2 != null) {
                    booleanValue = a2;
                }
            }
            if (b) {
                this.b.put(sh, f);
                this.a(iy, (js)f);
                this.b.remove(sh);
            }
            if (booleanValue) {
                break;
            }
            return f;
        }
        this.a.put(sh, f);
        return f;
    }
    
    protected jg f(final iy iy, final sh sh, final is is) {
        if (sh.r()) {
            return this.d.b(iy, this, sh, is);
        }
        if (sh.f()) {
            if (sh.b()) {
                return this.d.a(iy, this, (qi)sh, is);
            }
            if (sh.j()) {
                final qn qn = (qn)sh;
                if (qn.l()) {
                    return this.d.a(iy, this, (qo)qn, is);
                }
                return this.d.a(iy, this, qn, is);
            }
            else if (sh.i()) {
                final qk qk = (qk)sh;
                if (qk.a_()) {
                    return this.d.a(iy, this, (ql)qk, is);
                }
                return this.d.a(iy, this, qk, is);
            }
        }
        if (hh.class.isAssignableFrom(sh.p())) {
            return this.d.c(iy, this, sh, is);
        }
        return this.d.a(iy, this, sh, is);
    }
}
