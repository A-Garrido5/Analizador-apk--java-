// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.Iterator;
import java.util.ArrayList;

public final class rj extends ro
{
    protected ArrayList c;
    
    public rj(final rs rs) {
        super(rs);
    }
    
    private boolean a(final ArrayList list) {
        final int size = list.size();
        if (this.p() != size) {
            return false;
        }
        for (int i = 0; i < size; ++i) {
            if (!((hh)this.c.get(i)).equals(list.get(i))) {
                return false;
            }
        }
        return true;
    }
    
    private void b(final hh hh) {
        if (this.c == null) {
            this.c = new ArrayList();
        }
        this.c.add(hh);
    }
    
    @Override
    public final hh a(final String s) {
        return null;
    }
    
    @Override
    public final void a(final hf hf, final jw jw) {
        hf.b();
        if (this.c != null) {
            final Iterator<hh> iterator = this.c.iterator();
            while (iterator.hasNext()) {
                ((rk)iterator.next()).a(hf, jw);
            }
        }
        hf.c();
    }
    
    @Override
    public final void a(final hf hf, final jw jw, final jz jz) {
        jz.c(this, hf);
        if (this.c != null) {
            final Iterator<hh> iterator = this.c.iterator();
            while (iterator.hasNext()) {
                ((rk)iterator.next()).a(hf, jw);
            }
        }
        jz.f(this, hf);
    }
    
    public final void a(hh s) {
        if (s == null) {
            s = this.s();
        }
        this.b(s);
    }
    
    @Override
    public final boolean b() {
        return true;
    }
    
    @Override
    public final boolean equals(final Object o) {
        if (o != this) {
            if (o == null) {
                return false;
            }
            if (o.getClass() != this.getClass()) {
                return false;
            }
            final rj rj = (rj)o;
            if (this.c != null && this.c.size() != 0) {
                return rj.a(this.c);
            }
            if (rj.p() != 0) {
                return false;
            }
        }
        return true;
    }
    
    @Override
    public final int hashCode() {
        int n;
        if (this.c == null) {
            n = 1;
        }
        else {
            final int size = this.c.size();
            final Iterator<hh> iterator = (Iterator<hh>)this.c.iterator();
            n = size;
            while (iterator.hasNext()) {
                final hh hh = iterator.next();
                int n2;
                if (hh != null) {
                    n2 = (n ^ hh.hashCode());
                }
                else {
                    n2 = n;
                }
                n = n2;
            }
        }
        return n;
    }
    
    @Override
    public final int p() {
        if (this.c == null) {
            return 0;
        }
        return this.c.size();
    }
    
    @Override
    public final Iterator q() {
        if (this.c == null) {
            return ro$a.a();
        }
        return this.c.iterator();
    }
    
    @Override
    public final String toString() {
        final StringBuilder sb = new StringBuilder(16 + (this.p() << 4));
        sb.append('[');
        if (this.c != null) {
            for (int size = this.c.size(), i = 0; i < size; ++i) {
                if (i > 0) {
                    sb.append(',');
                }
                sb.append(((hh)this.c.get(i)).toString());
            }
        }
        sb.append(']');
        return sb.toString();
    }
}
