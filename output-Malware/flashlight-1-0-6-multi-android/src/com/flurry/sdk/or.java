// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.io.IOException;
import java.util.Date;
import java.text.DateFormat;

public class or extends jw
{
    public static final jk d;
    @Deprecated
    public static final jk e;
    public static final jk f;
    protected final jv g;
    protected final ox h;
    protected final rh i;
    protected jk j;
    protected jk k;
    protected jk l;
    protected jk m;
    protected final ow n;
    protected DateFormat o;
    
    static {
        d = new ot("Null key for a Map not allowed in JSON (use a converting NullKeySerializer?)");
        e = new qb();
        f = new oy();
    }
    
    public or() {
        super(null);
        this.j = or.f;
        this.l = pq.a;
        this.m = or.d;
        this.g = null;
        this.h = new ox();
        this.n = null;
        this.i = new rh();
    }
    
    protected or(final ju ju, final or or, final jv g) {
        super(ju);
        this.j = or.f;
        this.l = pq.a;
        this.m = or.d;
        if (ju == null) {
            throw new NullPointerException();
        }
        this.g = g;
        this.h = or.h;
        this.j = or.j;
        this.k = or.k;
        this.l = or.l;
        this.m = or.m;
        this.i = or.i;
        this.n = this.h.a();
    }
    
    protected jk a(final jk jk, final is is) {
        if (!(jk instanceof ix)) {
            return jk;
        }
        jk a = ((ix)jk).a(this.b, is);
        if (a != jk) {
            if (a instanceof jt) {
                ((jt)a).a(this);
            }
        }
        else {
            a = jk;
        }
        return a;
    }
    
    @Override
    public jk a(final sh sh, final is is) {
        jk jk = this.n.b(sh);
        if (jk == null) {
            jk = this.h.a(sh);
            if (jk == null) {
                jk = this.c(sh, is);
                if (jk == null) {
                    return this.a(sh.p());
                }
            }
        }
        return this.a(jk, is);
    }
    
    @Override
    public jk a(final sh sh, final boolean b, final is is) {
        jk jk = this.n.a(sh);
        if (jk == null) {
            jk = this.h.b(sh);
            if (jk == null) {
                final jk a = this.a(sh, is);
                final jz b2 = this.g.b(this.b, sh, is);
                if (b2 != null) {
                    jk = new or$a(b2, a);
                }
                else {
                    jk = a;
                }
                if (b) {
                    this.h.a(sh, jk);
                    return jk;
                }
            }
        }
        return jk;
    }
    
    public jk a(final Class clazz) {
        return this.j;
    }
    
    @Override
    public jk a(final Class clazz, final is is) {
        jk jk = this.n.b(clazz);
        if (jk == null) {
            jk = this.h.a(clazz);
            if (jk == null) {
                jk = this.h.a(this.b.b(clazz));
                if (jk == null) {
                    jk = this.b(clazz, is);
                    if (jk == null) {
                        return this.a(clazz);
                    }
                }
            }
        }
        return this.a(jk, is);
    }
    
    @Override
    public jk a(final Class clazz, final boolean b, final is is) {
        jk jk = this.n.a(clazz);
        if (jk == null) {
            jk = this.h.b(clazz);
            if (jk == null) {
                final jk a = this.a(clazz, is);
                final jz b2 = this.g.b(this.b, this.b.b(clazz), is);
                if (b2 != null) {
                    jk = new or$a(b2, a);
                }
                else {
                    jk = a;
                }
                if (b) {
                    this.h.a(clazz, jk);
                    return jk;
                }
            }
        }
        return jk;
    }
    
    protected or a(final ju ju, final jv jv) {
        return new or(ju, this, jv);
    }
    
    @Override
    public final void a(final long n, final hf hf) {
        if (this.a(ju$a.q)) {
            hf.a(n);
            return;
        }
        if (this.o == null) {
            this.o = (DateFormat)this.b.n().clone();
        }
        hf.b(this.o.format(new Date(n)));
    }
    
    protected void a(final hf hf, final Object o) {
        Label_0029: {
            if (o != null) {
                break Label_0029;
            }
            jk jk = this.d();
            boolean a = false;
            try {
                // iftrue(Label_0012:, !a)
                while (true) {
                    while (true) {
                        jk.a(o, hf, this);
                        if (a) {
                            hf.e();
                        }
                        return;
                        hf.d();
                        hf.a(this.i.a(o.getClass(), this.b));
                        continue;
                    }
                    jk = this.a(o.getClass(), true, null);
                    a = this.b.a(ju$a.j);
                    continue;
                }
            }
            catch (IOException ex) {
                throw ex;
            }
            catch (Exception ex2) {
                String s = ex2.getMessage();
                if (s == null) {
                    s = "[no message for " + ex2.getClass().getName() + "]";
                }
                throw new jh(s, ex2);
            }
        }
    }
    
    @Override
    public final void a(final ju ju, final hf hf, final Object o, final jv jv) {
        if (jv == null) {
            throw new IllegalArgumentException("Can not pass null serializerFactory");
        }
        final or a = this.a(ju, jv);
        if (a.getClass() != this.getClass()) {
            throw new IllegalStateException("Broken serializer provider: createInstance returned instance of type " + a.getClass() + "; blueprint of type " + this.getClass());
        }
        a.a(hf, o);
    }
    
    @Override
    public final void a(final Date date, final hf hf) {
        if (this.a(ju$a.q)) {
            hf.a(date.getTime());
            return;
        }
        if (this.o == null) {
            this.o = (DateFormat)this.b.n().clone();
        }
        hf.b(this.o.format(date));
    }
    
    @Override
    public jk b(final sh sh, final is is) {
        jk jk = this.g.c(this.b, sh, is);
        if (jk == null) {
            if (this.k == null) {
                jk = qc.a(sh);
            }
            else {
                jk = this.k;
            }
        }
        if (jk instanceof ix) {
            jk = ((ix)jk).a(this.b, is);
        }
        return jk;
    }
    
    protected jk b(final Class clazz, final is is) {
        try {
            final jk d = this.d(this.b.b(clazz), is);
            if (d != null) {
                this.h.a(clazz, d, this);
            }
            return d;
        }
        catch (IllegalArgumentException ex) {
            throw new jh(ex.getMessage(), null, ex);
        }
    }
    
    @Override
    public void b(final long n, final hf hf) {
        if (this.a(ju$a.r)) {
            hf.a(String.valueOf(n));
            return;
        }
        if (this.o == null) {
            this.o = (DateFormat)this.b.n().clone();
        }
        hf.a(this.o.format(new Date(n)));
    }
    
    @Override
    public void b(final Date date, final hf hf) {
        if (this.a(ju$a.r)) {
            hf.a(String.valueOf(date.getTime()));
            return;
        }
        if (this.o == null) {
            this.o = (DateFormat)this.b.n().clone();
        }
        hf.a(this.o.format(date));
    }
    
    @Override
    public jk c() {
        return this.m;
    }
    
    protected jk c(final sh sh, final is is) {
        try {
            final jk d = this.d(sh, is);
            if (d != null) {
                this.h.a(sh, d, this);
            }
            return d;
        }
        catch (IllegalArgumentException ex) {
            throw new jh(ex.getMessage(), null, ex);
        }
    }
    
    @Override
    public jk d() {
        return this.l;
    }
    
    protected jk d(final sh sh, final is is) {
        return this.g.a(this.b, sh, is);
    }
}
