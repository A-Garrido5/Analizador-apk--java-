// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import com.flurry.org.codehaus.jackson.annotate.JsonTypeInfo$As;

public class nj extends nv
{
    public nj(final sh sh, final nh nh, final is is, final Class clazz) {
        super(sh, nh, is, clazz);
    }
    
    private final Object f(final hj hj, final iz iz) {
        final boolean j = hj.j();
        final Object a = this.a(iz, this.e(hj, iz)).a(hj, iz);
        if (j && hj.b() != hm.e) {
            throw iz.a(hj, hm.e, "expected closing END_ARRAY after type information and deserialized value");
        }
        return a;
    }
    
    @Override
    public JsonTypeInfo$As a() {
        return JsonTypeInfo$As.WRAPPER_ARRAY;
    }
    
    @Override
    public Object a(final hj hj, final iz iz) {
        return this.f(hj, iz);
    }
    
    @Override
    public Object b(final hj hj, final iz iz) {
        return this.f(hj, iz);
    }
    
    @Override
    public Object c(final hj hj, final iz iz) {
        return this.f(hj, iz);
    }
    
    @Override
    public Object d(final hj hj, final iz iz) {
        return this.f(hj, iz);
    }
    
    protected final String e(final hj hj, final iz iz) {
        if (!hj.j()) {
            if (this.b instanceof nw && this.e != null) {
                return ((nw)this.b).a();
            }
            throw iz.a(hj, hm.d, "need JSON Array to contain As.WRAPPER_ARRAY type information for class " + this.c());
        }
        else {
            if (hj.b() == hm.h) {
                final String k = hj.k();
                hj.b();
                return k;
            }
            if (this.b instanceof nw && this.e != null) {
                return ((nw)this.b).a();
            }
            throw iz.a(hj, hm.h, "need JSON String that contains type id (for subtype of " + this.c() + ")");
        }
    }
}
