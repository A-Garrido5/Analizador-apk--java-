// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

class fn$g extends fn$n
{
    private final int i;
    
    public fn$g(final fn$m fn$m, final String s, final int i) {
        super(fn$v.f, fn$m, s);
        if (i < 0) {
            throw new IllegalArgumentException("Invalid fixed size: " + i);
        }
        this.i = i;
    }
    
    @Override
    void a(final fn$o fn$o, final hf hf) {
        if (this.c(fn$o, hf)) {
            return;
        }
        hf.d();
        hf.a("type", "fixed");
        this.d(fn$o, hf);
        if (this.e() != null) {
            hf.a("doc", this.e());
        }
        hf.a("size", this.i);
        this.c.a(hf);
        this.a(hf);
        hf.e();
    }
    
    @Override
    public boolean equals(final Object o) {
        if (o != this) {
            if (!(o instanceof fn$g)) {
                return false;
            }
            final fn$g fn$g = (fn$g)o;
            if (!this.c(fn$g) || !this.a(fn$g) || this.i != fn$g.i || !this.c.equals(fn$g.c)) {
                return false;
            }
        }
        return true;
    }
    
    @Override
    public int l() {
        return this.i;
    }
    
    @Override
    int m() {
        return super.m() + this.i;
    }
}
