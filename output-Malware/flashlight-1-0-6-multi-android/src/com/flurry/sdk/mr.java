// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.lang.reflect.Member;
import java.lang.reflect.Type;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.AnnotatedElement;
import java.lang.reflect.TypeVariable;
import java.lang.reflect.Method;

public final class mr extends mu
{
    protected final Method a;
    protected Class[] c;
    
    public mr(final Method a, final mv mv, final mv[] array) {
        super(mv, array);
        this.a = a;
    }
    
    public final mr a(final mv mv) {
        return new mr(this.a, mv, this.d);
    }
    
    public final mr a(final Method method) {
        return new mr(method, this.b, this.d);
    }
    
    @Override
    public final sh a(final qr qr) {
        return this.a(qr, this.a.getTypeParameters());
    }
    
    public final Class a(final int n) {
        final Class<?>[] parameterTypes = this.a.getParameterTypes();
        if (n >= parameterTypes.length) {
            return null;
        }
        return parameterTypes[n];
    }
    
    @Override
    public final Object a(final Object o) {
        return this.a.invoke(null, o);
    }
    
    @Override
    public final Object a(final Object[] array) {
        return this.a.invoke(null, array);
    }
    
    @Override
    public final void a(final Object o, final Object o2) {
        try {
            this.a.invoke(o, o2);
        }
        catch (IllegalAccessException ex) {
            throw new IllegalArgumentException("Failed to setValue() with method " + this.n() + ": " + ex.getMessage(), ex);
        }
        catch (InvocationTargetException ex2) {
            throw new IllegalArgumentException("Failed to setValue() with method " + this.n() + ": " + ex2.getMessage(), ex2);
        }
    }
    
    @Override
    public final String b() {
        return this.a.getName();
    }
    
    @Override
    public final Type b(final int n) {
        final Type[] genericParameterTypes = this.a.getGenericParameterTypes();
        if (n >= genericParameterTypes.length) {
            return null;
        }
        return genericParameterTypes[n];
    }
    
    @Override
    public final Type c() {
        return this.a.getGenericReturnType();
    }
    
    @Override
    public final Class d() {
        return this.a.getReturnType();
    }
    
    public final Method e() {
        return this.a;
    }
    
    public final int f() {
        return this.l().length;
    }
    
    @Override
    public final Object g() {
        return this.a.invoke(null, new Object[0]);
    }
    
    @Override
    public final Class h() {
        return this.a.getDeclaringClass();
    }
    
    @Override
    public final Member i() {
        return this.a;
    }
    
    public final Type[] l() {
        return this.a.getGenericParameterTypes();
    }
    
    public final Class[] m() {
        if (this.c == null) {
            this.c = this.a.getParameterTypes();
        }
        return this.c;
    }
    
    public final String n() {
        return this.h().getName() + "#" + this.b() + "(" + this.f() + " params)";
    }
    
    @Override
    public final String toString() {
        return "[method " + this.b() + ", annotations: " + this.b + "]";
    }
}
