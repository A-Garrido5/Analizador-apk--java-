// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.io.EOFException;
import java.nio.ByteBuffer;
import java.io.IOException;
import java.io.InputStream;

public class gb extends gf
{
    private gb$c a;
    private byte[] b;
    private int c;
    private int d;
    private int e;
    private final gy f;
    
    protected gb() {
        this.a = null;
        this.b = null;
        this.c = 0;
        this.d = 0;
        this.e = 0;
        this.f = new gy();
    }
    
    gb(final InputStream inputStream, final int n) {
        this.a = null;
        this.b = null;
        this.c = 0;
        this.d = 0;
        this.e = 0;
        this.f = new gy();
        this.a(inputStream, n);
    }
    
    gb(final byte[] array, final int n, final int n2) {
        this.a = null;
        this.b = null;
        this.c = 0;
        this.d = 0;
        this.e = 0;
        this.f = new gy();
        this.a(array, n, n2);
    }
    
    private void a(final int n, final gb$c a) {
        if (this.a != null) {
            this.a.a();
        }
        a.a(n, this);
        this.a = a;
    }
    
    private long b(final long n) {
        int n2 = 1;
        final int n3 = 0xFF & this.b[this.d];
        long n4 = n ^ (0x7FL & n3) << 28;
        if (n3 > 127) {
            final byte[] b = this.b;
            final int d = this.d;
            n2 = 2;
            final int n5 = 0xFF & b[d + 1];
            n4 ^= (0x7FL & n5) << 35;
            if (n5 > 127) {
                final byte[] b2 = this.b;
                final int d2 = this.d;
                n2 = 3;
                final int n6 = 0xFF & b2[d2 + 2];
                n4 ^= (0x7FL & n6) << 42;
                if (n6 > 127) {
                    final byte[] b3 = this.b;
                    final int d3 = this.d;
                    n2 = 4;
                    final int n7 = 0xFF & b3[d3 + 3];
                    n4 ^= (0x7FL & n7) << 49;
                    if (n7 > 127) {
                        final byte[] b4 = this.b;
                        final int d4 = this.d;
                        n2 = 5;
                        final int n8 = 0xFF & b4[d4 + 4];
                        n4 ^= (0x7FL & n8) << 56;
                        if (n8 > 127) {
                            final byte[] b5 = this.b;
                            final int d5 = this.d;
                            n2 = 6;
                            final int n9 = 0xFF & b5[d5 + 5];
                            n4 ^= (0x7FL & n9) << 63;
                            if (n9 > 127) {
                                throw new IOException("Invalid long encoding");
                            }
                        }
                    }
                }
            }
        }
        this.d += n2;
        return n4;
    }
    
    private void b(final int n) {
        final int n2 = this.e - this.d;
        if (n2 < n) {
            this.a.a(this.b, this.d, this.c, n2);
        }
    }
    
    private long t() {
        long n;
        for (n = this.d(); n < 0L; n = this.d()) {
            this.a(this.e());
        }
        return n;
    }
    
    gb$a a() {
        return new gb$a(this, null);
    }
    
    gb a(final InputStream inputStream, final int n) {
        this.a(n, new gb$d(inputStream, null));
        return this;
    }
    
    gb a(final byte[] array, final int n, final int n2) {
        this.a(8192, new gb$b(array, n, n2, null));
        return this;
    }
    
    @Override
    public gy a(gy gy) {
        final int d = this.d();
        if (gy == null) {
            gy = new gy();
        }
        gy.a(d);
        if (d != 0) {
            this.c(gy.a(), 0, d);
        }
        return gy;
    }
    
    @Override
    public ByteBuffer a(ByteBuffer allocate) {
        final int d = this.d();
        if (allocate != null && d <= allocate.capacity()) {
            allocate.clear();
        }
        else {
            allocate = ByteBuffer.allocate(d);
        }
        this.c(allocate.array(), allocate.position(), d);
        allocate.limit(d);
        return allocate;
    }
    
    @Override
    public void a(final int n) {
        this.a((long)n);
    }
    
    protected void a(final long n) {
        final int n2 = this.e - this.d;
        if (n <= n2) {
            this.d += (int)n;
            return;
        }
        this.d = 0;
        this.e = 0;
        this.a.a(n - n2);
    }
    
    @Override
    public void b() {
    }
    
    @Override
    public void b(final byte[] array, final int n, final int n2) {
        this.c(array, n, n2);
    }
    
    protected void c(final byte[] array, final int n, final int n2) {
        final int n3 = this.e - this.d;
        if (n2 <= n3) {
            System.arraycopy(this.b, this.d, array, n, n2);
            this.d += n2;
            return;
        }
        System.arraycopy(this.b, this.d, array, n, n3);
        final int n4 = n + n3;
        final int n5 = n2 - n3;
        this.d = this.e;
        this.a.a(array, n4, n5);
    }
    
    @Override
    public boolean c() {
        if (this.e == this.d) {
            this.e = this.a.b(this.b, 0, this.b.length);
            this.d = 0;
            if (this.e == 0) {
                throw new EOFException();
            }
        }
        return (0xFF & this.b[this.d++]) == 0x1;
    }
    
    @Override
    public int d() {
        int n = 5;
        this.b(n);
        int n2 = 1;
        final int n3 = 0xFF & this.b[this.d];
        int n4 = n3 & 0x7F;
        Label_0225: {
            if (n3 > 127) {
                final byte[] b = this.b;
                final int d = this.d;
                n2 = 2;
                final int n5 = 0xFF & b[d + 1];
                n4 ^= (n5 & 0x7F) << 7;
                if (n5 > 127) {
                    final byte[] b2 = this.b;
                    final int d2 = this.d;
                    n2 = 3;
                    final int n6 = 0xFF & b2[d2 + 2];
                    n4 ^= (n6 & 0x7F) << 14;
                    if (n6 > 127) {
                        final byte[] b3 = this.b;
                        final int d3 = this.d;
                        n2 = 4;
                        final int n7 = 0xFF & b3[d3 + 3];
                        n4 ^= (n7 & 0x7F) << 21;
                        if (n7 > 127) {
                            final int n8 = 0xFF & this.b[4 + this.d];
                            n4 ^= (n8 & 0x7F) << 28;
                            if (n8 > 127) {
                                throw new IOException("Invalid int encoding");
                            }
                            break Label_0225;
                        }
                    }
                }
            }
            n = n2;
        }
        this.d += n;
        if (this.d > this.e) {
            throw new EOFException();
        }
        return n4 >>> 1 ^ -(n4 & 0x1);
    }
    
    @Override
    public long e() {
        this.b(10);
        final int n = 0xFF & this.b[this.d++];
        final int n2 = n & 0x7F;
        long b;
        if (n > 127) {
            final int n3 = 0xFF & this.b[this.d++];
            final int n4 = n2 ^ (n3 & 0x7F) << 7;
            if (n3 > 127) {
                final int n5 = 0xFF & this.b[this.d++];
                final int n6 = n4 ^ (n5 & 0x7F) << 14;
                if (n5 > 127) {
                    final int n7 = 0xFF & this.b[this.d++];
                    final int n8 = n6 ^ (n7 & 0x7F) << 21;
                    if (n7 > 127) {
                        b = this.b((long)n8);
                    }
                    else {
                        b = n8;
                    }
                }
                else {
                    b = n6;
                }
            }
            else {
                b = n4;
            }
        }
        else {
            b = n2;
        }
        if (this.d > this.e) {
            throw new EOFException();
        }
        return b >>> 1 ^ -(b & 0x1L);
    }
    
    @Override
    public float f() {
        this.b(4);
        final int n = (0xFF & this.b[this.d]) | (0xFF & this.b[1 + this.d]) << 8 | (0xFF & this.b[2 + this.d]) << 16 | (0xFF & this.b[3 + this.d]) << 24;
        if (4 + this.d > this.e) {
            throw new EOFException();
        }
        this.d += 4;
        return Float.intBitsToFloat(n);
    }
    
    @Override
    public double g() {
        this.b(8);
        final int n = (0xFF & this.b[this.d]) | (0xFF & this.b[1 + this.d]) << 8 | (0xFF & this.b[2 + this.d]) << 16 | (0xFF & this.b[3 + this.d]) << 24;
        final int n2 = (0xFF & this.b[4 + this.d]) | (0xFF & this.b[5 + this.d]) << 8 | (0xFF & this.b[6 + this.d]) << 16 | (0xFF & this.b[7 + this.d]) << 24;
        if (8 + this.d > this.e) {
            throw new EOFException();
        }
        this.d += 8;
        return Double.longBitsToDouble((0xFFFFFFFFL & n) | n2 << 32);
    }
    
    @Override
    public String h() {
        return this.a(this.f).toString();
    }
    
    @Override
    public void i() {
        this.a((long)this.d());
    }
    
    @Override
    public void j() {
        this.a((long)this.d());
    }
    
    @Override
    public int k() {
        return this.d();
    }
    
    protected long l() {
        long e = this.e();
        if (e < 0L) {
            this.e();
            e = -e;
        }
        return e;
    }
    
    @Override
    public long m() {
        return this.l();
    }
    
    @Override
    public long n() {
        return this.l();
    }
    
    @Override
    public long o() {
        return this.t();
    }
    
    @Override
    public long p() {
        return this.l();
    }
    
    @Override
    public long q() {
        return this.l();
    }
    
    @Override
    public long r() {
        return this.t();
    }
    
    @Override
    public int s() {
        return this.d();
    }
}
