// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.Iterator;
import java.util.ArrayList;
import java.util.List;
import android.view.ViewGroup;
import android.content.Context;
import com.flurry.android.impl.ads.FlurryAdModule;
import java.util.Vector;
import java.lang.ref.WeakReference;
import java.util.Stack;
import java.util.HashMap;
import java.util.Map;

public final class m
{
    private static final String a;
    private Map b;
    
    static {
        a = m.class.getSimpleName();
    }
    
    public m() {
        this.b = new HashMap();
    }
    
    private void a(final String s, final l l) {
        Vector<E> vector = (Vector<E>)this.b.get(s);
        if (vector == null) {
            vector = (Vector<E>)new Stack<WeakReference>();
            this.b.put(s, vector);
        }
        ((Stack<WeakReference>)vector).push(new WeakReference(l));
    }
    
    public final l a(final FlurryAdModule flurryAdModule, final Context context, final ViewGroup viewGroup, final String s) {
        synchronized (this) {
            l a = this.a(s);
            if (a == null || !a.getContext().equals(context)) {
                a = new l(flurryAdModule, context, s, viewGroup);
                this.a(s, a);
            }
            return a;
        }
    }
    
    public final l a(final String s) {
        synchronized (this) {
            l l;
            if (this.b.containsKey(s)) {
                final Stack<WeakReference> stack = this.b.get(s);
                if (stack.size() > 0) {
                    l = stack.peek().get();
                }
                else {
                    l = null;
                }
            }
            else {
                l = null;
            }
            return l;
        }
    }
    
    public final List a(final Context context) {
        final ArrayList<l> list;
        synchronized (this) {
            list = new ArrayList<l>();
            final Iterator<Stack<WeakReference>> iterator = this.b.values().iterator();
            while (iterator.hasNext()) {
                final Iterator<Object> iterator2 = iterator.next().iterator();
                while (iterator2.hasNext()) {
                    final l l = iterator2.next().get();
                    if (l != null && (context == null || context == l.getContext())) {
                        list.add(l);
                    }
                }
            }
        }
        // monitorexit(this)
        return list;
    }
    
    public final void a(final l l) {
        // monitorenter(this)
        if (l != null) {
            try {
                final String adSpace = l.getAdSpace();
                final Stack<WeakReference> stack = this.b.get(adSpace);
                if (stack != null) {
                    for (final WeakReference<l> weakReference : stack) {
                        if (l == weakReference.get()) {
                            if (stack.remove(weakReference)) {
                                eo.a(3, m.a, "removed banner holder for adSpaceName: " + l.getAdSpace());
                                break;
                            }
                            break;
                        }
                    }
                    if (stack.size() == 0) {
                        this.b.remove(adSpace);
                    }
                }
            }
            finally {
            }
            // monitorexit(this)
        }
    }
    // monitorexit(this)
}
