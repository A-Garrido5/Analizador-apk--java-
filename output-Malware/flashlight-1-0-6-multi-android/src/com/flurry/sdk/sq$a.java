// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.math.BigInteger;
import java.math.BigDecimal;

public final class sq$a extends hv
{
    protected hn d;
    protected sq$b e;
    protected int f;
    protected hw g;
    protected boolean h;
    protected transient sj i;
    protected hg j;
    
    public sq$a(final sq$b e, final hn d) {
        super(0);
        this.j = null;
        this.e = e;
        this.f = -1;
        this.d = d;
        this.g = hw.a(-1, -1);
    }
    
    protected final Object A() {
        return this.e.b(this.f);
    }
    
    protected final void B() {
        if (this.b == null || !this.b.c()) {
            throw this.a("Current token (" + this.b + ") not numeric, can not use numeric value accessors");
        }
    }
    
    @Override
    protected final void H() {
        this.U();
    }
    
    @Override
    public final hn a() {
        return this.d;
    }
    
    public final void a(final hg j) {
        this.j = j;
    }
    
    @Override
    public final byte[] a(final ha ha) {
        if (this.b == hm.g) {
            final Object a = this.A();
            if (a instanceof byte[]) {
                return (byte[])a;
            }
        }
        if (this.b != hm.h) {
            throw this.a("Current token (" + this.b + ") not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), can not access as binary");
        }
        final String k = this.k();
        if (k == null) {
            return null;
        }
        sj i = this.i;
        if (i == null) {
            i = new sj(100);
            this.i = i;
        }
        else {
            this.i.a();
        }
        this.a(k, i, ha);
        return i.b();
    }
    
    @Override
    public final hm b() {
        if (!this.h && this.e != null) {
            if (++this.f >= 16) {
                this.f = 0;
                this.e = this.e.a();
                if (this.e == null) {
                    return null;
                }
            }
            this.b = this.e.a(this.f);
            if (this.b == hm.f) {
                final Object a = this.A();
                String string;
                if (a instanceof String) {
                    string = (String)a;
                }
                else {
                    string = a.toString();
                }
                this.g.a(string);
            }
            else if (this.b == hm.b) {
                this.g = this.g.c(-1, -1);
            }
            else if (this.b == hm.d) {
                this.g = this.g.b(-1, -1);
            }
            else if (this.b == hm.c || this.b == hm.e) {
                this.g = this.g.i();
                if (this.g == null) {
                    this.g = hw.a(-1, -1);
                }
            }
            return this.b;
        }
        return null;
    }
    
    @Override
    public final void close() {
        if (!this.h) {
            this.h = true;
        }
    }
    
    @Override
    public final String g() {
        return this.g.h();
    }
    
    @Override
    public final hg h() {
        return this.i();
    }
    
    @Override
    public final hg i() {
        if (this.j == null) {
            return hg.a;
        }
        return this.j;
    }
    
    @Override
    public final String k() {
        if (this.b == hm.h || this.b == hm.f) {
            final Object a = this.A();
            if (a instanceof String) {
                return (String)a;
            }
            if (a == null) {
                return null;
            }
            return a.toString();
        }
        else {
            if (this.b == null) {
                return null;
            }
            switch (sq.sq$1.a[this.b.ordinal()]) {
                default: {
                    return this.b.a();
                }
                case 7:
                case 8: {
                    final Object a2 = this.A();
                    if (a2 == null) {
                        return null;
                    }
                    return a2.toString();
                }
            }
        }
    }
    
    @Override
    public final char[] l() {
        final String k = this.k();
        if (k == null) {
            return null;
        }
        return k.toCharArray();
    }
    
    @Override
    public final int m() {
        final String k = this.k();
        if (k == null) {
            return 0;
        }
        return k.length();
    }
    
    @Override
    public final int n() {
        return 0;
    }
    
    @Override
    public final boolean o() {
        return false;
    }
    
    @Override
    public final Number p() {
        this.B();
        return (Number)this.A();
    }
    
    @Override
    public final hj$b q() {
        final Number p = this.p();
        if (p instanceof Integer) {
            return hj$b.a;
        }
        if (p instanceof Long) {
            return hj$b.b;
        }
        if (p instanceof Double) {
            return hj$b.e;
        }
        if (p instanceof BigDecimal) {
            return hj$b.f;
        }
        if (p instanceof Float) {
            return hj$b.d;
        }
        if (p instanceof BigInteger) {
            return hj$b.c;
        }
        return null;
    }
    
    @Override
    public final int t() {
        if (this.b == hm.i) {
            return ((Number)this.A()).intValue();
        }
        return this.p().intValue();
    }
    
    @Override
    public final long u() {
        return this.p().longValue();
    }
    
    @Override
    public final BigInteger v() {
        final Number p = this.p();
        if (p instanceof BigInteger) {
            return (BigInteger)p;
        }
        switch (sq.sq$1.b[this.q().ordinal()]) {
            default: {
                return BigInteger.valueOf(p.longValue());
            }
            case 3: {
                return ((BigDecimal)p).toBigInteger();
            }
        }
    }
    
    @Override
    public final float w() {
        return this.p().floatValue();
    }
    
    @Override
    public final double x() {
        return this.p().doubleValue();
    }
    
    @Override
    public final BigDecimal y() {
        final Number p = this.p();
        if (p instanceof BigDecimal) {
            return (BigDecimal)p;
        }
        switch (sq.sq$1.b[this.q().ordinal()]) {
            default: {
                return BigDecimal.valueOf(p.doubleValue());
            }
            case 1:
            case 5: {
                return BigDecimal.valueOf(p.longValue());
            }
            case 2: {
                return new BigDecimal((BigInteger)p);
            }
        }
    }
    
    @Override
    public final Object z() {
        if (this.b == hm.g) {
            return this.A();
        }
        return null;
    }
}
