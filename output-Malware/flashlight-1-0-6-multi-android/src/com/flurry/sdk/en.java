// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.List;
import android.os.Build$VERSION;
import javax.net.ssl.KeyManager;
import java.security.SecureRandom;
import java.security.KeyStore;
import javax.net.ssl.TrustManager;
import java.io.InputStream;
import java.io.OutputStream;
import org.apache.http.client.HttpClient;
import java.net.HttpURLConnection;
import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.SSLContext;

public class en extends fg
{
    private static final String a;
    private static SSLContext b;
    private static HostnameVerifier c;
    private String d;
    private en$a e;
    private int f;
    private int i;
    private boolean j;
    private final ds k;
    private en$c l;
    private HttpURLConnection m;
    private HttpClient n;
    private boolean o;
    private boolean p;
    private Exception q;
    private int r;
    private final ds s;
    private final Object t;
    
    static {
        a = en.class.getSimpleName();
    }
    
    public en() {
        this.f = 10000;
        this.i = 15000;
        this.j = true;
        this.k = new ds();
        this.r = -1;
        this.s = new ds();
        this.t = new Object();
    }
    
    private void a(final InputStream inputStream) {
        if (this.l != null && !this.b() && inputStream != null) {
            this.l.a(this, inputStream);
        }
    }
    
    private void a(final OutputStream outputStream) {
        if (this.l != null && !this.b() && outputStream != null) {
            this.l.a(this, outputStream);
        }
    }
    
    private static SSLContext m() {
        synchronized (en.class) {
            SSLContext sslContext = null;
            if (en.b != null) {
                sslContext = en.b;
            }
            else {
                try {
                    (en.b = SSLContext.getInstance("TLS")).init(null, new TrustManager[] { new ej(null) }, new SecureRandom());
                    sslContext = en.b;
                }
                catch (Exception ex) {
                    eo.a(3, en.a, "Exception creating SSL context", ex);
                }
            }
            return sslContext;
        }
    }
    
    private static HostnameVerifier n() {
        synchronized (en.class) {
            HostnameVerifier c;
            if (en.c != null) {
                c = en.c;
            }
            else {
                c = (en.c = new eh());
            }
            return c;
        }
    }
    
    private void o() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aconst_null    
        //     1: astore_1       
        //     2: aload_0        
        //     3: getfield        com/flurry/sdk/en.p:Z
        //     6: ifeq            10
        //     9: return         
        //    10: new             Ljava/net/URL;
        //    13: dup            
        //    14: aload_0        
        //    15: getfield        com/flurry/sdk/en.d:Ljava/lang/String;
        //    18: invokespecial   java/net/URL.<init>:(Ljava/lang/String;)V
        //    21: astore_2       
        //    22: aload_0        
        //    23: aload_2        
        //    24: invokevirtual   java/net/URL.openConnection:()Ljava/net/URLConnection;
        //    27: checkcast       Ljava/net/HttpURLConnection;
        //    30: putfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //    33: aload_0        
        //    34: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //    37: aload_0        
        //    38: getfield        com/flurry/sdk/en.f:I
        //    41: invokevirtual   java/net/HttpURLConnection.setConnectTimeout:(I)V
        //    44: aload_0        
        //    45: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //    48: aload_0        
        //    49: getfield        com/flurry/sdk/en.i:I
        //    52: invokevirtual   java/net/HttpURLConnection.setReadTimeout:(I)V
        //    55: aload_0        
        //    56: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //    59: aload_0        
        //    60: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //    63: invokevirtual   com/flurry/sdk/en$a.toString:()Ljava/lang/String;
        //    66: invokevirtual   java/net/HttpURLConnection.setRequestMethod:(Ljava/lang/String;)V
        //    69: aload_0        
        //    70: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //    73: aload_0        
        //    74: getfield        com/flurry/sdk/en.j:Z
        //    77: invokevirtual   java/net/HttpURLConnection.setInstanceFollowRedirects:(Z)V
        //    80: aload_0        
        //    81: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //    84: getstatic       com/flurry/sdk/en$a.c:Lcom/flurry/sdk/en$a;
        //    87: aload_0        
        //    88: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //    91: invokevirtual   com/flurry/sdk/en$a.equals:(Ljava/lang/Object;)Z
        //    94: invokevirtual   java/net/HttpURLConnection.setDoOutput:(Z)V
        //    97: aload_0        
        //    98: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //   101: iconst_1       
        //   102: invokevirtual   java/net/HttpURLConnection.setDoInput:(Z)V
        //   105: invokestatic    com/flurry/sdk/eo.d:()Z
        //   108: ifeq            149
        //   111: aload_0        
        //   112: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //   115: instanceof      Ljavax/net/ssl/HttpsURLConnection;
        //   118: ifeq            149
        //   121: aload_0        
        //   122: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //   125: checkcast       Ljavax/net/ssl/HttpsURLConnection;
        //   128: astore          22
        //   130: aload           22
        //   132: invokestatic    com/flurry/sdk/en.n:()Ljavax/net/ssl/HostnameVerifier;
        //   135: invokevirtual   javax/net/ssl/HttpsURLConnection.setHostnameVerifier:(Ljavax/net/ssl/HostnameVerifier;)V
        //   138: aload           22
        //   140: invokestatic    com/flurry/sdk/en.m:()Ljavax/net/ssl/SSLContext;
        //   143: invokevirtual   javax/net/ssl/SSLContext.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
        //   146: invokevirtual   javax/net/ssl/HttpsURLConnection.setSSLSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;)V
        //   149: aload_0        
        //   150: getfield        com/flurry/sdk/en.k:Lcom/flurry/sdk/ds;
        //   153: invokevirtual   com/flurry/sdk/ds.b:()Ljava/util/Collection;
        //   156: invokeinterface java/util/Collection.iterator:()Ljava/util/Iterator;
        //   161: astore          4
        //   163: aload           4
        //   165: invokeinterface java/util/Iterator.hasNext:()Z
        //   170: ifeq            222
        //   173: aload           4
        //   175: invokeinterface java/util/Iterator.next:()Ljava/lang/Object;
        //   180: checkcast       Ljava/util/Map$Entry;
        //   183: astore          21
        //   185: aload_0        
        //   186: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //   189: aload           21
        //   191: invokeinterface java/util/Map$Entry.getKey:()Ljava/lang/Object;
        //   196: checkcast       Ljava/lang/String;
        //   199: aload           21
        //   201: invokeinterface java/util/Map$Entry.getValue:()Ljava/lang/Object;
        //   206: checkcast       Ljava/lang/String;
        //   209: invokevirtual   java/net/HttpURLConnection.addRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
        //   212: goto            163
        //   215: astore_3       
        //   216: aload_0        
        //   217: invokespecial   com/flurry/sdk/en.r:()V
        //   220: aload_3        
        //   221: athrow         
        //   222: getstatic       com/flurry/sdk/en$a.b:Lcom/flurry/sdk/en$a;
        //   225: aload_0        
        //   226: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //   229: invokevirtual   com/flurry/sdk/en$a.equals:(Ljava/lang/Object;)Z
        //   232: ifne            259
        //   235: getstatic       com/flurry/sdk/en$a.c:Lcom/flurry/sdk/en$a;
        //   238: aload_0        
        //   239: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //   242: invokevirtual   com/flurry/sdk/en$a.equals:(Ljava/lang/Object;)Z
        //   245: ifne            259
        //   248: aload_0        
        //   249: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //   252: ldc             "Accept-Encoding"
        //   254: ldc             ""
        //   256: invokevirtual   java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
        //   259: aload_0        
        //   260: getfield        com/flurry/sdk/en.p:Z
        //   263: istore          5
        //   265: iload           5
        //   267: ifeq            275
        //   270: aload_0        
        //   271: invokespecial   com/flurry/sdk/en.r:()V
        //   274: return         
        //   275: getstatic       com/flurry/sdk/en$a.c:Lcom/flurry/sdk/en$a;
        //   278: aload_0        
        //   279: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //   282: invokevirtual   com/flurry/sdk/en$a.equals:(Ljava/lang/Object;)Z
        //   285: istore          6
        //   287: iload           6
        //   289: ifeq            328
        //   292: aload_0        
        //   293: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //   296: invokevirtual   java/net/HttpURLConnection.getOutputStream:()Ljava/io/OutputStream;
        //   299: astore          20
        //   301: new             Ljava/io/BufferedOutputStream;
        //   304: dup            
        //   305: aload           20
        //   307: invokespecial   java/io/BufferedOutputStream.<init>:(Ljava/io/OutputStream;)V
        //   310: astore          18
        //   312: aload_0        
        //   313: aload           18
        //   315: invokespecial   com/flurry/sdk/en.a:(Ljava/io/OutputStream;)V
        //   318: aload           18
        //   320: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   323: aload           20
        //   325: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   328: aload_0        
        //   329: aload_0        
        //   330: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //   333: invokevirtual   java/net/HttpURLConnection.getResponseCode:()I
        //   336: putfield        com/flurry/sdk/en.r:I
        //   339: aload_0        
        //   340: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //   343: invokevirtual   java/net/HttpURLConnection.getHeaderFields:()Ljava/util/Map;
        //   346: invokeinterface java/util/Map.entrySet:()Ljava/util/Set;
        //   351: invokeinterface java/util/Collection.iterator:()Ljava/util/Iterator;
        //   356: astore          7
        //   358: aload           7
        //   360: invokeinterface java/util/Iterator.hasNext:()Z
        //   365: ifeq            451
        //   368: aload           7
        //   370: invokeinterface java/util/Iterator.next:()Ljava/lang/Object;
        //   375: checkcast       Ljava/util/Map$Entry;
        //   378: astore          14
        //   380: aload           14
        //   382: invokeinterface java/util/Map$Entry.getValue:()Ljava/lang/Object;
        //   387: checkcast       Ljava/util/List;
        //   390: invokeinterface java/util/List.iterator:()Ljava/util/Iterator;
        //   395: astore          15
        //   397: aload           15
        //   399: invokeinterface java/util/Iterator.hasNext:()Z
        //   404: ifeq            358
        //   407: aload           15
        //   409: invokeinterface java/util/Iterator.next:()Ljava/lang/Object;
        //   414: checkcast       Ljava/lang/String;
        //   417: astore          16
        //   419: aload_0        
        //   420: getfield        com/flurry/sdk/en.s:Lcom/flurry/sdk/ds;
        //   423: aload           14
        //   425: invokeinterface java/util/Map$Entry.getKey:()Ljava/lang/Object;
        //   430: aload           16
        //   432: invokevirtual   com/flurry/sdk/ds.a:(Ljava/lang/Object;Ljava/lang/Object;)V
        //   435: goto            397
        //   438: aload           18
        //   440: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   443: aload           19
        //   445: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   448: aload           17
        //   450: athrow         
        //   451: getstatic       com/flurry/sdk/en$a.b:Lcom/flurry/sdk/en$a;
        //   454: aload_0        
        //   455: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //   458: invokevirtual   com/flurry/sdk/en$a.equals:(Ljava/lang/Object;)Z
        //   461: ifne            486
        //   464: getstatic       com/flurry/sdk/en$a.c:Lcom/flurry/sdk/en$a;
        //   467: aload_0        
        //   468: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //   471: invokevirtual   com/flurry/sdk/en$a.equals:(Ljava/lang/Object;)Z
        //   474: istore          13
        //   476: iload           13
        //   478: ifne            486
        //   481: aload_0        
        //   482: invokespecial   com/flurry/sdk/en.r:()V
        //   485: return         
        //   486: aload_0        
        //   487: getfield        com/flurry/sdk/en.p:Z
        //   490: istore          8
        //   492: iload           8
        //   494: ifeq            502
        //   497: aload_0        
        //   498: invokespecial   com/flurry/sdk/en.r:()V
        //   501: return         
        //   502: aload_0        
        //   503: getfield        com/flurry/sdk/en.m:Ljava/net/HttpURLConnection;
        //   506: invokevirtual   java/net/HttpURLConnection.getInputStream:()Ljava/io/InputStream;
        //   509: astore          11
        //   511: new             Ljava/io/BufferedInputStream;
        //   514: dup            
        //   515: aload           11
        //   517: invokespecial   java/io/BufferedInputStream.<init>:(Ljava/io/InputStream;)V
        //   520: astore          12
        //   522: aload_0        
        //   523: aload           12
        //   525: invokespecial   com/flurry/sdk/en.a:(Ljava/io/InputStream;)V
        //   528: aload           12
        //   530: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   533: aload           11
        //   535: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   538: aload_0        
        //   539: invokespecial   com/flurry/sdk/en.r:()V
        //   542: return         
        //   543: astore          9
        //   545: aconst_null    
        //   546: astore          10
        //   548: aload           10
        //   550: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   553: aload_1        
        //   554: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   557: aload           9
        //   559: athrow         
        //   560: astore          9
        //   562: aload           11
        //   564: astore_1       
        //   565: aconst_null    
        //   566: astore          10
        //   568: goto            548
        //   571: astore          9
        //   573: aload           11
        //   575: astore_1       
        //   576: aload           12
        //   578: astore          10
        //   580: goto            548
        //   583: astore          17
        //   585: aload           20
        //   587: astore          19
        //   589: aconst_null    
        //   590: astore          18
        //   592: goto            438
        //   595: astore          17
        //   597: aload           20
        //   599: astore          19
        //   601: goto            438
        //   604: astore          17
        //   606: aconst_null    
        //   607: astore          18
        //   609: aconst_null    
        //   610: astore          19
        //   612: goto            438
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type
        //  -----  -----  -----  -----  ----
        //  22     149    215    222    Any
        //  149    163    215    222    Any
        //  163    212    215    222    Any
        //  222    259    215    222    Any
        //  259    265    215    222    Any
        //  275    287    215    222    Any
        //  292    301    604    615    Any
        //  301    312    583    595    Any
        //  312    318    595    604    Any
        //  318    328    215    222    Any
        //  328    358    215    222    Any
        //  358    397    215    222    Any
        //  397    435    215    222    Any
        //  438    451    215    222    Any
        //  451    476    215    222    Any
        //  486    492    215    222    Any
        //  502    511    543    548    Any
        //  511    522    560    571    Any
        //  522    528    571    583    Any
        //  528    538    215    222    Any
        //  548    560    215    222    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 261, Size: 261
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3417)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3417)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private void p() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aconst_null    
        //     1: astore_1       
        //     2: aload_0        
        //     3: getfield        com/flurry/sdk/en.p:Z
        //     6: ifeq            10
        //     9: return         
        //    10: aload_0        
        //    11: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //    14: aload_0        
        //    15: getfield        com/flurry/sdk/en.d:Ljava/lang/String;
        //    18: invokevirtual   com/flurry/sdk/en$a.a:(Ljava/lang/String;)Lorg/apache/http/client/methods/HttpRequestBase;
        //    21: astore_2       
        //    22: aload_0        
        //    23: getfield        com/flurry/sdk/en.k:Lcom/flurry/sdk/ds;
        //    26: invokevirtual   com/flurry/sdk/ds.b:()Ljava/util/Collection;
        //    29: invokeinterface java/util/Collection.iterator:()Ljava/util/Iterator;
        //    34: astore_3       
        //    35: aload_3        
        //    36: invokeinterface java/util/Iterator.hasNext:()Z
        //    41: ifeq            82
        //    44: aload_3        
        //    45: invokeinterface java/util/Iterator.next:()Ljava/lang/Object;
        //    50: checkcast       Ljava/util/Map$Entry;
        //    53: astore          20
        //    55: aload_2        
        //    56: aload           20
        //    58: invokeinterface java/util/Map$Entry.getKey:()Ljava/lang/Object;
        //    63: checkcast       Ljava/lang/String;
        //    66: aload           20
        //    68: invokeinterface java/util/Map$Entry.getValue:()Ljava/lang/Object;
        //    73: checkcast       Ljava/lang/String;
        //    76: invokevirtual   org/apache/http/client/methods/HttpRequestBase.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
        //    79: goto            35
        //    82: getstatic       com/flurry/sdk/en$a.b:Lcom/flurry/sdk/en$a;
        //    85: aload_0        
        //    86: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //    89: invokevirtual   com/flurry/sdk/en$a.equals:(Ljava/lang/Object;)Z
        //    92: ifne            114
        //    95: getstatic       com/flurry/sdk/en$a.c:Lcom/flurry/sdk/en$a;
        //    98: aload_0        
        //    99: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //   102: invokevirtual   com/flurry/sdk/en$a.equals:(Ljava/lang/Object;)Z
        //   105: ifne            114
        //   108: aload_2        
        //   109: ldc             "Accept-Encoding"
        //   111: invokevirtual   org/apache/http/client/methods/HttpRequestBase.removeHeaders:(Ljava/lang/String;)V
        //   114: getstatic       com/flurry/sdk/en$a.c:Lcom/flurry/sdk/en$a;
        //   117: aload_0        
        //   118: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //   121: invokevirtual   com/flurry/sdk/en$a.equals:(Ljava/lang/Object;)Z
        //   124: ifeq            142
        //   127: aload_2        
        //   128: checkcast       Lorg/apache/http/client/methods/HttpPost;
        //   131: new             Lcom/flurry/sdk/en$1;
        //   134: dup            
        //   135: aload_0        
        //   136: invokespecial   com/flurry/sdk/en$1.<init>:(Lcom/flurry/sdk/en;)V
        //   139: invokevirtual   org/apache/http/client/methods/HttpPost.setEntity:(Lorg/apache/http/HttpEntity;)V
        //   142: new             Lorg/apache/http/params/BasicHttpParams;
        //   145: dup            
        //   146: invokespecial   org/apache/http/params/BasicHttpParams.<init>:()V
        //   149: astore          4
        //   151: aload           4
        //   153: aload_0        
        //   154: getfield        com/flurry/sdk/en.f:I
        //   157: invokestatic    org/apache/http/params/HttpConnectionParams.setConnectionTimeout:(Lorg/apache/http/params/HttpParams;I)V
        //   160: aload           4
        //   162: aload_0        
        //   163: getfield        com/flurry/sdk/en.i:I
        //   166: invokestatic    org/apache/http/params/HttpConnectionParams.setSoTimeout:(Lorg/apache/http/params/HttpParams;I)V
        //   169: aload           4
        //   171: ldc_w           "http.protocol.handle-redirects"
        //   174: aload_0        
        //   175: getfield        com/flurry/sdk/en.j:Z
        //   178: invokestatic    java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        //   181: invokeinterface org/apache/http/params/HttpParams.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;
        //   186: pop            
        //   187: aload_0        
        //   188: aload           4
        //   190: invokestatic    com/flurry/sdk/ek.a:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/client/HttpClient;
        //   193: putfield        com/flurry/sdk/en.n:Lorg/apache/http/client/HttpClient;
        //   196: aload_0        
        //   197: getfield        com/flurry/sdk/en.n:Lorg/apache/http/client/HttpClient;
        //   200: aload_2        
        //   201: invokeinterface org/apache/http/client/HttpClient.execute:(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;
        //   206: astore          7
        //   208: aload_0        
        //   209: getfield        com/flurry/sdk/en.p:Z
        //   212: ifeq            235
        //   215: new             Ljava/lang/Exception;
        //   218: dup            
        //   219: ldc_w           "Request cancelled"
        //   222: invokespecial   java/lang/Exception.<init>:(Ljava/lang/String;)V
        //   225: athrow         
        //   226: astore          5
        //   228: aload_0        
        //   229: invokespecial   com/flurry/sdk/en.r:()V
        //   232: aload           5
        //   234: athrow         
        //   235: aload           7
        //   237: ifnull          449
        //   240: aload_0        
        //   241: aload           7
        //   243: invokeinterface org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
        //   248: invokeinterface org/apache/http/StatusLine.getStatusCode:()I
        //   253: putfield        com/flurry/sdk/en.r:I
        //   256: aload           7
        //   258: invokeinterface org/apache/http/HttpResponse.getAllHeaders:()[Lorg/apache/http/Header;
        //   263: astore          8
        //   265: aload           8
        //   267: ifnull          346
        //   270: aload           8
        //   272: arraylength    
        //   273: istore          9
        //   275: iconst_0       
        //   276: istore          10
        //   278: iload           10
        //   280: iload           9
        //   282: if_icmpge       346
        //   285: aload           8
        //   287: iload           10
        //   289: aaload         
        //   290: invokeinterface org/apache/http/Header.getElements:()[Lorg/apache/http/HeaderElement;
        //   295: astore          11
        //   297: aload           11
        //   299: arraylength    
        //   300: istore          12
        //   302: iconst_0       
        //   303: istore          13
        //   305: iload           13
        //   307: iload           12
        //   309: if_icmpge       490
        //   312: aload           11
        //   314: iload           13
        //   316: aaload         
        //   317: astore          14
        //   319: aload_0        
        //   320: getfield        com/flurry/sdk/en.s:Lcom/flurry/sdk/ds;
        //   323: aload           14
        //   325: invokeinterface org/apache/http/HeaderElement.getName:()Ljava/lang/String;
        //   330: aload           14
        //   332: invokeinterface org/apache/http/HeaderElement.getValue:()Ljava/lang/String;
        //   337: invokevirtual   com/flurry/sdk/ds.a:(Ljava/lang/Object;Ljava/lang/Object;)V
        //   340: iinc            13, 1
        //   343: goto            305
        //   346: getstatic       com/flurry/sdk/en$a.b:Lcom/flurry/sdk/en$a;
        //   349: aload_0        
        //   350: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //   353: invokevirtual   com/flurry/sdk/en$a.equals:(Ljava/lang/Object;)Z
        //   356: ifne            381
        //   359: getstatic       com/flurry/sdk/en$a.c:Lcom/flurry/sdk/en$a;
        //   362: aload_0        
        //   363: getfield        com/flurry/sdk/en.e:Lcom/flurry/sdk/en$a;
        //   366: invokevirtual   com/flurry/sdk/en$a.equals:(Ljava/lang/Object;)Z
        //   369: istore          19
        //   371: iload           19
        //   373: ifne            381
        //   376: aload_0        
        //   377: invokespecial   com/flurry/sdk/en.r:()V
        //   380: return         
        //   381: aload_0        
        //   382: getfield        com/flurry/sdk/en.p:Z
        //   385: ifeq            399
        //   388: new             Ljava/lang/Exception;
        //   391: dup            
        //   392: ldc_w           "Request cancelled"
        //   395: invokespecial   java/lang/Exception.<init>:(Ljava/lang/String;)V
        //   398: athrow         
        //   399: aload           7
        //   401: invokeinterface org/apache/http/HttpResponse.getEntity:()Lorg/apache/http/HttpEntity;
        //   406: astore          15
        //   408: aload           15
        //   410: ifnull          449
        //   413: aload           15
        //   415: invokeinterface org/apache/http/HttpEntity.getContent:()Ljava/io/InputStream;
        //   420: astore          18
        //   422: new             Ljava/io/BufferedInputStream;
        //   425: dup            
        //   426: aload           18
        //   428: invokespecial   java/io/BufferedInputStream.<init>:(Ljava/io/InputStream;)V
        //   431: astore          17
        //   433: aload_0        
        //   434: aload           17
        //   436: invokespecial   com/flurry/sdk/en.a:(Ljava/io/InputStream;)V
        //   439: aload           17
        //   441: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   444: aload           18
        //   446: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   449: aload_0        
        //   450: invokespecial   com/flurry/sdk/en.r:()V
        //   453: return         
        //   454: astore          16
        //   456: aconst_null    
        //   457: astore          17
        //   459: aload           17
        //   461: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   464: aload_1        
        //   465: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   468: aload           16
        //   470: athrow         
        //   471: astore          16
        //   473: aload           18
        //   475: astore_1       
        //   476: aconst_null    
        //   477: astore          17
        //   479: goto            459
        //   482: astore          16
        //   484: aload           18
        //   486: astore_1       
        //   487: goto            459
        //   490: iinc            10, 1
        //   493: goto            278
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type
        //  -----  -----  -----  -----  ----
        //  142    226    226    235    Any
        //  240    265    226    235    Any
        //  270    275    226    235    Any
        //  285    302    226    235    Any
        //  312    340    226    235    Any
        //  346    371    226    235    Any
        //  381    399    226    235    Any
        //  399    408    226    235    Any
        //  413    422    454    459    Any
        //  422    433    471    482    Any
        //  433    439    482    490    Any
        //  439    449    226    235    Any
        //  459    471    226    235    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 212, Size: 212
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private void q() {
        if (this.l != null && !this.b()) {
            this.l.a(this);
        }
    }
    
    private void r() {
        if (!this.o) {
            this.o = true;
            if (this.m != null) {
                this.m.disconnect();
            }
            if (this.n != null) {
                this.n.getConnectionManager().shutdown();
            }
        }
    }
    
    private void s() {
        if (!this.o) {
            this.o = true;
            if (this.m != null || this.n != null) {
                new Thread() {
                    @Override
                    public void run() {
                        if (en.this.m != null) {
                            en.this.m.disconnect();
                        }
                        if (en.this.n != null) {
                            en.this.n.getConnectionManager().shutdown();
                        }
                    }
                }.start();
            }
        }
    }
    
    @Override
    public void a() {
        try {
            if (this.d == null) {
                return;
            }
            if (!ev.a().c()) {
                eo.a(3, en.a, "Network not available, aborting http request: " + this.d);
                return;
            }
            if (this.e == null || en$a.a.equals(this.e)) {
                this.e = en$a.b;
            }
            if (Build$VERSION.SDK_INT >= 9) {
                this.o();
            }
            else {
                this.p();
            }
            eo.a(4, en.a, "HTTP status: " + this.r + " for url: " + this.d);
        }
        catch (Exception q) {
            eo.a(4, en.a, "HTTP status: " + this.r + " for url: " + this.d);
            eo.a(3, en.a, "Exception during http request: " + this.d, q);
            this.q = q;
        }
        finally {
            this.q();
        }
    }
    
    public void a(final en$a e) {
        this.e = e;
    }
    
    public void a(final en$c l) {
        this.l = l;
    }
    
    public void a(final String d) {
        this.d = d;
    }
    
    public void a(final String s, final String s2) {
        this.k.a(s, s2);
    }
    
    public void a(final boolean j) {
        this.j = j;
    }
    
    public List b(final String s) {
        if (s == null) {
            return null;
        }
        return this.s.a(s);
    }
    
    public boolean b() {
        synchronized (this.t) {
            return this.p;
        }
    }
    
    public boolean c() {
        return !this.f() && this.d();
    }
    
    public boolean d() {
        return this.r >= 200 && this.r < 400;
    }
    
    public int e() {
        return this.r;
    }
    
    public boolean f() {
        return this.q != null;
    }
    
    public void g() {
        synchronized (this.t) {
            this.p = true;
            // monitorexit(this.t)
            this.s();
        }
    }
    
    @Override
    public void h() {
        this.g();
    }
}
