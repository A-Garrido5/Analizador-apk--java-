// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.ArrayList;
import java.util.Map;
import java.util.Collection;
import java.util.LinkedHashMap;
import java.util.HashSet;
import java.util.List;
import java.util.HashMap;

public class kp
{
    protected final mw a;
    protected final HashMap b;
    protected List c;
    protected HashMap d;
    protected HashSet e;
    protected kx f;
    protected ks g;
    protected boolean h;
    
    public kp(final mw a) {
        this.b = new LinkedHashMap();
        this.a = a;
    }
    
    public jg a(final is is) {
        final kz kz = new kz(this.b.values());
        kz.a();
        return new ko(this.a, is, this.f, kz, this.d, this.e, this.h, this.g, this.c);
    }
    
    public void a(final it it) {
    }
    
    public void a(final ks g) {
        if (this.g != null && g != null) {
            throw new IllegalStateException("_anySetter already set to non-null");
        }
        this.g = g;
    }
    
    public void a(final kt kt) {
        final kt kt2 = this.b.put(kt.c(), kt);
        if (kt2 != null && kt2 != kt) {
            throw new IllegalArgumentException("Duplicate property '" + kt.c() + "' for " + this.a.a());
        }
    }
    
    public void a(final kt kt, final boolean b) {
        this.b.put(kt.c(), kt);
    }
    
    public void a(final kx f) {
        this.f = f;
    }
    
    public void a(final String s) {
        if (this.e == null) {
            this.e = new HashSet();
        }
        this.e.add(s);
    }
    
    public void a(final String s, final kt kt) {
        if (this.d == null) {
            this.d = new HashMap(4);
        }
        this.d.put(s, kt);
        if (this.b != null) {
            this.b.remove(kt.c());
        }
    }
    
    public void a(final String s, final sh sh, final qv qv, final mq mq, final Object o) {
        if (this.c == null) {
            this.c = new ArrayList();
        }
        this.c.add(new lh(s, sh, qv, mq, o));
    }
    
    public void a(final boolean h) {
        this.h = h;
    }
    
    public boolean b(final String s) {
        return this.b.containsKey(s);
    }
}
