// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.HashMap;

public class ra
{
    protected final Class a;
    protected final Enum[] b;
    protected final HashMap c;
    
    protected ra(final Class a, final Enum[] b, final HashMap c) {
        this.a = a;
        this.b = b;
        this.c = c;
    }
    
    public static ra a(final Class clazz) {
        final Enum[] array = clazz.getEnumConstants();
        final HashMap<String, Enum> hashMap = new HashMap<String, Enum>();
        int length = array.length;
        while (--length >= 0) {
            final Enum enum1 = array[length];
            hashMap.put(enum1.toString(), enum1);
        }
        return new ra(clazz, array, hashMap);
    }
    
    public static ra a(final Class clazz, final iq iq) {
        final Enum[] array = clazz.getEnumConstants();
        if (array == null) {
            throw new IllegalArgumentException("No enum constants for class " + clazz.getName());
        }
        final HashMap<String, Enum> hashMap = new HashMap<String, Enum>();
        for (final Enum enum1 : array) {
            hashMap.put(iq.a(enum1), enum1);
        }
        return new ra(clazz, array, hashMap);
    }
    
    public static ra b(final Class clazz) {
        return a(clazz);
    }
    
    public static ra b(final Class clazz, final iq iq) {
        return a(clazz, iq);
    }
    
    public Class a() {
        return this.a;
    }
    
    public Enum a(final int n) {
        if (n < 0 || n >= this.b.length) {
            return null;
        }
        return this.b[n];
    }
    
    public Enum a(final String s) {
        return this.c.get(s);
    }
    
    public int b() {
        return -1 + this.b.length;
    }
}
