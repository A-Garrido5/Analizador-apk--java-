// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.LinkedList;
import android.text.TextUtils;
import java.util.Iterator;
import java.util.List;
import java.util.HashMap;
import java.util.Map;

public class dq
{
    private Map a;
    private Map b;
    
    public dq() {
        this.a = new HashMap();
        this.b = new HashMap();
    }
    
    private boolean a(final Object o, final Object o2) {
        return o == o2 || (o != null && o.equals(o2));
    }
    
    private void b(final String s, final Object o) {
        if (this.b.get(s) != null) {
            final Iterator<dq$a> iterator = this.b.get(s).iterator();
            while (iterator.hasNext()) {
                iterator.next().a(s, o);
            }
        }
    }
    
    public Object a(final String s) {
        synchronized (this) {
            return this.a.get(s);
        }
    }
    
    public void a(final String s, final dq$a dq$a) {
        synchronized (this) {
            if (!TextUtils.isEmpty((CharSequence)s) && dq$a != null) {
                List<dq$a> list = this.b.get(s);
                if (list == null) {
                    list = new LinkedList<dq$a>();
                }
                list.add(dq$a);
                this.b.put(s, list);
            }
        }
    }
    
    public void a(final String s, final Object o) {
        while (true) {
            while (true) {
                Label_0063: {
                    synchronized (this) {
                        if (!TextUtils.isEmpty((CharSequence)s) && !this.a(o, this.a.get(s))) {
                            if (o != null) {
                                break Label_0063;
                            }
                            this.a.remove(s);
                            this.b(s, o);
                        }
                        return;
                    }
                }
                this.a.put(s, o);
                continue;
            }
        }
    }
    
    public boolean b(final String s, final dq$a dq$a) {
        synchronized (this) {
            boolean b;
            if (TextUtils.isEmpty((CharSequence)s)) {
                b = false;
            }
            else if (dq$a == null) {
                b = false;
            }
            else {
                final List list = this.b.get(s);
                b = (list != null && list.remove(dq$a));
            }
            return b;
        }
    }
}
