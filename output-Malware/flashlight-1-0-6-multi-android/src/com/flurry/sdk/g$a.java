// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import android.view.KeyEvent;
import android.annotation.TargetApi;
import android.os.Build$VERSION;
import android.view.ViewParent;
import java.util.Collection;
import java.util.ArrayList;
import android.content.DialogInterface$OnClickListener;
import android.app.AlertDialog$Builder;
import android.view.View$OnClickListener;
import java.io.File;
import android.widget.RelativeLayout$LayoutParams;
import android.net.Uri;
import java.util.Collections;
import android.content.Intent;
import java.util.Iterator;
import android.text.TextUtils;
import java.util.LinkedList;
import com.flurry.android.impl.ads.avro.protocol.v10.AdFrame;
import java.util.HashMap;
import com.flurry.android.impl.ads.avro.protocol.v10.AdUnit;
import com.flurry.android.impl.ads.FlurryAdModule;
import com.flurry.android.FlurryFullscreenTakeoverActivity;
import android.webkit.WebViewClient;
import android.widget.Button;
import android.webkit.WebView;
import android.app.ProgressDialog;
import java.util.Map;
import java.util.List;
import android.app.AlertDialog;
import android.annotation.SuppressLint;
import android.content.DialogInterface$OnKeyListener;
import android.content.DialogInterface;
import android.content.DialogInterface$OnShowListener;
import android.view.MotionEvent;
import android.view.ViewGroup$LayoutParams;
import android.widget.FrameLayout$LayoutParams;
import android.content.Context;
import android.widget.FrameLayout;
import android.webkit.WebChromeClient$CustomViewCallback;
import android.app.Dialog;
import android.content.DialogInterface$OnDismissListener;
import android.view.View;
import android.view.ViewGroup;
import android.app.Activity;
import android.webkit.WebChromeClient;

final class g$a extends WebChromeClient
{
    final /* synthetic */ g a;
    
    private g$a(final g a) {
        this.a = a;
    }
    
    public final void onHideCustomView() {
        eo.a(3, this.a.b, "onHideCustomView()");
        if (!(this.a.getContext() instanceof Activity)) {
            eo.a(3, this.a.b, "no activity present");
        }
        else {
            final Activity activity = (Activity)this.a.getContext();
            if (this.a.m != null) {
                if (this.a.s != null) {
                    this.a.s.show();
                }
                ((ViewGroup)activity.getWindow().getDecorView()).removeView((View)this.a.q);
                this.a.q.removeView(this.a.m);
                if (this.a.p != null && this.a.p.isShowing()) {
                    this.a.p.hide();
                    this.a.p.setOnDismissListener((DialogInterface$OnDismissListener)null);
                    this.a.p.dismiss();
                }
                this.a.p = null;
                cb.a(activity, this.a.n);
                this.a.o.onCustomViewHidden();
                this.a.o = null;
                this.a.q = null;
                this.a.m = null;
                this.a.getPlatformModule().b((Context)activity, this.a.getAdUnit().b().toString());
            }
        }
    }
    
    public final void onShowCustomView(final View view, final int n, final WebChromeClient$CustomViewCallback webChromeClient$CustomViewCallback) {
        eo.a(3, this.a.b, "onShowCustomView(14)");
        if (!(this.a.getContext() instanceof Activity)) {
            eo.a(3, this.a.b, "no activity present");
            return;
        }
        final Activity activity = (Activity)this.a.getContext();
        if (this.a.m != null && this.a.l != null) {
            this.a.l.onHideCustomView();
            return;
        }
        this.a.m = view;
        this.a.n = activity.getRequestedOrientation();
        this.a.o = webChromeClient$CustomViewCallback;
        this.a.q = new FrameLayout((Context)activity);
        this.a.q.setBackgroundColor(-16777216);
        this.a.q.addView(this.a.m, (ViewGroup$LayoutParams)new FrameLayout$LayoutParams(-1, -1, 17));
        ((ViewGroup)activity.getWindow().getDecorView()).addView((View)this.a.q, -1, -1);
        if (this.a.p == null) {
            this.a.p = new Dialog(activity, 16973841) {
                public boolean dispatchTouchEvent(final MotionEvent motionEvent) {
                    return activity.dispatchTouchEvent(motionEvent);
                }
                
                public boolean dispatchTrackballEvent(final MotionEvent motionEvent) {
                    return activity.dispatchTrackballEvent(motionEvent);
                }
            };
            this.a.p.getWindow().setType(1000);
            this.a.p.setOnShowListener((DialogInterface$OnShowListener)new DialogInterface$OnShowListener() {
                public void onShow(final DialogInterface dialogInterface) {
                    if (g$a.this.a.s != null) {
                        g$a.this.a.s.hide();
                    }
                }
            });
            this.a.p.setOnDismissListener((DialogInterface$OnDismissListener)new DialogInterface$OnDismissListener() {
                public void onDismiss(final DialogInterface dialogInterface) {
                    eo.a(3, g$a.this.a.b, "customViewFullScreenDialog.onDismiss()");
                    if (g$a.this.a.m != null && g$a.this.a.l != null) {
                        g$a.this.a.l.onHideCustomView();
                    }
                }
            });
            this.a.p.setCancelable(true);
            this.a.p.show();
        }
        cb.a(activity, n, true);
        this.a.getPlatformModule().a((Context)activity, this.a.getAdUnit().b().toString());
    }
    
    public final void onShowCustomView(final View view, final WebChromeClient$CustomViewCallback webChromeClient$CustomViewCallback) {
        eo.a(3, this.a.b, "onShowCustomView(7)");
        if (!(this.a.getContext() instanceof Activity)) {
            eo.a(3, this.a.b, "no activity present");
            return;
        }
        this.onShowCustomView(view, ((Activity)this.a.getContext()).getRequestedOrientation(), webChromeClient$CustomViewCallback);
    }
}
