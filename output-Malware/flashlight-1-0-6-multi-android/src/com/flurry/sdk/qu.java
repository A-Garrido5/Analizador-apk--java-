// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.ArrayList;
import java.util.List;

public class qu
{
    final qs a;
    
    public qu(final qs a) {
        this.a = a;
    }
    
    protected sh a(final qu$a qu$a) {
        if (!qu$a.hasMoreTokens()) {
            throw this.a(qu$a, "Unexpected end-of-string");
        }
        final Class a = this.a(qu$a.nextToken(), qu$a);
        if (qu$a.hasMoreTokens()) {
            final String nextToken = qu$a.nextToken();
            if ("<".equals(nextToken)) {
                return this.a.a(a, this.b(qu$a));
            }
            qu$a.a(nextToken);
        }
        return this.a.a(a, (qr)null);
    }
    
    public sh a(final String s) {
        final qu$a qu$a = new qu$a(s.trim());
        final sh a = this.a(qu$a);
        if (qu$a.hasMoreTokens()) {
            throw this.a(qu$a, "Unexpected tokens after complete type");
        }
        return a;
    }
    
    protected Class a(final String s, final qu$a qu$a) {
        try {
            return Class.forName(s, true, Thread.currentThread().getContextClassLoader());
        }
        catch (Exception ex) {
            if (ex instanceof RuntimeException) {
                throw (RuntimeException)ex;
            }
            throw this.a(qu$a, "Can not locate class '" + s + "', problem: " + ex.getMessage());
        }
    }
    
    protected IllegalArgumentException a(final qu$a qu$a, final String s) {
        return new IllegalArgumentException("Failed to parse type '" + qu$a.a() + "' (remaining: '" + qu$a.b() + "'): " + s);
    }
    
    protected List b(final qu$a qu$a) {
        final ArrayList<sh> list = new ArrayList<sh>();
        while (qu$a.hasMoreTokens()) {
            list.add(this.a(qu$a));
            if (!qu$a.hasMoreTokens()) {
                break;
            }
            final String nextToken = qu$a.nextToken();
            if (">".equals(nextToken)) {
                return list;
            }
            if (!",".equals(nextToken)) {
                throw this.a(qu$a, "Unexpected token '" + nextToken + "', expected ',' or '>')");
            }
        }
        throw this.a(qu$a, "Unexpected end-of-string");
    }
}
