// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.math.BigInteger;
import java.math.BigDecimal;

@kb
public final class lz$j extends mc
{
    public lz$j() {
        super(Number.class);
    }
    
    @Override
    public final Object a(final hj hj, final iz iz, final jy jy) {
        switch (lz$1.a[hj.e().ordinal()]) {
            default: {
                return jy.c(hj, iz);
            }
            case 1:
            case 2:
            case 3: {
                return this.b(hj, iz);
            }
        }
    }
    
    public final Number b(final hj hj, final iz iz) {
        final hm e = hj.e();
        if (e == hm.i) {
            if (iz.a(iy$a.h)) {
                return hj.v();
            }
            return hj.p();
        }
        else if (e == hm.j) {
            if (iz.a(iy$a.g)) {
                return hj.y();
            }
            return hj.x();
        }
        else {
            if (e != hm.h) {
                throw iz.a(this.q, e);
            }
            final String trim = hj.k().trim();
            Label_0135: {
                try {
                    if (trim.indexOf(46) < 0) {
                        break Label_0135;
                    }
                    if (iz.a(iy$a.g)) {
                        return new BigDecimal(trim);
                    }
                }
                catch (IllegalArgumentException ex) {
                    throw iz.b(this.q, "not a valid number");
                }
                return new Double(trim);
            }
            if (iz.a(iy$a.h)) {
                return new BigInteger(trim);
            }
            final long long1 = Long.parseLong(trim);
            if (long1 <= 2147483647L && long1 >= -2147483648L) {
                return (int)long1;
            }
            return long1;
        }
    }
}
