// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.List;
import java.util.ArrayList;

public class so extends sn
{
    protected final hj[] e;
    protected int f;
    
    protected so(final hj[] e) {
        super(e[0]);
        this.e = e;
        this.f = 1;
    }
    
    public static so a(final hj hj, final hj hj2) {
        if (!(hj instanceof so) && !(hj2 instanceof so)) {
            return new so(new hj[] { hj, hj2 });
        }
        final ArrayList<hj> list = new ArrayList<hj>();
        if (hj instanceof so) {
            ((so)hj).a(list);
        }
        else {
            list.add(hj);
        }
        if (hj2 instanceof so) {
            ((so)hj2).a(list);
        }
        else {
            list.add(hj2);
        }
        return new so(list.toArray(new hj[list.size()]));
    }
    
    protected boolean A() {
        if (this.f >= this.e.length) {
            return false;
        }
        this.d = this.e[this.f++];
        return true;
    }
    
    protected void a(final List list) {
        final int n = -1 + this.f;
        for (int length = this.e.length, i = n; i < length; ++i) {
            final hj hj = this.e[i];
            if (hj instanceof so) {
                ((so)hj).a(list);
            }
            else {
                list.add(hj);
            }
        }
    }
    
    @Override
    public hm b() {
        final hm b = this.d.b();
        if (b != null) {
            return b;
        }
        while (this.A()) {
            final hm b2 = this.d.b();
            if (b2 != null) {
                return b2;
            }
        }
        return null;
    }
    
    @Override
    public void close() {
        do {
            this.d.close();
        } while (this.A());
    }
}
