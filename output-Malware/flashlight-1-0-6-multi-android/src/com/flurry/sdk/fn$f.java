// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.io.IOException;
import java.io.Writer;
import java.io.StringWriter;
import java.util.LinkedHashSet;
import java.util.Iterator;
import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.IdentityHashMap;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class fn$f
{
    private final String a;
    private transient int b;
    private final fn c;
    private final String d;
    private final hh e;
    private final fn$f$a f;
    private Set g;
    private final fn$r h;
    
    public fn$f(final String s, final fn fn, final String s2, final hh hh) {
        this(s, fn, s2, hh, fn$f$a.a);
    }
    
    public fn$f(final String s, final fn c, final String d, final hh e, final fn$f$a f) {
        this.b = -1;
        this.h = new fn$r(fn.h);
        this.a = h(s);
        this.c = c;
        this.d = d;
        this.e = e;
        this.f = f;
    }
    
    private boolean a(final hh hh) {
        if (this.e == null) {
            return hh == null;
        }
        if (Double.isNaN(this.e.o())) {
            return Double.isNaN(hh.o());
        }
        return this.e.equals(hh);
    }
    
    public String a() {
        return this.a;
    }
    
    public void a(final String s, final String s2) {
        synchronized (this) {
            this.h.a(s, s2);
        }
    }
    
    public int b() {
        return this.b;
    }
    
    public fn c() {
        return this.c;
    }
    
    public String d() {
        return this.d;
    }
    
    public hh e() {
        return this.e;
    }
    
    @Override
    public boolean equals(final Object o) {
        if (o != this) {
            if (!(o instanceof fn$f)) {
                return false;
            }
            final fn$f fn$f = (fn$f)o;
            if (!this.a.equals(fn$f.a) || !this.c.equals(fn$f.c) || !this.a(fn$f.e) || !this.h.equals(fn$f.h)) {
                return false;
            }
        }
        return true;
    }
    
    public fn$f$a f() {
        return this.f;
    }
    
    @Override
    public int hashCode() {
        return this.a.hashCode() + this.c.m();
    }
    
    @Override
    public String toString() {
        return this.a + " type:" + this.c.f + " pos:" + this.b;
    }
}
