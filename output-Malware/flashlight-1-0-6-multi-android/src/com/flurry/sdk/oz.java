// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

public class oz extends oi
{
    public oz(final oi oi) {
        super(oi);
    }
    
    public oz(final oi oi, final jk jk) {
        super(oi, jk);
    }
    
    @Override
    protected jk a(final ov ov, final Class clazz, final jw jw) {
        jk jk;
        if (this.o != null) {
            jk = jw.a(jw.a(this.o, clazz), this);
        }
        else {
            jk = jw.a(clazz, this);
        }
        if (!jk.b()) {
            jk = jk.a();
        }
        this.j = this.j.a(clazz, jk);
        return jk;
    }
    
    @Override
    public oi a(jk a) {
        if (this.getClass() != oz.class) {
            throw new IllegalStateException("UnwrappingBeanPropertyWriter sub-class does not override 'withSerializer()'; needs to!");
        }
        if (!a.b()) {
            a = a.a();
        }
        return new oz(this, a);
    }
    
    @Override
    public void a(final Object o, final hf hf, final jw jw) {
        final Object a = this.a(o);
        if (a != null) {
            if (a == o) {
                this.b(o);
            }
            if (this.l == null || !this.l.equals(a)) {
                jk jk = this.i;
                if (jk == null) {
                    final Class<?> class1 = a.getClass();
                    final ov j = this.j;
                    jk = j.a(class1);
                    if (jk == null) {
                        jk = this.a(j, class1, jw);
                    }
                }
                if (!jk.b()) {
                    hf.a(this.g);
                }
                if (this.n == null) {
                    jk.a(a, hf, jw);
                    return;
                }
                jk.a(a, hf, jw, this.n);
            }
        }
    }
}
