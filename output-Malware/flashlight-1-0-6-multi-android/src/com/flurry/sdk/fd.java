// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import android.content.Context;
import android.os.Build$VERSION;
import android.os.Environment;
import java.io.File;

public final class fd
{
    private static String a;
    
    static {
        fd.a = fd.class.getSimpleName();
    }
    
    public static File a(final boolean b) {
        final Context b2 = do.a().b();
        File file = null;
        Label_0057: {
            if (b) {
                final boolean equals = "mounted".equals(Environment.getExternalStorageState());
                file = null;
                if (equals) {
                    if (Build$VERSION.SDK_INT < 19) {
                        final int checkCallingOrSelfPermission = b2.checkCallingOrSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE");
                        file = null;
                        if (checkCallingOrSelfPermission != 0) {
                            break Label_0057;
                        }
                    }
                    file = b2.getExternalFilesDir((String)null);
                }
            }
        }
        if (file == null) {
            file = b2.getFilesDir();
        }
        return file;
    }
    
    @Deprecated
    public static void a(final File p0, final String p1) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_0        
        //     1: ifnonnull       14
        //     4: iconst_4       
        //     5: getstatic       com/flurry/sdk/fd.a:Ljava/lang/String;
        //     8: ldc             "No persistent file specified."
        //    10: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;)V
        //    13: return         
        //    14: aload_1        
        //    15: ifnonnull       50
        //    18: iconst_4       
        //    19: getstatic       com/flurry/sdk/fd.a:Ljava/lang/String;
        //    22: new             Ljava/lang/StringBuilder;
        //    25: dup            
        //    26: ldc             "No data specified; deleting persistent file: "
        //    28: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    31: aload_0        
        //    32: invokevirtual   java/io/File.getAbsolutePath:()Ljava/lang/String;
        //    35: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    38: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    41: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;)V
        //    44: aload_0        
        //    45: invokevirtual   java/io/File.delete:()Z
        //    48: pop            
        //    49: return         
        //    50: iconst_4       
        //    51: getstatic       com/flurry/sdk/fd.a:Ljava/lang/String;
        //    54: new             Ljava/lang/StringBuilder;
        //    57: dup            
        //    58: ldc             "Writing persistent data: "
        //    60: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    63: aload_0        
        //    64: invokevirtual   java/io/File.getAbsolutePath:()Ljava/lang/String;
        //    67: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    70: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    73: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;)V
        //    76: new             Ljava/io/FileOutputStream;
        //    79: dup            
        //    80: aload_0        
        //    81: invokespecial   java/io/FileOutputStream.<init>:(Ljava/io/File;)V
        //    84: astore_2       
        //    85: aload_2        
        //    86: aload_1        
        //    87: invokevirtual   java/lang/String.getBytes:()[B
        //    90: invokevirtual   java/io/FileOutputStream.write:([B)V
        //    93: aload_2        
        //    94: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //    97: return         
        //    98: astore_3       
        //    99: aconst_null    
        //   100: astore_2       
        //   101: bipush          6
        //   103: getstatic       com/flurry/sdk/fd.a:Ljava/lang/String;
        //   106: ldc             "Error writing persistent file"
        //   108: aload_3        
        //   109: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   112: aload_2        
        //   113: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   116: return         
        //   117: astore          4
        //   119: aconst_null    
        //   120: astore_2       
        //   121: aload_2        
        //   122: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   125: aload           4
        //   127: athrow         
        //   128: astore          4
        //   130: goto            121
        //   133: astore_3       
        //   134: goto            101
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  76     85     98     101    Ljava/lang/Throwable;
        //  76     85     117    121    Any
        //  85     93     133    137    Ljava/lang/Throwable;
        //  85     93     128    133    Any
        //  101    112    128    133    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0101:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public static boolean a(final File file) {
        if (file == null || file.getAbsoluteFile() == null) {
            return false;
        }
        final File parentFile = file.getParentFile();
        if (parentFile == null) {
            return true;
        }
        if (!parentFile.mkdirs() && !parentFile.isDirectory()) {
            eo.a(6, fd.a, "Unable to create persistent dir: " + parentFile);
            return false;
        }
        return true;
    }
    
    public static File b(final boolean b) {
        final Context b2 = do.a().b();
        File file = null;
        Label_0056: {
            if (b) {
                final boolean equals = "mounted".equals(Environment.getExternalStorageState());
                file = null;
                if (equals) {
                    if (Build$VERSION.SDK_INT < 19) {
                        final int checkCallingOrSelfPermission = b2.checkCallingOrSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE");
                        file = null;
                        if (checkCallingOrSelfPermission != 0) {
                            break Label_0056;
                        }
                    }
                    file = b2.getExternalCacheDir();
                }
            }
        }
        if (file == null) {
            file = b2.getCacheDir();
        }
        return file;
    }
    
    public static boolean b(final File file) {
        if (file != null && file.isDirectory()) {
            final String[] list = file.list();
            for (int i = 0; i < list.length; ++i) {
                if (!b(new File(file, list[i]))) {
                    return false;
                }
            }
        }
        return file.delete();
    }
    
    @Deprecated
    public static String c(final File p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_0        
        //     1: ifnull          11
        //     4: aload_0        
        //     5: invokevirtual   java/io/File.exists:()Z
        //     8: ifne            22
        //    11: iconst_4       
        //    12: getstatic       com/flurry/sdk/fd.a:Ljava/lang/String;
        //    15: ldc             "Persistent file doesn't exist."
        //    17: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;)V
        //    20: aconst_null    
        //    21: areturn        
        //    22: iconst_4       
        //    23: getstatic       com/flurry/sdk/fd.a:Ljava/lang/String;
        //    26: new             Ljava/lang/StringBuilder;
        //    29: dup            
        //    30: ldc             "Loading persistent data: "
        //    32: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    35: aload_0        
        //    36: invokevirtual   java/io/File.getAbsolutePath:()Ljava/lang/String;
        //    39: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    42: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    45: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;)V
        //    48: new             Ljava/io/FileInputStream;
        //    51: dup            
        //    52: aload_0        
        //    53: invokespecial   java/io/FileInputStream.<init>:(Ljava/io/File;)V
        //    56: astore_1       
        //    57: new             Ljava/lang/StringBuilder;
        //    60: dup            
        //    61: invokespecial   java/lang/StringBuilder.<init>:()V
        //    64: astore_2       
        //    65: sipush          1024
        //    68: newarray        B
        //    70: astore          5
        //    72: aload_1        
        //    73: aload           5
        //    75: invokevirtual   java/io/FileInputStream.read:([B)I
        //    78: istore          6
        //    80: iload           6
        //    82: ifle            134
        //    85: aload_2        
        //    86: new             Ljava/lang/String;
        //    89: dup            
        //    90: aload           5
        //    92: iconst_0       
        //    93: iload           6
        //    95: invokespecial   java/lang/String.<init>:([BII)V
        //    98: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   101: pop            
        //   102: goto            72
        //   105: astore          4
        //   107: bipush          6
        //   109: getstatic       com/flurry/sdk/fd.a:Ljava/lang/String;
        //   112: ldc             "Error when loading persistent file"
        //   114: aload           4
        //   116: invokestatic    com/flurry/sdk/eo.a:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   119: aload_1        
        //   120: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   123: aconst_null    
        //   124: astore_2       
        //   125: aload_2        
        //   126: ifnull          20
        //   129: aload_2        
        //   130: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   133: areturn        
        //   134: aload_1        
        //   135: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   138: goto            125
        //   141: astore          8
        //   143: aconst_null    
        //   144: astore_1       
        //   145: aload           8
        //   147: astore_3       
        //   148: aload_1        
        //   149: invokestatic    com/flurry/sdk/fe.a:(Ljava/io/Closeable;)V
        //   152: aload_3        
        //   153: athrow         
        //   154: astore_3       
        //   155: goto            148
        //   158: astore          4
        //   160: aconst_null    
        //   161: astore_1       
        //   162: goto            107
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  48     57     158    165    Ljava/lang/Throwable;
        //  48     57     141    148    Any
        //  57     72     105    107    Ljava/lang/Throwable;
        //  57     72     154    158    Any
        //  72     80     105    107    Ljava/lang/Throwable;
        //  72     80     154    158    Any
        //  85     102    105    107    Ljava/lang/Throwable;
        //  85     102    154    158    Any
        //  107    119    154    158    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0072:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
}
