// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import android.view.KeyEvent;
import android.annotation.TargetApi;
import android.os.Build$VERSION;
import android.view.ViewParent;
import java.util.Collection;
import java.util.ArrayList;
import android.content.DialogInterface$OnClickListener;
import android.app.AlertDialog$Builder;
import android.view.View$OnClickListener;
import java.io.File;
import android.widget.RelativeLayout$LayoutParams;
import android.content.DialogInterface;
import android.content.DialogInterface$OnDismissListener;
import android.view.ViewGroup$LayoutParams;
import android.widget.FrameLayout$LayoutParams;
import java.util.Iterator;
import java.util.LinkedList;
import com.flurry.android.impl.ads.avro.protocol.v10.AdFrame;
import android.app.Activity;
import com.flurry.android.impl.ads.FlurryAdModule;
import android.content.Context;
import com.flurry.android.FlurryFullscreenTakeoverActivity;
import android.widget.FrameLayout;
import android.app.Dialog;
import android.webkit.WebChromeClient$CustomViewCallback;
import android.webkit.WebChromeClient;
import android.widget.Button;
import android.app.ProgressDialog;
import java.util.List;
import android.app.AlertDialog;
import android.annotation.SuppressLint;
import android.content.DialogInterface$OnKeyListener;
import com.flurry.android.impl.ads.avro.protocol.v10.AdUnit;
import java.util.Collections;
import android.text.TextUtils;
import java.util.Map;
import java.util.HashMap;
import android.content.Intent;
import android.graphics.Bitmap;
import android.view.View;
import android.net.Uri;
import android.webkit.WebView;
import android.webkit.WebViewClient;

class g$b extends WebViewClient
{
    final /* synthetic */ g a;
    
    private g$b(final g a) {
        this.a = a;
    }
    
    public void onLoadResource(final WebView webView, final String s) {
        eo.a(3, this.a.b, "onLoadResource: url = " + s);
        super.onLoadResource(webView, s);
        if (s != null && webView != null && webView == this.a.g) {
            if (!s.equalsIgnoreCase(this.a.g.getUrl())) {
                this.a.i();
            }
            if (!this.a.v) {
                final String lastPathSegment = Uri.parse(s).getLastPathSegment();
                if (lastPathSegment != null && lastPathSegment.equalsIgnoreCase("mraid.js")) {
                    this.a.v = true;
                    if (this.a.w) {
                        this.a.n();
                        if (this.a.u) {
                            this.a.q();
                            this.a.r();
                            this.a.w();
                            this.a.x();
                        }
                    }
                    else if (this.a.u) {
                        this.a.y();
                        if (this.a.e() && this.a.getCurrentBinding() == 2) {
                            this.a.z();
                        }
                    }
                }
            }
        }
    }
    
    public void onPageFinished(final WebView webView, final String s) {
        eo.a(3, this.a.b, "onPageFinished: url = " + s);
        if (s != null && webView != null && webView == this.a.g) {
            this.a.i();
            this.a.l();
            this.a.B();
            if (!this.a.a((View)this.a.g) && (this.a.getCurrentBinding() == 2 || this.a.getCurrentBinding() == 1)) {
                eo.a(3, this.a.b, "adding WebView to AdUnityView");
                this.a.addView((View)this.a.g);
            }
            this.a.u = true;
            if (this.a.w) {
                if (this.a.v) {
                    this.a.q();
                    this.a.r();
                    this.a.w();
                    this.a.x();
                }
            }
            else if (this.a.v) {
                this.a.y();
                if (this.a.e() && this.a.getCurrentBinding() == 2) {
                    this.a.z();
                }
            }
        }
    }
    
    public void onPageStarted(final WebView webView, final String s, final Bitmap bitmap) {
        eo.a(3, this.a.b, "onPageStarted: url = " + s);
        if (s == null || webView == null || webView != this.a.g) {
            return;
        }
        this.a.j();
        this.a.o();
        this.a.u = false;
        this.a.v = false;
    }
    
    public void onReceivedError(final WebView webView, final int n, final String s, final String s2) {
        eo.a(3, this.a.b, "onReceivedError: url = " + s2);
        this.a.B();
        final Uri parse = Uri.parse(s2);
        if ("market".equals(parse.getScheme())) {
            final Intent intent = new Intent("android.intent.action.VIEW");
            intent.setData(parse);
            this.a.getContext().startActivity(intent);
            this.a.u();
            return;
        }
        final HashMap<String, String> hashMap = new HashMap<String, String>();
        hashMap.put("errorCode", Integer.toString(b.q.a()));
        hashMap.put("webViewErrorCode", Integer.toString(n));
        hashMap.put("failingUrl", s2);
        this.a.a("renderFailed", hashMap, this.a.getAdUnit(), this.a.getAdLog(), this.a.getAdFrameIndex(), 0);
    }
    
    public boolean shouldOverrideUrlLoading(final WebView webView, String s) {
        eo.a(3, this.a.b, "shouldOverrideUrlLoading: url = " + s);
        if (s == null || webView == null || webView != this.a.g) {
            return false;
        }
        final String c = cf.c(this.a.g.getUrl());
        if (!TextUtils.isEmpty((CharSequence)c) && s.startsWith(c)) {
            final String substring = s.substring(c.length());
            final Uri parse = Uri.parse(substring);
            if (parse.isHierarchical() && !TextUtils.isEmpty((CharSequence)parse.getScheme()) && !TextUtils.isEmpty((CharSequence)parse.getAuthority())) {
                eo.a(3, this.a.b, "shouldOverrideUrlLoading: target url = " + substring);
                s = substring;
            }
        }
        final Uri parse2 = Uri.parse(s);
        if ("flurry".equals(parse2.getScheme())) {
            final String queryParameter = parse2.getQueryParameter("event");
            if (queryParameter != null) {
                this.a.F.add(queryParameter);
                final Map f = fe.f(parse2.getEncodedQuery());
                if (f.containsKey("guid")) {
                    final AdUnit a = this.a.c(f.get("guid"));
                    final e b = this.a.b(f.get("guid"));
                    if (a != null && b != null) {
                        this.a.a(queryParameter, f, a, b, 0, 0);
                    }
                }
                else {
                    this.a.a(queryParameter, f, this.a.getAdUnit(), this.a.getAdLog(), this.a.getAdFrameIndex(), 0);
                }
            }
            return true;
        }
        if (this.a.I) {
            this.a.I = false;
            this.a.a("clicked", Collections.emptyMap(), this.a.getAdUnit(), this.a.getAdLog(), this.a.getAdFrameIndex(), 0);
        }
        if (this.a.e()) {
            final String a2 = cf.a(s);
            if (a2 != null) {
                final boolean e = cf.e(a2);
                boolean b2 = false;
                if (e) {
                    b2 = this.a.getPlatformModule().a().b(this.a.getContext(), a2, this.a.getAdUnit().b().toString());
                }
                if (!b2) {
                    this.a.g.loadUrl(a2);
                }
            }
        }
        else {
            this.a.getPlatformModule().a().a(this.a.getContext(), s, true, this.a.getAdUnit(), true);
        }
        return true;
    }
}
