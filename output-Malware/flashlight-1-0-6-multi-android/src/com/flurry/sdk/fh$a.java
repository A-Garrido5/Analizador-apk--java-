// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.ArrayList;
import java.util.Map;
import java.util.Iterator;
import java.io.EOFException;
import java.io.InputStream;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.Callable;
import java.util.LinkedHashMap;
import java.io.Writer;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.regex.Pattern;
import java.io.Closeable;
import java.util.Arrays;
import java.io.IOException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.OutputStream;

public final class fh$a
{
    final /* synthetic */ fh a;
    private final fh$b b;
    private final boolean[] c;
    private boolean d;
    private boolean e;
    
    private fh$a(final fh a, final fh$b b) {
        this.a = a;
        this.b = b;
        boolean[] c;
        if (b.d) {
            c = null;
        }
        else {
            c = new boolean[a.i];
        }
        this.c = c;
    }
    
    public final OutputStream a(final int n) {
        synchronized (this.a) {
            if (this.b.e != this) {
                throw new IllegalStateException();
            }
        }
        if (!this.b.d) {
            this.c[n] = true;
        }
        final File b = this.b.b(n);
        try {
            final FileOutputStream fileOutputStream = new FileOutputStream(b);
            // monitorexit(fh)
            return new fh$a$a(this, fileOutputStream, null);
        }
        catch (FileNotFoundException ex) {
            this.a.c.mkdirs();
            try {
                final FileOutputStream fileOutputStream = new FileOutputStream(b);
            }
            catch (FileNotFoundException ex2) {
                // monitorexit(fh)
                return fh.p;
            }
        }
    }
    
    public final void a() {
        if (this.d) {
            this.a.a(this, false);
            this.a.c(this.b.b);
        }
        else {
            this.a.a(this, true);
        }
        this.e = true;
    }
    
    public final void b() {
        this.a.a(this, false);
    }
}
