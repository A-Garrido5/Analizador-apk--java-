// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.io.EOFException;
import java.io.InputStream;

class gb$d extends gb$c
{
    protected boolean b;
    private InputStream c;
    
    private gb$d(final InputStream c) {
        this.b = false;
        this.c = c;
    }
    
    @Override
    protected void a(long n) {
        int n2 = 0;
        while (n > 0L) {
            final long skip = this.c.skip(n);
            if (skip > 0L) {
                n -= skip;
            }
            else {
                if (skip != 0L) {
                    this.b = true;
                    throw new EOFException();
                }
                if (n2 != 0) {
                    this.b = true;
                    throw new EOFException();
                }
                n2 = 1;
            }
        }
    }
    
    @Override
    protected void a(final byte[] array, int n, int i) {
        while (i > 0) {
            final int read = this.c.read(array, n, i);
            if (read < 0) {
                this.b = true;
                throw new EOFException();
            }
            i -= read;
            n += read;
        }
    }
    
    @Override
    protected int b(final byte[] array, int n, final int n2) {
        int n3 = n2;
        while (true) {
            Label_0031: {
                if (n3 <= 0) {
                    break Label_0031;
                }
                try {
                    final int read = this.c.read(array, n, n3);
                    if (read < 0) {
                        this.b = true;
                        return n2 - n3;
                    }
                    n3 -= read;
                    n += read;
                }
                catch (EOFException ex) {
                    this.b = true;
                    return n2 - n3;
                }
            }
        }
    }
    
    @Override
    protected long b(final long n) {
        int n2 = 0;
        long n3 = n;
        while (n3 > 0L) {
            Label_0078: {
                try {
                    final long skip = this.c.skip(n);
                    if (skip > 0L) {
                        n3 -= skip;
                        continue;
                    }
                    if (skip == 0L) {
                        if (n2 == 0) {
                            break Label_0078;
                        }
                        this.b = true;
                    }
                    else {
                        this.b = true;
                    }
                }
                catch (EOFException ex) {
                    this.b = true;
                }
                break;
            }
            n2 = 1;
        }
        return n - n3;
    }
    
    @Override
    public void close() {
        this.c.close();
    }
    
    @Override
    public int read() {
        if (this.a.c() - this.a.b() == 0) {
            return this.c.read();
        }
        final int b = this.a.b();
        final int n = 0xFF & this.a.d()[b];
        this.a.a(b + 1);
        return n;
    }
}
