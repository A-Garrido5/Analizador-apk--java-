// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.util.Iterator;
import java.util.ArrayList;
import android.text.TextUtils;
import android.content.Context;
import java.util.WeakHashMap;
import java.util.HashMap;
import java.util.Map;

public class dl
{
    private static final String a;
    private static dl b;
    private final Map c;
    private final Map d;
    private final Object e;
    private dj f;
    
    static {
        a = dl.class.getSimpleName();
    }
    
    private dl() {
        this.c = new HashMap();
        this.d = new WeakHashMap();
        this.e = new Object();
    }
    
    public static dl a() {
        synchronized (dl.class) {
            if (dl.b == null) {
                dl.b = new dl();
            }
            return dl.b;
        }
    }
    
    public void a(final Context context) {
        synchronized (this) {
            final dj dj = this.d.remove(context);
            if (dj == null) {
                eo.d(dl.a, "Session cannot be ended, session not found for context: " + context);
            }
            else {
                dj.c(context);
            }
        }
    }
    
    public void a(final Context context, final String s) {
        while (true) {
            while (true) {
                Label_0137: {
                    synchronized (this) {
                        do.a(context);
                        ev.a().b();
                        dz.a().b();
                        final dj dj = this.d.get(context);
                        if (dj != null) {
                            eo.d(dl.a, "Session already started with context: " + context + " count:" + dj.g());
                        }
                        else {
                            if (!this.c.containsKey(s)) {
                                break Label_0137;
                            }
                            final dj dj2 = this.c.get(s);
                            this.d.put(context, dj2);
                            this.a(dj2);
                            dj2.b(context);
                        }
                        return;
                    }
                }
                final dj dj2 = new dj(s);
                this.c.put(s, dj2);
                dj2.a(context);
                continue;
            }
        }
    }
    
    public void a(final dj f) {
        synchronized (this.e) {
            this.f = f;
        }
    }
    
    public void a(final String s) {
        synchronized (this) {
            if (!this.c.containsKey(s)) {
                eo.a(6, dl.a, "Ended session is not in the session map! Maybe it was already destroyed.");
            }
            else {
                final dj c = this.c();
                if (c != null && TextUtils.equals((CharSequence)c.j(), (CharSequence)s)) {
                    this.a((dj)null);
                }
                this.c.remove(s);
            }
        }
    }
    
    public int b() {
        synchronized (this) {
            return this.d.size();
        }
    }
    
    public dj c() {
        synchronized (this.e) {
            return this.f;
        }
    }
    
    public void d() {
        synchronized (this) {
            for (final Map.Entry<K, dj> entry : this.d.entrySet()) {
                entry.getValue().c((Context)entry.getKey());
            }
        }
        this.d.clear();
        final Iterator<dj> iterator2 = new ArrayList<dj>(this.c.values()).iterator();
        while (iterator2.hasNext()) {
            iterator2.next().c();
        }
        this.c.clear();
        this.a((dj)null);
    }
    // monitorexit(this)
}
