// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.math.BigInteger;

@kb
public class lz$b extends mc
{
    public lz$b() {
        super(BigInteger.class);
    }
    
    public BigInteger b(final hj hj, final iz iz) {
        final hm e = hj.e();
        if (e == hm.i) {
            switch (lz$1.b[hj.q().ordinal()]) {
                case 1:
                case 2: {
                    return BigInteger.valueOf(hj.u());
                }
            }
        }
        else {
            if (e == hm.j) {
                return hj.y().toBigInteger();
            }
            if (e != hm.h) {
                throw iz.a(this.q, e);
            }
        }
        final String trim = hj.k().trim();
        if (trim.length() == 0) {
            return null;
        }
        try {
            return new BigInteger(trim);
        }
        catch (IllegalArgumentException ex) {
            throw iz.b(this.q, "not a valid representation");
        }
    }
}
