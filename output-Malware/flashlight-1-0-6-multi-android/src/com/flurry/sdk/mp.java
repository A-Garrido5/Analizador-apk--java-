// 
// Decompiled by Procyon v0.5.30
// 

package com.flurry.sdk;

import java.lang.reflect.Member;
import java.lang.reflect.Type;
import java.lang.reflect.AnnotatedElement;
import java.lang.annotation.Annotation;
import java.lang.reflect.Field;

public final class mp extends mq
{
    protected final Field a;
    
    public mp(final Field a, final mv mv) {
        super(mv);
        this.a = a;
    }
    
    public final mp a(final mv mv) {
        return new mp(this.a, mv);
    }
    
    @Override
    public final Annotation a(final Class clazz) {
        return this.b.a(clazz);
    }
    
    @Override
    public final void a(final Object o, final Object o2) {
        try {
            this.a.set(o, o2);
        }
        catch (IllegalAccessException ex) {
            throw new IllegalArgumentException("Failed to setValue() for field " + this.f() + ": " + ex.getMessage(), ex);
        }
    }
    
    public final void a(final Annotation annotation) {
        this.b.b(annotation);
    }
    
    @Override
    public final String b() {
        return this.a.getName();
    }
    
    @Override
    public final Type c() {
        return this.a.getGenericType();
    }
    
    @Override
    public final Class d() {
        return this.a.getType();
    }
    
    public final Field e() {
        return this.a;
    }
    
    public final String f() {
        return this.h().getName() + "#" + this.b();
    }
    
    @Override
    public final Class h() {
        return this.a.getDeclaringClass();
    }
    
    @Override
    public final Member i() {
        return this.a;
    }
    
    @Override
    public final String toString() {
        return "[field " + this.b() + ", annotations: " + this.b + "]";
    }
}
