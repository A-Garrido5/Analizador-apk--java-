// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.androidsdk;

import java.util.Locale;
import com.inmobi.androidsdk.impl.net.RequestResponseManager$ActionType;
import com.inmobi.androidsdk.carb.CARB;
import android.widget.FrameLayout;
import com.inmobi.re.container.IMWebView$ViewState;
import android.view.Display;
import com.inmobi.commons.internal.WrapperFunctions;
import android.view.WindowManager;
import android.util.DisplayMetrics;
import android.os.Build$VERSION;
import com.inmobi.androidsdk.impl.ConfigException;
import android.content.BroadcastReceiver;
import android.content.IntentFilter;
import android.view.ViewGroup$LayoutParams;
import android.view.View;
import android.widget.RelativeLayout$LayoutParams;
import com.inmobi.androidsdk.impl.imai.IMAIController;
import com.inmobi.commons.internal.InternalSDKUtil;
import com.inmobi.androidsdk.impl.SDKUtil;
import android.util.AttributeSet;
import android.content.Context;
import com.inmobi.androidsdk.impl.net.RequestResponseManager;
import com.inmobi.commons.AnimationType;
import android.view.animation.Animation;
import java.util.concurrent.atomic.AtomicBoolean;
import com.inmobi.androidsdk.impl.UserInfo;
import android.app.Activity;
import com.inmobi.re.container.IMWebView;
import com.inmobi.re.container.IMWebView$IMWebViewListener;
import android.view.animation.Animation$AnimationListener;
import com.inmobi.androidsdk.impl.ConnBroadcastReciever;
import android.widget.RelativeLayout;
import android.os.Message;
import org.json.JSONException;
import com.inmobi.commons.metric.EventType;
import com.inmobi.commons.metric.EventLog;
import com.inmobi.androidsdk.bootstrapper.NetworkEventType;
import com.inmobi.androidsdk.bootstrapper.Initializer;
import org.json.JSONObject;
import com.inmobi.androidsdk.impl.AdException;
import com.inmobi.androidsdk.impl.net.Response;
import com.inmobi.commons.internal.Log;
import com.inmobi.androidsdk.impl.net.HttpRequestCallback;

class c implements HttpRequestCallback
{
    final /* synthetic */ BannerView a;
    
    c(final BannerView a) {
        this.a = a;
    }
    
    @Override
    public void notifyResult(final int n, final Object o) {
        Log.debug("[InMobi]-[Network]-4.4.3", ">>> Got HTTP REQUEST callback. Status: " + n);
        if (n == 0) {
            this.a.l = ((Response)o).getAdResponse();
            this.a.m = ((Response)o).getImpressionId();
            this.a.B.sendEmptyMessage(109);
        }
        else if (n == 1) {
            final long n2 = System.currentTimeMillis() - this.a.t;
            final Message obtainMessage = this.a.B.obtainMessage(110);
        Label_0288_Outer:
            while (true) {
                Label_0237: {
                    if (!(o instanceof AdException)) {
                        break Label_0237;
                    }
                    final AdException ex = (AdException)o;
                    final AdRequest$ErrorCode errorCode = ex.getErrorCode();
                    Label_0192: {
                        if (!this.a.A) {
                            break Label_0192;
                        }
                        final JSONObject jsonObject = new JSONObject();
                        while (true) {
                            try {
                                jsonObject.put("ad", (Object)ex.getImpressionId());
                                jsonObject.put("t", n2);
                                jsonObject.put("m", ex.getHttpCode());
                                Initializer.getLogger().logEvent(new EventLog(NetworkEventType.RESPONSE_ERROR, jsonObject));
                                final AdRequest$ErrorCode obj = errorCode;
                                obtainMessage.obj = obj;
                                obtainMessage.sendToTarget();
                                return;
                            }
                            catch (JSONException ex2) {
                                Log.internal("[InMobi]-[Network]-4.4.3", "Error creating metric logs for error at " + System.currentTimeMillis());
                                continue;
                            }
                            break;
                        }
                    }
                }
                final AdRequest$ErrorCode obj = (AdRequest$ErrorCode)o;
                final int errorCode2 = obj.getErrorCode();
                if (!this.a.A) {
                    continue;
                }
                final JSONObject jsonObject2 = new JSONObject();
                while (true) {
                    try {
                        jsonObject2.put("t", n2);
                        jsonObject2.put("m", errorCode2);
                        Initializer.getLogger().logEvent(new EventLog(NetworkEventType.CONNECT_ERROR, jsonObject2));
                        continue Label_0288_Outer;
                    }
                    catch (JSONException ex3) {
                        Log.internal("[InMobi]-[Network]-4.4.3", "Error creating metric logs for error at " + System.currentTimeMillis());
                        continue;
                    }
                    break;
                }
                break;
            }
        }
    }
}
