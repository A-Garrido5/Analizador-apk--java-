// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.androidsdk.impl.net;

import java.util.HashMap;
import com.inmobi.androidsdk.impl.SDKUtil;
import com.inmobi.androidsdk.impl.imai.db.ClickData;
import java.util.Collection;
import android.content.Context;
import java.security.SecureRandom;
import com.inmobi.androidsdk.bootstrapper.Initializer;
import java.io.Writer;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
import java.io.IOException;
import java.net.URL;
import com.inmobi.androidsdk.bootstrapper.PkInitilaizer;
import com.inmobi.androidsdk.impl.AdException;
import com.inmobi.commons.internal.InternalSDKUtil;
import com.inmobi.commons.thirdparty.Base64;
import java.io.Closeable;
import java.io.Reader;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import com.inmobi.commons.internal.Log;
import com.inmobi.androidsdk.impl.UserInfo;
import java.net.HttpURLConnection;
import com.inmobi.androidsdk.impl.imai.IMAIClickEventList;
import java.util.concurrent.atomic.AtomicBoolean;
import android.os.Handler;

public final class RequestResponseManager
{
    static Thread a;
    static Handler b;
    static AtomicBoolean c;
    public static AtomicBoolean isSynced;
    private static AtomicBoolean j;
    private static AtomicBoolean l;
    public static IMAIClickEventList mDBWriterQueue;
    public static IMAIClickEventList mNetworkQueue;
    byte[] d;
    String e;
    String f;
    String g;
    private AtomicBoolean h;
    private HttpURLConnection i;
    private WebviewLoader k;
    private final int m;
    private final int n;
    private byte[] o;
    private byte[] p;
    
    static {
        RequestResponseManager.mNetworkQueue = null;
        RequestResponseManager.mDBWriterQueue = new IMAIClickEventList();
        RequestResponseManager.j = null;
        RequestResponseManager.b = new Handler();
        RequestResponseManager.c = null;
        RequestResponseManager.l = null;
    }
    
    public RequestResponseManager() {
        this.h = new AtomicBoolean();
        this.k = null;
        this.m = 8;
        this.n = 16;
        this.e = "";
        this.f = "";
        this.g = "";
    }
    
    private Response a(final UserInfo userInfo) {
        Log.debug("[InMobi]-[Network]-4.4.3", "Http Status Code: " + this.i.getResponseCode());
        final int responseCode = this.i.getResponseCode();
        final String headerField = this.i.getHeaderField("im-id");
        Log.debug("[InMobi]-[Network]-4.4.3", "Im Id: " + headerField);
        final String headerField2 = this.i.getHeaderField("im-ec");
        if (headerField2 != null) {
            Log.debug("[InMobi]-[Network]-4.4.3", "Sandbox error Id: " + headerField2);
        }
        Label_0336: {
            if (responseCode != 200) {
                break Label_0336;
            }
            while (true) {
                try {
                    final BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(this.i.getInputStream(), "UTF-8"));
                    StringBuilder sb = null;
                    Label_0191: {
                        try {
                            sb = new StringBuilder();
                            while (true) {
                                final String line = bufferedReader.readLine();
                                if (line == null) {
                                    break Label_0191;
                                }
                                sb.append(line).append("\n");
                            }
                        }
                        finally {}
                        this.i.disconnect();
                        this.a(bufferedReader);
                        throw;
                    }
                    final String string = sb.toString();
                    Log.debug("[InMobi]-[Network]-4.4.3", "Ad Response: " + string);
                    try {
                        final String s = new String(InternalSDKUtil.DeAe(Base64.decode(string.getBytes(), 0), this.o, this.p));
                        Log.internal("[InMobi]-[Network]-4.4.3", "Decrypted Ad Response: " + s);
                        if (s != null) {
                            final Response response = new Response(headerField, s);
                            this.i.disconnect();
                            this.a(bufferedReader);
                            return response;
                        }
                    }
                    catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    throw new AdException("Some error in response.", 200, headerField, -1);
                    // iftrue(Label_0393:, responseCode != 400)
                    // iftrue(Label_0364:, responseCode != 204)
                    Block_7: {
                        break Block_7;
                        while (true) {
                            Log.debug("[InMobi]-[Network]-4.4.3", "Server returned No fill");
                            throw new AdException("Server did not return 200.", 100, headerField, responseCode);
                            Label_0393: {
                                Log.debug("[InMobi]-[Network]-4.4.3", "Server Error");
                            }
                            throw new AdException("Server did not return 200.", 200, headerField, responseCode);
                            continue;
                        }
                    }
                    Log.debug("[InMobi]-[Network]-4.4.3", "Invalid App Id.Please check the app Id in the adrequest is valid and in active state");
                    throw new AdException("Server did not return 200.", 400, headerField, responseCode);
                }
                finally {
                    final BufferedReader bufferedReader = null;
                    continue;
                }
                break;
            }
        }
    }
    
    private String a(final String s, final HttpRequestCallback httpRequestCallback) {
        this.b();
        this.o = InternalSDKUtil.keag();
        this.e = PkInitilaizer.getConfigParams().getExponent();
        this.f = PkInitilaizer.getConfigParams().getModulus();
        this.g = PkInitilaizer.getConfigParams().getVersion();
        if (this.e.equals("") || this.f.equals("") || this.g.equals("")) {
            Log.debug("[InMobi]-[Network]-4.4.3", "Exception retreiving Ad due to key problem");
            return null;
        }
        final String seMeGe = InternalSDKUtil.SeMeGe(s, this.o, this.p, this.d, this.f, this.e);
        final StringBuilder sb = new StringBuilder();
        sb.append("sm=");
        sb.append(seMeGe);
        sb.append("&sn=");
        sb.append(this.g);
        final String string = sb.toString();
        Log.debug("[InMobi]-[Network]-4.4.3", string);
        return string;
    }
    
    private HttpURLConnection a(final String s, final UserInfo userInfo) {
        InternalSDKUtil.addCommonPropertiesToConnection(this.i = (HttpURLConnection)new URL(s).openConnection());
        a(this.i, userInfo);
        return this.i;
    }
    
    private void a(final int n, final Object o, final HttpRequestCallback httpRequestCallback) {
        if (!this.h.get() && httpRequestCallback != null) {
            httpRequestCallback.notifyResult(n, o);
        }
    }
    
    private void a(final Closeable closeable) {
        if (closeable == null) {
            return;
        }
        try {
            closeable.close();
        }
        catch (IOException ex) {
            Log.debug("[InMobi]-[Network]-4.4.3", "Exception closing resource: " + closeable, ex);
        }
    }
    
    private void a(final String s) {
        this.i.setRequestProperty("Content-Length", Integer.toString(s.length()));
        BufferedWriter bufferedWriter;
        try {
            final BufferedWriter bufferedWriter2;
            bufferedWriter = (bufferedWriter2 = new BufferedWriter(new OutputStreamWriter(this.i.getOutputStream())));
            final String s2 = s;
            bufferedWriter2.write(s2);
            final RequestResponseManager requestResponseManager = this;
            final BufferedWriter bufferedWriter3 = bufferedWriter;
            requestResponseManager.a(bufferedWriter3);
            return;
        }
        finally {
            final Object o2;
            final Object o = o2;
            bufferedWriter = null;
        }
        while (true) {
            try {
                final BufferedWriter bufferedWriter2 = bufferedWriter;
                final String s2 = s;
                bufferedWriter2.write(s2);
                final RequestResponseManager requestResponseManager = this;
                final BufferedWriter bufferedWriter3 = bufferedWriter;
                requestResponseManager.a(bufferedWriter3);
                return;
                this.a(bufferedWriter);
                throw;
            }
            finally {
                continue;
            }
            break;
        }
    }
    
    private static void a(final HttpURLConnection httpURLConnection, final UserInfo userInfo) {
        final int fetchTimeOut = Initializer.getConfigParams().getFetchTimeOut();
        httpURLConnection.setConnectTimeout(fetchTimeOut);
        httpURLConnection.setReadTimeout(fetchTimeOut);
        httpURLConnection.setRequestProperty("user-agent", userInfo.getPhoneDefaultUserAgent());
        httpURLConnection.setUseCaches(false);
        httpURLConnection.setDoOutput(true);
        httpURLConnection.setDoInput(true);
        httpURLConnection.setRequestMethod("POST");
        httpURLConnection.setRequestProperty("content-type", "application/x-www-form-urlencoded");
    }
    
    private void b() {
        try {
            this.d = new byte[8];
            final SecureRandom secureRandom = new SecureRandom();
            secureRandom.nextBytes(this.d);
            secureRandom.nextBytes(this.p = new byte[16]);
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    public final void asyncRequestAd(final UserInfo userInfo, final RequestResponseManager$ActionType requestResponseManager$ActionType, final String s, final HttpRequestCallback httpRequestCallback) {
        new Thread() {
            @Override
            public void run() {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.a:Lcom/inmobi/androidsdk/impl/UserInfo;
                //     4: invokevirtual   com/inmobi/androidsdk/impl/UserInfo.getApplicationContext:()Landroid/content/Context;
                //     7: invokestatic    com/inmobi/commons/thinICE/icedatacollector/IceDataCollector.getConnectedWifiInfo:(Landroid/content/Context;)Lcom/inmobi/commons/thinICE/wifi/WifiInfo;
                //    10: astore          9
                //    12: aload           9
                //    14: astore          5
                //    16: ldc             "[InMobi]-[Network]-4.4.3"
                //    18: new             Ljava/lang/StringBuilder;
                //    21: dup            
                //    22: ldc             "Ad Serving URL: "
                //    24: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
                //    27: aload_0        
                //    28: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.b:Ljava/lang/String;
                //    31: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                //    34: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
                //    37: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
                //    40: aload_0        
                //    41: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.a:Lcom/inmobi/androidsdk/impl/UserInfo;
                //    44: aload           5
                //    46: aload_0        
                //    47: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.c:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager$ActionType;
                //    50: invokestatic    com/inmobi/androidsdk/impl/net/HttpRequestBuilder.buildPostBody:(Lcom/inmobi/androidsdk/impl/UserInfo;Lcom/inmobi/commons/thinICE/wifi/WifiInfo;Lcom/inmobi/androidsdk/impl/net/RequestResponseManager$ActionType;)Ljava/lang/String;
                //    53: astore          6
                //    55: ldc             "[InMobi]-[Network]-4.4.3"
                //    57: aload           6
                //    59: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;)V
                //    62: aload_0        
                //    63: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //    66: aload_0        
                //    67: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //    70: aload_0        
                //    71: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.b:Ljava/lang/String;
                //    74: aload_0        
                //    75: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.a:Lcom/inmobi/androidsdk/impl/UserInfo;
                //    78: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;Ljava/lang/String;Lcom/inmobi/androidsdk/impl/UserInfo;)Ljava/net/HttpURLConnection;
                //    81: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;Ljava/net/HttpURLConnection;)Ljava/net/HttpURLConnection;
                //    84: pop            
                //    85: aload_0        
                //    86: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //    89: aload           6
                //    91: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;Ljava/lang/String;)V
                //    94: aload_0        
                //    95: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //    98: aload_0        
                //    99: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.a:Lcom/inmobi/androidsdk/impl/UserInfo;
                //   102: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;Lcom/inmobi/androidsdk/impl/UserInfo;)Lcom/inmobi/androidsdk/impl/net/Response;
                //   105: astore          8
                //   107: aload_0        
                //   108: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   111: iconst_0       
                //   112: aload           8
                //   114: aload_0        
                //   115: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //   118: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;ILjava/lang/Object;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)V
                //   121: return         
                //   122: astore_3       
                //   123: ldc             "[InMobi]-[Network]-4.4.3"
                //   125: ldc             "No wifi permissions set, unable to send wifi data"
                //   127: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
                //   130: aconst_null    
                //   131: astore          5
                //   133: goto            16
                //   136: astore_2       
                //   137: ldc             "[InMobi]-[Network]-4.4.3"
                //   139: ldc             "Exception retrieving ad "
                //   141: aload_2        
                //   142: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
                //   145: aload_0        
                //   146: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   149: iconst_1       
                //   150: aload_2        
                //   151: aload_0        
                //   152: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //   155: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;ILjava/lang/Object;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)V
                //   158: return         
                //   159: astore_1       
                //   160: ldc             "[InMobi]-[Network]-4.4.3"
                //   162: ldc             "Exception retrieving ad "
                //   164: aload_1        
                //   165: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
                //   168: aload_1        
                //   169: instanceof      Ljava/net/SocketTimeoutException;
                //   172: ifeq            198
                //   175: ldc             "[InMobi]-[Network]-4.4.3"
                //   177: ldc             "Server Timeout"
                //   179: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
                //   182: aload_0        
                //   183: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   186: iconst_1       
                //   187: getstatic       com/inmobi/androidsdk/AdRequest$ErrorCode.AD_FETCH_TIMEOUT:Lcom/inmobi/androidsdk/AdRequest$ErrorCode;
                //   190: aload_0        
                //   191: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //   194: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;ILjava/lang/Object;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)V
                //   197: return         
                //   198: aload_0        
                //   199: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   202: iconst_1       
                //   203: getstatic       com/inmobi/androidsdk/AdRequest$ErrorCode.NETWORK_ERROR:Lcom/inmobi/androidsdk/AdRequest$ErrorCode;
                //   206: aload_0        
                //   207: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //   210: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;ILjava/lang/Object;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)V
                //   213: return         
                //   214: astore          4
                //   216: ldc             "[InMobi]-[Network]-4.4.3"
                //   218: ldc             "Exception retrieving ad "
                //   220: aload           4
                //   222: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
                //   225: aload_0        
                //   226: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   229: iconst_1       
                //   230: getstatic       com/inmobi/androidsdk/AdRequest$ErrorCode.INTERNAL_ERROR:Lcom/inmobi/androidsdk/AdRequest$ErrorCode;
                //   233: aload_0        
                //   234: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$b.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //   237: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;ILjava/lang/Object;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)V
                //   240: return         
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                                    
                //  -----  -----  -----  -----  ----------------------------------------
                //  0      12     122    136    Ljava/lang/Exception;
                //  0      12     136    159    Lcom/inmobi/androidsdk/impl/AdException;
                //  0      12     159    214    Ljava/io/IOException;
                //  16     121    136    159    Lcom/inmobi/androidsdk/impl/AdException;
                //  16     121    159    214    Ljava/io/IOException;
                //  16     121    214    241    Ljava/lang/Exception;
                //  123    130    136    159    Lcom/inmobi/androidsdk/impl/AdException;
                //  123    130    159    214    Ljava/io/IOException;
                //  123    130    214    241    Ljava/lang/Exception;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0016:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformCall(AstMethodBodyBuilder.java:1163)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:1010)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:554)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformNode(AstMethodBodyBuilder.java:392)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformBlock(AstMethodBodyBuilder.java:333)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:294)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
        }.start();
    }
    
    public final void asyncRequestSecuredAd(final UserInfo userInfo, final RequestResponseManager$ActionType requestResponseManager$ActionType, final String s, final HttpRequestCallback httpRequestCallback) {
        new Thread() {
            @Override
            public void run() {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.a:Lcom/inmobi/androidsdk/impl/UserInfo;
                //     4: invokevirtual   com/inmobi/androidsdk/impl/UserInfo.getApplicationContext:()Landroid/content/Context;
                //     7: invokestatic    com/inmobi/commons/thinICE/icedatacollector/IceDataCollector.getConnectedWifiInfo:(Landroid/content/Context;)Lcom/inmobi/commons/thinICE/wifi/WifiInfo;
                //    10: astore          10
                //    12: aload           10
                //    14: astore          5
                //    16: ldc             "[InMobi]-[Network]-4.4.3"
                //    18: new             Ljava/lang/StringBuilder;
                //    21: dup            
                //    22: ldc             "Ad Serving URL: "
                //    24: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
                //    27: aload_0        
                //    28: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.b:Ljava/lang/String;
                //    31: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                //    34: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
                //    37: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
                //    40: aload_0        
                //    41: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.a:Lcom/inmobi/androidsdk/impl/UserInfo;
                //    44: aload           5
                //    46: aload_0        
                //    47: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.c:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager$ActionType;
                //    50: invokestatic    com/inmobi/androidsdk/impl/net/HttpRequestBuilder.buildPostBody:(Lcom/inmobi/androidsdk/impl/UserInfo;Lcom/inmobi/commons/thinICE/wifi/WifiInfo;Lcom/inmobi/androidsdk/impl/net/RequestResponseManager$ActionType;)Ljava/lang/String;
                //    53: astore          6
                //    55: ldc             "[InMobi]-[Network]-4.4.3"
                //    57: new             Ljava/lang/StringBuilder;
                //    60: dup            
                //    61: ldc             "UnEncrypted PostBody :"
                //    63: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
                //    66: aload           6
                //    68: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                //    71: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
                //    74: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
                //    77: aload_0        
                //    78: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //    81: aload           6
                //    83: aload_0        
                //    84: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //    87: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;Ljava/lang/String;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)Ljava/lang/String;
                //    90: astore          7
                //    92: aload_0        
                //    93: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //    96: aload_0        
                //    97: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   100: aload_0        
                //   101: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.b:Ljava/lang/String;
                //   104: aload_0        
                //   105: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.a:Lcom/inmobi/androidsdk/impl/UserInfo;
                //   108: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;Ljava/lang/String;Lcom/inmobi/androidsdk/impl/UserInfo;)Ljava/net/HttpURLConnection;
                //   111: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;Ljava/net/HttpURLConnection;)Ljava/net/HttpURLConnection;
                //   114: pop            
                //   115: aload           7
                //   117: ifnull          216
                //   120: ldc             "[InMobi]-[Network]-4.4.3"
                //   122: new             Ljava/lang/StringBuilder;
                //   125: dup            
                //   126: ldc             "PostBody :"
                //   128: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
                //   131: aload           7
                //   133: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                //   136: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
                //   139: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;)V
                //   142: aload_0        
                //   143: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   146: aload           7
                //   148: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;Ljava/lang/String;)V
                //   151: aload_0        
                //   152: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   155: aload_0        
                //   156: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.a:Lcom/inmobi/androidsdk/impl/UserInfo;
                //   159: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;Lcom/inmobi/androidsdk/impl/UserInfo;)Lcom/inmobi/androidsdk/impl/net/Response;
                //   162: astore          9
                //   164: aload_0        
                //   165: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   168: iconst_0       
                //   169: aload           9
                //   171: aload_0        
                //   172: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //   175: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;ILjava/lang/Object;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)V
                //   178: return         
                //   179: astore_3       
                //   180: ldc             "[InMobi]-[Network]-4.4.3"
                //   182: ldc             "No wifi permissions set, unable to send wifi data"
                //   184: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
                //   187: aconst_null    
                //   188: astore          5
                //   190: goto            16
                //   193: astore_2       
                //   194: ldc             "[InMobi]-[Network]-4.4.3"
                //   196: ldc             "Exception retrieving ad "
                //   198: aload_2        
                //   199: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
                //   202: aload_0        
                //   203: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   206: iconst_1       
                //   207: aload_2        
                //   208: aload_0        
                //   209: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //   212: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;ILjava/lang/Object;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)V
                //   215: return         
                //   216: aload_0        
                //   217: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   220: iconst_1       
                //   221: getstatic       com/inmobi/androidsdk/AdRequest$ErrorCode.INTERNAL_ERROR:Lcom/inmobi/androidsdk/AdRequest$ErrorCode;
                //   224: aload_0        
                //   225: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //   228: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;ILjava/lang/Object;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)V
                //   231: return         
                //   232: astore_1       
                //   233: ldc             "[InMobi]-[Network]-4.4.3"
                //   235: ldc             "Exception retrieving ad "
                //   237: aload_1        
                //   238: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
                //   241: aload_1        
                //   242: instanceof      Ljava/net/SocketTimeoutException;
                //   245: ifeq            271
                //   248: ldc             "[InMobi]-[Network]-4.4.3"
                //   250: ldc             "Server Timeout"
                //   252: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
                //   255: aload_0        
                //   256: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   259: iconst_1       
                //   260: getstatic       com/inmobi/androidsdk/AdRequest$ErrorCode.AD_FETCH_TIMEOUT:Lcom/inmobi/androidsdk/AdRequest$ErrorCode;
                //   263: aload_0        
                //   264: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //   267: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;ILjava/lang/Object;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)V
                //   270: return         
                //   271: aload_0        
                //   272: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   275: iconst_1       
                //   276: getstatic       com/inmobi/androidsdk/AdRequest$ErrorCode.NETWORK_ERROR:Lcom/inmobi/androidsdk/AdRequest$ErrorCode;
                //   279: aload_0        
                //   280: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //   283: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;ILjava/lang/Object;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)V
                //   286: return         
                //   287: astore          4
                //   289: ldc             "[InMobi]-[Network]-4.4.3"
                //   291: ldc             "Exception retrieving ad "
                //   293: aload           4
                //   295: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
                //   298: aload_0        
                //   299: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.e:Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;
                //   302: iconst_1       
                //   303: getstatic       com/inmobi/androidsdk/AdRequest$ErrorCode.INTERNAL_ERROR:Lcom/inmobi/androidsdk/AdRequest$ErrorCode;
                //   306: aload_0        
                //   307: getfield        com/inmobi/androidsdk/impl/net/RequestResponseManager$c.d:Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;
                //   310: invokestatic    com/inmobi/androidsdk/impl/net/RequestResponseManager.a:(Lcom/inmobi/androidsdk/impl/net/RequestResponseManager;ILjava/lang/Object;Lcom/inmobi/androidsdk/impl/net/HttpRequestCallback;)V
                //   313: return         
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                                    
                //  -----  -----  -----  -----  ----------------------------------------
                //  0      12     179    193    Ljava/lang/Exception;
                //  0      12     193    216    Lcom/inmobi/androidsdk/impl/AdException;
                //  0      12     232    287    Ljava/io/IOException;
                //  16     115    193    216    Lcom/inmobi/androidsdk/impl/AdException;
                //  16     115    232    287    Ljava/io/IOException;
                //  16     115    287    314    Ljava/lang/Exception;
                //  120    178    193    216    Lcom/inmobi/androidsdk/impl/AdException;
                //  120    178    232    287    Ljava/io/IOException;
                //  120    178    287    314    Ljava/lang/Exception;
                //  180    187    193    216    Lcom/inmobi/androidsdk/impl/AdException;
                //  180    187    232    287    Ljava/io/IOException;
                //  180    187    287    314    Ljava/lang/Exception;
                //  216    231    193    216    Lcom/inmobi/androidsdk/impl/AdException;
                //  216    231    232    287    Ljava/io/IOException;
                //  216    231    287    314    Ljava/lang/Exception;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0016:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformCall(AstMethodBodyBuilder.java:1163)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:1010)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:554)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformNode(AstMethodBodyBuilder.java:392)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformBlock(AstMethodBodyBuilder.java:333)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:294)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
        }.start();
    }
    
    public final void deinit() {
        try {
            if (RequestResponseManager.j != null) {
                RequestResponseManager.j.set(false);
            }
            if (RequestResponseManager.mDBWriterQueue != null) {
                RequestResponseManager.mDBWriterQueue.saveClickEvents();
                RequestResponseManager.mDBWriterQueue.clear();
            }
            RequestResponseManager.isSynced.set(false);
            if (RequestResponseManager.mNetworkQueue != null) {
                RequestResponseManager.mNetworkQueue.clear();
            }
            RequestResponseManager.mNetworkQueue = null;
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[Network]-4.4.3", "Request Response Manager deinit failed", ex);
        }
    }
    
    public final void doCancel() {
        this.h.set(true);
        if (this.i != null) {
            new Thread() {
                @Override
                public void run() {
                    try {
                        RequestResponseManager.this.i.disconnect();
                    }
                    catch (Exception ex) {
                        Log.internal("[InMobi]-[Network]-4.4.3", "Exception in closing connection ", ex);
                    }
                }
            }.start();
        }
    }
    
    public final void init() {
        try {
            if (RequestResponseManager.mNetworkQueue == null) {
                RequestResponseManager.mNetworkQueue = IMAIClickEventList.getLoggedClickEvents();
            }
            if (RequestResponseManager.j == null) {
                RequestResponseManager.j = new AtomicBoolean(false);
            }
            RequestResponseManager.l = new AtomicBoolean(true);
            RequestResponseManager.isSynced = new AtomicBoolean(false);
            RequestResponseManager.c = new AtomicBoolean(false);
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[Network]-4.4.3", "Request Response Manager init failed", ex);
        }
    }
    
    public final void processClick(final Context context, final HttpRequestCallback httpRequestCallback) {
        try {
            if (RequestResponseManager.j.compareAndSet(false, true)) {
                (RequestResponseManager.a = new Thread(new Runnable() {
                    @Override
                    public void run() {
                    Label_0077_Outer:
                        while (true) {
                        Label_0077:
                            while (true) {
                                ClickData clickData = null;
                                String clickUrl = null;
                                int retryCount = 0;
                                boolean pingWv = false;
                                boolean followRedirects = false;
                                int retryInterval = 0;
                                Label_0222: {
                                    try {
                                        Block_13: {
                                            while (!RequestResponseManager.isSynced.get()) {
                                                RequestResponseManager.isSynced.set(true);
                                                if (RequestResponseManager.mNetworkQueue == null || RequestResponseManager.mNetworkQueue.isEmpty()) {
                                                    if (RequestResponseManager.mDBWriterQueue == null && RequestResponseManager.mDBWriterQueue.isEmpty()) {
                                                        break Block_13;
                                                    }
                                                    RequestResponseManager.mNetworkQueue.addAll(RequestResponseManager.mDBWriterQueue);
                                                    RequestResponseManager.mDBWriterQueue.clear();
                                                }
                                                try {
                                                    if (RequestResponseManager.mNetworkQueue.isEmpty()) {
                                                        continue Label_0077_Outer;
                                                    }
                                                    clickData = RequestResponseManager.mNetworkQueue.remove(0);
                                                    clickUrl = clickData.getClickUrl();
                                                    retryCount = clickData.getRetryCount();
                                                    pingWv = clickData.isPingWv();
                                                    followRedirects = clickData.isFollowRedirects();
                                                    retryInterval = Initializer.getConfigParams().getImai().getRetryInterval();
                                                    if (!InternalSDKUtil.checkNetworkAvailibility(context)) {
                                                        Log.internal("[InMobi]-[Network]-4.4.3", "Cannot process click. Network Not available");
                                                        if (retryCount > 1) {
                                                            RequestResponseManager.mDBWriterQueue.add(clickData);
                                                        }
                                                        if (httpRequestCallback != null) {
                                                            httpRequestCallback.notifyResult(1, null);
                                                        }
                                                        RequestResponseManager.this.deinit();
                                                        return;
                                                    }
                                                    break Label_0222;
                                                }
                                                catch (Exception ex) {
                                                    Log.internal("[InMobi]-[Network]-4.4.3", "Exception pinging click in background", ex);
                                                    RequestResponseManager.this.deinit();
                                                    return;
                                                }
                                            }
                                            break;
                                        }
                                        Log.internal("[InMobi]-[Network]-4.4.3", "Click event list empty");
                                        RequestResponseManager.this.deinit();
                                        return;
                                    }
                                    catch (Exception ex2) {
                                        Log.internal("[InMobi]-[Network]-4.4.3", "Exception ping to server ", ex2);
                                        return;
                                    }
                                }
                                final int maxRetry = Initializer.getConfigParams().getImai().getMaxRetry();
                                Label_0300: {
                                    if (RequestResponseManager.l.get() || retryCount >= maxRetry) {
                                        break Label_0300;
                                    }
                                Label_0379_Outer:
                                    while (true) {
                                        Log.internal("[InMobi]-[Network]-4.4.3", "Retrying to ping in background after " + retryInterval / 1000 + " secs");
                                        while (true) {
                                            Label_0501: {
                                                synchronized (RequestResponseManager.a) {
                                                    while (true) {
                                                        try {
                                                            RequestResponseManager.a.wait(retryInterval);
                                                            // monitorexit(RequestResponseManager.a)
                                                            Log.internal("[InMobi]-[Network]-4.4.3", "Processing click in background: " + clickUrl);
                                                            if (!pingWv) {
                                                                break Label_0501;
                                                            }
                                                            if (RequestResponseManager.this.processClickUrlInWebview(clickUrl)) {
                                                                Log.internal("[InMobi]-[Network]-4.4.3", "Ping in webview successful: " + clickUrl);
                                                                if (httpRequestCallback != null) {
                                                                    httpRequestCallback.notifyResult(0, null);
                                                                }
                                                                if (RequestResponseManager.mDBWriterQueue.size() > Initializer.getConfigParams().getImai().getmDefaultEventsBatch()) {
                                                                    RequestResponseManager.mDBWriterQueue.saveClickEvents();
                                                                    RequestResponseManager.mDBWriterQueue.clear();
                                                                    continue Label_0077;
                                                                }
                                                                continue Label_0077;
                                                            }
                                                        }
                                                        catch (InterruptedException ex3) {
                                                            Log.internal("[InMobi]-[Network]-4.4.3", "Network thread wait failure", ex3);
                                                            continue Label_0379_Outer;
                                                        }
                                                        break;
                                                    }
                                                }
                                                clickData.setRetryCount(retryCount - 1);
                                                if (retryCount > 1) {
                                                    RequestResponseManager.mDBWriterQueue.add(clickData);
                                                }
                                                Log.internal("[InMobi]-[Network]-4.4.3", "Ping in webview failed: " + clickUrl);
                                                if (httpRequestCallback != null) {
                                                    httpRequestCallback.notifyResult(1, null);
                                                    continue;
                                                }
                                                continue;
                                            }
                                            if (!RequestResponseManager.this.processClickHttpClient(clickUrl, followRedirects)) {
                                                clickData.setRetryCount(retryCount - 1);
                                                if (retryCount > 1) {
                                                    RequestResponseManager.mDBWriterQueue.add(clickData);
                                                }
                                                Log.internal("[InMobi]-[Network]-4.4.3", "Ping  failed: " + clickUrl);
                                                if (httpRequestCallback != null) {
                                                    httpRequestCallback.notifyResult(1, null);
                                                }
                                                Log.internal("[InMobi]-[Network]-4.4.3", "Ping failed: " + clickUrl);
                                                continue;
                                            }
                                            Log.internal("[InMobi]-[Network]-4.4.3", "Ping successful: " + clickUrl);
                                            if (httpRequestCallback != null) {
                                                httpRequestCallback.notifyResult(0, null);
                                                continue;
                                            }
                                            continue;
                                        }
                                    }
                                }
                                break;
                            }
                        }
                        RequestResponseManager.this.deinit();
                    }
                })).setPriority(1);
                RequestResponseManager.a.start();
            }
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[Network]-4.4.3", "Exception ping ", ex);
        }
    }
    
    public final boolean processClickHttpClient(final String p0, final boolean p1) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aconst_null    
        //     1: astore_3       
        //     2: ldc             "[InMobi]-[Network]-4.4.3"
        //     4: new             Ljava/lang/StringBuilder;
        //     7: dup            
        //     8: ldc_w           "Processing click in http client "
        //    11: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    14: aload_1        
        //    15: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    18: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    21: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
        //    24: invokestatic    com/inmobi/androidsdk/bootstrapper/Initializer.getConfigParams:()Lcom/inmobi/androidsdk/bootstrapper/ConfigParams;
        //    27: invokevirtual   com/inmobi/androidsdk/bootstrapper/ConfigParams.getImai:()Lcom/inmobi/androidsdk/bootstrapper/IMAIConfigParams;
        //    30: invokevirtual   com/inmobi/androidsdk/bootstrapper/IMAIConfigParams.getPingTimeOut:()I
        //    33: istore          9
        //    35: new             Ljava/net/URL;
        //    38: dup            
        //    39: aload_1        
        //    40: invokespecial   java/net/URL.<init>:(Ljava/lang/String;)V
        //    43: invokevirtual   java/net/URL.openConnection:()Ljava/net/URLConnection;
        //    46: checkcast       Ljava/net/HttpURLConnection;
        //    49: astore          10
        //    51: aload           10
        //    53: iload_2        
        //    54: invokevirtual   java/net/HttpURLConnection.setInstanceFollowRedirects:(Z)V
        //    57: aload           10
        //    59: invokestatic    com/inmobi/commons/internal/InternalSDKUtil.addCommonPropertiesToConnection:(Ljava/net/HttpURLConnection;)V
        //    62: aload           10
        //    64: iload           9
        //    66: invokevirtual   java/net/HttpURLConnection.setConnectTimeout:(I)V
        //    69: aload           10
        //    71: iload           9
        //    73: invokevirtual   java/net/HttpURLConnection.setReadTimeout:(I)V
        //    76: aload           10
        //    78: iconst_0       
        //    79: invokevirtual   java/net/HttpURLConnection.setUseCaches:(Z)V
        //    82: aload           10
        //    84: ldc_w           "user-agent"
        //    87: invokestatic    com/inmobi/commons/internal/InternalSDKUtil.getSavedUserAgent:()Ljava/lang/String;
        //    90: invokevirtual   java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
        //    93: aload           10
        //    95: ldc_w           "GET"
        //    98: invokevirtual   java/net/HttpURLConnection.setRequestMethod:(Ljava/lang/String;)V
        //   101: invokestatic    com/inmobi/androidsdk/impl/SDKUtil.getQAMode:()Z
        //   104: ifeq            129
        //   107: aload           10
        //   109: ldc_w           "mk-carrier"
        //   112: ldc_w           "117.97.87.6"
        //   115: invokevirtual   java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
        //   118: aload           10
        //   120: ldc_w           "x-real-ip"
        //   123: ldc_w           "117.97.87.6"
        //   126: invokevirtual   java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
        //   129: aload           10
        //   131: invokevirtual   java/net/HttpURLConnection.getResponseCode:()I
        //   134: istore          12
        //   136: iload           12
        //   138: sipush          400
        //   141: if_icmpge       294
        //   144: iconst_1       
        //   145: istore          13
        //   147: iconst_1       
        //   148: iload           13
        //   150: if_icmpne       177
        //   153: getstatic       com/inmobi/androidsdk/impl/net/RequestResponseManager.l:Ljava/util/concurrent/atomic/AtomicBoolean;
        //   156: iconst_1       
        //   157: invokevirtual   java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
        //   160: aload           10
        //   162: ifnull          291
        //   165: aload           10
        //   167: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   170: iload           13
        //   172: istore          6
        //   174: iload           6
        //   176: ireturn        
        //   177: getstatic       com/inmobi/androidsdk/impl/net/RequestResponseManager.l:Ljava/util/concurrent/atomic/AtomicBoolean;
        //   180: iconst_0       
        //   181: invokevirtual   java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
        //   184: goto            160
        //   187: astore          14
        //   189: aload           10
        //   191: astore          7
        //   193: iload           13
        //   195: istore          6
        //   197: aload           14
        //   199: astore          5
        //   201: getstatic       com/inmobi/androidsdk/impl/net/RequestResponseManager.l:Ljava/util/concurrent/atomic/AtomicBoolean;
        //   204: iconst_0       
        //   205: invokevirtual   java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
        //   208: ldc             "[InMobi]-[Network]-4.4.3"
        //   210: ldc_w           "Click in background exception"
        //   213: aload           5
        //   215: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   218: aload           7
        //   220: ifnull          174
        //   223: aload           7
        //   225: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   228: iload           6
        //   230: ireturn        
        //   231: astore          8
        //   233: aload_3        
        //   234: ifnull          241
        //   237: aload_3        
        //   238: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   241: aload           8
        //   243: athrow         
        //   244: astore          11
        //   246: aload           10
        //   248: astore_3       
        //   249: aload           11
        //   251: astore          8
        //   253: goto            233
        //   256: astore          8
        //   258: aload           7
        //   260: astore_3       
        //   261: goto            233
        //   264: astore          4
        //   266: aload           4
        //   268: astore          5
        //   270: iconst_0       
        //   271: istore          6
        //   273: aconst_null    
        //   274: astore          7
        //   276: goto            201
        //   279: astore          5
        //   281: aload           10
        //   283: astore          7
        //   285: iconst_0       
        //   286: istore          6
        //   288: goto            201
        //   291: iload           13
        //   293: ireturn        
        //   294: iconst_0       
        //   295: istore          13
        //   297: goto            147
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  2      51     264    279    Ljava/lang/Exception;
        //  2      51     231    233    Any
        //  51     129    279    291    Ljava/lang/Exception;
        //  51     129    244    256    Any
        //  129    136    279    291    Ljava/lang/Exception;
        //  129    136    244    256    Any
        //  153    160    187    201    Ljava/lang/Exception;
        //  153    160    244    256    Any
        //  177    184    187    201    Ljava/lang/Exception;
        //  177    184    244    256    Any
        //  201    218    256    264    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0129:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public final boolean processClickUrlInWebview(final String s) {
        while (true) {
            while (true) {
                try {
                    Log.internal("[InMobi]-[Network]-4.4.3", "Processing click in webview " + s);
                    this.k = new WebviewLoader(InternalSDKUtil.getContext());
                    final int pingTimeOut = Initializer.getConfigParams().getImai().getPingTimeOut();
                    final boolean qaMode = SDKUtil.getQAMode();
                    HashMap<String, String> hashMap = null;
                    if (qaMode) {
                        hashMap = new HashMap<String, String>();
                        hashMap.put("mk-carrier", "117.97.87.6");
                        hashMap.put("x-real-ip", "117.97.87.6");
                    }
                    this.k.loadInWebview(s, hashMap);
                    synchronized (RequestResponseManager.a) {
                        try {
                            RequestResponseManager.a.wait(pingTimeOut);
                            // monitorexit(RequestResponseManager.a)
                            if (RequestResponseManager.c.get()) {
                                RequestResponseManager.l.set(true);
                                this.k.deinit(pingTimeOut);
                                return RequestResponseManager.c.get();
                            }
                        }
                        catch (InterruptedException ex) {
                            Log.internal("[InMobi]-[Network]-4.4.3", "Network thread wait failure", ex);
                        }
                    }
                }
                catch (Exception ex2) {
                    Log.internal("[InMobi]-[Network]-4.4.3", "ping in webview exception", ex2);
                    return RequestResponseManager.c.get();
                }
                RequestResponseManager.l.set(false);
                WebviewLoader.b.set(false);
                continue;
            }
        }
    }
}
