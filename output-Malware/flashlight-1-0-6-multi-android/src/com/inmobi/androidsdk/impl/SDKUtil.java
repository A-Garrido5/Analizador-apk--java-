// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.androidsdk.impl;

import java.util.Iterator;
import android.os.Build$VERSION;
import android.content.pm.ResolveInfo;
import android.content.Intent;
import com.inmobi.androidsdk.IMBrowserActivity;
import android.util.Log;
import android.content.Context;
import android.app.Activity;

public class SDKUtil
{
    public static final String BROWSER_ACTIVITY = "com.inmobi.androidsdk.IMBrowserActivity";
    public static final long DEFAULT_SLOTID = -1L;
    private static boolean a;
    
    static {
        SDKUtil.a = false;
    }
    
    public static boolean getQAMode() {
        return SDKUtil.a;
    }
    
    public static Activity getRootActivity(Activity parent) {
        while (parent.getParent() != null) {
            parent = parent.getParent();
        }
        return parent;
    }
    
    public static void validateAdConfiguration(final Context context) {
        if (context.checkCallingOrSelfPermission("android.permission.INTERNET") != 0) {
            Log.e("[InMobi]-[Network]-4.4.3", "App does not have INTERNET permissions. Please provide INTERNET permissions");
            throw new ConfigException(-1);
        }
        if (context.checkCallingOrSelfPermission("android.permission.ACCESS_NETWORK_STATE") != 0) {
            Log.e("[InMobi]-[Network]-4.4.3", "App does not have ACCESS_NETWORK_STATE permissions. Please provide ACCESS_NETWORK_STATE permissions");
            throw new ConfigException(-9);
        }
        while (true) {
            for (final ResolveInfo resolveInfo : context.getPackageManager().queryIntentActivities(new Intent(context, (Class)IMBrowserActivity.class), 65536)) {
                if (resolveInfo.activityInfo.name.contentEquals("com.inmobi.androidsdk.IMBrowserActivity")) {
                    if (resolveInfo == null) {
                        Log.e("[InMobi]-[Network]-4.4.3", "IMBrowserActivity not declared in the manifest. Please declare it in the app manifest");
                        throw new ConfigException(-2);
                    }
                    final int configChanges = resolveInfo.activityInfo.configChanges;
                    if (configChanges == 0) {
                        Log.e("[InMobi]-[Network]-4.4.3", "IMBrowserActivity in the manifest does not have android:configChanges attributes.Please add android:configChanges=keyboardHidden|orientation|keyboard|screenSize|smallestScreenSize to IMBrowserActivity in the app manifest");
                        throw new ConfigException(-3);
                    }
                    if ((configChanges & 0x10) == 0x0) {
                        Log.e("[InMobi]-[Network]-4.4.3", "Missing Config keyboard from android:configChangesof IMBRowserActivity");
                        throw new ConfigException(-4);
                    }
                    if ((configChanges & 0x20) == 0x0) {
                        Log.e("[InMobi]-[Network]-4.4.3", "Missing Config keyboardHidden from android:configChangesof IMBRowserActivity");
                        throw new ConfigException(-5);
                    }
                    if ((configChanges & 0x80) == 0x0) {
                        Log.e("[InMobi]-[Network]-4.4.3", "Missing Config orientation from android:configChangesof IMBRowserActivity");
                        throw new ConfigException(-6);
                    }
                    if (Build$VERSION.SDK_INT >= 13) {
                        if ((configChanges & 0x400) == 0x0) {
                            Log.e("[InMobi]-[Network]-4.4.3", "Missing Config screenSize from android:configChangesof IMBRowserActivity");
                            throw new ConfigException(-7);
                        }
                        if ((configChanges & 0x800) == 0x0) {
                            Log.e("[InMobi]-[Network]-4.4.3", "Missing Config smallestScreenSize from android:configChanges of IMBRowserActivity");
                            throw new ConfigException(-8);
                        }
                    }
                    return;
                }
            }
            ResolveInfo resolveInfo = null;
            continue;
        }
    }
}
