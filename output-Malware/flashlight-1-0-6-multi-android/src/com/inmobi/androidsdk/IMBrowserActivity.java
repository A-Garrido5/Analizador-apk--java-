// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.androidsdk;

import com.inmobi.re.container.mraidimpl.MRAIDExpandController;
import com.inmobi.re.container.IMWebView$ViewState;
import android.view.KeyEvent;
import android.view.View$OnKeyListener;
import android.view.View$OnClickListener;
import android.util.DisplayMetrics;
import android.view.WindowManager;
import android.os.Build$VERSION;
import android.webkit.CookieSyncManager;
import android.os.Bundle;
import android.content.res.Configuration;
import com.inmobi.re.controller.util.StartActivityForResultCallback;
import com.inmobi.re.container.CustomView$SwitchIconType;
import android.widget.LinearLayout$LayoutParams;
import android.view.ViewGroup$LayoutParams;
import android.widget.RelativeLayout$LayoutParams;
import com.inmobi.commons.internal.WrapperFunctions;
import android.view.MotionEvent;
import android.view.View;
import android.view.View$OnTouchListener;
import android.content.Context;
import android.widget.LinearLayout;
import android.view.ViewGroup;
import android.provider.MediaStore$Images$Media;
import android.os.Parcelable;
import android.net.Uri;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import android.content.Intent;
import com.inmobi.commons.internal.Log;
import org.json.JSONArray;
import java.util.HashMap;
import android.webkit.WebViewClient;
import com.inmobi.re.container.CustomView;
import android.widget.RelativeLayout;
import java.util.Map;
import android.os.Message;
import android.widget.FrameLayout;
import com.inmobi.re.container.IMWebView$IMWebViewListener;
import com.inmobi.re.container.IMWebView;
import android.annotation.SuppressLint;
import android.app.Activity;

@SuppressLint({ "UseSparseArrays" })
public class IMBrowserActivity extends Activity
{
    public static final String ANIMATED = "isAnimationEnabledOnDimiss";
    public static final int BROWSER_ACTIVITY = 100;
    public static final String EXPANDDATA = "data";
    public static final int EXPAND_ACTIVITY = 102;
    public static final String EXTRA_BROWSER_ACTIVITY_TYPE = "extra_browser_type";
    public static final String EXTRA_URL = "extra_url";
    public static final int GET_IMAGE = 101;
    public static final int INTERSTITIAL_ACTIVITY = 101;
    private static IMWebView b;
    private static IMWebView$IMWebViewListener c;
    private static IMWebView d;
    private static FrameLayout e;
    private static Message f;
    private static Map l;
    private static int m;
    private static Activity o;
    private IMWebView a;
    private RelativeLayout g;
    private float h;
    private Boolean i;
    private CustomView j;
    private long k;
    private int n;
    private WebViewClient p;
    
    static {
        IMBrowserActivity.l = new HashMap();
        IMBrowserActivity.m = 0;
    }
    
    public IMBrowserActivity() {
        this.k = 0L;
        this.p = new a(this);
    }
    
    private String a(final String p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: iconst_0       
        //     1: istore_2       
        //     2: aconst_null    
        //     3: astore_3       
        //     4: aload_1        
        //     5: ifnull          104
        //     8: ldc             ""
        //    10: aload_1        
        //    11: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //    14: istore          4
        //    16: aconst_null    
        //    17: astore_3       
        //    18: iload           4
        //    20: ifne            104
        //    23: getstatic       com/inmobi/re/controller/JSUtilityController.formats:[Ljava/text/SimpleDateFormat;
        //    26: astore          5
        //    28: aload           5
        //    30: arraylength    
        //    31: istore          6
        //    33: iconst_0       
        //    34: istore          7
        //    36: iload           7
        //    38: iload           6
        //    40: if_icmpge       122
        //    43: aload           5
        //    45: iload           7
        //    47: aaload         
        //    48: astore          14
        //    50: aload           14
        //    52: aload_1        
        //    53: invokevirtual   java/text/SimpleDateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;
        //    56: astore          16
        //    58: aload           16
        //    60: astore          8
        //    62: getstatic       com/inmobi/re/controller/JSUtilityController.calendarUntiFormats:[Ljava/text/SimpleDateFormat;
        //    65: astore          9
        //    67: aload           9
        //    69: arraylength    
        //    70: istore          10
        //    72: aconst_null    
        //    73: astore_3       
        //    74: iload_2        
        //    75: iload           10
        //    77: if_icmpge       104
        //    80: aload           9
        //    82: iload_2        
        //    83: aaload         
        //    84: astore          11
        //    86: aload           11
        //    88: aload           8
        //    90: invokevirtual   java/util/Date.getTime:()J
        //    93: invokestatic    java/lang/Long.valueOf:(J)Ljava/lang/Long;
        //    96: invokevirtual   java/text/SimpleDateFormat.format:(Ljava/lang/Object;)Ljava/lang/String;
        //    99: astore          13
        //   101: aload           13
        //   103: astore_3       
        //   104: aload_3        
        //   105: areturn        
        //   106: astore          15
        //   108: iinc            7, 1
        //   111: goto            36
        //   114: astore          12
        //   116: iinc            2, 1
        //   119: goto            72
        //   122: aconst_null    
        //   123: astore          8
        //   125: goto            62
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  50     58     106    114    Ljava/lang/Exception;
        //  86     101    114    122    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0104:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private String a(final JSONArray jsonArray) {
        int i = 0;
        if (jsonArray != null) {
            try {
                if (jsonArray.length() != 0) {
                    final StringBuilder sb = new StringBuilder();
                    while (i < jsonArray.length()) {
                        sb.append(jsonArray.get(i) + ",");
                        ++i;
                    }
                    String string = sb.toString();
                    final int length = string.length();
                    if (length == 0) {
                        string = null;
                    }
                    else {
                        final int n = length - 1;
                        try {
                            if (string.charAt(n) == ',') {
                                return string.substring(0, length - 1);
                            }
                            return string;
                        }
                        catch (Exception ex) {
                            Log.internal("[InMobi]-4.4.3", "Couldn't parse json in create calendar event", ex);
                            return string;
                        }
                    }
                    return string;
                }
            }
            catch (Exception ex2) {
                ex2.printStackTrace();
                Log.internal("[InMobi]-[RE]-4.4.3", "Exception parsing recurrence rule", ex2);
            }
        }
        return null;
    }
    
    private String a(final JSONArray jsonArray, final int n, final int n2) {
        int n3 = 0;
        if (jsonArray != null) {
            while (true) {
                while (true) {
                    Label_0171: {
                        try {
                            if (jsonArray.length() != 0) {
                                final StringBuilder sb = new StringBuilder();
                                if (n3 >= jsonArray.length()) {
                                    String string = sb.toString();
                                    final int length = string.length();
                                    if (length == 0) {
                                        string = null;
                                    }
                                    else {
                                        final int n4 = length - 1;
                                        try {
                                            if (string.charAt(n4) == ',') {
                                                return string.substring(0, length - 1);
                                            }
                                            return string;
                                        }
                                        catch (Exception ex) {
                                            Log.internal("[InMobi]-4.4.3", "Couldn't parse json in create calendar event", ex);
                                            return string;
                                        }
                                    }
                                    return string;
                                }
                                final int int1 = jsonArray.getInt(n3);
                                if (int1 >= n && int1 <= n2) {
                                    sb.append(int1 + ",");
                                }
                                break Label_0171;
                            }
                        }
                        catch (Exception ex2) {
                            ex2.printStackTrace();
                            Log.internal("[InMobi]-[RE]-4.4.3", "Exception parsing recurrence rule", ex2);
                        }
                        break;
                    }
                    ++n3;
                    continue;
                }
            }
        }
        return null;
    }
    
    private void a(final int n, final String s, final String s2, final String s3, final int n2) {
    Label_0117_Outer:
        while (true) {
            while (true) {
                switch (n) {
                    default: {
                        final String package1 = null;
                    }
                    case 1: {
                        Label_0110: {
                            break Label_0110;
                            while (true) {
                                final String string = s + " " + s2 + " " + s3;
                                final Intent intent = new Intent();
                                intent.setType("text/plain");
                                String package1 = null;
                                intent.setPackage(package1);
                                intent.putExtra("android.intent.extra.TEXT", string);
                                try {
                                    this.startActivityForResult(intent, n2);
                                    return;
                                    package1 = "com.twitter.android";
                                    continue Label_0117_Outer;
                                    package1 = "com.google.android.apps.plus";
                                    continue Label_0117_Outer;
                                    package1 = "";
                                }
                                catch (Exception ex2) {
                                Label_0353:
                                    while (true) {
                                        String s4 = null;
                                        Label_0163: {
                                        Label_0279_Outer:
                                            while (true) {
                                                while (true) {
                                                    switch (n) {
                                                        case 1: {
                                                            try {
                                                                s4 = "https://www.facebook.com/dialog/feed?app_id=181821551957328&link=" + URLEncoder.encode(s2, "UTF-8") + "&picture=" + URLEncoder.encode(s3, "UTF-8") + "&name=&description=" + URLEncoder.encode(s, "UTF-8") + "&redirect_uri=" + URLEncoder.encode(s2, "UTF-8");
                                                                break Label_0163;
                                                                s4 = "http://twitter.com/home?status=" + URLEncoder.encode(string, "UTF-8");
                                                                break Label_0163;
                                                                s4 = "https://m.google.com/app/plus/x/?v=compose&content=" + URLEncoder.encode(string, "UTF-8");
                                                                break Label_0163;
                                                            }
                                                            catch (UnsupportedEncodingException ex) {
                                                                Log.internal("[InMobi]-[RE]-4.4.3", "UTF-8 encoding not supported? What sorcery is this?", ex);
                                                                break;
                                                            }
                                                            break Label_0353;
                                                        }
                                                        case 2: {
                                                            continue;
                                                        }
                                                        case 3: {
                                                            continue Label_0279_Outer;
                                                        }
                                                    }
                                                    break;
                                                }
                                                break;
                                            }
                                            s4 = null;
                                        }
                                        if (s4 != null) {
                                            final Intent intent2 = new Intent("android.intent.action.VIEW");
                                            intent2.setData(Uri.parse(s4));
                                            try {
                                                this.startActivityForResult(intent2, n2);
                                                return;
                                            }
                                            catch (Exception ex3) {
                                                this.onActivityResult(n2, 0, null);
                                                return;
                                            }
                                            continue;
                                        }
                                        break;
                                    }
                                    final Intent intent3 = new Intent();
                                    intent3.setType("text/plain");
                                    intent3.putExtra("android.intent.extra.TEXT", string);
                                    try {
                                        this.startActivityForResult(intent3, n2);
                                        return;
                                    }
                                    catch (Exception ex4) {
                                        this.onActivityResult(n2, 0, null);
                                        return;
                                    }
                                }
                            }
                        }
                        break;
                    }
                    case 2: {
                        continue;
                    }
                    case 3: {
                        continue Label_0117_Outer;
                    }
                }
                break;
            }
            break;
        }
    }
    
    private void a(final long p0, final long p1, final String p2, final String p3, final String p4, final String p5, final String p6, final int p7) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: new             Landroid/content/Intent;
        //     3: dup            
        //     4: ldc_w           "android.intent.action.EDIT"
        //     7: invokespecial   android/content/Intent.<init>:(Ljava/lang/String;)V
        //    10: astore          11
        //    12: aload           11
        //    14: ldc_w           "vnd.android.cursor.item/event"
        //    17: invokevirtual   android/content/Intent.setType:(Ljava/lang/String;)Landroid/content/Intent;
        //    20: pop            
        //    21: aload           11
        //    23: ldc_w           "beginTime"
        //    26: lload_1        
        //    27: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;J)Landroid/content/Intent;
        //    30: pop            
        //    31: aload           11
        //    33: ldc_w           "allDay"
        //    36: iconst_0       
        //    37: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;Z)Landroid/content/Intent;
        //    40: pop            
        //    41: aload           11
        //    43: ldc_w           "endTime"
        //    46: lload_3        
        //    47: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;J)Landroid/content/Intent;
        //    50: pop            
        //    51: aload           11
        //    53: ldc_w           "title"
        //    56: aload           6
        //    58: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
        //    61: pop            
        //    62: aload           11
        //    64: ldc_w           "eventLocation"
        //    67: aload           5
        //    69: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
        //    72: pop            
        //    73: aload           11
        //    75: ldc_w           "description"
        //    78: aload           7
        //    80: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
        //    83: pop            
        //    84: aload           8
        //    86: ldc_w           "transparent"
        //    89: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //    92: ifeq            690
        //    95: aload           11
        //    97: ldc_w           "availability"
        //   100: iconst_1       
        //   101: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;I)Landroid/content/Intent;
        //   104: pop            
        //   105: ldc             ""
        //   107: aload           9
        //   109: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   112: ifne            681
        //   115: getstatic       android/os/Build$VERSION.SDK_INT:I
        //   118: bipush          8
        //   120: if_icmple       681
        //   123: new             Ljava/lang/StringBuilder;
        //   126: dup            
        //   127: invokespecial   java/lang/StringBuilder.<init>:()V
        //   130: astore          21
        //   132: new             Lorg/json/JSONObject;
        //   135: dup            
        //   136: aload           9
        //   138: invokespecial   org/json/JSONObject.<init>:(Ljava/lang/String;)V
        //   141: astore          22
        //   143: aload           22
        //   145: ldc_w           "frequency"
        //   148: invokevirtual   org/json/JSONObject.optString:(Ljava/lang/String;)Ljava/lang/String;
        //   151: astore          25
        //   153: aload           25
        //   155: ifnull          725
        //   158: ldc             ""
        //   160: aload           25
        //   162: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   165: ifne            725
        //   168: ldc_w           "daily"
        //   171: aload           25
        //   173: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   176: ifne            212
        //   179: ldc_w           "weekly"
        //   182: aload           25
        //   184: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   187: ifne            212
        //   190: ldc_w           "monthly"
        //   193: aload           25
        //   195: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   198: ifne            212
        //   201: ldc_w           "yearly"
        //   204: aload           25
        //   206: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   209: ifeq            242
        //   212: aload           21
        //   214: new             Ljava/lang/StringBuilder;
        //   217: dup            
        //   218: ldc_w           "freq="
        //   221: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   224: aload           25
        //   226: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   229: ldc_w           ";"
        //   232: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   235: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   238: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   241: pop            
        //   242: aload           22
        //   244: ldc_w           "interval"
        //   247: invokevirtual   org/json/JSONObject.optString:(Ljava/lang/String;)Ljava/lang/String;
        //   250: astore          27
        //   252: aload           27
        //   254: ifnull          300
        //   257: ldc             ""
        //   259: aload           27
        //   261: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   264: ifne            300
        //   267: aload           21
        //   269: new             Ljava/lang/StringBuilder;
        //   272: dup            
        //   273: ldc_w           "interval="
        //   276: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   279: aload           27
        //   281: invokestatic    java/lang/Integer.parseInt:(Ljava/lang/String;)I
        //   284: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   287: ldc_w           ";"
        //   290: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   293: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   296: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   299: pop            
        //   300: aload_0        
        //   301: aload           22
        //   303: ldc_w           "expires"
        //   306: invokevirtual   org/json/JSONObject.optString:(Ljava/lang/String;)Ljava/lang/String;
        //   309: invokespecial   com/inmobi/androidsdk/IMBrowserActivity.a:(Ljava/lang/String;)Ljava/lang/String;
        //   312: astore          28
        //   314: aload           28
        //   316: ifnull          803
        //   319: aload           21
        //   321: new             Ljava/lang/StringBuilder;
        //   324: dup            
        //   325: ldc_w           "until="
        //   328: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   331: aload           28
        //   333: ldc_w           "+"
        //   336: ldc_w           "Z+"
        //   339: invokevirtual   java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
        //   342: ldc_w           "-"
        //   345: ldc_w           "Z-"
        //   348: invokevirtual   java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
        //   351: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   354: ldc_w           ";"
        //   357: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   360: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   363: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   366: pop            
        //   367: aload_0        
        //   368: aload           22
        //   370: ldc_w           "daysInWeek"
        //   373: invokevirtual   org/json/JSONObject.optJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;
        //   376: invokespecial   com/inmobi/androidsdk/IMBrowserActivity.a:(Lorg/json/JSONArray;)Ljava/lang/String;
        //   379: astore          30
        //   381: aload           30
        //   383: ifnull          416
        //   386: aload           21
        //   388: new             Ljava/lang/StringBuilder;
        //   391: dup            
        //   392: ldc_w           "byday="
        //   395: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   398: aload           30
        //   400: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   403: ldc_w           ";"
        //   406: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   409: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   412: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   415: pop            
        //   416: aload_0        
        //   417: aload           22
        //   419: ldc_w           "daysInMonth"
        //   422: invokevirtual   org/json/JSONObject.optJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;
        //   425: bipush          -30
        //   427: bipush          31
        //   429: invokespecial   com/inmobi/androidsdk/IMBrowserActivity.a:(Lorg/json/JSONArray;II)Ljava/lang/String;
        //   432: astore          32
        //   434: aload           32
        //   436: ifnull          469
        //   439: aload           21
        //   441: new             Ljava/lang/StringBuilder;
        //   444: dup            
        //   445: ldc_w           "bymonthday="
        //   448: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   451: aload           32
        //   453: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   456: ldc_w           ";"
        //   459: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   462: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   465: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   468: pop            
        //   469: aload_0        
        //   470: aload           22
        //   472: ldc_w           "daysInYear"
        //   475: invokevirtual   org/json/JSONObject.optJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;
        //   478: sipush          -364
        //   481: sipush          365
        //   484: invokespecial   com/inmobi/androidsdk/IMBrowserActivity.a:(Lorg/json/JSONArray;II)Ljava/lang/String;
        //   487: astore          34
        //   489: aload           34
        //   491: ifnull          524
        //   494: aload           21
        //   496: new             Ljava/lang/StringBuilder;
        //   499: dup            
        //   500: ldc_w           "byyearday="
        //   503: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   506: aload           34
        //   508: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   511: ldc_w           ";"
        //   514: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   517: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   520: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   523: pop            
        //   524: aload_0        
        //   525: aload           22
        //   527: ldc_w           "weeksInMonth"
        //   530: invokevirtual   org/json/JSONObject.optJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;
        //   533: bipush          -3
        //   535: iconst_4       
        //   536: invokespecial   com/inmobi/androidsdk/IMBrowserActivity.a:(Lorg/json/JSONArray;II)Ljava/lang/String;
        //   539: astore          36
        //   541: aload           36
        //   543: ifnull          576
        //   546: aload           21
        //   548: new             Ljava/lang/StringBuilder;
        //   551: dup            
        //   552: ldc_w           "byweekno="
        //   555: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   558: aload           36
        //   560: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   563: ldc_w           ";"
        //   566: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   569: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   572: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   575: pop            
        //   576: aload_0        
        //   577: aload           22
        //   579: ldc_w           "monthsInYear"
        //   582: invokevirtual   org/json/JSONObject.optJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;
        //   585: iconst_1       
        //   586: bipush          12
        //   588: invokespecial   com/inmobi/androidsdk/IMBrowserActivity.a:(Lorg/json/JSONArray;II)Ljava/lang/String;
        //   591: astore          38
        //   593: aload           38
        //   595: ifnull          628
        //   598: aload           21
        //   600: new             Ljava/lang/StringBuilder;
        //   603: dup            
        //   604: ldc_w           "bymonth="
        //   607: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   610: aload           38
        //   612: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   615: ldc_w           ";"
        //   618: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   621: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   624: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   627: pop            
        //   628: ldc             "[InMobi]-[RE]-4.4.3"
        //   630: new             Ljava/lang/StringBuilder;
        //   633: dup            
        //   634: ldc_w           "Recurrence rule : "
        //   637: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   640: aload           21
        //   642: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   645: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   648: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   651: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
        //   654: ldc             ""
        //   656: aload           21
        //   658: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   661: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   664: ifne            681
        //   667: aload           11
        //   669: ldc_w           "rrule"
        //   672: aload           21
        //   674: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   677: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
        //   680: pop            
        //   681: aload_0        
        //   682: aload           11
        //   684: iload           10
        //   686: invokevirtual   com/inmobi/androidsdk/IMBrowserActivity.startActivityForResult:(Landroid/content/Intent;I)V
        //   689: return         
        //   690: aload           8
        //   692: ldc_w           "opaque"
        //   695: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   698: ifeq            105
        //   701: aload           11
        //   703: ldc_w           "availability"
        //   706: iconst_0       
        //   707: invokevirtual   android/content/Intent.putExtra:(Ljava/lang/String;I)Landroid/content/Intent;
        //   710: pop            
        //   711: goto            105
        //   714: astore          12
        //   716: aload_0        
        //   717: iload           10
        //   719: iconst_0       
        //   720: aconst_null    
        //   721: invokevirtual   com/inmobi/androidsdk/IMBrowserActivity.onActivityResult:(IILandroid/content/Intent;)V
        //   724: return         
        //   725: aload_0        
        //   726: getfield        com/inmobi/androidsdk/IMBrowserActivity.a:Lcom/inmobi/re/container/IMWebView;
        //   729: ifnull          745
        //   732: aload_0        
        //   733: getfield        com/inmobi/androidsdk/IMBrowserActivity.a:Lcom/inmobi/re/container/IMWebView;
        //   736: ldc_w           "Frequency is incorrect in recurrence rule"
        //   739: ldc_w           "createCalendarEvent"
        //   742: invokevirtual   com/inmobi/re/container/IMWebView.raiseError:(Ljava/lang/String;Ljava/lang/String;)V
        //   745: aload_0        
        //   746: aload           11
        //   748: iload           10
        //   750: invokevirtual   com/inmobi/androidsdk/IMBrowserActivity.startActivityForResult:(Landroid/content/Intent;I)V
        //   753: return         
        //   754: astore          23
        //   756: ldc             "[InMobi]-[RE]-4.4.3"
        //   758: ldc             "Exception parsing recurrence rule"
        //   760: aload           23
        //   762: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   765: goto            654
        //   768: astore          40
        //   770: aload_0        
        //   771: getfield        com/inmobi/androidsdk/IMBrowserActivity.a:Lcom/inmobi/re/container/IMWebView;
        //   774: ifnull          790
        //   777: aload_0        
        //   778: getfield        com/inmobi/androidsdk/IMBrowserActivity.a:Lcom/inmobi/re/container/IMWebView;
        //   781: ldc_w           "Interval is incorrect in recurrence rule"
        //   784: ldc_w           "createCalendarEvent"
        //   787: invokevirtual   com/inmobi/re/container/IMWebView.raiseError:(Ljava/lang/String;Ljava/lang/String;)V
        //   790: ldc             "[InMobi]-[RE]-4.4.3"
        //   792: ldc_w           "Invalid interval in recurrence rule"
        //   795: aload           40
        //   797: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   800: goto            300
        //   803: aload_0        
        //   804: getfield        com/inmobi/androidsdk/IMBrowserActivity.a:Lcom/inmobi/re/container/IMWebView;
        //   807: ifnull          367
        //   810: aload_0        
        //   811: getfield        com/inmobi/androidsdk/IMBrowserActivity.a:Lcom/inmobi/re/container/IMWebView;
        //   814: ldc_w           "Date format is incorrect in until"
        //   817: ldc_w           "createCalendarEvent"
        //   820: invokevirtual   com/inmobi/re/container/IMWebView.raiseError:(Ljava/lang/String;Ljava/lang/String;)V
        //   823: goto            367
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  0      105    714    725    Ljava/lang/Exception;
        //  105    132    714    725    Ljava/lang/Exception;
        //  132    153    754    768    Ljava/lang/Exception;
        //  158    212    754    768    Ljava/lang/Exception;
        //  212    242    754    768    Ljava/lang/Exception;
        //  242    252    754    768    Ljava/lang/Exception;
        //  257    300    768    803    Ljava/lang/Exception;
        //  300    314    754    768    Ljava/lang/Exception;
        //  319    367    754    768    Ljava/lang/Exception;
        //  367    381    754    768    Ljava/lang/Exception;
        //  386    416    754    768    Ljava/lang/Exception;
        //  416    434    754    768    Ljava/lang/Exception;
        //  439    469    754    768    Ljava/lang/Exception;
        //  469    489    754    768    Ljava/lang/Exception;
        //  494    524    754    768    Ljava/lang/Exception;
        //  524    541    754    768    Ljava/lang/Exception;
        //  546    576    754    768    Ljava/lang/Exception;
        //  576    593    754    768    Ljava/lang/Exception;
        //  598    628    754    768    Ljava/lang/Exception;
        //  628    654    754    768    Ljava/lang/Exception;
        //  654    681    714    725    Ljava/lang/Exception;
        //  681    689    714    725    Ljava/lang/Exception;
        //  690    711    714    725    Ljava/lang/Exception;
        //  725    745    754    768    Ljava/lang/Exception;
        //  745    753    754    768    Ljava/lang/Exception;
        //  756    765    714    725    Ljava/lang/Exception;
        //  770    790    754    768    Ljava/lang/Exception;
        //  790    800    754    768    Ljava/lang/Exception;
        //  803    823    754    768    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 344, Size: 344
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private void a(final Intent intent) {
        final String stringExtra = intent.getStringExtra("action");
        final int intExtra = intent.getIntExtra("id", 0);
        Label_0083: {
            if (!stringExtra.equals("takeCameraPicture")) {
                break Label_0083;
            }
            final Uri uri = (Uri)intent.getExtras().get("URI");
            final Intent intent2 = new Intent("android.media.action.IMAGE_CAPTURE");
            intent2.putExtra("output", (Parcelable)uri);
            try {
                this.startActivityForResult(intent2, intExtra);
                return;
            }
            catch (Exception ex) {
                this.onActivityResult(intExtra, 0, null);
                return;
            }
        }
        if (stringExtra.equals("getGalleryImage")) {
            final Intent intent3 = new Intent("android.intent.action.PICK", MediaStore$Images$Media.EXTERNAL_CONTENT_URI);
            try {
                this.startActivityForResult(intent3, intExtra);
                return;
            }
            catch (Exception ex2) {
                this.onActivityResult(intExtra, 0, null);
                return;
            }
        }
        if (stringExtra.equals("postToSocial")) {
            this.a(intent.getIntExtra("socialType", 0), intent.getStringExtra("text"), intent.getStringExtra("link"), intent.getStringExtra("image"), intExtra);
            return;
        }
        if (stringExtra.equals("createCalendarEvent")) {
            this.a(intent.getLongExtra("start", 0L), intent.getLongExtra("end", 0L), intent.getStringExtra("location"), intent.getStringExtra("description"), intent.getStringExtra("summary"), intent.getStringExtra("transparency"), intent.getStringExtra("recurrence"), intExtra);
        }
    }
    
    private void a(final ViewGroup viewGroup) {
        final LinearLayout linearLayout = new LinearLayout((Context)this);
        linearLayout.setOrientation(0);
        linearLayout.setId(100);
        linearLayout.setWeightSum(100.0f);
        linearLayout.setOnTouchListener((View$OnTouchListener)new View$OnTouchListener() {
            public boolean onTouch(final View view, final MotionEvent motionEvent) {
                return true;
            }
        });
        linearLayout.setBackgroundResource(17301658);
        linearLayout.setBackgroundColor(-7829368);
        final RelativeLayout$LayoutParams relativeLayout$LayoutParams = new RelativeLayout$LayoutParams(WrapperFunctions.getParamFillParent(), (int)(44.0f * this.h));
        relativeLayout$LayoutParams.addRule(12);
        viewGroup.addView((View)linearLayout, (ViewGroup$LayoutParams)relativeLayout$LayoutParams);
        final LinearLayout$LayoutParams linearLayout$LayoutParams = new LinearLayout$LayoutParams(WrapperFunctions.getParamFillParent(), WrapperFunctions.getParamFillParent());
        linearLayout$LayoutParams.weight = 25.0f;
        final CustomView customView = new CustomView((Context)this, this.h, CustomView$SwitchIconType.CLOSE_ICON);
        linearLayout.addView((View)customView, (ViewGroup$LayoutParams)linearLayout$LayoutParams);
        customView.setOnTouchListener((View$OnTouchListener)new View$OnTouchListener() {
            public boolean onTouch(final View view, final MotionEvent motionEvent) {
                if (motionEvent.getAction() == 1) {
                    view.setBackgroundColor(-7829368);
                    IMBrowserActivity.this.finish();
                }
                else if (motionEvent.getAction() == 0) {
                    view.setBackgroundColor(-16711681);
                    return true;
                }
                return true;
            }
        });
        final CustomView customView2 = new CustomView((Context)this, this.h, CustomView$SwitchIconType.REFRESH);
        linearLayout.addView((View)customView2, (ViewGroup$LayoutParams)linearLayout$LayoutParams);
        customView2.setOnTouchListener((View$OnTouchListener)new View$OnTouchListener() {
            public boolean onTouch(final View view, final MotionEvent motionEvent) {
                if (motionEvent.getAction() == 1) {
                    view.setBackgroundColor(-7829368);
                    IMBrowserActivity.this.a.doHidePlayers();
                    IMBrowserActivity.this.a.reload();
                }
                else if (motionEvent.getAction() == 0) {
                    view.setBackgroundColor(-16711681);
                    return true;
                }
                return true;
            }
        });
        final CustomView customView3 = new CustomView((Context)this, this.h, CustomView$SwitchIconType.BACK);
        linearLayout.addView((View)customView3, (ViewGroup$LayoutParams)linearLayout$LayoutParams);
        customView3.setOnTouchListener((View$OnTouchListener)new View$OnTouchListener() {
            public boolean onTouch(final View view, final MotionEvent motionEvent) {
                if (motionEvent.getAction() == 1) {
                    view.setBackgroundColor(-7829368);
                    if (!IMBrowserActivity.this.a.canGoBack()) {
                        IMBrowserActivity.this.finish();
                        return true;
                    }
                    IMBrowserActivity.this.a.goBack();
                }
                else if (motionEvent.getAction() == 0) {
                    view.setBackgroundColor(-16711681);
                    return true;
                }
                return true;
            }
        });
        linearLayout.addView((View)(this.j = new CustomView((Context)this, this.h, CustomView$SwitchIconType.FORWARD_INACTIVE)), (ViewGroup$LayoutParams)linearLayout$LayoutParams);
        this.j.setOnTouchListener((View$OnTouchListener)new View$OnTouchListener() {
            public boolean onTouch(final View view, final MotionEvent motionEvent) {
                if (motionEvent.getAction() == 1) {
                    view.setBackgroundColor(-7829368);
                    if (IMBrowserActivity.this.a.canGoForward()) {
                        IMBrowserActivity.this.a.goForward();
                    }
                }
                else if (motionEvent.getAction() == 0) {
                    view.setBackgroundColor(-16711681);
                    return true;
                }
                return true;
            }
        });
    }
    
    public static int generateId(final StartActivityForResultCallback startActivityForResultCallback) {
        ++IMBrowserActivity.m;
        IMBrowserActivity.l.put(IMBrowserActivity.m, startActivityForResultCallback);
        return IMBrowserActivity.m;
    }
    
    public static void requestOnAdDismiss(final Message f) {
        IMBrowserActivity.f = f;
    }
    
    public static void setExpandedLayout(final FrameLayout e) {
        if (e != null) {
            IMBrowserActivity.e = e;
        }
    }
    
    public static void setExpandedWebview(final IMWebView d) {
        if (d != null) {
            IMBrowserActivity.d = d;
        }
    }
    
    public static void setOriginalActivity(final Activity o) {
        if (o != null) {
            IMBrowserActivity.o = o;
        }
    }
    
    public static void setWebViewListener(final IMWebView$IMWebViewListener c) {
        IMBrowserActivity.c = c;
    }
    
    public static void setWebview(final IMWebView b) {
        if (b != null) {
            IMBrowserActivity.b = b;
        }
    }
    
    protected void onActivityResult(final int n, final int n2, final Intent intent) {
        super.onActivityResult(n, n2, intent);
        while (true) {
            try {
                IMBrowserActivity.l.get(n).onActivityResult(n2, intent);
                IMBrowserActivity.l.remove(n2);
                if (this.a == null) {
                    this.finish();
                }
            }
            catch (Exception ex) {
                Log.internal("[InMobi]-[RE]-4.4.3", "onActivityResult failed", ex);
                continue;
            }
            break;
        }
    }
    
    public void onBackPressed() {
        if (IMBrowserActivity.d != null && this.n == 102) {
            IMBrowserActivity.d.close();
            this.finish();
        }
        super.onBackPressed();
    }
    
    public void onConfigurationChanged(final Configuration configuration) {
        if (configuration.orientation == 2) {
            Log.internal("[InMobi]-[RE]-4.4.3", "In allow true,  device orientation:ORIENTATION_LANDSCAPE");
        }
        else {
            Log.internal("[InMobi]-[RE]-4.4.3", "In allow true,  device orientation:ORIENTATION_PORTRAIT");
        }
        if (this.a != null) {
            this.a.onOrientationEventChange();
        }
        super.onConfigurationChanged(configuration);
    }
    
    @SuppressLint({ "SetJavaScriptEnabled" })
    public void onCreate(final Bundle bundle) {
        super.onCreate(bundle);
        try {
            CookieSyncManager.createInstance((Context)this);
            CookieSyncManager.getInstance().startSync();
            final Intent intent = this.getIntent();
            this.n = intent.getIntExtra("extra_browser_type", 100);
            this.k = intent.getLongExtra("isAnimationEnabledOnDimiss", 0L);
            if (this.n == 100) {
                this.requestWindowFeature(1);
                if (Build$VERSION.SDK_INT < 9 || Build$VERSION.SDK_INT >= 11) {
                    this.getWindow().setFlags(1024, 1024);
                }
                ((WindowManager)this.getSystemService("window")).getDefaultDisplay().getMetrics(new DisplayMetrics());
                if (intent.getStringExtra("action") != null) {
                    this.a(intent);
                }
                this.h = this.getResources().getDisplayMetrics().density;
                final String stringExtra = intent.getStringExtra("extra_url");
                this.i = intent.getBooleanExtra("FIRST_INSTANCE", false);
                Log.debug("[InMobi]-[RE]-4.4.3", "IMBrowserActivity-> onCreate");
                this.g = new RelativeLayout((Context)this);
                if (stringExtra != null) {
                    final boolean booleanExtra = intent.getBooleanExtra("QAMODE", false);
                    this.a = new IMWebView((Context)this, IMBrowserActivity.c, true, true);
                    final RelativeLayout$LayoutParams relativeLayout$LayoutParams = new RelativeLayout$LayoutParams(WrapperFunctions.getParamFillParent(), WrapperFunctions.getParamFillParent());
                    relativeLayout$LayoutParams.addRule(10);
                    relativeLayout$LayoutParams.addRule(2, 100);
                    this.g.setBackgroundColor(-1);
                    this.g.addView((View)this.a, (ViewGroup$LayoutParams)relativeLayout$LayoutParams);
                    this.a((ViewGroup)this.g);
                    this.a.getSettings().setJavaScriptEnabled(true);
                    this.a.setExternalWebViewClient(this.p);
                    this.a.getSettings().setLoadWithOverviewMode(true);
                    this.a.getSettings().setUseWideViewPort(true);
                    if (Build$VERSION.SDK_INT >= 8) {
                        this.a.loadUrl(stringExtra, (Map)null);
                    }
                    else {
                        this.a.loadUrl(stringExtra);
                    }
                    if (booleanExtra) {
                        final HashMap<String, String> hashMap = new HashMap<String, String>();
                        hashMap.put("mk-carrier", "117.97.87.6");
                        hashMap.put("x-real-ip", "117.97.87.6");
                    }
                    this.setContentView((View)this.g);
                }
                return;
            }
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[RE]-4.4.3", "Exception rendering ad in ImBrowser Activity", ex);
            return;
        }
        if (this.n == 101) {
            IMBrowserActivity.b.setActivity(this);
            IMBrowserActivity.b.mInterstitialController.setActivity(this);
            IMBrowserActivity.b.mInterstitialController.changeContentAreaForInterstitials(this.k);
            final View viewById = this.findViewById(225);
            if (viewById != null) {
                viewById.setOnClickListener((View$OnClickListener)new View$OnClickListener() {
                    public void onClick(final View view) {
                        if (IMBrowserActivity.b != null && IMBrowserActivity.b.mInterstitialController != null) {
                            IMBrowserActivity.b.mInterstitialController.handleInterstitialClose();
                        }
                        IMBrowserActivity.this.finish();
                    }
                });
            }
            IMBrowserActivity.b.setOnKeyListener((View$OnKeyListener)new View$OnKeyListener() {
                public boolean onKey(final View view, final int n, final KeyEvent keyEvent) {
                    if (4 == keyEvent.getKeyCode() && keyEvent.getAction() == 0) {
                        IMBrowserActivity.this.finish();
                    }
                    return false;
                }
            });
            return;
        }
        if (this.n == 102) {
            if (IMBrowserActivity.e != null && IMBrowserActivity.e.getParent() != null) {
                ((ViewGroup)IMBrowserActivity.e.getParent()).removeView((View)IMBrowserActivity.e);
            }
            this.setContentView((View)IMBrowserActivity.e);
            IMBrowserActivity.d.setState(IMWebView$ViewState.EXPANDED);
            IMBrowserActivity.d.mIsViewable = true;
            IMBrowserActivity.d.mExpandController.setActivity(this);
            IMBrowserActivity.d.setBrowserActivity(this);
            IMBrowserActivity.d.mExpandController.handleOrientationForExpand();
            final View viewById2 = this.findViewById(MRAIDExpandController.EXP_CLOSE_BUTTON);
            if (viewById2 != null) {
                viewById2.setOnClickListener((View$OnClickListener)new View$OnClickListener() {
                    public void onClick(final View view) {
                        if (IMBrowserActivity.d != null) {
                            IMBrowserActivity.d.close();
                        }
                        IMBrowserActivity.this.finish();
                    }
                });
            }
            IMBrowserActivity.d.setOnKeyListener((View$OnKeyListener)new View$OnKeyListener() {
                public boolean onKey(final View view, final int n, final KeyEvent keyEvent) {
                    if (4 == keyEvent.getKeyCode() && keyEvent.getAction() == 0) {
                        if (IMBrowserActivity.d != null) {
                            IMBrowserActivity.d.close();
                        }
                        IMBrowserActivity.this.finish();
                        return true;
                    }
                    return false;
                }
            });
        }
    }
    
    protected void onDestroy() {
        super.onDestroy();
        try {
            IMBrowserActivity.c = null;
            if (this.a != null) {
                this.a.mAudioVideoController.releaseAllPlayers();
            }
            if (IMBrowserActivity.f != null && this.i) {
                IMBrowserActivity.f.sendToTarget();
                IMBrowserActivity.f = null;
            }
            if (IMBrowserActivity.b != null) {
                IMBrowserActivity.b.mAudioVideoController.releaseAllPlayers();
                IMBrowserActivity.b = null;
            }
            if (IMBrowserActivity.e != null && this.n == 102) {
                IMBrowserActivity.e = null;
            }
            if (IMBrowserActivity.d != null && this.n == 102) {
                IMBrowserActivity.d.setOnKeyListener((View$OnKeyListener)null);
                IMBrowserActivity.d = null;
            }
        }
        catch (Exception ex) {
            Log.debug("[InMobi]-[RE]-4.4.3", "Exception in onDestroy ", ex);
        }
    }
    
    protected void onPause() {
        super.onPause();
        try {
            CookieSyncManager.getInstance().stopSync();
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[RE]-4.4.3", "Exception pausing cookies");
        }
    }
    
    protected void onResume() {
        super.onResume();
        try {
            CookieSyncManager.getInstance().startSync();
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[RE]-4.4.3", "Exception syncing cookies");
        }
    }
}
