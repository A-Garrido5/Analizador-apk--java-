// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.androidsdk.carb;

import com.inmobi.commons.internal.Log;
import com.inmobi.commons.internal.InternalSDKUtil;
import java.util.Map;
import com.inmobi.commons.uid.UID;

public class CarbConfigParams
{
    boolean a;
    String b;
    String c;
    long d;
    int e;
    long f;
    long g;
    UID h;
    
    public CarbConfigParams() {
        this.a = false;
        this.b = "http://dock.inmobi.com/carb/v1/i";
        this.c = "http://dock.inmobi.com/carb/v1/o";
        this.d = 86400L;
        this.e = 3;
        this.f = 60L;
        this.g = 60L;
        this.h = new UID();
    }
    
    public String getCarbEndpoint() {
        return this.b;
    }
    
    public String getCarbPostpoint() {
        return this.c;
    }
    
    public long getRetreiveFrequncy() {
        return 1000L * this.d;
    }
    
    public int getRetryCount() {
        return this.e;
    }
    
    public long getRetryInterval() {
        return this.f;
    }
    
    public long getTimeoutInterval() {
        return this.g;
    }
    
    public UID getUID() {
        return this.h;
    }
    
    public boolean isCarbEnabled() {
        return this.a;
    }
    
    public void setFromMap(final Map map) {
        try {
            this.h.setFromMap(map.get("ids"));
            this.a = InternalSDKUtil.getBooleanFromMap(map, "enabled");
            this.b = InternalSDKUtil.getStringFromMap(map, "gep");
            if (!this.b.startsWith("http") && !this.b.startsWith("https")) {
                throw new IllegalArgumentException("URL wrong");
            }
        }
        catch (IllegalArgumentException ex) {
            Log.internal("CarbConfigParams", "Invalid value");
            this.h = new UID();
            this.a = false;
            this.b = "http://dock.inmobi.com/carb/v1/i";
            this.c = "http://dock.inmobi.com/carb/v1/o";
            this.d = 86400L;
            this.e = 3;
            this.f = 60L;
            this.g = 60L;
            throw new IllegalArgumentException();
        }
        this.c = InternalSDKUtil.getStringFromMap(map, "pep");
        if (!this.c.startsWith("http") && !this.c.startsWith("https")) {
            throw new IllegalArgumentException("URL wrong");
        }
        this.d = InternalSDKUtil.getLongFromMap(map, "fq_s", 1L, Long.MAX_VALUE);
        this.e = InternalSDKUtil.getIntFromMap(map, "mr", 0, 2147483647L);
        this.f = InternalSDKUtil.getLongFromMap(map, "ri", 1L, Long.MAX_VALUE);
        this.g = InternalSDKUtil.getLongFromMap(map, "to", 1L, Long.MAX_VALUE);
    }
}
