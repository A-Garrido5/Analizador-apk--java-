// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.androidsdk;

import android.content.Intent;
import com.inmobi.androidsdk.bootstrapper.ConfigParams;
import com.inmobi.androidsdk.impl.net.RequestResponseManager$ActionType;
import com.inmobi.androidsdk.carb.CARB;
import com.inmobi.androidsdk.bootstrapper.Initializer;
import android.os.Build$VERSION;
import com.inmobi.androidsdk.impl.ConfigException;
import android.content.BroadcastReceiver;
import android.content.IntentFilter;
import com.inmobi.androidsdk.impl.imai.IMAIController;
import android.content.Context;
import com.inmobi.androidsdk.impl.SDKUtil;
import android.view.Display;
import com.inmobi.commons.internal.Log;
import com.inmobi.commons.internal.InternalSDKUtil;
import com.inmobi.commons.internal.WrapperFunctions;
import android.util.DisplayMetrics;
import android.view.WindowManager;
import com.inmobi.re.container.IMWebView$IMWebViewListener;
import com.inmobi.androidsdk.impl.net.HttpRequestCallback;
import com.inmobi.androidsdk.impl.net.RequestResponseManager;
import com.inmobi.re.container.IMWebView;
import com.inmobi.androidsdk.impl.UserInfo;
import android.app.Activity;
import com.inmobi.androidsdk.impl.ConnBroadcastReciever;

public class InterstitialView
{
    private static ConnBroadcastReciever o;
    long a;
    boolean b;
    private InterstitialView$State c;
    private AdRequest d;
    private Activity e;
    private String f;
    private long g;
    private InterstitialViewListener h;
    private String i;
    private long j;
    private long k;
    private UserInfo l;
    private IMWebView m;
    private String n;
    private String p;
    private long q;
    private RequestResponseManager r;
    private Mode s;
    private boolean t;
    private HttpRequestCallback u;
    private InterstitialView$c v;
    private IMWebView$IMWebViewListener w;
    
    static {
        InterstitialView.o = null;
    }
    
    public InterstitialView(final Activity activity, final String s) {
        this.c = InterstitialView$State.INIT;
        this.d = new AdRequest();
        this.g = -1L;
        this.p = "http://i.w.inmobi.com/showad.asm";
        this.q = 0L;
        this.s = Mode.AD_NETWORK;
        this.a = 0L;
        this.b = true;
        this.u = new f(this);
        this.v = new InterstitialView$c(this);
        this.w = new e(this);
        this.a(activity, s);
    }
    
    public InterstitialView(final Activity activity, final String s, final long g) {
        this.c = InterstitialView$State.INIT;
        this.d = new AdRequest();
        this.g = -1L;
        this.p = "http://i.w.inmobi.com/showad.asm";
        this.q = 0L;
        this.s = Mode.AD_NETWORK;
        this.a = 0L;
        this.b = true;
        this.u = new f(this);
        this.v = new InterstitialView$c(this);
        this.w = new e(this);
        this.g = g;
        this.a(activity, s);
    }
    
    private void a() {
        final Display defaultDisplay = ((WindowManager)this.e.getSystemService("window")).getDefaultDisplay();
        while (true) {
            if (this.l != null) {
                break Label_0168;
            }
            this.l = new UserInfo(this.e);
            final DisplayMetrics displayMetrics = new DisplayMetrics();
            this.e.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
            final float density = displayMetrics.density;
            final int n = (int)(WrapperFunctions.getDisplayWidth(defaultDisplay) / density);
            final int n2 = (int)(WrapperFunctions.getDisplayHeight(defaultDisplay) / density);
            this.l.setScreenDensity(String.valueOf(density));
            this.l.setScreenSize(n + "X" + n2);
            try {
                if (this.l.getPhoneDefaultUserAgent().equals("")) {
                    this.l.setPhoneDefaultUserAgent(InternalSDKUtil.getUserAgent(this.e.getApplicationContext()));
                }
                this.l.updateInfo(this.f, this.d);
                int n3 = 14;
                if (InternalSDKUtil.isTablet(this.e.getApplicationContext())) {
                    n3 = 17;
                }
                this.l.setAdUnitSlot(String.valueOf(n3));
                if (this.g != -1L) {
                    this.l.setSlotId(Long.toString(this.g));
                }
            }
            catch (Exception ex) {
                Log.debug("[InMobi]-[Network]-4.4.3", "Exception occured while setting user agent" + ex);
                continue;
            }
            break;
        }
    }
    
    private void a(final int n, final AdRequest$ErrorCode adRequest$ErrorCode) {
        if (this.h == null) {
            return;
        }
        this.e.runOnUiThread((Runnable)new Runnable() {
            @Override
            public void run() {
                switch (n) {
                    default: {
                        Log.debug("[InMobi]-[Network]-4.4.3", adRequest$ErrorCode.toString());
                    }
                    case 100: {
                        InterstitialView.this.h.onAdRequestLoaded(InterstitialView.this);
                    }
                    case 101: {
                        switch (InterstitialView$b.a[adRequest$ErrorCode.ordinal()]) {
                            default: {
                                Log.debug("[InMobi]-[Network]-4.4.3", adRequest$ErrorCode.toString());
                                break;
                            }
                            case 1: {
                                Log.debug("[InMobi]-[Network]-4.4.3", "Ad click in progress. Your request cannot be processed at this time. Try again later.");
                                break;
                            }
                            case 2: {
                                Log.debug("[InMobi]-[Network]-4.4.3", "Ad download in progress. Your request cannot be processed at this time. Try again later.");
                                break;
                            }
                        }
                        InterstitialView.this.h.onAdRequestFailed(InterstitialView.this, adRequest$ErrorCode);
                    }
                    case 103: {
                        InterstitialView.this.h.onDismissAdScreen(InterstitialView.this);
                    }
                    case 102: {
                        InterstitialView.this.h.onShowAdScreen(InterstitialView.this);
                    }
                    case 104: {
                        InterstitialView.this.h.onLeaveApplication(InterstitialView.this);
                    }
                }
            }
        });
    }
    
    private void a(final Activity activity, final String f) {
        if (activity == null) {
            Log.debug("[InMobi]-[Network]-4.4.3", "Activity cannot be null");
            return;
        }
        InternalSDKUtil.getUserAgent(activity.getApplicationContext());
        while (true) {
            try {
                SDKUtil.validateAdConfiguration((Context)activity);
                this.e = SDKUtil.getRootActivity(activity);
                IMWebView.setIMAIController(IMAIController.class);
                InternalSDKUtil.printPublisherTestId();
                this.f = f;
                this.a();
                try {
                    if (InterstitialView.o == null) {
                        InterstitialView.o = new ConnBroadcastReciever();
                    }
                    this.e.getApplicationContext().registerReceiver((BroadcastReceiver)InterstitialView.o, new IntentFilter("android.net.conn.CONNECTIVITY_CHANGE"));
                }
                catch (Exception ex) {
                    Log.internal("[InMobi]-[Network]-4.4.3", "Cannot register network receiver", ex);
                }
            }
            catch (ConfigException ex2) {
                Log.internal("[InMobi]-[Network]-4.4.3", "IMConfigException occured while initializing interstitial while validating adConfig", ex2);
                continue;
            }
            break;
        }
    }
    
    private void a(final String s) {
        if (s != null) {
            if (Build$VERSION.SDK_INT <= 8) {
                s.replaceAll("%", "%25");
            }
            this.m.requestOnPageFinishedCallback(this.v.obtainMessage(303));
            this.j = System.currentTimeMillis();
            this.v.sendEmptyMessageDelayed(307, (long)Initializer.getConfigParams().getRenderTimeOut());
            this.m.loadDataWithBaseURL("", s, "text/html", null, null);
            return;
        }
        this.c = InterstitialView$State.INIT;
        Log.debug("[InMobi]-[Network]-4.4.3", "Cannot load Ad. Invalid Ad Response");
        this.a(101, AdRequest$ErrorCode.INTERNAL_ERROR);
    }
    
    public void destroy() {
        while (true) {
            try {
                if (this.m != null) {
                    this.m.destroy();
                }
                this.m = null;
            }
            catch (Exception ex) {
                Log.debug("[InMobi]-[Network]-4.4.3", "Unable to destroy webview, or it has been destroyed already.");
                continue;
            }
            break;
        }
    }
    
    public void disableHardwareAcceleration() {
        this.b = false;
        if (this.m != null) {
            this.m.disableHardwareAcceleration();
        }
    }
    
    public String getAppId() {
        return this.f;
    }
    
    public InterstitialViewListener getIMAdInterstitialListener() {
        return this.h;
    }
    
    public AdRequest getIMAdRequest() {
        return this.d;
    }
    
    public long getSlotId() {
        return this.g;
    }
    
    public InterstitialView$State getState() {
        return this.c;
    }
    
    public void loadNewAd() {
        final ConfigParams configParams = Initializer.getConfigParams();
        this.t = Initializer.getLogger().startNewSample();
        Log.debug("[InMobi]-[Network]-4.4.3", " >>>> Start loading new Interstitial Ad <<<<");
        InternalSDKUtil.printPublisherTestId();
        if (!InternalSDKUtil.checkNetworkAvailibility(this.e.getApplicationContext())) {
            this.a(101, AdRequest$ErrorCode.NETWORK_ERROR);
            return;
        }
        if (this.c == InterstitialView$State.LOADING) {
            this.a(101, AdRequest$ErrorCode.AD_DOWNLOAD_IN_PROGRESS);
            return;
        }
        if (this.c == InterstitialView$State.ACTIVE) {
            Log.debug("[InMobi]-[Network]-4.4.3", "Interstitial ad is in ACTIVE state. Try again after sometime.");
            this.a(101, AdRequest$ErrorCode.INVALID_REQUEST);
            return;
        }
        this.c = InterstitialView$State.LOADING;
        CARB.getInstance().startCarb();
        this.a();
        this.a = System.currentTimeMillis();
        this.k = System.currentTimeMillis();
        this.v.sendEmptyMessageDelayed(306, (long)configParams.getFetchTimeOut());
        this.r = new RequestResponseManager();
        String s;
        if (this.s == Mode.APP_GALLERY) {
            s = configParams.getAppAppGalleryConfigParams().getUrl();
        }
        else {
            s = this.p;
        }
        this.r.asyncRequestSecuredAd(this.l, RequestResponseManager$ActionType.AdRequest_Interstitial, s, this.u);
    }
    
    public void loadNewAd(final AdRequest d) {
        this.d = d;
        this.loadNewAd();
    }
    
    public void setAdServerUrl(final String p) {
        this.p = p;
    }
    
    public void setAppId(final String f) {
        this.f = f;
    }
    
    public void setIMAdInterstitialListener(final InterstitialViewListener h) {
        this.h = h;
    }
    
    public void setIMAdRequest(final AdRequest d) {
        this.d = d;
    }
    
    public void setMode(final Mode s) {
        this.s = s;
    }
    
    public void setSlotId(final long g) {
        this.g = g;
    }
    
    public void show() {
        try {
            Log.debug("[InMobi]-[Network]-4.4.3", "Showing the Interstitial Ad. ");
            if (this.c != InterstitialView$State.READY) {
                Log.debug("[InMobi]-[Network]-4.4.3", "Interstitial ad is not in the 'READY' state. Current state: " + this.c);
                return;
            }
            if (this.i != null) {
                this.a(102, null);
                this.m.requestOnInterstitialClosed(this.v.obtainMessage(304));
                this.m.requestOnInterstitialShown(this.v.obtainMessage(305));
                final Intent intent = new Intent((Context)this.e, (Class)IMBrowserActivity.class);
                intent.putExtra("extra_browser_type", 101);
                intent.putExtra("isAnimationEnabledOnDimiss", this.q);
                IMBrowserActivity.setWebview(this.m);
                IMBrowserActivity.setOriginalActivity(this.e);
                this.e.startActivity(intent);
            }
        }
        catch (Exception ex) {
            Log.debug("[InMobi]-[Network]-4.4.3", "Error showing ad ", ex);
        }
    }
    
    public void show(final long q) {
        this.q = q;
        this.show();
    }
    
    public void stopLoading() {
        if (this.v.hasMessages(306)) {
            this.v.removeMessages(306);
            this.v.sendEmptyMessage(306);
        }
        else if (this.v.hasMessages(307)) {
            this.v.removeMessages(307);
            this.v.sendEmptyMessage(307);
        }
    }
}
