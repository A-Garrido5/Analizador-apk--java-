// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.commons.ads.cache;

import android.content.ContentValues;
import android.database.Cursor;
import com.inmobi.commons.internal.Log;
import com.inmobi.commons.internal.InternalSDKUtil;
import android.database.sqlite.SQLiteDatabase;

public class AdDatabaseManager
{
    private static AdDatabaseManager c;
    private AdDatabaseHelper a;
    private SQLiteDatabase b;
    private int d;
    
    protected AdDatabaseManager() {
        this.d = 1000;
    }
    
    public static AdDatabaseManager getInstance() {
        synchronized (AdDatabaseManager.class) {
            if (AdDatabaseManager.c == null) {
                (AdDatabaseManager.c = new AdDatabaseManager()).a = new AdDatabaseHelper(InternalSDKUtil.getContext());
            }
            return AdDatabaseManager.c;
        }
    }
    
    protected void close() {
        try {
            this.b.close();
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-4.4.3", "Failed to close ads db", ex);
        }
    }
    
    public AdData getAd(final String s) {
        synchronized (this) {
            try {
                this.open();
                final Cursor rawQuery = this.b.rawQuery("SELECT * FROM ad WHERE appid = ? Order by timestamp Limit 1;", new String[] { s });
                rawQuery.moveToFirst();
                final AdData adData = new AdData();
                adData.setAdId(rawQuery.getLong(0));
                adData.setTimestamp(rawQuery.getLong(1));
                adData.setAppId(rawQuery.getString(2));
                adData.setContent(rawQuery.getString(3));
                rawQuery.close();
                this.b.delete("ad", "adid = " + adData.getAdId(), (String[])null);
                this.close();
                return adData;
            }
            catch (Exception ex) {
                Log.internal("[InMobi]-4.4.3", "Failed to get native ads from db", ex);
                return null;
            }
        }
    }
    
    protected int getDBSize() {
        try {
            this.open();
            final int count = this.b.rawQuery("SELECT * FROM ad; ", (String[])null).getCount();
            this.close();
            return count;
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-4.4.3", "Failed to get native ads from db", ex);
            return 0;
        }
    }
    
    public int getNoOfAds(final String s) {
        synchronized (this) {
            try {
                this.open();
                final int count = this.b.rawQuery("SELECT * FROM ad WHERE appid = ?; ", new String[] { s }).getCount();
                this.close();
                return count;
            }
            catch (Exception ex) {
                Log.internal("[InMobi]-4.4.3", "Failed to get native ads from db", ex);
                return 0;
            }
        }
    }
    
    public void insertAd(final AdData adData) {
        synchronized (this) {
            try {
                final ContentValues contentValues = new ContentValues();
                contentValues.put("timestamp", adData.getTimestamp());
                contentValues.put("appid", adData.getAppId());
                contentValues.put("content", adData.getContent());
                contentValues.put("adtype", adData.getAdType());
                if (this.getDBSize() >= this.d) {
                    this.open();
                    final Cursor rawQuery = this.b.rawQuery("SELECT adid FROM ad WHERE timestamp= (SELECT MIN(timestamp) FROM ad Limit 1);", (String[])null);
                    rawQuery.moveToFirst();
                    final long long1 = rawQuery.getLong(0);
                    rawQuery.close();
                    this.b.delete("ad", "adid = " + long1, (String[])null);
                    this.close();
                }
                this.open();
                this.b.insert("ad", (String)null, contentValues);
                this.close();
            }
            catch (Exception ex) {
                Log.internal("[InMobi]-4.4.3", "Failed to insert native ads to db", ex);
            }
        }
    }
    
    protected void open() {
        try {
            this.b = this.a.getWritableDatabase();
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-4.4.3", "Failed to open ads db", ex);
        }
    }
    
    public void setDBLimit(final int d) {
        if (d > 0) {
            this.d = d;
        }
    }
}
