// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.commons.network;

import com.inmobi.commons.data.UserInfo;
import com.inmobi.commons.internal.Log;
import java.net.URLEncoder;
import java.net.URLDecoder;
import com.inmobi.commons.data.LocationInfo;
import java.util.Calendar;

public class RequestBuilder
{
    private String a(final Calendar calendar) {
        String string = null;
        if (calendar != null) {
            string = calendar.get(1) + "-" + (1 + calendar.get(2)) + "-" + calendar.get(5);
        }
        return string;
    }
    
    public static String currentLocationStr() {
        final StringBuilder sb = new StringBuilder();
        if (LocationInfo.isValidGeoInfo()) {
            sb.append(LocationInfo.getLat());
            sb.append(",");
            sb.append(LocationInfo.getLon());
            sb.append(",");
            sb.append((int)LocationInfo.getLocAccuracy());
            return sb.toString();
        }
        return "";
    }
    
    public static String getURLDecoded(final String s, final String s2) {
        try {
            return URLDecoder.decode(s, s2);
        }
        catch (Exception ex) {
            return "";
        }
    }
    
    public static String getURLEncoded(final String s) {
        try {
            return URLEncoder.encode(s, "UTF-8");
        }
        catch (Exception ex) {
            return "";
        }
    }
    
    public String buildPostBody() {
        final StringBuffer sb = new StringBuffer();
        try {
            final String sdkDelegatePostBody = this.getSDKDelegatePostBody();
            final String devicePostBody = this.getDevicePostBody();
            final String applicationPostBody = this.getApplicationPostBody();
            final String publisherPostBody = this.getPublisherPostBody();
            final String adFormatPostBody = this.getAdFormatPostBody();
            final String uidMapPostBody = this.getUidMapPostBody();
            if (sdkDelegatePostBody != null && !"".equals(sdkDelegatePostBody.trim())) {
                sb.append(sdkDelegatePostBody);
            }
            if (devicePostBody != null && !"".equals(devicePostBody.trim())) {
                if (sdkDelegatePostBody == null || "".equals(sdkDelegatePostBody.trim())) {
                    sb.append(devicePostBody);
                }
                else {
                    sb.append("&" + devicePostBody);
                }
            }
            if (applicationPostBody != null && !"".equals(applicationPostBody.trim())) {
                sb.append("&" + applicationPostBody);
            }
            if (publisherPostBody != null && !"".equals(publisherPostBody.trim())) {
                sb.append("&" + publisherPostBody);
            }
            if (adFormatPostBody != null && !"".equals(adFormatPostBody.trim())) {
                sb.append("&" + adFormatPostBody);
            }
            if (uidMapPostBody != null && !"".equals(uidMapPostBody.trim())) {
                sb.append("&" + uidMapPostBody);
            }
            return sb.toString();
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-4.4.3", "Exception occured in an ad request" + ex);
            return sb.toString();
        }
    }
    
    public String getAdFormatPostBody() {
        final StringBuilder sb = new StringBuilder();
        sb.append("format=imai");
        sb.append("&mk-ads=1");
        return sb.toString();
    }
    
    public String getApplicationPostBody() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: new             Ljava/lang/StringBuilder;
        //     3: dup            
        //     4: invokespecial   java/lang/StringBuilder.<init>:()V
        //     7: astore_1       
        //     8: invokestatic    com/inmobi/commons/data/AppInfo.getAppId:()Ljava/lang/String;
        //    11: ifnull          201
        //    14: aload_1        
        //    15: ldc             "mk-siteid="
        //    17: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    20: pop            
        //    21: aload_1        
        //    22: invokestatic    com/inmobi/commons/data/AppInfo.getAppId:()Ljava/lang/String;
        //    25: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //    28: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    31: pop            
        //    32: aload_1        
        //    33: ldc             "&mk-version="
        //    35: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    38: pop            
        //    39: new             Ljava/lang/StringBuilder;
        //    42: dup            
        //    43: ldc             "pr-SAND-"
        //    45: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    48: ldc             "4.4.3"
        //    50: invokestatic    com/inmobi/commons/internal/InternalSDKUtil.getInMobiInternalVersion:(Ljava/lang/String;)Ljava/lang/String;
        //    53: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    56: ldc             "-20140730"
        //    58: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    61: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    64: astore          6
        //    66: aload_1        
        //    67: aload           6
        //    69: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //    72: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    75: pop            
        //    76: aload_1        
        //    77: ldc             "&mk-rel-version="
        //    79: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    82: pop            
        //    83: aload_1        
        //    84: aload           6
        //    86: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //    89: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    92: pop            
        //    93: aload_1        
        //    94: ldc             "&h-user-agent="
        //    96: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    99: pop            
        //   100: aload_1        
        //   101: invokestatic    com/inmobi/commons/data/DeviceInfo.getPhoneDefaultUserAgent:()Ljava/lang/String;
        //   104: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //   107: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   110: pop            
        //   111: aload_1        
        //   112: ldc             "&u-appbid="
        //   114: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   117: pop            
        //   118: aload_1        
        //   119: invokestatic    com/inmobi/commons/data/AppInfo.getAppBId:()Ljava/lang/String;
        //   122: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //   125: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   128: pop            
        //   129: aload_1        
        //   130: ldc             "&u-appDNM="
        //   132: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   135: pop            
        //   136: aload_1        
        //   137: invokestatic    com/inmobi/commons/data/AppInfo.getAppDisplayName:()Ljava/lang/String;
        //   140: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //   143: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   146: pop            
        //   147: aload_1        
        //   148: ldc             "&u-appver="
        //   150: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   153: pop            
        //   154: aload_1        
        //   155: invokestatic    com/inmobi/commons/data/AppInfo.getAppVer:()Ljava/lang/String;
        //   158: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //   161: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   164: pop            
        //   165: aload_1        
        //   166: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   169: astore          18
        //   171: aload           18
        //   173: astore          19
        //   175: aload           19
        //   177: iconst_0       
        //   178: invokevirtual   java/lang/String.charAt:(I)C
        //   181: bipush          38
        //   183: if_icmpne       198
        //   186: aload           19
        //   188: iconst_1       
        //   189: invokevirtual   java/lang/String.substring:(I)Ljava/lang/String;
        //   192: astore          21
        //   194: aload           21
        //   196: astore          19
        //   198: aload           19
        //   200: areturn        
        //   201: aload_1        
        //   202: ldc             "mk-siteid="
        //   204: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   207: pop            
        //   208: aload_1        
        //   209: invokestatic    com/inmobi/commons/InMobi.getAppId:()Ljava/lang/String;
        //   212: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //   215: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   218: pop            
        //   219: goto            32
        //   222: astore_2       
        //   223: ldc             "[InMobi]-4.4.3"
        //   225: ldc             "Couldn't build post string in Request Builder"
        //   227: aload_2        
        //   228: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   231: aconst_null    
        //   232: areturn        
        //   233: astore          20
        //   235: ldc             "[InMobi]-4.4.3"
        //   237: ldc             "Couldn't build post string in Request Builder"
        //   239: aload           20
        //   241: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   244: aload           19
        //   246: areturn        
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  0      32     222    233    Ljava/lang/Exception;
        //  32     171    222    233    Ljava/lang/Exception;
        //  175    194    233    247    Ljava/lang/Exception;
        //  201    219    222    233    Ljava/lang/Exception;
        //  235    244    222    233    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0198:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public String getDevicePostBody() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: new             Ljava/lang/StringBuilder;
        //     3: dup            
        //     4: invokespecial   java/lang/StringBuilder.<init>:()V
        //     7: astore_1       
        //     8: invokestatic    com/inmobi/commons/data/DeviceInfo.getScreenDensity:()Ljava/lang/String;
        //    11: ifnull          30
        //    14: aload_1        
        //    15: ldc             "d-device-screen-density="
        //    17: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    20: invokestatic    com/inmobi/commons/data/DeviceInfo.getScreenDensity:()Ljava/lang/String;
        //    23: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //    26: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    29: pop            
        //    30: invokestatic    com/inmobi/commons/data/DeviceInfo.getScreenSize:()Ljava/lang/String;
        //    33: ifnull          52
        //    36: aload_1        
        //    37: ldc             "&d-device-screen-size="
        //    39: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    42: invokestatic    com/inmobi/commons/data/DeviceInfo.getScreenSize:()Ljava/lang/String;
        //    45: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //    48: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    51: pop            
        //    52: invokestatic    com/inmobi/commons/data/DeviceInfo.getOrientation:()I
        //    55: ifeq            73
        //    58: aload_1        
        //    59: ldc             "&d-orientation="
        //    61: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    64: pop            
        //    65: aload_1        
        //    66: invokestatic    com/inmobi/commons/data/DeviceInfo.getOrientation:()I
        //    69: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //    72: pop            
        //    73: invokestatic    com/inmobi/commons/data/DeviceInfo.getAid:()Ljava/lang/String;
        //    76: ifnull          97
        //    79: aload_1        
        //    80: ldc             "&aid="
        //    82: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    85: pop            
        //    86: aload_1        
        //    87: invokestatic    com/inmobi/commons/data/DeviceInfo.getAid:()Ljava/lang/String;
        //    90: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //    93: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    96: pop            
        //    97: invokestatic    com/inmobi/commons/data/DeviceInfo.getNetworkType:()Ljava/lang/String;
        //   100: ifnull          121
        //   103: aload_1        
        //   104: ldc             "&d-netType="
        //   106: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   109: pop            
        //   110: aload_1        
        //   111: invokestatic    com/inmobi/commons/data/DeviceInfo.getNetworkType:()Ljava/lang/String;
        //   114: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //   117: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   120: pop            
        //   121: aload_1        
        //   122: ldc             "&d-localization="
        //   124: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   127: pop            
        //   128: aload_1        
        //   129: invokestatic    com/inmobi/commons/data/DeviceInfo.getLocalization:()Ljava/lang/String;
        //   132: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //   135: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   138: pop            
        //   139: invokestatic    java/util/Calendar.getInstance:()Ljava/util/Calendar;
        //   142: astore          5
        //   144: invokestatic    java/lang/System.currentTimeMillis:()J
        //   147: pop2           
        //   148: aload_1        
        //   149: new             Ljava/lang/StringBuilder;
        //   152: dup            
        //   153: ldc             "&ts="
        //   155: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   158: aload           5
        //   160: invokevirtual   java/util/Calendar.getTimeInMillis:()J
        //   163: invokevirtual   java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        //   166: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   169: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   172: pop            
        //   173: aload_1        
        //   174: ldc             "&tz="
        //   176: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   179: aload           5
        //   181: bipush          15
        //   183: invokevirtual   java/util/Calendar.get:(I)I
        //   186: aload           5
        //   188: bipush          16
        //   190: invokevirtual   java/util/Calendar.get:(I)I
        //   193: iadd           
        //   194: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   197: pop            
        //   198: invokestatic    com/inmobi/commons/internal/InternalSDKUtil.getContext:()Landroid/content/Context;
        //   201: invokestatic    com/inmobi/commons/thinICE/icedatacollector/IceDataCollector.getConnectedWifiInfo:(Landroid/content/Context;)Lcom/inmobi/commons/thinICE/wifi/WifiInfo;
        //   204: astore          20
        //   206: aload           20
        //   208: astore          11
        //   210: aload           11
        //   212: ifnull          241
        //   215: aload_1        
        //   216: new             Ljava/lang/StringBuilder;
        //   219: dup            
        //   220: ldc_w           "&c-ap-bssid="
        //   223: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   226: aload           11
        //   228: getfield        com/inmobi/commons/thinICE/wifi/WifiInfo.bssid:J
        //   231: invokevirtual   java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        //   234: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   237: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   240: pop            
        //   241: invokestatic    com/inmobi/commons/internal/InternalSDKUtil.getContext:()Landroid/content/Context;
        //   244: invokestatic    com/inmobi/commons/thinICE/cellular/CellUtil.getCurrentCellTower:(Landroid/content/Context;)Lcom/inmobi/commons/thinICE/cellular/CellTowerInfo;
        //   247: getfield        com/inmobi/commons/thinICE/cellular/CellTowerInfo.id:Ljava/lang/String;
        //   250: astore          17
        //   252: aload           17
        //   254: ifnull          290
        //   257: ldc             ""
        //   259: aload           17
        //   261: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   264: ifne            290
        //   267: aload_1        
        //   268: new             Ljava/lang/StringBuilder;
        //   271: dup            
        //   272: ldc_w           "&c-sid="
        //   275: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   278: aload           17
        //   280: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   283: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   286: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   289: pop            
        //   290: aload_1        
        //   291: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   294: astore          13
        //   296: aload           13
        //   298: astore          14
        //   300: aload           14
        //   302: iconst_0       
        //   303: invokevirtual   java/lang/String.charAt:(I)C
        //   306: bipush          38
        //   308: if_icmpne       323
        //   311: aload           14
        //   313: iconst_1       
        //   314: invokevirtual   java/lang/String.substring:(I)Ljava/lang/String;
        //   317: astore          16
        //   319: aload           16
        //   321: astore          14
        //   323: aload           14
        //   325: areturn        
        //   326: astore          10
        //   328: ldc             "[InMobi]-4.4.3"
        //   330: ldc_w           "No wifi permissions set, unable to send wifi data"
        //   333: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
        //   336: aconst_null    
        //   337: astore          11
        //   339: goto            210
        //   342: astore          12
        //   344: ldc             "[InMobi]-4.4.3"
        //   346: ldc_w           "Couldn't get cell tower info in Request Builder"
        //   349: aload           12
        //   351: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   354: goto            290
        //   357: astore_2       
        //   358: ldc             "[InMobi]-4.4.3"
        //   360: ldc             "Couldn't build post string in Request Builder"
        //   362: aload_2        
        //   363: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   366: aconst_null    
        //   367: areturn        
        //   368: astore          15
        //   370: ldc             "[InMobi]-4.4.3"
        //   372: ldc             "Couldn't build post string in Request Builder"
        //   374: aload           15
        //   376: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   379: aload           14
        //   381: areturn        
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  0      30     357    368    Ljava/lang/Exception;
        //  30     52     357    368    Ljava/lang/Exception;
        //  52     73     357    368    Ljava/lang/Exception;
        //  73     97     357    368    Ljava/lang/Exception;
        //  97     121    357    368    Ljava/lang/Exception;
        //  121    198    357    368    Ljava/lang/Exception;
        //  198    206    326    342    Ljava/lang/Exception;
        //  215    241    357    368    Ljava/lang/Exception;
        //  241    252    342    357    Ljava/lang/Exception;
        //  257    290    342    357    Ljava/lang/Exception;
        //  290    296    357    368    Ljava/lang/Exception;
        //  300    319    368    382    Ljava/lang/Exception;
        //  328    336    357    368    Ljava/lang/Exception;
        //  344    354    357    368    Ljava/lang/Exception;
        //  370    379    357    368    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0241:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    protected String getPublisherPostBody() {
        return null;
    }
    
    public String getSDKDelegatePostBody() {
        try {
            final StringBuilder sb = new StringBuilder();
            final UserInfo instance = UserInfo.getInstance();
            if (instance.getPostalCode() != null) {
                sb.append("u-postalCode=");
                sb.append(getURLEncoded(instance.getPostalCode()));
            }
            if (instance.getAreaCode() != null) {
                sb.append("&u-areaCode=");
                sb.append(getURLEncoded(instance.getAreaCode()));
            }
            final String a = this.a(instance.getDateOfBirth());
            if (a != null) {
                sb.append("&u-dateOfBirth=");
                sb.append(getURLEncoded(a));
            }
            if (instance.getGender() != null) {
                sb.append("&u-gender=");
                sb.append(instance.getGender().toString().toLowerCase());
            }
            if (instance.getSearchString() != null) {
                sb.append("&p-type=");
                sb.append(getURLEncoded(instance.getSearchString()));
            }
            if (instance.getIncome() > 0) {
                sb.append("&u-income=");
                sb.append(instance.getIncome());
            }
            if (instance.getEducation() != null) {
                sb.append("&u-education=");
                sb.append(instance.getEducation().toString().toLowerCase());
            }
            if (instance.getEthnicity() != null) {
                sb.append("&u-ethnicity=");
                sb.append(instance.getEthnicity().toString().toLowerCase());
            }
            if (instance.getAge() > 0) {
                sb.append("&u-age=");
                sb.append(instance.getAge());
            }
            if (instance.getInterests() != null) {
                sb.append("&u-interests=");
                sb.append(getURLEncoded(instance.getInterests()));
            }
            if (instance.getLocationWithCityStateCountry() != null) {
                sb.append("&u-location=");
                sb.append(getURLEncoded(instance.getLocationWithCityStateCountry()));
            }
            if (instance.getMaritalStatus() != null) {
                sb.append("&u-marital=");
                sb.append(instance.getMaritalStatus().toString().toLowerCase());
            }
            if (instance.getHasChildren() != null) {
                sb.append("&u-haschildren=");
                sb.append(instance.getHasChildren().toString().toLowerCase());
            }
            if (instance.getLanguage() != null) {
                sb.append("&u-language=");
                sb.append(getURLEncoded(instance.getLanguage()));
            }
            if (instance.getSexualOrientation() != null) {
                sb.append("&u-sexualorientation=");
                sb.append(instance.getSexualOrientation().toString().toLowerCase());
            }
            if (LocationInfo.isValidGeoInfo()) {
                sb.append("&u-latlong-accu=");
                sb.append(getURLEncoded(currentLocationStr()));
                sb.append("&u-ll-ts=");
                sb.append(LocationInfo.getGeoTS());
            }
            String s = sb.toString();
            try {
                if (s.charAt(0) == '&') {
                    s = s.substring(1);
                }
                return s;
            }
            catch (Exception ex) {
                Log.internal("[InMobi]-4.4.3", "Couldn't build post string in Request Builder", ex);
                return s;
            }
        }
        catch (Exception ex2) {
            Log.internal("[InMobi]-4.4.3", "Couldn't build post string in Request Builder", ex2);
            return null;
        }
    }
    
    public String getUidMapPostBody() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: new             Ljava/util/HashMap;
        //     3: dup            
        //     4: invokespecial   java/util/HashMap.<init>:()V
        //     7: astore_1       
        //     8: invokestatic    com/inmobi/commons/analytics/bootstrapper/AnalyticsInitializer.getConfigParams:()Lcom/inmobi/commons/analytics/bootstrapper/AnalyticsConfigParams;
        //    11: invokevirtual   com/inmobi/commons/analytics/bootstrapper/AnalyticsConfigParams.getLTVId:()Ljava/lang/Long;
        //    14: astore          20
        //    16: aload           20
        //    18: astore_3       
        //    19: aload_3        
        //    20: ifnull          47
        //    23: aload_1        
        //    24: ldc_w           "LTVID"
        //    27: new             Ljava/lang/StringBuilder;
        //    30: dup            
        //    31: invokespecial   java/lang/StringBuilder.<init>:()V
        //    34: aload_3        
        //    35: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //    38: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    41: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        //    46: pop            
        //    47: new             Ljava/util/Random;
        //    50: dup            
        //    51: invokespecial   java/util/Random.<init>:()V
        //    54: invokevirtual   java/util/Random.nextInt:()I
        //    57: invokestatic    java/lang/Integer.toString:(I)Ljava/lang/String;
        //    60: astore          4
        //    62: invokestatic    com/inmobi/commons/uid/UID.getCommonsUid:()Lcom/inmobi/commons/uid/UID;
        //    65: invokestatic    com/inmobi/commons/data/UserInfo.getInstance:()Lcom/inmobi/commons/data/UserInfo;
        //    68: invokevirtual   com/inmobi/commons/data/UserInfo.getDeviceIDMask:()I
        //    71: aload           4
        //    73: aload_1        
        //    74: invokevirtual   com/inmobi/commons/uid/UID.getUidMap:(ILjava/lang/String;Ljava/util/Map;)Ljava/lang/String;
        //    77: astore          5
        //    79: new             Ljava/lang/StringBuilder;
        //    82: dup            
        //    83: invokespecial   java/lang/StringBuilder.<init>:()V
        //    86: astore          6
        //    88: aload           6
        //    90: ldc_w           "u-id-adt="
        //    93: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    96: pop            
        //    97: invokestatic    com/inmobi/commons/internal/InternalSDKUtil.isLimitAdTrackingEnabled:()Z
        //   100: ifeq            220
        //   103: aload           6
        //   105: iconst_1       
        //   106: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   109: pop            
        //   110: aconst_null    
        //   111: astore          9
        //   113: aload           5
        //   115: ifnull          203
        //   118: aload           6
        //   120: ldc_w           "&u-id-map="
        //   123: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   126: pop            
        //   127: aload           6
        //   129: aload           5
        //   131: invokestatic    com/inmobi/commons/network/RequestBuilder.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //   134: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   137: pop            
        //   138: aload           6
        //   140: ldc_w           "&u-id-key="
        //   143: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   146: pop            
        //   147: aload           6
        //   149: aload           4
        //   151: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   154: pop            
        //   155: aload           6
        //   157: ldc_w           "&u-key-ver="
        //   160: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   163: pop            
        //   164: aload           6
        //   166: invokestatic    com/inmobi/commons/uid/UIDHelper.getRSAKeyVersion:()Ljava/lang/String;
        //   169: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   172: pop            
        //   173: aload           6
        //   175: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   178: astore          9
        //   180: aload           9
        //   182: iconst_0       
        //   183: invokevirtual   java/lang/String.charAt:(I)C
        //   186: bipush          38
        //   188: if_icmpne       203
        //   191: aload           9
        //   193: iconst_1       
        //   194: invokevirtual   java/lang/String.substring:(I)Ljava/lang/String;
        //   197: astore          17
        //   199: aload           17
        //   201: astore          9
        //   203: aload           9
        //   205: areturn        
        //   206: astore_2       
        //   207: ldc             "[InMobi]-4.4.3"
        //   209: ldc_w           "LTVID not available yet in configs"
        //   212: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
        //   215: aconst_null    
        //   216: astore_3       
        //   217: goto            19
        //   220: aload           6
        //   222: iconst_0       
        //   223: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   226: pop            
        //   227: goto            110
        //   230: astore          16
        //   232: ldc             "[InMobi]-4.4.3"
        //   234: ldc             "Couldn't build post string in Request Builder"
        //   236: aload           16
        //   238: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   241: aload           9
        //   243: areturn        
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  8      16     206    220    Ljava/lang/Exception;
        //  180    199    230    244    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0203:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
}
