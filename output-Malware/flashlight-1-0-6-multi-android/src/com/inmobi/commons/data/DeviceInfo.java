// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.commons.data;

import java.util.Hashtable;
import com.inmobi.commons.internal.Log;
import com.inmobi.commons.internal.WrapperFunctions;
import com.inmobi.commons.internal.InternalSDKUtil;
import java.util.Locale;
import android.os.Build;
import android.content.SharedPreferences$Editor;
import java.util.UUID;
import android.content.Context;

public class DeviceInfo
{
    private static String a;
    private static String b;
    private static String c;
    private static String d;
    private static String e;
    private static String f;
    private static String g;
    private static int h;
    private static DeviceInfo i;
    
    static {
        DeviceInfo.d = null;
        DeviceInfo.e = null;
        DeviceInfo.i = new DeviceInfo();
    }
    
    private static String a() {
        return DeviceInfo.c;
    }
    
    private static void a(final int h) {
        DeviceInfo.h = h;
    }
    
    private static void a(final Context context) {
        try {
            if (DeviceInfo.f == null) {
                DeviceInfo.f = context.getSharedPreferences("inmobisdkaid", 0).getString("A_ID", (String)null);
            }
            if (DeviceInfo.f == null) {
                DeviceInfo.f = UUID.randomUUID().toString();
                final SharedPreferences$Editor edit = context.getSharedPreferences("inmobisdkaid", 0).edit();
                edit.putString("A_ID", DeviceInfo.f);
                edit.commit();
            }
        }
        catch (Exception ex) {}
    }
    
    private static void a(final String a) {
        DeviceInfo.a = a;
    }
    
    private static void b(final String b) {
        DeviceInfo.b = b;
    }
    
    private static void c(final String c) {
        DeviceInfo.c = c;
    }
    
    public static String getAid() {
        return DeviceInfo.f;
    }
    
    public static DeviceInfo getInstance() {
        return DeviceInfo.i;
    }
    
    public static String getLocalization() {
        return DeviceInfo.b;
    }
    
    public static String getNetworkType() {
        return DeviceInfo.a;
    }
    
    public static int getOrientation() {
        return DeviceInfo.h;
    }
    
    public static String getPhoneDefaultUserAgent() {
        if (DeviceInfo.g == null) {
            return "";
        }
        return DeviceInfo.g;
    }
    
    public static String getScreenDensity() {
        return DeviceInfo.e;
    }
    
    public static String getScreenSize() {
        return DeviceInfo.d;
    }
    
    public static void setPhoneDefaultUserAgent(final String g) {
        DeviceInfo.g = g;
    }
    
    public static void setScreenDensity(final String e) {
        DeviceInfo.e = e;
    }
    
    public static void setScreenSize(final String d) {
        DeviceInfo.d = d;
    }
    
    public void fillDeviceInfo() {
        while (true) {
            Label_0086: {
                if (a() != null) {
                    break Label_0086;
                }
                DeviceInfo.c = Build.BRAND;
                final Locale default1 = Locale.getDefault();
                final String language = default1.getLanguage();
                String s = null;
                Label_0081: {
                    int currentOrientationInFixedValues = 0;
                    Label_0125: {
                        if (language == null) {
                            break Label_0125;
                        }
                        s = language.toLowerCase(Locale.ENGLISH);
                        final String country = default1.getCountry();
                        if (country != null) {
                            s = s + "_" + country.toLowerCase(Locale.ENGLISH);
                        }
                        break Label_0081;
                    Label_0188_Outer:
                        while (true) {
                            a(InternalSDKUtil.getConnectivityType(InternalSDKUtil.getContext()));
                        Label_0188:
                            while (true) {
                                try {
                                    currentOrientationInFixedValues = WrapperFunctions.getCurrentOrientationInFixedValues(InternalSDKUtil.getContext());
                                    if (currentOrientationInFixedValues == 9) {
                                        a(2);
                                        return;
                                    }
                                    if (currentOrientationInFixedValues == 8) {
                                        a(4);
                                        return;
                                    }
                                    break;
                                Block_10_Outer:
                                    while (true) {
                                        s = "en";
                                        break Label_0081;
                                        while (true) {
                                            final String s2;
                                            final String s3;
                                            s = s2 + "_" + s3;
                                            break Label_0188;
                                            s2 = ((Hashtable<K, String>)System.getProperties()).get("user.language");
                                            s3 = ((Hashtable<K, String>)System.getProperties()).get("user.region");
                                            continue Label_0188_Outer;
                                        }
                                        continue Block_10_Outer;
                                    }
                                }
                                // iftrue(Label_0235:, s2 == null || s3 == null)
                                // iftrue(Label_0081:, s != null)
                                catch (Exception ex) {
                                    Log.debug("[InMobi]-4.4.3", "Error getting the orientation info ", ex);
                                    return;
                                }
                                break;
                                Label_0235: {
                                    s = language;
                                }
                                continue Label_0188;
                            }
                        }
                    }
                    if (currentOrientationInFixedValues == 0) {
                        a(3);
                        return;
                    }
                    a(1);
                    return;
                }
                b(s);
            }
            if (InternalSDKUtil.getContext() != null) {
                a(InternalSDKUtil.getContext());
            }
            continue;
        }
    }
}
