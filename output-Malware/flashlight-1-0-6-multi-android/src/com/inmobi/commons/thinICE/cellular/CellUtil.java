// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.commons.thinICE.cellular;

import android.telephony.CellLocation;
import android.telephony.gsm.GsmCellLocation;
import android.telephony.cdma.CdmaCellLocation;
import android.telephony.TelephonyManager;
import android.content.Context;

public final class CellUtil
{
    private static final String[] a;
    
    static {
        a = new String[] { "android.permission.ACCESS_COARSE_LOCATION" };
    }
    
    private static int[] a(final String s) {
        final int[] array = { -1, -1 };
        if (s == null || s.equals("")) {
            return array;
        }
        try {
            final int int1 = Integer.parseInt(s.substring(0, 3));
            final int int2 = Integer.parseInt(s.substring(3));
            array[0] = int1;
            array[1] = int2;
            return array;
        }
        catch (IndexOutOfBoundsException ex) {
            return array;
        }
        catch (NumberFormatException ex2) {
            return array;
        }
    }
    
    public static CellOperatorInfo getCellNetworkInfo(final Context context) {
        final CellOperatorInfo cellOperatorInfo = new CellOperatorInfo();
        final TelephonyManager telephonyManager = (TelephonyManager)context.getSystemService("phone");
        final int[] a = a(telephonyManager.getNetworkOperator());
        cellOperatorInfo.currentMcc = a[0];
        cellOperatorInfo.currentMnc = a[1];
        final int[] a2 = a(telephonyManager.getSimOperator());
        cellOperatorInfo.simMcc = a2[0];
        cellOperatorInfo.simMnc = a2[1];
        return cellOperatorInfo;
    }
    
    public static CellTowerInfo getCurrentCellTower(final Context context) {
        final TelephonyManager telephonyManager = (TelephonyManager)context.getSystemService("phone");
        final int[] a = a(telephonyManager.getNetworkOperator());
        final CellLocation cellLocation = telephonyManager.getCellLocation();
        if (cellLocation == null || a[0] == -1) {
            return null;
        }
        final CellTowerInfo cellTowerInfo = new CellTowerInfo();
        final String value = String.valueOf(a[0]);
        final String value2 = String.valueOf(a[1]);
        if (cellLocation instanceof CdmaCellLocation) {
            final CdmaCellLocation cdmaCellLocation = (CdmaCellLocation)cellLocation;
            final int networkId = cdmaCellLocation.getNetworkId();
            final int baseStationId = cdmaCellLocation.getBaseStationId();
            final int systemId = cdmaCellLocation.getSystemId();
            cellTowerInfo.signalStrength = CellUtil$a.b(context);
            if (networkId != -1 && baseStationId != -1 && systemId != -1) {
                cellTowerInfo.id = value + "-" + value2 + "-" + Integer.toHexString(networkId) + "-" + Integer.toHexString(baseStationId) + "-" + Integer.toHexString(systemId);
            }
        }
        else {
            final GsmCellLocation gsmCellLocation = (GsmCellLocation)cellLocation;
            final int cid = gsmCellLocation.getCid();
            final int lac = gsmCellLocation.getLac();
            cellTowerInfo.signalStrength = CellUtil$a.a(context);
            if (cid != -1 && lac != -1) {
                cellTowerInfo.id = value + "-" + value2 + "-" + Integer.toHexString(lac) + "-" + Integer.toHexString(cid);
            }
        }
        return cellTowerInfo;
    }
    
    public static boolean hasGetCurrentServingCellPermission(final Context context) {
        final String[] a = CellUtil.a;
        for (int length = a.length, i = 0; i < length; ++i) {
            if (context.checkCallingOrSelfPermission(a[i]) != 0) {
                return false;
            }
        }
        return true;
    }
}
