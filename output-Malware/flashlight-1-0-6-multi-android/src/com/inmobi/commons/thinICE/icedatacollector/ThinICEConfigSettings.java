// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.commons.thinICE.icedatacollector;

public class ThinICEConfigSettings
{
    public static final int CELL_OP_FLAG_DISABLE_CURRENT_DETAILS = 2;
    public static final int CELL_OP_FLAG_DISABLE_SIM_DETAILS = 1;
    public static final int WIFI_FLAG_DISABLE_NOMAP_EXCLUSION = 2;
    public static final int WIFI_FLAG_DISABLE_SSID_COLLECTION = 1;
    private boolean a;
    private boolean b;
    private boolean c;
    private boolean d;
    private boolean e;
    private boolean f;
    private long g;
    private long h;
    private int i;
    private int j;
    private int k;
    
    public ThinICEConfigSettings() {
        this.a = true;
        this.b = true;
        this.c = true;
        this.d = true;
        this.e = true;
        this.f = true;
        this.g = 60000L;
        this.h = 3000L;
        this.i = 50;
        this.j = 0;
        this.k = 0;
    }
    
    public ThinICEConfigSettings(final ThinICEConfigSettings thinICEConfigSettings) {
        this.a = true;
        this.b = true;
        this.c = true;
        this.d = true;
        this.e = true;
        this.f = true;
        this.g = 60000L;
        this.h = 3000L;
        this.i = 50;
        this.j = 0;
        this.k = 0;
        this.a = thinICEConfigSettings.a;
        this.b = thinICEConfigSettings.b;
        this.c = thinICEConfigSettings.c;
        this.d = thinICEConfigSettings.d;
        this.e = thinICEConfigSettings.e;
        this.f = thinICEConfigSettings.f;
        this.g = thinICEConfigSettings.g;
        this.h = thinICEConfigSettings.h;
        this.i = thinICEConfigSettings.i;
        this.j = thinICEConfigSettings.j;
        this.k = thinICEConfigSettings.k;
    }
    
    public static boolean bitTest(final int n, final int n2) {
        return (n & n2) == n2;
    }
    
    public int getCellOpFlags() {
        return this.k;
    }
    
    public int getSampleHistorySize() {
        return this.i;
    }
    
    public long getSampleInterval() {
        return this.g;
    }
    
    public long getStopRequestTimeout() {
        return this.h;
    }
    
    public int getWifiFlags() {
        return this.j;
    }
    
    public boolean isEnabled() {
        return this.a;
    }
    
    public boolean isSampleCellEnabled() {
        return this.c;
    }
    
    public boolean isSampleCellOperatorEnabled() {
        return this.b;
    }
    
    public boolean isSampleConnectedWifiEnabled() {
        return this.d;
    }
    
    public boolean isSampleLocationEnabled() {
        return this.e;
    }
    
    public boolean isSampleVisibleWifiEnabled() {
        return this.f;
    }
    
    public ThinICEConfigSettings setCellOpFlags(final int k) {
        this.k = k;
        return this;
    }
    
    public ThinICEConfigSettings setEnabled(final boolean a) {
        this.a = a;
        return this;
    }
    
    public ThinICEConfigSettings setSampleCellEnabled(final boolean c) {
        this.c = c;
        return this;
    }
    
    public ThinICEConfigSettings setSampleCellOperatorEnabled(final boolean b) {
        this.b = b;
        return this;
    }
    
    public ThinICEConfigSettings setSampleConnectedWifiEnabled(final boolean d) {
        this.d = d;
        return this;
    }
    
    public ThinICEConfigSettings setSampleHistorySize(final int i) {
        if (i <= 0) {
            throw new IllegalArgumentException("Sample history size must be greater than 0");
        }
        this.i = i;
        return this;
    }
    
    public ThinICEConfigSettings setSampleInterval(final long g) {
        if (g <= 0L) {
            throw new IllegalArgumentException("Sample interval must be greater than 0");
        }
        this.g = g;
        return this;
    }
    
    public ThinICEConfigSettings setSampleLocationEnabled(final boolean e) {
        this.e = e;
        return this;
    }
    
    public ThinICEConfigSettings setSampleVisibleWifiEnabled(final boolean f) {
        this.f = f;
        return this;
    }
    
    public ThinICEConfigSettings setStopRequestTimeout(final long h) {
        if (h <= 0L) {
            throw new IllegalArgumentException("Stop request timeout must be greater than 0");
        }
        this.h = h;
        return this;
    }
    
    public ThinICEConfigSettings setWifiFlags(final int j) {
        this.j = j;
        return this;
    }
    
    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder();
        sb.append(this.getClass().getSimpleName()).append("[");
        sb.append("mEnabled=").append(this.a).append(", ");
        sb.append("mSampleCellOperatorEnabled=").append(this.b).append(", ");
        sb.append("mSampleCellEnabled=").append(this.c).append(", ");
        sb.append("mSampleConnectedWifiEnabled=").append(this.d).append(", ");
        sb.append("mSampleLocationEnabled=").append(this.e).append(", ");
        sb.append("mSampleVisibleWifiEnabled=").append(this.f).append(", ");
        sb.append("mSampleInterval=").append(this.g).append(", ");
        sb.append("mStopRequestTimeout=").append(this.h).append(", ");
        sb.append("mWifiFlags=").append(Integer.toBinaryString(this.j)).append(", ");
        sb.append("mCellOpFlags=").append(Integer.toBinaryString(this.k));
        sb.append("]");
        return sb.toString();
    }
}
