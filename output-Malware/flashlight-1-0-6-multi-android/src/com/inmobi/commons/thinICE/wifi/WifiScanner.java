// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.commons.thinICE.wifi;

import android.os.Looper;
import android.net.wifi.WifiManager;
import android.os.PowerManager;
import android.net.wifi.WifiManager$WifiLock;
import android.os.PowerManager$WakeLock;
import android.content.IntentFilter;
import android.content.BroadcastReceiver;
import android.os.Handler;
import android.content.Context;

public final class WifiScanner
{
    private static Context a;
    private static WifiScanListener b;
    private static Handler c;
    private static boolean d;
    private static Runnable e;
    private static boolean f;
    private static final BroadcastReceiver g;
    private static final IntentFilter h;
    private static PowerManager$WakeLock i;
    private static WifiManager$WifiLock j;
    
    static {
        WifiScanner.a = null;
        WifiScanner.b = null;
        WifiScanner.c = null;
        WifiScanner.d = false;
        WifiScanner.e = new b();
        WifiScanner.f = false;
        g = new a();
        h = new IntentFilter("android.net.wifi.SCAN_RESULTS");
        WifiScanner.i = null;
        WifiScanner.j = null;
    }
    
    private static void d() {
        synchronized (WifiScanner.class) {
            if (WifiScanner.c != null) {
                WifiScanner.c.removeCallbacks(WifiScanner.e);
                f();
                if (WifiScanner.d) {
                    h();
                    j();
                }
                WifiScanner.c = null;
                WifiScanner.b = null;
                WifiScanner.a = null;
                WifiScanner.d = false;
            }
        }
    }
    
    private static void e() {
        if (WifiScanner.f) {
            return;
        }
        WifiScanner.f = true;
        WifiScanner.a.registerReceiver(WifiScanner.g, WifiScanner.h, (String)null, WifiScanner.c);
    }
    
    private static void f() {
        if (!WifiScanner.f) {
            return;
        }
        WifiScanner.f = false;
        try {
            WifiScanner.a.unregisterReceiver(WifiScanner.g);
        }
        catch (IllegalArgumentException ex) {}
    }
    
    private static void g() {
        if (WifiScanner.i == null) {
            (WifiScanner.i = ((PowerManager)WifiScanner.a.getSystemService("power")).newWakeLock(1, "wifiscanrequester.CpuLock")).setReferenceCounted(false);
        }
        if (!WifiScanner.i.isHeld()) {
            WifiScanner.i.acquire();
        }
    }
    
    private static void h() {
        if (WifiScanner.i != null) {
            if (WifiScanner.i.isHeld()) {
                WifiScanner.i.release();
            }
            WifiScanner.i = null;
        }
    }
    
    private static void i() {
        if (WifiScanner.j == null) {
            (WifiScanner.j = ((WifiManager)WifiScanner.a.getSystemService("wifi")).createWifiLock(2, "wifiscanrequester.WiFiScanLock")).setReferenceCounted(false);
        }
        if (!WifiScanner.j.isHeld()) {
            WifiScanner.j.acquire();
        }
    }
    
    private static void j() {
        if (WifiScanner.j != null) {
            if (WifiScanner.j.isHeld()) {
                WifiScanner.j.release();
            }
            WifiScanner.j = null;
        }
    }
    
    public static boolean requestScan(final Context context, final WifiScanListener wifiScanListener) {
        return requestScan(Looper.myLooper(), context, wifiScanListener, 10000L, false);
    }
    
    public static boolean requestScan(final Looper looper, final Context a, final WifiScanListener b, final long n, final boolean d) {
        synchronized (WifiScanner.class) {
            boolean startScan;
            if (WifiScanner.c != null) {
                startScan = false;
            }
            else {
                final WifiManager wifiManager = (WifiManager)a.getSystemService("wifi");
                if (!wifiManager.isWifiEnabled()) {
                    startScan = false;
                }
                else {
                    WifiScanner.a = a;
                    WifiScanner.b = b;
                    WifiScanner.d = d;
                    (WifiScanner.c = new Handler(looper)).postDelayed(WifiScanner.e, n);
                    if (WifiScanner.d) {
                        i();
                        g();
                    }
                    e();
                    startScan = wifiManager.startScan();
                }
            }
            return startScan;
        }
    }
}
