// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.commons.analytics.iat.impl.config;

import com.inmobi.commons.uid.UIDUtil;
import com.inmobi.commons.InMobi;
import com.inmobi.commons.internal.InternalSDKUtil;
import com.inmobi.commons.internal.Log;
import com.inmobi.commons.cache.CacheController;
import java.util.HashMap;
import com.inmobi.commons.cache.CacheController$Validator;
import com.inmobi.commons.metric.Logger;
import java.util.Map;
import android.content.Context;

public class AdTrackerInitializer
{
    public static final String PRODUCT_IAT = "iat";
    private static Context a;
    private static Map b;
    private static AdTrackerConfigParams c;
    private static Logger d;
    private static CacheController$Validator e;
    
    static {
        AdTrackerInitializer.a = null;
        AdTrackerInitializer.b = new HashMap();
        AdTrackerInitializer.c = new AdTrackerConfigParams();
        AdTrackerInitializer.d = new Logger(2, "iat");
        AdTrackerInitializer.e = new a();
    }
    
    private static void a(final Context context) {
        Label_0060: {
            if (context == null || AdTrackerInitializer.a != null) {
                break Label_0060;
            }
            if (AdTrackerInitializer.a == null) {
                AdTrackerInitializer.a = context.getApplicationContext();
                AdTrackerInitializer.b = getUidMap(context);
                try {
                    b(CacheController.getConfig("iat", context, AdTrackerInitializer.b, AdTrackerInitializer.e).getData());
                    return;
                }
                catch (Exception ex) {
                    Log.internal("[InMobi]-[AdTracker]-4.4.3", "Exception while retreiving configs.");
                    return;
                }
                break Label_0060;
            }
            return;
        }
        if (AdTrackerInitializer.a == null && context == null) {
            AdTrackerInitializer.a.getApplicationContext();
        }
    }
    
    private static void b(final Context context) {
        a(context);
        try {
            CacheController.getConfig("iat", context, AdTrackerInitializer.b, AdTrackerInitializer.e);
        }
        catch (Exception ex) {}
    }
    
    private static boolean b(final Map map) {
        AdTrackerInitializer.b = getUidMap(AdTrackerInitializer.a);
        final Map populateToNewMap = InternalSDKUtil.populateToNewMap(map.get("AND"), map.get("common"), true);
        try {
            final AdTrackerConfigParams c = new AdTrackerConfigParams();
            c.setFromMap(populateToNewMap);
            AdTrackerInitializer.c = c;
            return true;
        }
        catch (Exception ex) {
            return false;
        }
    }
    
    public static AdTrackerConfigParams getConfigParams() {
        if (InternalSDKUtil.getContext() != null && InMobi.getAppId() != null) {
            b(InternalSDKUtil.getContext());
        }
        AdTrackerInitializer.d.setMetricConfigParams(AdTrackerInitializer.c.getMetric());
        return AdTrackerInitializer.c;
    }
    
    public static Logger getLogger() {
        return AdTrackerInitializer.d;
    }
    
    public static Map getUidMap(final Context context) {
        return UIDUtil.getMap(AdTrackerInitializer.a, AdTrackerInitializer.c.getUID());
    }
}
