// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.commons.analytics.iat.impl;

import android.content.Context;
import android.content.Intent;
import com.inmobi.commons.metric.EventType;
import com.inmobi.commons.metric.EventLog;
import com.inmobi.commons.analytics.iat.impl.config.AdTrackerInitializer;
import org.json.JSONObject;
import com.inmobi.commons.analytics.iat.impl.net.AdTrackerNetworkInterface;
import com.inmobi.commons.analytics.iat.impl.config.AdTrackerEventType;
import com.inmobi.commons.internal.FileOperations;
import com.inmobi.commons.internal.Log;
import com.inmobi.commons.internal.InternalSDKUtil;

public class AdTrackerUtils
{
    public static boolean checkDownloadGoalAdded() {
        if (InternalSDKUtil.getContext() == null) {
            Log.internal("[InMobi]-[AdTracker]-4.4.3", "Application Context NULL cannot checkStatusUpload");
            return false;
        }
        return FileOperations.getBooleanPreferences(InternalSDKUtil.getContext(), "IMAdTrackerStatusUpload", "insertStatus");
    }
    
    public static boolean checkDownloadGoalUploaded() {
        if (InternalSDKUtil.getContext() == null) {
            Log.internal("[InMobi]-[AdTracker]-4.4.3", "Application Context NULL cannot checkStatusUpload");
            return false;
        }
        return FileOperations.getBooleanPreferences(InternalSDKUtil.getContext(), "IMAdTrackerStatusUpload", "uploadStatus");
    }
    
    public static String getReferrerFromLogs() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: iconst_3       
        //     1: anewarray       Ljava/lang/String;
        //     4: dup            
        //     5: iconst_0       
        //     6: ldc             "logcat"
        //     8: aastore        
        //     9: dup            
        //    10: iconst_1       
        //    11: ldc             "-d"
        //    13: aastore        
        //    14: dup            
        //    15: iconst_2       
        //    16: ldc             "ActivityManager:I"
        //    18: aastore        
        //    19: astore_0       
        //    20: ldc             "[InMobi]-[AdTracker]-4.4.3"
        //    22: ldc             "Getting referrer from logs"
        //    24: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
        //    27: invokestatic    com/inmobi/commons/analytics/iat/impl/config/AdTrackerInitializer.getConfigParams:()Lcom/inmobi/commons/analytics/iat/impl/config/AdTrackerConfigParams;
        //    30: invokevirtual   com/inmobi/commons/analytics/iat/impl/config/AdTrackerConfigParams.getLogcatPattern:()Ljava/lang/String;
        //    33: invokestatic    java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
        //    36: astore          4
        //    38: new             Ljava/io/BufferedReader;
        //    41: dup            
        //    42: new             Ljava/io/InputStreamReader;
        //    45: dup            
        //    46: invokestatic    java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
        //    49: aload_0        
        //    50: invokevirtual   java/lang/Runtime.exec:([Ljava/lang/String;)Ljava/lang/Process;
        //    53: invokevirtual   java/lang/Process.getInputStream:()Ljava/io/InputStream;
        //    56: invokespecial   java/io/InputStreamReader.<init>:(Ljava/io/InputStream;)V
        //    59: invokespecial   java/io/BufferedReader.<init>:(Ljava/io/Reader;)V
        //    62: astore          5
        //    64: aconst_null    
        //    65: astore_2       
        //    66: aload           5
        //    68: invokevirtual   java/io/BufferedReader.readLine:()Ljava/lang/String;
        //    71: astore          6
        //    73: aload           6
        //    75: ifnull          105
        //    78: aload           4
        //    80: aload           6
        //    82: invokevirtual   java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
        //    85: astore          7
        //    87: aload           7
        //    89: invokevirtual   java/util/regex/Matcher.find:()Z
        //    92: ifeq            66
        //    95: aload           7
        //    97: iconst_1       
        //    98: invokevirtual   java/util/regex/Matcher.group:(I)Ljava/lang/String;
        //   101: astore_2       
        //   102: goto            66
        //   105: ldc             "[InMobi]-[AdTracker]-4.4.3"
        //   107: new             Ljava/lang/StringBuilder;
        //   110: dup            
        //   111: ldc             "Received referrer from logs: "
        //   113: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   116: aload_2        
        //   117: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   120: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   123: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
        //   126: aload_2        
        //   127: areturn        
        //   128: astore_1       
        //   129: aconst_null    
        //   130: astore_2       
        //   131: aload_1        
        //   132: astore_3       
        //   133: ldc             "[InMobi]-[AdTracker]-4.4.3"
        //   135: ldc             "Getting referrer from logs failed"
        //   137: aload_3        
        //   138: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   141: aload_2        
        //   142: areturn        
        //   143: astore_3       
        //   144: goto            133
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  20     64     128    133    Ljava/lang/Exception;
        //  66     73     143    147    Ljava/lang/Exception;
        //  78     102    143    147    Ljava/lang/Exception;
        //  105    126    143    147    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0066:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public static boolean isPermissionGranted(final String s) {
        try {
            if (InternalSDKUtil.getContext().checkCallingOrSelfPermission(s) == 0) {
                return true;
            }
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[AdTracker]-4.4.3", "Cant check permissions", ex);
        }
        return false;
    }
    
    public static void reportMetric(final AdTrackerEventType adTrackerEventType, final Goal goal, final int n, final long n2, final int n3, final String s) {
        try {
            if (!AdTrackerNetworkInterface.isMetricSample()) {
                return;
            }
            if (AdTrackerEventType.GOAL_SUCCESS.equals(adTrackerEventType)) {
                final JSONObject jsonObject = new JSONObject();
                jsonObject.put("g", (Object)goal.getGoalName());
                jsonObject.put("n", goal.getRetryCount());
                jsonObject.put("t", n2);
                jsonObject.put("r", n);
                AdTrackerInitializer.getLogger().logEvent(new EventLog(AdTrackerEventType.GOAL_SUCCESS, jsonObject));
                return;
            }
            if (AdTrackerEventType.GOAL_FAILURE.equals(adTrackerEventType)) {
                final JSONObject jsonObject2 = new JSONObject();
                jsonObject2.put("g", (Object)goal.getGoalName());
                jsonObject2.put("n", goal.getRetryCount());
                jsonObject2.put("e", n3);
                if (s != null) {
                    jsonObject2.put("m", (Object)s);
                }
                AdTrackerInitializer.getLogger().logEvent(new EventLog(AdTrackerEventType.GOAL_FAILURE, jsonObject2));
                return;
            }
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[AdTracker]-4.4.3", "Error reporting metric", ex);
            return;
        }
        final JSONObject jsonObject3 = new JSONObject();
        jsonObject3.put("g", (Object)goal.getGoalName());
        jsonObject3.put("n", goal.getRetryCount());
        AdTrackerInitializer.getLogger().logEvent(new EventLog(AdTrackerEventType.GOAL_DUMPED, jsonObject3));
    }
    
    public static boolean resetStatus() {
        if (InternalSDKUtil.getContext() == null) {
            return false;
        }
        FileOperations.setPreferences(InternalSDKUtil.getContext(), "IMAdTrackerStatusUpload", "uploadStatus", false);
        return true;
    }
    
    public static boolean sendBroadcastMessage(final int n) {
        try {
            final Intent intent = new Intent();
            intent.setAction("action.inmobi.ADTRACKER");
            intent.putExtra("iatError", n);
            InternalSDKUtil.getContext().sendBroadcast(intent);
            return true;
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[AdTracker]-4.4.3", "Cant send test broadcast", ex);
            return false;
        }
    }
    
    public static void setInternalReferrer(final Context context, final String s) {
        String preferences = null;
        Label_0016: {
            if (context != null) {
                if (s != null) {
                    break Label_0016;
                }
            }
            try {
                Log.internal("[InMobi]-[AdTracker]-4.4.3", "Cannot set Market Referrer..Referrer NULL");
                return;
                // iftrue(Label_0151:, preferences != null && !"".equals((Object)preferences.trim()))
                while (true) {
                    while (true) {
                        while (true) {
                            Log.debug("[InMobi]-[AdTracker]-4.4.3", "Initialization incomplete. Please call InMobi initialize with a valid app Id");
                            return;
                            Log.internal("[InMobi]-[AdTracker]-4.4.3", "Saving referrer from broadcast receiver: " + s);
                            FileOperations.setPreferences(context.getApplicationContext(), "IMAdTrackerStatusUpload", "referrer", s);
                            FileOperations.setPreferences(context.getApplicationContext(), "IMAdTrackerStatusUpload", "rlc", "0");
                            preferences = FileOperations.getPreferences(context.getApplicationContext(), "IMAdTrackerStatusUpload", "mk-siteid");
                            continue;
                        }
                        FileOperations.setPreferences(context.getApplicationContext(), "IMAdTrackerStatusUpload", "t2", System.currentTimeMillis());
                        continue;
                    }
                    continue;
                }
            }
            // iftrue(Label_0046:, 0L != FileOperations.getLongPreferences(context.getApplicationContext(), "IMAdTrackerStatusUpload", "t2"))
            catch (Exception ex) {
                Log.internal("[InMobi]-[AdTracker]-4.4.3", "Cannot set referrer", ex);
                return;
            }
        }
        Label_0151: {
            if (FileOperations.getBooleanPreferences(context.getApplicationContext(), "IMAdTrackerStatusUpload", "waitForReferrer")) {
                InternalSDKUtil.setContext(context);
                AdTrackerNetworkInterface.init();
                AdTrackerNetworkInterface.getGoalList().addGoal("download", 1, 0L, 0, true);
                AdTrackerNetworkInterface.reportToServer(preferences);
            }
        }
        AdTrackerNetworkInterface.notifyThread();
    }
    
    public static void setReferrerFromLogs(final Context context, final String s) {
        Label_0017: {
            if (context != null) {
                if (s != null) {
                    break Label_0017;
                }
            }
            try {
                Log.internal("[InMobi]-[AdTracker]-4.4.3", "Cannot set Market Referrer from logs..Referrer NULL");
                return;
                // iftrue(Label_0047:, 0L != FileOperations.getLongPreferences(context.getApplicationContext(), "IMAdTrackerStatusUpload", "t2"))
                while (true) {
                    Block_3: {
                        break Block_3;
                        FileOperations.setPreferences(context.getApplicationContext(), "IMAdTrackerStatusUpload", "referrer", s);
                        FileOperations.setPreferences(context.getApplicationContext(), "IMAdTrackerStatusUpload", "rlc", "1");
                        return;
                    }
                    FileOperations.setPreferences(context.getApplicationContext(), "IMAdTrackerStatusUpload", "t2", System.currentTimeMillis());
                    continue;
                }
            }
            catch (Exception ex) {
                Log.internal("[InMobi]-[AdTracker]-4.4.3", "Cannot set referrer from logs", ex);
            }
        }
    }
    
    public static boolean updateStatus() {
        if (InternalSDKUtil.getContext() == null) {
            return false;
        }
        FileOperations.setPreferences(InternalSDKUtil.getContext(), "IMAdTrackerStatusUpload", "uploadStatus", true);
        return true;
    }
}
