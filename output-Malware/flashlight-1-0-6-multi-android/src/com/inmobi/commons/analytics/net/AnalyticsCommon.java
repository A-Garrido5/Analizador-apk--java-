// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.commons.analytics.net;

import java.net.URL;
import java.io.Writer;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
import java.io.IOException;
import android.util.Log;
import java.io.Closeable;
import java.net.URLEncoder;
import com.inmobi.commons.internal.InternalSDKUtil;
import java.net.HttpURLConnection;

public class AnalyticsCommon
{
    private static void a(final HttpURLConnection httpURLConnection) {
        httpURLConnection.setDoOutput(true);
        httpURLConnection.setDoInput(true);
        httpURLConnection.setConnectTimeout(60000);
        httpURLConnection.setReadTimeout(60000);
        httpURLConnection.setRequestMethod("POST");
        httpURLConnection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
        InternalSDKUtil.addCommonPropertiesToConnection(httpURLConnection);
    }
    
    public static String getURLEncoded(final String s) {
        try {
            return URLEncoder.encode(s, "UTF-8");
        }
        catch (Exception ex) {
            return "";
        }
    }
    
    public void closeResource(final Closeable closeable) {
        if (closeable == null) {
            return;
        }
        try {
            closeable.close();
        }
        catch (IOException ex) {
            Log.d("[InMobi]-[Analytics]-4.4.3", "Exception closing resource: " + closeable, (Throwable)ex);
        }
    }
    
    public void postData(final HttpURLConnection httpURLConnection, final String s) {
        httpURLConnection.setRequestProperty("Content-Length", Integer.toString(s.length()));
        BufferedWriter bufferedWriter;
        try {
            final BufferedWriter bufferedWriter2;
            bufferedWriter = (bufferedWriter2 = new BufferedWriter(new OutputStreamWriter(httpURLConnection.getOutputStream())));
            final String s2 = s;
            bufferedWriter2.write(s2);
            final AnalyticsCommon analyticsCommon = this;
            final BufferedWriter bufferedWriter3 = bufferedWriter;
            analyticsCommon.closeResource(bufferedWriter3);
            return;
        }
        finally {
            final Object o2;
            final Object o = o2;
            bufferedWriter = null;
        }
        while (true) {
            try {
                final BufferedWriter bufferedWriter2 = bufferedWriter;
                final String s2 = s;
                bufferedWriter2.write(s2);
                final AnalyticsCommon analyticsCommon = this;
                final BufferedWriter bufferedWriter3 = bufferedWriter;
                analyticsCommon.closeResource(bufferedWriter3);
                return;
                this.closeResource(bufferedWriter);
                throw;
            }
            finally {
                continue;
            }
            break;
        }
    }
    
    public HttpURLConnection setupConnection(final String s) {
        final HttpURLConnection httpURLConnection = (HttpURLConnection)new URL(s).openConnection();
        a(httpURLConnection);
        return httpURLConnection;
    }
}
