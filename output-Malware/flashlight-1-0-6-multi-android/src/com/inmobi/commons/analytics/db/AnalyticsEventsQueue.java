// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.commons.analytics.db;

import com.inmobi.commons.internal.Log;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.Vector;

public class AnalyticsEventsQueue extends Vector
{
    private static AnalyticsEventsQueue a;
    private static final long serialVersionUID = -1291938489149189478L;
    private AtomicBoolean b;
    
    public AnalyticsEventsQueue() {
        this.b = new AtomicBoolean(false);
    }
    
    static /* synthetic */ void a(final AnalyticsEventsQueue analyticsEventsQueue, final AnalyticsFunctions analyticsFunctions) {
        analyticsFunctions.processFunction();
    }
    
    private void a(final AnalyticsFunctions analyticsFunctions) {
        analyticsFunctions.processFunction();
    }
    
    public static AnalyticsEventsQueue getInstance() {
        synchronized (AnalyticsEventsQueue.class) {
            if (AnalyticsEventsQueue.a == null) {
                AnalyticsEventsQueue.a = new AnalyticsEventsQueue();
            }
            return AnalyticsEventsQueue.a;
        }
    }
    
    @Override
    public boolean isEmpty() {
        synchronized (this) {
            final boolean empty = super.isEmpty();
            if (empty) {
                this.b.set(false);
            }
            return empty;
        }
    }
    
    public void processFunctions() {
        synchronized (this) {
            if (!this.b.get()) {
                this.b.set(true);
                new Thread() {
                    @Override
                    public void run() {
                        try {
                            while (!AnalyticsEventsQueue.this.isEmpty()) {
                                AnalyticsEventsQueue.a(AnalyticsEventsQueue.this, AnalyticsEventsQueue.this.remove(0));
                            }
                        }
                        catch (Exception ex) {
                            Log.internal("[InMobi]-[Analytics]-4.4.3", "Exception processing function", ex);
                        }
                    }
                }.start();
            }
        }
    }
}
