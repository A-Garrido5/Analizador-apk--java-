// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.commons.cache;

import java.io.IOException;
import org.json.JSONException;
import com.inmobi.commons.internal.Log;
import com.inmobi.commons.internal.FileOperations;
import com.inmobi.commons.internal.InternalSDKUtil;
import org.json.JSONObject;

public final class LocalCache
{
    public static final String FILENAME = "inmobi.cache";
    private static String a;
    private static JSONObject b;
    
    static {
        LocalCache.a = "{url:'https://inmobisdk-a.akamaihd.net/sdk/configs/400/rootConfig.json'}";
        LocalCache.b = new JSONObject();
    }
    
    public static JSONObject addToCache(final String s, final JSONObject jsonObject) {
        synchronized (LocalCache.b) {
            if (LocalCache.b.toString().equals("{}")) {
                initRoot();
            }
            LocalCache.b.put(s, (Object)jsonObject);
            // monitorexit(LocalCache.b)
            b();
            return null;
        }
    }
    
    private static void b() {
        new Thread(new Runnable() {
            @Override
            public final void run() {
                c();
            }
        }).start();
    }
    
    private static void c() {
        synchronized (LocalCache.b) {
            try {
                FileOperations.writeStringToFile(InternalSDKUtil.getContext(), "inmobi.cache", LocalCache.b.toString(), false);
            }
            catch (Exception ex) {
                Log.internal("[InMobi]-4.4.3", "Unable to save all configs to persistent memory", ex);
            }
        }
    }
    
    public static JSONObject getCacheForProduct(final String s) {
        if (LocalCache.b.toString().equals("{}")) {
            initRoot();
        }
        try {
            return LocalCache.b.getJSONObject(s);
        }
        catch (JSONException ex) {
            return null;
        }
    }
    
    public static JSONObject getRoot() {
        return LocalCache.b;
    }
    
    public static void initRoot() {
        if (LocalCache.b.toString().equals("{}")) {
            synchronized (LocalCache.b) {
                while (true) {
                    try {
                        String s = FileOperations.readFileAsString(InternalSDKUtil.getContext(), "inmobi.cache");
                        if (s == null || "".equals(s)) {
                            Log.internal("[InMobi]-4.4.3", "Configs not present in persistence. Using default configs.");
                            s = LocalCache.a;
                        }
                        LocalCache.b = new JSONObject(s);
                        // monitorexit(LocalCache.b)
                        if (LocalCache.b.toString().equals("{}")) {
                            try {
                                LocalCache.b = new JSONObject(LocalCache.a);
                            }
                            catch (JSONException ex) {
                                Log.internal("[InMobi]-4.4.3", "Default JSON root is unable to parse? What sorcery is this?", (Throwable)ex);
                            }
                        }
                    }
                    catch (IOException ex2) {
                        Log.internal("[InMobi]-4.4.3", "Unable to read configs from persistent memory", ex2);
                        continue;
                    }
                    catch (JSONException ex3) {
                        Log.internal("[InMobi]-4.4.3", "Ill formed JSON while parsing from persistent memory", (Throwable)ex3);
                        continue;
                    }
                    break;
                }
            }
        }
    }
    
    public static void reset() {
        LocalCache.b = new JSONObject();
        c();
        initRoot();
    }
    
    public static void saveRoot(final JSONObject b) {
        LocalCache.b = b;
        b();
    }
}
