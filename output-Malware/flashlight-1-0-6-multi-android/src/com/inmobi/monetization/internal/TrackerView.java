// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.monetization.internal;

import com.inmobi.commons.internal.Log;
import java.util.Map;
import com.inmobi.commons.uid.UIDUtil;
import org.json.JSONObject;
import java.util.HashMap;
import com.inmobi.re.container.IMWebView$IMWebViewListener;
import com.inmobi.androidsdk.impl.imai.IMAIController;
import android.view.ViewGroup$LayoutParams;
import android.widget.RelativeLayout$LayoutParams;
import android.content.Context;
import java.util.ArrayList;
import com.inmobi.re.container.IMWebView;
import android.webkit.WebViewClient;
import android.view.View;

public class TrackerView extends View
{
    public static final int ID = 999;
    WebViewClient a;
    private IMWebView b;
    private boolean c;
    private String d;
    private ArrayList e;
    private boolean f;
    
    public TrackerView(final Context context, final String s, final String d) {
        super(context);
        this.c = false;
        this.e = null;
        this.f = false;
        this.a = new a(this);
        if (s == null || d == null) {
            return;
        }
        this.d = d;
        final RelativeLayout$LayoutParams layoutParams = new RelativeLayout$LayoutParams(-1, -1);
        layoutParams.addRule(10);
        this.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
        this.setBackgroundColor(0);
        IMWebView.setIMAIController(IMAIController.class);
        this.b = new IMWebView(context, null, false, false);
        this.b.getSettings().setJavaScriptEnabled(true);
        this.b.getSettings().setCacheMode(2);
        this.b.setWebViewClient(this.a);
        this.b.loadData(s, "text/html", "UTF-8");
        this.e = new ArrayList();
        this.setId(999);
    }
    
    private String a() {
        return this.d + "recordEvent(18)";
    }
    
    private String a(final HashMap hashMap) {
        final StringBuilder sb = new StringBuilder();
        if (hashMap == null || hashMap.isEmpty()) {
            sb.append(this.d + "recordEvent(8)");
            return sb.toString();
        }
        sb.append(this.d + "recordEvent(8, ");
        final JSONObject jsonObject = new JSONObject();
        UIDUtil.bindToJSON(hashMap, jsonObject);
        sb.append(jsonObject.toString());
        sb.append(")");
        return sb.toString();
    }
    
    public void click(final HashMap hashMap) {
        Log.debug("[InMobi]-[Monetization]", "Handle Click");
        final String a = this.a(hashMap);
        if (this.f) {
            this.injectJavaScript(a);
        }
        else if (this.e != null) {
            this.e.add(a);
        }
    }
    
    public void destroy() {
        if (this.b != null) {
            this.b.destroy();
            this.b = null;
        }
        if (this.e != null) {
            this.e.clear();
            this.e = null;
        }
        this.c = false;
        this.f = false;
    }
    
    public void handleImpression(final String s) {
        Log.debug("[InMobi]-[Monetization]", "Handle Impression");
        this.injectJavaScript(s);
    }
    
    public void injectJavaScript(final String s) {
        if (s == null) {
            return;
        }
        try {
            if (s.length() < 400) {
                Log.internal("[InMobi]-[Monetization]", s);
            }
            if (this.b != null) {
                this.b.loadUrl("javascript:try{" + s + "}catch(e){}");
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    protected void onWindowVisibilityChanged(final int n) {
        super.onWindowVisibilityChanged(n);
        if (n == 0 && !this.c) {
            this.c = true;
            if (this.f) {
                this.handleImpression(this.a());
            }
            else if (this.e != null) {
                this.e.add(this.a());
            }
        }
    }
}
