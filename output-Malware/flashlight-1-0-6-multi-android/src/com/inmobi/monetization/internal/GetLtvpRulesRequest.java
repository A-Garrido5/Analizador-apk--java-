// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.monetization.internal;

import java.util.List;
import org.apache.http.client.utils.URLEncodedUtils;
import org.apache.http.message.BasicNameValuePair;
import java.util.LinkedList;
import com.inmobi.commons.internal.Log;
import com.inmobi.commons.uid.UIDHelper;
import com.inmobi.commons.uid.UIDUtil;
import java.util.Random;
import com.inmobi.commons.internal.InternalSDKUtil;
import com.inmobi.commons.InMobi;

public class GetLtvpRulesRequest
{
    private String a;
    private String b;
    private String c;
    private long d;
    private String e;
    private String f;
    private String g;
    
    public GetLtvpRulesRequest() {
        try {
            this.a = InMobi.getAppId();
            this.b = "pr-SAND-" + InternalSDKUtil.getInMobiInternalVersion(InMobi.getVersion()) + "-20140730";
            this.d = new Random().nextInt();
            this.c = UIDUtil.getEncryptedUid(Long.toString(this.d));
            this.e = UIDHelper.getRSAKeyVersion();
            this.f = InternalSDKUtil.getContext().getPackageName();
            this.g = InternalSDKUtil.getContext().getPackageManager().getPackageInfo(this.f, 0).versionName;
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[Monetization]", "Failed to init Ltvp request", ex);
        }
    }
    
    public String getEncodedRequestParams() {
        try {
            final LinkedList<BasicNameValuePair> list = new LinkedList<BasicNameValuePair>();
            if (this.a != null && !"".equals(this.a)) {
                list.add(new BasicNameValuePair("mk-siteid", this.a));
            }
            if (this.b != null && !"".equals(this.b)) {
                list.add(new BasicNameValuePair("mk-version", this.b));
            }
            if (this.c != null && !"".equals(this.c)) {
                list.add(new BasicNameValuePair("u-id-map", this.c));
            }
            list.add(new BasicNameValuePair("u-id-key", Long.toString(this.d)));
            if (this.e != null && !"".equals(this.e)) {
                list.add(new BasicNameValuePair("u-key-ver", this.e));
            }
            if (this.f != null && !"".equals(this.f)) {
                list.add(new BasicNameValuePair("u-appbid", this.f));
            }
            if (this.g != null && !"".equals(this.g)) {
                list.add(new BasicNameValuePair("u-appver", this.g));
            }
            final String string = InternalSDKUtil.getContext().getResources().getConfiguration().locale.toString();
            if (string != null && !"".equals(string)) {
                list.add(new BasicNameValuePair("d-localization", string));
            }
            list.add(new BasicNameValuePair("ts", Long.toString(System.currentTimeMillis())));
            return URLEncodedUtils.format((List)list, "utf-8");
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[Monetization]", "Exception getting request params for ltvp get rules", ex);
            return null;
        }
    }
}
