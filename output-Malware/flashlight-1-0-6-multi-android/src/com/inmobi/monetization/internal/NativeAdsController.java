// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.monetization.internal;

import com.inmobi.monetization.IMNative;
import com.inmobi.androidsdk.bootstrapper.Initializer;
import com.inmobi.monetization.internal.objects.NativeAdsCache;
import com.inmobi.monetization.IMErrorCode;
import com.inmobi.commons.internal.Log;
import com.inmobi.commons.internal.InternalSDKUtil;
import com.inmobi.monetization.internal.abstraction.INativeAdListener;
import com.inmobi.monetization.internal.abstraction.INativeAdController;

public class NativeAdsController implements INativeAdController
{
    private static NativeAdsController d;
    private ServiceProvider a;
    private INativeAdListener b;
    private boolean c;
    
    static {
        NativeAdsController.d = null;
    }
    
    private NativeAdsController() {
        this.c = false;
        this.a = ServiceProvider.getInstance();
    }
    
    private void a(final String s, final NativeAdRequest nativeAdRequest) {
        if (InternalSDKUtil.checkNetworkAvailibility(InternalSDKUtil.getContext())) {
            Log.internal("[InMobi]-[Monetization]", "Fetching Native Ads");
            this.a.getNativeAd(nativeAdRequest, this);
            return;
        }
        this.onAdRequestFailed(nativeAdRequest, IMErrorCode.NETWORK_ERROR);
    }
    
    public static NativeAdsController getInstance() {
        if (NativeAdsController.d == null) {
            NativeAdsController.d = new NativeAdsController();
        }
        return NativeAdsController.d;
    }
    
    public void getAd(final String s, final NativeAdRequest nativeAdRequest, final INativeAdListener b) {
        this.c = false;
        this.b = b;
        final IMNative cachedAd = NativeAdsCache.getInstance().getCachedAd(s);
        final int numCachedAds = NativeAdsCache.getInstance().getNumCachedAds(s);
        final int getmMinLimit = Initializer.getConfigParams().getNativeSdkConfigParams().getmMinLimit();
        if (cachedAd == null) {
            this.a(s, nativeAdRequest);
        }
        else if (numCachedAds < getmMinLimit) {
            this.c = true;
            this.a(s, nativeAdRequest);
            if (this.b != null) {
                this.b.onNativeRequestSucceeded(cachedAd);
            }
        }
        else {
            this.c = true;
            if (this.b != null) {
                this.b.onNativeRequestSucceeded(cachedAd);
            }
        }
    }
    
    @Override
    public void onAdRequestFailed(final NativeAdRequest nativeAdRequest, final IMErrorCode imErrorCode) {
        Log.debug("[InMobi]-[Monetization]", "Native ad failed: ");
        if (!this.c && this.b != null) {
            this.c = true;
            this.b.onNativeRequestFailed(imErrorCode);
        }
    }
    
    @Override
    public void onAdRequestSucceded(final NativeAdRequest nativeAdRequest, final NativeAdResponse nativeAdResponse) {
        Log.debug("[InMobi]-[Monetization]", "Native ad received: ");
        NativeAdsCache.getInstance().saveNativeAds(nativeAdRequest.getAppId(), nativeAdResponse.a());
        if (!this.c && this.b != null) {
            this.c = true;
            final IMNative cachedAd = NativeAdsCache.getInstance().getCachedAd(nativeAdRequest.getAppId());
            if (cachedAd == null) {
                this.b.onNativeRequestFailed(IMErrorCode.INTERNAL_ERROR);
                return;
            }
            this.b.onNativeRequestSucceeded(cachedAd);
        }
    }
}
