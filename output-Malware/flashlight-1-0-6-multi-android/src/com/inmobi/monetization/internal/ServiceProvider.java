// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.monetization.internal;

import com.inmobi.monetization.internal.abstraction.INativeAdController;
import com.inmobi.monetization.internal.abstraction.IGetLtvpRuleRequestListener;
import java.util.concurrent.Executors;
import java.util.concurrent.ExecutorService;
import com.inmobi.monetization.internal.abstraction.IServiceProvider;

public class ServiceProvider implements IServiceProvider
{
    private static ServiceProvider a;
    private ExecutorService b;
    
    private ServiceProvider() {
        this.b = Executors.newFixedThreadPool(15);
    }
    
    public static ServiceProvider getInstance() {
        Label_0028: {
            if (ServiceProvider.a != null) {
                break Label_0028;
            }
            synchronized (ServiceProvider.class) {
                if (ServiceProvider.a == null) {
                    ServiceProvider.a = new ServiceProvider();
                }
                return ServiceProvider.a;
            }
        }
    }
    
    @Override
    public void getLtvpRule(final GetLtvpRulesRequest getLtvpRulesRequest, final IGetLtvpRuleRequestListener getLtvpRuleRequestListener) {
        this.b.execute(new GetLtvpRuleRequestTask(getLtvpRulesRequest, getLtvpRuleRequestListener));
    }
    
    @Override
    public void getNativeAd(final NativeAdRequest nativeAdRequest, final INativeAdController nativeAdController) {
        this.b.execute(new NativeAdRequestTask(nativeAdRequest, nativeAdController));
    }
}
