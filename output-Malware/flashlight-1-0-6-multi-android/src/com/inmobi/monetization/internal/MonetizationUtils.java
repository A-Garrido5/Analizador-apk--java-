// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.monetization.internal;

import com.inmobi.commons.data.UserInfo;
import com.inmobi.androidsdk.AdRequest;
import com.inmobi.monetization.IMErrorCode;
import com.inmobi.androidsdk.AdRequest$ErrorCode;
import com.inmobi.commons.internal.ActivityRecognitionManager;
import com.inmobi.monetization.internal.objects.LtvpRuleCache;
import com.inmobi.commons.internal.InternalSDKUtil;
import java.util.HashMap;
import java.util.Map;
import android.view.View;

public class MonetizationUtils
{
    public static Map buildLtvpRequestMap(final View view) {
        final HashMap<String, String> hashMap = new HashMap<String, String>();
        final String ltvpRuleId = LtvpRuleCache.getInstance(InternalSDKUtil.getContext()).getLtvpRuleId();
        if (ltvpRuleId != null) {
            hashMap.put("rule-id", ltvpRuleId);
        }
        if (view != null) {
            hashMap.put("placement-size", view.getWidth() + "x" + view.getHeight());
        }
        final int detectedActivity = ActivityRecognitionManager.getDetectedActivity();
        if (detectedActivity != -1) {
            hashMap.put("u-activity-type", new StringBuilder().append(detectedActivity).toString());
        }
        return hashMap;
    }
    
    public static IMErrorCode getErrorCode(final AdRequest$ErrorCode adRequest$ErrorCode) {
        switch (MonetizationUtils$a.a[adRequest$ErrorCode.ordinal()]) {
            default: {
                return IMErrorCode.INTERNAL_ERROR;
            }
            case 1: {
                return IMErrorCode.INTERNAL_ERROR;
            }
            case 2: {
                return IMErrorCode.INTERNAL_ERROR;
            }
            case 3: {
                return IMErrorCode.INTERNAL_ERROR;
            }
            case 4: {
                return IMErrorCode.INTERNAL_ERROR;
            }
            case 5: {
                return IMErrorCode.INTERNAL_ERROR;
            }
            case 6: {
                return IMErrorCode.INVALID_REQUEST;
            }
            case 7: {
                return IMErrorCode.INVALID_REQUEST;
            }
            case 8: {
                return IMErrorCode.NETWORK_ERROR;
            }
            case 9: {
                return IMErrorCode.NO_FILL;
            }
        }
    }
    
    public static void updateIMAdRequest(final AdRequest adRequest) {
        final UserInfo instance = UserInfo.getInstance();
        final Integer age = instance.getAge();
        if (age != null) {
            adRequest.setAge(age);
        }
        adRequest.setAreaCode(instance.getAreaCode());
        adRequest.setCurrentLocation(instance.getCurrentLocation());
        adRequest.setDateOfBirth(instance.getDateOfBirth());
        adRequest.setEducation(instance.getEducation());
        adRequest.setEthnicity(instance.getEthnicity());
        adRequest.setGender(instance.getGender());
        final Integer income = instance.getIncome();
        if (income != null) {
            adRequest.setIncome(income);
        }
        adRequest.setInterests(instance.getInterests());
        adRequest.setLocationInquiryAllowed(instance.isLocationInquiryAllowed());
        adRequest.setLocationOfCityStateAndCountry(instance.getLocationWithCityStateCountry());
        adRequest.setPostalCode(instance.getPostalCode());
        adRequest.setSearchString(instance.getSearchString());
        adRequest.setHasChildren(instance.getHasChildren());
        adRequest.setLanguage(instance.getLanguage());
        adRequest.setMaritalStatus(instance.getMaritalStatus());
        adRequest.setSexualOrientation(instance.getSexualOrientation());
    }
}
