// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.monetization.internal;

import com.inmobi.monetization.internal.objects.LtvpRuleCache;
import com.inmobi.commons.internal.InternalSDKUtil;
import com.inmobi.commons.internal.Log;
import com.inmobi.monetization.internal.abstraction.IGetLtvpRuleRequestListener;

public class LtvpRuleProcessor implements IGetLtvpRuleRequestListener
{
    private ServiceProvider a;
    
    private LtvpRuleProcessor() {
        this.a = ServiceProvider.getInstance();
    }
    
    public static LtvpRuleProcessor getInstance() {
        return new LtvpRuleProcessor();
    }
    
    public void dispatchLtvpRule() {
        Log.internal("[InMobi]-[Monetization]", "Fetching LTVP Rule");
        this.a.getLtvpRule(new GetLtvpRulesRequest(), this);
    }
    
    public LtvpRuleProcessor$ActionsRule getLtvpRuleConfig(final long n) {
        LtvpRuleProcessor$ActionsRule.MEDIATION.getValue();
        final LtvpRuleCache instance = LtvpRuleCache.getInstance(InternalSDKUtil.getContext());
        if (instance.getHardExpiryForLtvpRule() <= System.currentTimeMillis() || instance.getHardExpiryForLtvpRule() == 0L) {
            Log.internal("[InMobi]-[Monetization]", "Hard Expiry or 1st rule fetch. Default mediation. Fetching Rule");
            this.dispatchLtvpRule();
            instance.clearLtvpRuleCache();
            return LtvpRuleProcessor$ActionsRule.MEDIATION;
        }
        int n2;
        if (instance.getSoftExpiryForLtvpRule() <= System.currentTimeMillis()) {
            Log.internal("[InMobi]-[Monetization]", "Soft Expiry. Default mediation. Fetching Rule");
            this.dispatchLtvpRule();
            n2 = instance.getLtvpRule(n);
        }
        else {
            Log.internal("[InMobi]-[Monetization]", "Valid rule");
            n2 = instance.getLtvpRule(n);
        }
        return LtvpRuleProcessor$ActionsRule.a(n2);
    }
    
    @Override
    public void onLtvpGetRuleFailed(final GetLtvpRulesRequest getLtvpRulesRequest, final LtvpErrorCode ltvpErrorCode) {
        Log.internal("[InMobi]-[Monetization]", "Ltvp Rule error" + ltvpErrorCode.toString());
    }
    
    @Override
    public void onLtvpGetRuleSucceeded(final GetLtvpRulesRequest getLtvpRulesRequest, final GetLtvpRulesResponse ltvpRuleConfig) {
        Log.internal("[InMobi]-[Monetization]", "Ltvp Rule received" + ltvpRuleConfig.getRules().toString());
        LtvpRuleCache.getInstance(InternalSDKUtil.getContext()).setLtvpRuleConfig(ltvpRuleConfig);
    }
}
