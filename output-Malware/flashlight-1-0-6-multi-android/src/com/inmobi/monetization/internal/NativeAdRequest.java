// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.monetization.internal;

import java.util.Iterator;
import java.util.Map;
import com.inmobi.androidsdk.bootstrapper.Initializer;
import com.inmobi.commons.internal.Log;
import com.inmobi.commons.data.AppInfo;
import java.util.HashMap;
import com.inmobi.commons.network.RequestBuilder;

public class NativeAdRequest extends RequestBuilder
{
    private String a;
    private String b;
    private String c;
    private String d;
    private HashMap e;
    
    public NativeAdRequest(final String s) {
        this.b = null;
        this.c = null;
        this.d = null;
        this.e = null;
        try {
            AppInfo.setAppId(s);
            this.a = s;
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[Monetization]", "Failed to init Native Ad request", ex);
        }
    }
    
    @Override
    public String buildPostBody() {
        return super.buildPostBody();
    }
    
    @Override
    public String getAdFormatPostBody() {
        final StringBuilder sb = new StringBuilder();
        sb.append("format=native");
        sb.append("&mk-ads=" + Initializer.getConfigParams().getNativeSdkConfigParams().getmFetchLimit());
        return sb.toString();
    }
    
    public String getAppId() {
        return this.a;
    }
    
    @Override
    protected String getPublisherPostBody() {
        final StringBuilder sb = new StringBuilder();
        if (this.e != null) {
            for (final Map.Entry<String, V> entry : this.e.entrySet()) {
                sb.append("&").append(RequestBuilder.getURLEncoded(entry.getKey().toString())).append("=").append(RequestBuilder.getURLEncoded(((String)entry.getValue()).toString()));
            }
        }
        if (this.c != null && this.d != null) {
            sb.append("&").append(RequestBuilder.getURLEncoded(this.c)).append("=").append(RequestBuilder.getURLEncoded(this.d));
        }
        if (this.b != null) {
            sb.append("&p-keywords=");
            sb.append(RequestBuilder.getURLEncoded(this.b));
        }
        String s = sb.toString();
        try {
            if (s.charAt(0) == '&') {
                s = s.substring(1);
            }
            return s;
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-4.4.3", "Couldn't build post string in Request Builder", ex);
            return s;
        }
    }
    
    @Override
    public String getUidMapPostBody() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: new             Ljava/util/HashMap;
        //     3: dup            
        //     4: invokespecial   java/util/HashMap.<init>:()V
        //     7: astore_1       
        //     8: invokestatic    com/inmobi/commons/analytics/bootstrapper/AnalyticsInitializer.getConfigParams:()Lcom/inmobi/commons/analytics/bootstrapper/AnalyticsConfigParams;
        //    11: invokevirtual   com/inmobi/commons/analytics/bootstrapper/AnalyticsConfigParams.getLTVId:()Ljava/lang/Long;
        //    14: astore          16
        //    16: aload           16
        //    18: astore_3       
        //    19: aload_3        
        //    20: ifnull          46
        //    23: aload_1        
        //    24: ldc             "LTVID"
        //    26: new             Ljava/lang/StringBuilder;
        //    29: dup            
        //    30: invokespecial   java/lang/StringBuilder.<init>:()V
        //    33: aload_3        
        //    34: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //    37: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    40: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        //    45: pop            
        //    46: new             Ljava/util/Random;
        //    49: dup            
        //    50: invokespecial   java/util/Random.<init>:()V
        //    53: invokevirtual   java/util/Random.nextInt:()I
        //    56: invokestatic    java/lang/Integer.toString:(I)Ljava/lang/String;
        //    59: astore          4
        //    61: invokestatic    com/inmobi/androidsdk/bootstrapper/Initializer.getConfigParams:()Lcom/inmobi/androidsdk/bootstrapper/ConfigParams;
        //    64: invokevirtual   com/inmobi/androidsdk/bootstrapper/ConfigParams.getUID:()Lcom/inmobi/commons/uid/UID;
        //    67: invokestatic    com/inmobi/commons/data/UserInfo.getInstance:()Lcom/inmobi/commons/data/UserInfo;
        //    70: invokevirtual   com/inmobi/commons/data/UserInfo.getDeviceIDMask:()I
        //    73: aload           4
        //    75: aload_1        
        //    76: invokevirtual   com/inmobi/commons/uid/UID.getUidMapWitoutXOR:(ILjava/lang/String;Ljava/util/Map;)Ljava/lang/String;
        //    79: astore          5
        //    81: new             Ljava/lang/StringBuilder;
        //    84: dup            
        //    85: invokespecial   java/lang/StringBuilder.<init>:()V
        //    88: astore          6
        //    90: aload           6
        //    92: ldc             "u-id-adt="
        //    94: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    97: pop            
        //    98: invokestatic    com/inmobi/commons/internal/InternalSDKUtil.isLimitAdTrackingEnabled:()Z
        //   101: ifeq            184
        //   104: aload           6
        //   106: iconst_1       
        //   107: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   110: pop            
        //   111: aconst_null    
        //   112: astore          9
        //   114: aload           5
        //   116: ifnull          168
        //   119: aload           6
        //   121: ldc             "&u-id-map="
        //   123: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   126: pop            
        //   127: aload           6
        //   129: aload           5
        //   131: invokestatic    com/inmobi/monetization/internal/NativeAdRequest.getURLEncoded:(Ljava/lang/String;)Ljava/lang/String;
        //   134: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   137: pop            
        //   138: aload           6
        //   140: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   143: astore          9
        //   145: aload           9
        //   147: iconst_0       
        //   148: invokevirtual   java/lang/String.charAt:(I)C
        //   151: bipush          38
        //   153: if_icmpne       168
        //   156: aload           9
        //   158: iconst_1       
        //   159: invokevirtual   java/lang/String.substring:(I)Ljava/lang/String;
        //   162: astore          13
        //   164: aload           13
        //   166: astore          9
        //   168: aload           9
        //   170: areturn        
        //   171: astore_2       
        //   172: ldc             "[InMobi]-4.4.3"
        //   174: ldc             "LTVID not available yet in configs"
        //   176: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;)V
        //   179: aconst_null    
        //   180: astore_3       
        //   181: goto            19
        //   184: aload           6
        //   186: iconst_0       
        //   187: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   190: pop            
        //   191: goto            111
        //   194: astore          12
        //   196: ldc             "[InMobi]-4.4.3"
        //   198: ldc             "Couldn't build post string in Request Builder"
        //   200: aload           12
        //   202: invokestatic    com/inmobi/commons/internal/Log.internal:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
        //   205: aload           9
        //   207: areturn        
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  8      16     171    184    Ljava/lang/Exception;
        //  145    164    194    208    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0168:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public void setKeywords(final String b) {
        if (b != null && !"".equals(b)) {
            this.b = b;
        }
    }
    
    public void setRefTagParam(final String c, final String d) {
        if (c != null && !"".equals(c) && d != null && !"".equals(d)) {
            this.c = c;
            this.d = d;
        }
    }
    
    public void setRequestParams(final Map map) {
        if (map != null && !map.isEmpty()) {
            if (this.e == null) {
                this.e = new HashMap();
            }
            for (final String s : map.keySet()) {
                this.e.put(s, map.get(s));
            }
        }
    }
}
