// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.analytics;

import android.os.Bundle;
import android.content.Intent;
import com.inmobi.commons.InMobi;
import com.inmobi.commons.analytics.androidsdk.IMAdTracker;
import com.inmobi.commons.internal.Log;
import com.inmobi.commons.analytics.events.AnalyticsEventsWrapper;
import com.inmobi.commons.internal.InternalSDKUtil;
import java.util.Map;

public class InMobiAnalytics
{
    public static void beginSection(final String s) {
        beginSection(s, null);
    }
    
    public static void beginSection(final String s, final Map map) {
        if (!InternalSDKUtil.isInitializedSuccessfully()) {
            return;
        }
        try {
            AnalyticsEventsWrapper.getInstance().beginSection(s.hashCode(), s, map);
            AnalyticsEventsWrapper.setIsEventsUser();
        }
        catch (Exception ex) {
            Log.debug("[InMobi]-[Analytics]-4.4.3", "Please pass a valid Section Name");
        }
    }
    
    public static void endSection(final String s) {
        endSection(s, null);
    }
    
    public static void endSection(final String s, final Map map) {
        if (!InternalSDKUtil.isInitializedSuccessfully()) {
            return;
        }
        try {
            AnalyticsEventsWrapper.getInstance().endSection(s.hashCode(), s, map);
            AnalyticsEventsWrapper.setIsEventsUser();
        }
        catch (Exception ex) {
            Log.debug("[InMobi]-[Analytics]-4.4.3", "Please pass a valid Section Name");
        }
    }
    
    public static void endSessionManually() {
        endSessionManually(null);
    }
    
    public static void endSessionManually(final Map map) {
        if (!InternalSDKUtil.isInitializedSuccessfully()) {
            return;
        }
        AnalyticsEventsWrapper.getInstance().endSession(map);
        AnalyticsEventsWrapper.setIsEventsUser();
    }
    
    public static void reportCustomGoal(final String s) {
        if (!InternalSDKUtil.isInitializedSuccessfully()) {
            return;
        }
        try {
            IMAdTracker.getInstance().reportCustomGoal(s);
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[Analytics]-4.4.3", "Unable to report custom goal due to unexpected exception.", ex);
        }
    }
    
    public static void startSessionManually() {
        startSessionManually(null);
    }
    
    public static void startSessionManually(final Map map) {
        if (!InternalSDKUtil.isInitializedSuccessfully()) {
            return;
        }
        AnalyticsEventsWrapper.getInstance().startSession(InMobi.getAppId(), map);
        AnalyticsEventsWrapper.setIsEventsUser();
    }
    
    public static void tagEvent(final String s) {
        tagEvent(s, null);
    }
    
    public static void tagEvent(final String s, final Map map) {
        if (!InternalSDKUtil.isInitializedSuccessfully()) {
            return;
        }
        try {
            AnalyticsEventsWrapper.getInstance().tagEvent(s, map);
            AnalyticsEventsWrapper.setIsEventsUser();
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[Analytics]-4.4.3", "Unable to tag event due to unexpected exception.", ex);
        }
    }
    
    public static void tagTransactionManually(final Intent intent, final Bundle bundle) {
        if (!InternalSDKUtil.isInitializedSuccessfully()) {
            return;
        }
        try {
            AnalyticsEventsWrapper.getInstance().tagTransactionManually(intent, bundle);
            AnalyticsEventsWrapper.setIsEventsUser();
        }
        catch (Exception ex) {
            Log.internal("[InMobi]-[Analytics]-4.4.3", "Unable to tag transaction due to unexpected exception.", ex);
        }
    }
}
