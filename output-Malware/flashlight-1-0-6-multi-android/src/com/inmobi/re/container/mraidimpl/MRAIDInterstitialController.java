// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.re.container.mraidimpl;

import android.view.ViewGroup;
import com.inmobi.re.container.IMWebView$ViewState;
import android.view.MotionEvent;
import android.view.View$OnTouchListener;
import com.inmobi.commons.internal.Log;
import android.view.KeyEvent;
import android.view.View$OnKeyListener;
import com.inmobi.re.container.CustomView;
import com.inmobi.re.container.CustomView$SwitchIconType;
import android.view.ViewGroup$LayoutParams;
import android.view.View;
import android.widget.RelativeLayout$LayoutParams;
import com.inmobi.commons.internal.WrapperFunctions;
import android.widget.RelativeLayout;
import android.widget.FrameLayout;
import com.inmobi.re.configs.Initializer;
import android.view.animation.Animation;
import android.view.animation.Animation$AnimationListener;
import android.view.animation.Interpolator;
import android.view.animation.AccelerateInterpolator;
import android.view.animation.AlphaAnimation;
import android.view.Display;
import android.os.Message;
import android.app.Activity;
import com.inmobi.re.container.IMWebView;
import java.util.concurrent.atomic.AtomicBoolean;

public class MRAIDInterstitialController
{
    protected static final int INT_BACKGROUND_ID = 224;
    public static final int INT_CLOSE_BUTTON = 225;
    public static AtomicBoolean isInterstitialDisplayed;
    private IMWebView a;
    private Activity b;
    private long c;
    private int d;
    public boolean lockOrientationValueForInterstitial;
    public Message mMsgOnInterstitialClosed;
    public Message mMsgOnInterstitialShown;
    public Display mSensorDisplay;
    public String orientationValueForInterstitial;
    
    static {
        MRAIDInterstitialController.isInterstitialDisplayed = new AtomicBoolean();
    }
    
    public MRAIDInterstitialController(final IMWebView a, final Activity activity) {
        this.lockOrientationValueForInterstitial = true;
        this.c = 0L;
        this.a = a;
    }
    
    public void animateAndDismissWebview() {
        final AlphaAnimation alphaAnimation = new AlphaAnimation(1.0f, 0.0f);
        ((Animation)alphaAnimation).setInterpolator((Interpolator)new AccelerateInterpolator());
        ((Animation)alphaAnimation).setStartOffset(0L);
        ((Animation)alphaAnimation).setDuration(this.c);
        ((Animation)alphaAnimation).setAnimationListener((Animation$AnimationListener)new Animation$AnimationListener() {
            public void onAnimationEnd(final Animation animation) {
                MRAIDInterstitialController.this.dismissWebview();
            }
            
            public void onAnimationRepeat(final Animation animation) {
            }
            
            public void onAnimationStart(final Animation animation) {
            }
        });
        this.a.startAnimation((Animation)alphaAnimation);
    }
    
    public void changeContentAreaForInterstitials(final long c) {
        try {
            this.c = c;
            final int webviewBgColor = Initializer.getConfigParams().getWebviewBgColor();
            this.d = this.b.getRequestedOrientation();
            this.handleOrientationForInterstitial();
            final FrameLayout frameLayout = (FrameLayout)this.b.findViewById(16908290);
            final RelativeLayout relativeLayout = new RelativeLayout(this.a.getContext());
            final RelativeLayout$LayoutParams relativeLayout$LayoutParams = new RelativeLayout$LayoutParams(WrapperFunctions.getParamFillParent(), WrapperFunctions.getParamFillParent());
            relativeLayout$LayoutParams.addRule(10);
            this.a.setFocusable(true);
            this.a.setFocusableInTouchMode(true);
            relativeLayout.addView((View)this.a, (ViewGroup$LayoutParams)relativeLayout$LayoutParams);
            final RelativeLayout$LayoutParams relativeLayout$LayoutParams2 = new RelativeLayout$LayoutParams((int)(50.0f * this.a.getDensity()), (int)(50.0f * this.a.getDensity()));
            CustomView customView;
            if (!this.a.getCustomClose()) {
                customView = new CustomView(this.a.getContext(), this.a.getDensity(), CustomView$SwitchIconType.CLOSE_BUTTON);
            }
            else {
                customView = new CustomView(this.a.getContext(), this.a.getDensity(), CustomView$SwitchIconType.CLOSE_TRANSPARENT);
            }
            relativeLayout$LayoutParams2.addRule(11);
            customView.setId(225);
            relativeLayout.addView((View)customView, (ViewGroup$LayoutParams)relativeLayout$LayoutParams2);
            final RelativeLayout$LayoutParams relativeLayout$LayoutParams3 = new RelativeLayout$LayoutParams(WrapperFunctions.getParamFillParent(), WrapperFunctions.getParamFillParent());
            relativeLayout.setId(224);
            relativeLayout.setBackgroundColor(webviewBgColor);
            frameLayout.addView((View)relativeLayout, (ViewGroup$LayoutParams)relativeLayout$LayoutParams3);
            this.a.setBackgroundColor(webviewBgColor);
            this.a.requestFocus();
            this.a.setOnKeyListener((View$OnKeyListener)new View$OnKeyListener() {
                public boolean onKey(final View view, final int n, final KeyEvent keyEvent) {
                    final int keyCode = keyEvent.getKeyCode();
                    boolean b = false;
                    if (4 == keyCode) {
                        final int action = keyEvent.getAction();
                        b = false;
                        if (action == 0) {
                            Log.debug("[InMobi]-[RE]-4.4.3", "Back Button pressed while Interstitial ad is in active state ");
                            MRAIDInterstitialController.this.handleInterstitialClose();
                            final long n2 = lcmp(MRAIDInterstitialController.this.c, 0L);
                            b = false;
                            if (n2 > 0) {
                                b = true;
                            }
                        }
                    }
                    return b;
                }
            });
            this.a.setOnTouchListener((View$OnTouchListener)new View$OnTouchListener() {
                public boolean onTouch(final View view, final MotionEvent motionEvent) {
                    switch (motionEvent.getAction()) {
                        case 0: {
                            view.requestFocus();
                            break;
                        }
                        case 1: {
                            view.requestFocus();
                            break;
                        }
                    }
                    return false;
                }
            });
            MRAIDInterstitialController.isInterstitialDisplayed.set(true);
            if (this.mMsgOnInterstitialShown != null) {
                this.mMsgOnInterstitialShown.sendToTarget();
                this.mMsgOnInterstitialShown = null;
            }
        }
        catch (Exception ex) {
            Log.debug("[InMobi]-[RE]-4.4.3", "Failed showing interstitial ad", ex);
        }
    }
    
    public void dismissWebview() {
        final FrameLayout frameLayout = (FrameLayout)this.b.findViewById(16908290);
        this.b.runOnUiThread((Runnable)new Runnable() {
            final /* synthetic */ RelativeLayout a = (RelativeLayout)frameLayout.findViewById(224);
            
            @Override
            public void run() {
                ((ViewGroup)this.a).removeView((View)MRAIDInterstitialController.this.a);
                frameLayout.removeView((View)this.a);
            }
        });
    }
    
    public void handleInterstitialClose() {
        IMWebView.userInitiatedClose = true;
        MRAIDInterstitialController.isInterstitialDisplayed.set(false);
        this.a.close();
    }
    
    public void handleOrientationForInterstitial() {
        this.a.lockExpandOrientation(this.b, this.lockOrientationValueForInterstitial, this.orientationValueForInterstitial);
    }
    
    public void resetContentsForInterstitials() {
        while (true) {
            while (true) {
                Label_0127: {
                    try {
                        if (this.a.getParent() == null) {
                            return;
                        }
                        this.b.setRequestedOrientation(this.d);
                        this.a.mAudioVideoController.releaseAllPlayers();
                        if (((FrameLayout)this.b.findViewById(16908290)).findViewById(224) != null) {
                            if (this.c <= 0L) {
                                break Label_0127;
                            }
                            this.animateAndDismissWebview();
                        }
                        if (this.mMsgOnInterstitialClosed != null) {
                            this.mMsgOnInterstitialClosed.sendToTarget();
                            this.mMsgOnInterstitialClosed = null;
                        }
                        this.a.injectJavaScript("window.mraidview.unRegisterOrientationListener()");
                        this.a.setState(IMWebView$ViewState.HIDDEN);
                        this.b.finish();
                        return;
                    }
                    catch (Exception ex) {
                        Log.debug("[InMobi]-[RE]-4.4.3", "Failed to close the interstitial ad", ex);
                        return;
                    }
                }
                this.dismissWebview();
                continue;
            }
        }
    }
    
    public void setActivity(final Activity b) {
        if (b != null) {
            this.b = b;
        }
    }
}
