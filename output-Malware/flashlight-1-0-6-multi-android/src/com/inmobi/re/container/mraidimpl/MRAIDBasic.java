// 
// Decompiled by Procyon v0.5.30
// 

package com.inmobi.re.container.mraidimpl;

import android.net.Uri;
import com.inmobi.commons.internal.InternalSDKUtil;
import android.content.ActivityNotFoundException;
import com.inmobi.re.container.IMWebView$ViewState;
import com.inmobi.commons.internal.Log;
import android.content.Context;
import android.content.Intent;
import com.inmobi.androidsdk.IMBrowserActivity;
import android.webkit.URLUtil;
import android.app.Activity;
import com.inmobi.re.container.IMWebView;

public class MRAIDBasic
{
    private IMWebView a;
    private Activity b;
    
    public MRAIDBasic(final IMWebView a, final Activity b) {
        this.a = a;
        this.b = b;
    }
    
    public void getCurrentPosition() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: fconst_0       
        //     1: fstore_1       
        //     2: ldc             "[InMobi]-[RE]-4.4.3"
        //     4: ldc             "IMWebView-> getCurrentPosition"
        //     6: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;)V
        //     9: new             Lorg/json/JSONObject;
        //    12: dup            
        //    13: invokespecial   org/json/JSONObject.<init>:()V
        //    16: astore_2       
        //    17: aload_0        
        //    18: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //    21: invokevirtual   com/inmobi/re/container/IMWebView.isViewable:()Z
        //    24: ifeq            380
        //    27: iconst_2       
        //    28: newarray        I
        //    30: astore          33
        //    32: aload_0        
        //    33: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //    36: aload           33
        //    38: invokevirtual   com/inmobi/re/container/IMWebView.getLocationOnScreen:([I)V
        //    41: aload           33
        //    43: iconst_0       
        //    44: iaload         
        //    45: istore          15
        //    47: aload           33
        //    49: iconst_1       
        //    50: iaload         
        //    51: istore          14
        //    53: aload_0        
        //    54: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //    57: invokevirtual   com/inmobi/re/container/IMWebView.getWidth:()I
        //    60: i2f            
        //    61: fstore          37
        //    63: aload_0        
        //    64: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //    67: invokevirtual   com/inmobi/re/container/IMWebView.getDensity:()F
        //    70: fstore_1       
        //    71: fload           37
        //    73: fload_1        
        //    74: fdiv           
        //    75: f2i            
        //    76: fstore_1       
        //    77: aload_0        
        //    78: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //    81: invokevirtual   com/inmobi/re/container/IMWebView.getHeight:()I
        //    84: i2f            
        //    85: fstore          38
        //    87: aload_0        
        //    88: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //    91: invokevirtual   com/inmobi/re/container/IMWebView.getDensity:()F
        //    94: fstore          39
        //    96: fload           38
        //    98: fload           39
        //   100: fdiv           
        //   101: f2i            
        //   102: istore          40
        //   104: iload           15
        //   106: istore          27
        //   108: iload           14
        //   110: istore          26
        //   112: fload_1        
        //   113: fstore          25
        //   115: iload           40
        //   117: istore          24
        //   119: aload_2        
        //   120: ldc             "x"
        //   122: iload           27
        //   124: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   127: pop            
        //   128: aload_2        
        //   129: ldc             "y"
        //   131: iload           26
        //   133: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   136: pop            
        //   137: aload_2        
        //   138: ldc             "width"
        //   140: fload           25
        //   142: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   145: pop            
        //   146: aload_2        
        //   147: ldc             "height"
        //   149: iload           24
        //   151: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   154: pop            
        //   155: aload_0        
        //   156: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //   159: getfield        com/inmobi/re/container/IMWebView.mutexcPos:Ljava/lang/Object;
        //   162: astore          18
        //   164: aload           18
        //   166: monitorenter   
        //   167: aload_0        
        //   168: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //   171: aload_2        
        //   172: putfield        com/inmobi/re/container/IMWebView.curPosition:Lorg/json/JSONObject;
        //   175: aload_0        
        //   176: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //   179: getfield        com/inmobi/re/container/IMWebView.acqMutexcPos:Ljava/util/concurrent/atomic/AtomicBoolean;
        //   182: iconst_0       
        //   183: invokevirtual   java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
        //   186: aload_0        
        //   187: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //   190: getfield        com/inmobi/re/container/IMWebView.mutexcPos:Ljava/lang/Object;
        //   193: invokevirtual   java/lang/Object.notifyAll:()V
        //   196: aload           18
        //   198: monitorexit    
        //   199: return         
        //   200: astore          13
        //   202: iconst_0       
        //   203: istore          14
        //   205: iconst_0       
        //   206: istore          15
        //   208: ldc             "[InMobi]-[RE]-4.4.3"
        //   210: ldc             "Failed to get current position"
        //   212: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;)V
        //   215: aload_2        
        //   216: ldc             "x"
        //   218: iload           15
        //   220: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   223: pop            
        //   224: aload_2        
        //   225: ldc             "y"
        //   227: iload           14
        //   229: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   232: pop            
        //   233: aload_2        
        //   234: ldc             "width"
        //   236: fload_1        
        //   237: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   240: pop            
        //   241: aload_2        
        //   242: ldc             "height"
        //   244: iconst_0       
        //   245: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   248: pop            
        //   249: goto            155
        //   252: astore          17
        //   254: goto            155
        //   257: astore_3       
        //   258: iconst_0       
        //   259: istore          4
        //   261: iconst_0       
        //   262: istore          5
        //   264: fconst_0       
        //   265: fstore          6
        //   267: aload_3        
        //   268: astore          7
        //   270: aload_2        
        //   271: ldc             "x"
        //   273: iload           5
        //   275: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   278: pop            
        //   279: aload_2        
        //   280: ldc             "y"
        //   282: iload           4
        //   284: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   287: pop            
        //   288: aload_2        
        //   289: ldc             "width"
        //   291: fload           6
        //   293: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   296: pop            
        //   297: aload_2        
        //   298: ldc             "height"
        //   300: iconst_0       
        //   301: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   304: pop            
        //   305: aload           7
        //   307: athrow         
        //   308: astore          19
        //   310: aload           18
        //   312: monitorexit    
        //   313: aload           19
        //   315: athrow         
        //   316: astore          8
        //   318: goto            305
        //   321: astore          35
        //   323: iload           15
        //   325: istore          5
        //   327: aload           35
        //   329: astore          7
        //   331: fconst_0       
        //   332: fstore          6
        //   334: iconst_0       
        //   335: istore          4
        //   337: goto            270
        //   340: astore          16
        //   342: iload           15
        //   344: istore          5
        //   346: iload           14
        //   348: istore          4
        //   350: fload_1        
        //   351: fstore          6
        //   353: aload           16
        //   355: astore          7
        //   357: goto            270
        //   360: astore          34
        //   362: fconst_0       
        //   363: fstore_1       
        //   364: iconst_0       
        //   365: istore          14
        //   367: goto            208
        //   370: astore          36
        //   372: goto            208
        //   375: astore          28
        //   377: goto            155
        //   380: iconst_0       
        //   381: istore          24
        //   383: fconst_0       
        //   384: fstore          25
        //   386: iconst_0       
        //   387: istore          26
        //   389: iconst_0       
        //   390: istore          27
        //   392: goto            119
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                    
        //  -----  -----  -----  -----  ------------------------
        //  17     47     200    208    Ljava/lang/Exception;
        //  17     47     257    270    Any
        //  47     53     360    370    Ljava/lang/Exception;
        //  47     53     321    340    Any
        //  53     96     370    375    Ljava/lang/Exception;
        //  53     96     340    360    Any
        //  119    155    375    380    Lorg/json/JSONException;
        //  167    199    308    316    Any
        //  208    215    340    360    Any
        //  215    249    252    257    Lorg/json/JSONException;
        //  270    305    316    321    Lorg/json/JSONException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 214, Size: 214
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public void getDefaultPosition() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: fconst_0       
        //     1: fstore_1       
        //     2: ldc             "[InMobi]-[RE]-4.4.3"
        //     4: ldc             "IMWebView-> getDefaultPosition"
        //     6: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;)V
        //     9: new             Lorg/json/JSONObject;
        //    12: dup            
        //    13: invokespecial   org/json/JSONObject.<init>:()V
        //    16: astore_2       
        //    17: aload_0        
        //    18: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //    21: invokevirtual   com/inmobi/re/container/IMWebView.isViewable:()Z
        //    24: ifeq            379
        //    27: iconst_2       
        //    28: newarray        I
        //    30: astore          26
        //    32: aload_0        
        //    33: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //    36: invokevirtual   com/inmobi/re/container/IMWebView.getOriginalParent:()Landroid/view/ViewParent;
        //    39: checkcast       Landroid/view/View;
        //    42: aload           26
        //    44: invokevirtual   android/view/View.getLocationOnScreen:([I)V
        //    47: aload           26
        //    49: iconst_0       
        //    50: iaload         
        //    51: istore          5
        //    53: aload           26
        //    55: iconst_1       
        //    56: iaload         
        //    57: istore          4
        //    59: aload_0        
        //    60: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //    63: invokevirtual   com/inmobi/re/container/IMWebView.getOriginalParent:()Landroid/view/ViewParent;
        //    66: checkcast       Landroid/view/View;
        //    69: invokevirtual   android/view/View.getWidth:()I
        //    72: i2f            
        //    73: fstore          27
        //    75: aload_0        
        //    76: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //    79: invokevirtual   com/inmobi/re/container/IMWebView.getDensity:()F
        //    82: fstore_1       
        //    83: fload           27
        //    85: fload_1        
        //    86: fdiv           
        //    87: f2i            
        //    88: fstore_1       
        //    89: aload_0        
        //    90: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //    93: invokevirtual   com/inmobi/re/container/IMWebView.getOriginalParent:()Landroid/view/ViewParent;
        //    96: checkcast       Landroid/view/View;
        //    99: invokevirtual   android/view/View.getHeight:()I
        //   102: i2f            
        //   103: fstore          28
        //   105: aload_0        
        //   106: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //   109: invokevirtual   com/inmobi/re/container/IMWebView.getDensity:()F
        //   112: fstore          29
        //   114: fload           28
        //   116: fload           29
        //   118: fdiv           
        //   119: f2i            
        //   120: istore          30
        //   122: fload_1        
        //   123: fstore          19
        //   125: iload           30
        //   127: istore          20
        //   129: aload_2        
        //   130: ldc             "x"
        //   132: iload           5
        //   134: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   137: pop            
        //   138: aload_2        
        //   139: ldc             "y"
        //   141: iload           4
        //   143: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   146: pop            
        //   147: aload_2        
        //   148: ldc             "width"
        //   150: fload           19
        //   152: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   155: pop            
        //   156: aload_2        
        //   157: ldc             "height"
        //   159: iload           20
        //   161: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   164: pop            
        //   165: aload_0        
        //   166: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //   169: getfield        com/inmobi/re/container/IMWebView.mutexdPos:Ljava/lang/Object;
        //   172: astore          13
        //   174: aload           13
        //   176: monitorenter   
        //   177: aload_0        
        //   178: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //   181: aload_2        
        //   182: putfield        com/inmobi/re/container/IMWebView.defPosition:Lorg/json/JSONObject;
        //   185: aload_0        
        //   186: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //   189: getfield        com/inmobi/re/container/IMWebView.acqMutexdPos:Ljava/util/concurrent/atomic/AtomicBoolean;
        //   192: iconst_0       
        //   193: invokevirtual   java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
        //   196: aload_0        
        //   197: getfield        com/inmobi/re/container/mraidimpl/MRAIDBasic.a:Lcom/inmobi/re/container/IMWebView;
        //   200: getfield        com/inmobi/re/container/IMWebView.mutexdPos:Ljava/lang/Object;
        //   203: invokevirtual   java/lang/Object.notifyAll:()V
        //   206: aload           13
        //   208: monitorexit    
        //   209: return         
        //   210: astore          11
        //   212: iconst_0       
        //   213: istore          4
        //   215: iconst_0       
        //   216: istore          5
        //   218: aload           11
        //   220: invokevirtual   java/lang/Exception.printStackTrace:()V
        //   223: ldc             "[InMobi]-[RE]-4.4.3"
        //   225: new             Ljava/lang/StringBuilder;
        //   228: dup            
        //   229: ldc             "Failed to get default position"
        //   231: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   234: aload           11
        //   236: invokevirtual   java/lang/Exception.getMessage:()Ljava/lang/String;
        //   239: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   242: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   245: invokestatic    com/inmobi/commons/internal/Log.debug:(Ljava/lang/String;Ljava/lang/String;)V
        //   248: aload_2        
        //   249: ldc             "x"
        //   251: iload           5
        //   253: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   256: pop            
        //   257: aload_2        
        //   258: ldc             "y"
        //   260: iload           4
        //   262: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   265: pop            
        //   266: aload_2        
        //   267: ldc             "width"
        //   269: fload_1        
        //   270: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   273: pop            
        //   274: aload_2        
        //   275: ldc             "height"
        //   277: iconst_0       
        //   278: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   281: pop            
        //   282: goto            165
        //   285: astore          12
        //   287: goto            165
        //   290: astore_3       
        //   291: iconst_0       
        //   292: istore          4
        //   294: iconst_0       
        //   295: istore          5
        //   297: aload_2        
        //   298: ldc             "x"
        //   300: iload           5
        //   302: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   305: pop            
        //   306: aload_2        
        //   307: ldc             "y"
        //   309: iload           4
        //   311: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   314: pop            
        //   315: aload_2        
        //   316: ldc             "width"
        //   318: fload_1        
        //   319: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   322: pop            
        //   323: aload_2        
        //   324: ldc             "height"
        //   326: iconst_0       
        //   327: invokevirtual   org/json/JSONObject.put:(Ljava/lang/String;I)Lorg/json/JSONObject;
        //   330: pop            
        //   331: aload_3        
        //   332: athrow         
        //   333: astore          14
        //   335: aload           13
        //   337: monitorexit    
        //   338: aload           14
        //   340: athrow         
        //   341: astore          6
        //   343: goto            331
        //   346: astore_3       
        //   347: fconst_0       
        //   348: fstore_1       
        //   349: iconst_0       
        //   350: istore          4
        //   352: goto            297
        //   355: astore_3       
        //   356: goto            297
        //   359: astore          11
        //   361: fconst_0       
        //   362: fstore_1       
        //   363: iconst_0       
        //   364: istore          4
        //   366: goto            218
        //   369: astore          11
        //   371: goto            218
        //   374: astore          21
        //   376: goto            165
        //   379: fconst_0       
        //   380: fstore          19
        //   382: iconst_0       
        //   383: istore          20
        //   385: iconst_0       
        //   386: istore          4
        //   388: iconst_0       
        //   389: istore          5
        //   391: goto            129
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                    
        //  -----  -----  -----  -----  ------------------------
        //  17     53     210    218    Ljava/lang/Exception;
        //  17     53     290    297    Any
        //  53     59     359    369    Ljava/lang/Exception;
        //  53     59     346    355    Any
        //  59     114    369    374    Ljava/lang/Exception;
        //  59     114    355    359    Any
        //  129    165    374    379    Lorg/json/JSONException;
        //  177    209    333    341    Any
        //  218    248    355    359    Any
        //  248    282    285    290    Lorg/json/JSONException;
        //  297    331    341    346    Lorg/json/JSONException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 209, Size: 209
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public void open(final String s) {
        Label_0234: {
            Intent intent;
            try {
                if (!s.startsWith("http://") && (!s.contains("https") || s.contains("play.google.com") || s.contains("market.android.com") || s.contains("market%3A%2F%2F"))) {
                    break Label_0234;
                }
                if (!URLUtil.isValidUrl(s)) {
                    this.a.raiseError("Invalid url", "open");
                    return;
                }
                intent = new Intent((Context)this.b, (Class)IMBrowserActivity.class);
                Log.debug("[InMobi]-[RE]-4.4.3", "IMWebView-> open:" + s);
                intent.putExtra("extra_url", s);
                intent.putExtra("extra_browser_type", 100);
                if (this.a.getStateVariable() == IMWebView$ViewState.DEFAULT && !this.a.mIsInterstitialAd && !this.a.mWebViewIsBrowserActivity) {
                    intent.putExtra("FIRST_INSTANCE", true);
                }
                IMBrowserActivity.setWebViewListener(this.a.mListener);
                final MRAIDBasic mraidBasic = this;
                final Activity activity = mraidBasic.b;
                final Intent intent2 = intent;
                activity.startActivity(intent2);
                final MRAIDBasic mraidBasic2 = this;
                final IMWebView imWebView = mraidBasic2.a;
                final boolean b = imWebView.mWebViewIsBrowserActivity;
                if (!b) {
                    final MRAIDBasic mraidBasic3 = this;
                    final IMWebView imWebView2 = mraidBasic3.a;
                    imWebView2.fireOnShowAdScreen();
                }
                return;
            }
            catch (ActivityNotFoundException ex) {
                Log.debug("[InMobi]-[RE]-4.4.3", "Failed to perform mraid Open");
                return;
            }
            catch (Exception ex2) {
                this.a.raiseError("Invalid url", "open");
                return;
            }
            try {
                final MRAIDBasic mraidBasic = this;
                final Activity activity = mraidBasic.b;
                final Intent intent2 = intent;
                activity.startActivity(intent2);
                final MRAIDBasic mraidBasic2 = this;
                final IMWebView imWebView = mraidBasic2.a;
                final boolean b = imWebView.mWebViewIsBrowserActivity;
                if (!b) {
                    final MRAIDBasic mraidBasic3 = this;
                    final IMWebView imWebView2 = mraidBasic3.a;
                    imWebView2.fireOnShowAdScreen();
                }
                return;
            }
            catch (Exception ex3) {}
        }
        new Thread(new Runnable() {
            @Override
            public void run() {
                final String finalRedirectedUrl = InternalSDKUtil.getFinalRedirectedUrl(s);
                if (finalRedirectedUrl == null) {
                    return;
                }
                final Intent intent = new Intent();
                intent.setAction("android.intent.action.VIEW");
                intent.setData(Uri.parse(finalRedirectedUrl));
                intent.addFlags(268435456);
                try {
                    MRAIDBasic.this.b.startActivity(intent);
                    if (MRAIDBasic.this.a.mListener != null) {
                        MRAIDBasic.this.a.mListener.onLeaveApplication();
                    }
                }
                catch (Exception ex) {
                    MRAIDBasic.this.a.raiseError("Invalid url", "open");
                }
            }
        }).start();
    }
}
