// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.drive.internal;

import com.google.android.gms.drive.DriveFile$DownloadProgressListener;
import com.google.android.gms.drive.Drive;
import com.google.android.gms.drive.MetadataChangeSet;
import com.google.android.gms.common.api.a$b;
import com.google.android.gms.common.api.a$d;
import com.google.android.gms.common.api.Api$a;
import com.google.android.gms.common.api.PendingResult;
import com.google.android.gms.drive.Contents;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.drive.DriveId;
import com.google.android.gms.drive.DriveFile;

public class o extends r implements DriveFile
{
    public o(final DriveId driveId) {
        super(driveId);
    }
    
    @Override
    public PendingResult commitAndCloseContents(final GoogleApiClient googleApiClient, final Contents contents) {
        if (contents == null) {
            throw new IllegalArgumentException("Contents must be provided.");
        }
        return googleApiClient.b(new o$b() {
            protected void a(final n n) {
                contents.close();
                n.fE().a(new CloseContentsRequest(contents, true), new al(this));
            }
        });
    }
    
    @Override
    public PendingResult commitAndCloseContents(final GoogleApiClient googleApiClient, final Contents contents, final MetadataChangeSet set) {
        if (contents == null) {
            throw new IllegalArgumentException("Contents must be provided.");
        }
        return googleApiClient.b(new o$a() {
            protected void a(final n n) {
                contents.close();
                n.fE().a(new CloseContentsAndUpdateMetadataRequest(o.this.Ew, set.fD(), contents), new al(this));
            }
        });
    }
    
    @Override
    public PendingResult discardContents(final GoogleApiClient googleApiClient, final Contents contents) {
        return Drive.DriveApi.discardContents(googleApiClient, contents);
    }
    
    @Override
    public PendingResult openContents(final GoogleApiClient googleApiClient, final int n, final DriveFile$DownloadProgressListener driveFile$DownloadProgressListener) {
        if (n != 268435456 && n != 536870912 && n != 805306368) {
            throw new IllegalArgumentException("Invalid mode provided.");
        }
        return googleApiClient.a(new o$d() {
            protected void a(final n n) {
                n.fE().a(new OpenContentsRequest(o.this.getDriveId(), n), new o$c(this, driveFile$DownloadProgressListener));
            }
        });
    }
}
