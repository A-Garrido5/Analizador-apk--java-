// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.plus;

import com.google.android.gms.internal.fq;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.internal.hz;
import com.google.android.gms.internal.hy;
import com.google.android.gms.internal.ib;
import com.google.android.gms.internal.ia;
import com.google.android.gms.plus.internal.h;
import com.google.android.gms.plus.internal.PlusCommonExtras;
import com.google.android.gms.plus.internal.e;
import com.google.android.gms.common.api.Api$a;
import com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener;
import com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks;
import com.google.android.gms.internal.fc;
import android.os.Looper;
import android.content.Context;
import com.google.android.gms.common.api.Api$b;
import com.google.android.gms.common.api.Api$c;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.common.api.Api;

public final class Plus
{
    public static final Api API;
    public static final Account AccountApi;
    public static final Moments MomentsApi;
    public static final People PeopleApi;
    public static final Scope SCOPE_PLUS_LOGIN;
    public static final Scope SCOPE_PLUS_PROFILE;
    public static final a TI;
    public static final Api$c wx;
    static final Api$b wy;
    
    static {
        wx = new Api$c();
        wy = new Api$b() {
            public final e a(final Context context, final Looper looper, final fc fc, Plus$PlusOptions plus$PlusOptions, final GoogleApiClient$ConnectionCallbacks googleApiClient$ConnectionCallbacks, final GoogleApiClient$OnConnectionFailedListener googleApiClient$OnConnectionFailedListener) {
                if (plus$PlusOptions == null) {
                    plus$PlusOptions = new Plus$PlusOptions((Plus$1)null);
                }
                return new e(context, looper, googleApiClient$ConnectionCallbacks, googleApiClient$OnConnectionFailedListener, new h(fc.eC(), fc.eF(), plus$PlusOptions.TK.toArray(new String[0]), new String[0], context.getPackageName(), context.getPackageName(), null, new PlusCommonExtras()));
            }
            
            @Override
            public final int getPriority() {
                return 2;
            }
        };
        API = new Api(Plus.wy, Plus.wx, new Scope[0]);
        SCOPE_PLUS_LOGIN = new Scope("https://www.googleapis.com/auth/plus.login");
        SCOPE_PLUS_PROFILE = new Scope("https://www.googleapis.com/auth/plus.me");
        MomentsApi = new ia();
        PeopleApi = new ib();
        AccountApi = new hy();
        TI = new hz();
    }
    
    public static e a(final GoogleApiClient googleApiClient, final Api$c api$c) {
        boolean b = true;
        fq.b(googleApiClient != null && b, "GoogleApiClient parameter is required.");
        fq.a(googleApiClient.isConnected(), (Object)"GoogleApiClient must be connected.");
        final e e = (e)googleApiClient.a(api$c);
        if (e == null) {
            b = false;
        }
        fq.a(b, (Object)"GoogleApiClient is not configured to use the Plus.API Api. Pass this into GoogleApiClient.Builder#addApi() to use this feature.");
        return e;
    }
}
