// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.common.api;

import android.os.Handler;
import java.util.Collection;
import com.google.android.gms.internal.fc;
import java.util.List;
import com.google.android.gms.internal.fq;
import java.util.HashMap;
import java.util.HashSet;
import android.content.Context;
import java.util.Map;
import android.view.View;
import java.util.Set;
import android.os.Looper;

public final class GoogleApiClient$Builder
{
    private Looper AS;
    private final Set AT;
    private int AU;
    private View AV;
    private String AW;
    private final Map AX;
    private final Set AY;
    private final Set AZ;
    private final Context mContext;
    private String wG;
    
    public GoogleApiClient$Builder(final Context mContext) {
        this.AT = new HashSet();
        this.AX = new HashMap();
        this.AY = new HashSet();
        this.AZ = new HashSet();
        this.mContext = mContext;
        this.AS = mContext.getMainLooper();
        this.AW = mContext.getPackageName();
    }
    
    public GoogleApiClient$Builder(final Context context, final GoogleApiClient$ConnectionCallbacks googleApiClient$ConnectionCallbacks, final GoogleApiClient$OnConnectionFailedListener googleApiClient$OnConnectionFailedListener) {
        this(context);
        fq.b(googleApiClient$ConnectionCallbacks, "Must provide a connected listener");
        this.AY.add(googleApiClient$ConnectionCallbacks);
        fq.b(googleApiClient$OnConnectionFailedListener, "Must provide a connection failed listener");
        this.AZ.add(googleApiClient$OnConnectionFailedListener);
    }
    
    public final GoogleApiClient$Builder addApi(final Api api) {
        this.AX.put(api, null);
        final List dz = api.dZ();
        for (int size = dz.size(), i = 0; i < size; ++i) {
            this.AT.add(dz.get(i).en());
        }
        return this;
    }
    
    public final GoogleApiClient$Builder addApi(final Api api, final Api$ApiOptions$HasOptions api$ApiOptions$HasOptions) {
        fq.b(api$ApiOptions$HasOptions, "Null options are not permitted for this Api");
        this.AX.put(api, api$ApiOptions$HasOptions);
        final List dz = api.dZ();
        for (int size = dz.size(), i = 0; i < size; ++i) {
            this.AT.add(dz.get(i).en());
        }
        return this;
    }
    
    public final GoogleApiClient$Builder addConnectionCallbacks(final GoogleApiClient$ConnectionCallbacks googleApiClient$ConnectionCallbacks) {
        this.AY.add(googleApiClient$ConnectionCallbacks);
        return this;
    }
    
    public final GoogleApiClient$Builder addOnConnectionFailedListener(final GoogleApiClient$OnConnectionFailedListener googleApiClient$OnConnectionFailedListener) {
        this.AZ.add(googleApiClient$OnConnectionFailedListener);
        return this;
    }
    
    public final GoogleApiClient$Builder addScope(final Scope scope) {
        this.AT.add(scope.en());
        return this;
    }
    
    public final GoogleApiClient build() {
        return new b(this.mContext, this.AS, this.eh(), this.AX, this.AY, this.AZ);
    }
    
    public final fc eh() {
        return new fc(this.wG, this.AT, this.AU, this.AV, this.AW);
    }
    
    public final GoogleApiClient$Builder setAccountName(final String wg) {
        this.wG = wg;
        return this;
    }
    
    public final GoogleApiClient$Builder setGravityForPopups(final int au) {
        this.AU = au;
        return this;
    }
    
    public final GoogleApiClient$Builder setHandler(final Handler handler) {
        fq.b(handler, "Handler must not be null");
        this.AS = handler.getLooper();
        return this;
    }
    
    public final GoogleApiClient$Builder setViewForPopups(final View av) {
        this.AV = av;
        return this;
    }
    
    public final GoogleApiClient$Builder useDefaultAccount() {
        return this.setAccountName("<<default account>>");
    }
}
