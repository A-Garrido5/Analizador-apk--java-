// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.common.data;

import java.util.ArrayList;

public abstract class d extends DataBuffer
{
    private boolean BW;
    private ArrayList BX;
    
    protected d(final DataHolder dataHolder) {
        super(dataHolder);
        this.BW = false;
    }
    
    private void eu() {
        while (true) {
            while (true) {
                int n = 0;
                String string2 = null;
                Label_0152: {
                    final String string;
                    Label_0148: {
                        synchronized (this) {
                            if (!this.BW) {
                                final int count = this.BB.getCount();
                                this.BX = new ArrayList();
                                if (count > 0) {
                                    this.BX.add(0);
                                    final String primaryDataMarkerColumn = this.getPrimaryDataMarkerColumn();
                                    string = this.BB.getString(primaryDataMarkerColumn, 0, this.BB.G(0));
                                    n = 1;
                                    if (n < count) {
                                        string2 = this.BB.getString(primaryDataMarkerColumn, n, this.BB.G(n));
                                        if (!string2.equals(string)) {
                                            this.BX.add(n);
                                            break Label_0152;
                                        }
                                        break Label_0148;
                                    }
                                }
                                this.BW = true;
                            }
                            return;
                        }
                    }
                    string2 = string;
                }
                ++n;
                String string = string2;
                continue;
            }
        }
    }
    
    int H(final int n) {
        if (n < 0 || n >= this.BX.size()) {
            throw new IllegalArgumentException("Position " + n + " is out of bounds for this buffer");
        }
        return this.BX.get(n);
    }
    
    protected int I(final int n) {
        if (n < 0 || n == this.BX.size()) {
            return 0;
        }
        if (n == -1 + this.BX.size()) {
            return this.BB.getCount() - this.BX.get(n);
        }
        return this.BX.get(n + 1) - this.BX.get(n);
    }
    
    protected abstract Object c(final int p0, final int p1);
    
    @Override
    public final Object get(final int n) {
        this.eu();
        return this.c(this.H(n), this.I(n));
    }
    
    @Override
    public int getCount() {
        this.eu();
        return this.BX.size();
    }
    
    protected abstract String getPrimaryDataMarkerColumn();
}
