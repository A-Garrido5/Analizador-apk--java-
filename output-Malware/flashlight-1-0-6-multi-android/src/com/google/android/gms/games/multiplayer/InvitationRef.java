// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.games.multiplayer;

import android.os.Parcel;
import com.google.android.gms.internal.fq;
import com.google.android.gms.games.GameRef;
import com.google.android.gms.common.data.DataHolder;
import java.util.ArrayList;
import com.google.android.gms.games.Game;
import com.google.android.gms.common.data.b;

public final class InvitationRef extends b implements Invitation
{
    private final Game LS;
    private final ParticipantRef MA;
    private final ArrayList Mx;
    
    InvitationRef(final DataHolder dataHolder, final int n, final int n2) {
        super(dataHolder, n);
        this.LS = new GameRef(dataHolder, n);
        this.Mx = new ArrayList(n2);
        final String string = this.getString("external_inviter_id");
        int i = 0;
        Object o = null;
        while (i < n2) {
            final ParticipantRef participantRef = new ParticipantRef(this.BB, i + this.BD);
            if (participantRef.getParticipantId().equals(string)) {
                o = participantRef;
            }
            this.Mx.add(participantRef);
            ++i;
        }
        this.MA = (ParticipantRef)fq.b(o, "Must have a valid inviter!");
    }
    
    public final int describeContents() {
        return 0;
    }
    
    @Override
    public final boolean equals(final Object o) {
        return InvitationEntity.a(this, o);
    }
    
    public final Invitation freeze() {
        return new InvitationEntity(this);
    }
    
    @Override
    public final int getAvailableAutoMatchSlots() {
        if (!this.getBoolean("has_automatch_criteria")) {
            return 0;
        }
        return this.getInteger("automatch_max_players");
    }
    
    @Override
    public final long getCreationTimestamp() {
        return Math.max(this.getLong("creation_timestamp"), this.getLong("last_modified_timestamp"));
    }
    
    @Override
    public final Game getGame() {
        return this.LS;
    }
    
    @Override
    public final String getInvitationId() {
        return this.getString("external_invitation_id");
    }
    
    @Override
    public final int getInvitationType() {
        return this.getInteger("type");
    }
    
    @Override
    public final Participant getInviter() {
        return this.MA;
    }
    
    public final ArrayList getParticipants() {
        return this.Mx;
    }
    
    @Override
    public final int getVariant() {
        return this.getInteger("variant");
    }
    
    @Override
    public final int hashCode() {
        return InvitationEntity.a(this);
    }
    
    @Override
    public final String toString() {
        return InvitationEntity.b(this);
    }
    
    public final void writeToParcel(final Parcel parcel, final int n) {
        ((InvitationEntity)this.freeze()).writeToParcel(parcel, n);
    }
}
