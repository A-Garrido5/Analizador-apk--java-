// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.games;

import com.google.android.gms.common.api.a$b;
import com.google.android.gms.common.api.a$d;
import com.google.android.gms.common.api.PendingResult;
import android.view.View;
import android.content.Intent;
import com.google.android.gms.internal.fq;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.games.internal.api.AclsImpl;
import com.google.android.gms.games.internal.api.RequestsImpl;
import com.google.android.gms.games.internal.api.NotificationsImpl;
import com.google.android.gms.games.internal.api.PlayersImpl;
import com.google.android.gms.games.internal.api.MultiplayerImpl;
import com.google.android.gms.games.internal.api.RealTimeMultiplayerImpl;
import com.google.android.gms.games.internal.api.TurnBasedMultiplayerImpl;
import com.google.android.gms.games.internal.api.InvitationsImpl;
import com.google.android.gms.games.internal.api.LeaderboardsImpl;
import com.google.android.gms.games.internal.api.AchievementsImpl;
import com.google.android.gms.games.internal.api.GamesMetadataImpl;
import com.google.android.gms.games.internal.GamesClientImpl;
import com.google.android.gms.common.api.Api$a;
import com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener;
import com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks;
import com.google.android.gms.internal.fc;
import android.os.Looper;
import android.content.Context;
import com.google.android.gms.common.api.Api$b;
import com.google.android.gms.common.api.Api$c;
import com.google.android.gms.games.multiplayer.turnbased.TurnBasedMultiplayer;
import com.google.android.gms.games.request.Requests;
import com.google.android.gms.games.multiplayer.realtime.RealTimeMultiplayer;
import com.google.android.gms.games.leaderboard.Leaderboards;
import com.google.android.gms.games.multiplayer.Invitations;
import com.google.android.gms.games.internal.game.Acls;
import com.google.android.gms.games.multiplayer.Multiplayer;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.games.achievement.Achievements;
import com.google.android.gms.common.api.Api;

public final class Games
{
    public static final Api API;
    public static final Achievements Achievements;
    public static final String EXTRA_PLAYER_IDS = "players";
    public static final GamesMetadata GamesMetadata;
    public static final Scope HV;
    public static final Api HW;
    public static final Multiplayer HX;
    public static final Acls HY;
    public static final Invitations Invitations;
    public static final Leaderboards Leaderboards;
    public static final Notifications Notifications;
    public static final Players Players;
    public static final RealTimeMultiplayer RealTimeMultiplayer;
    public static final Requests Requests;
    public static final Scope SCOPE_GAMES;
    public static final TurnBasedMultiplayer TurnBasedMultiplayer;
    static final Api$c wx;
    private static final Api$b wy;
    
    static {
        wx = new Api$c();
        wy = new Api$b() {
            public final GamesClientImpl a(final Context context, final Looper looper, final fc fc, Games$GamesOptions games$GamesOptions, final GoogleApiClient$ConnectionCallbacks googleApiClient$ConnectionCallbacks, final GoogleApiClient$OnConnectionFailedListener googleApiClient$OnConnectionFailedListener) {
                if (games$GamesOptions == null) {
                    games$GamesOptions = new Games$GamesOptions((Games$1)null);
                }
                return new GamesClientImpl(context, looper, fc.eG(), fc.eC(), googleApiClient$ConnectionCallbacks, googleApiClient$OnConnectionFailedListener, fc.eF(), fc.eD(), fc.eH(), games$GamesOptions.HZ, games$GamesOptions.Ia, games$GamesOptions.Ib, games$GamesOptions.Ic, games$GamesOptions.Id);
            }
            
            @Override
            public final int getPriority() {
                return 1;
            }
        };
        SCOPE_GAMES = new Scope("https://www.googleapis.com/auth/games");
        API = new Api(Games.wy, Games.wx, new Scope[] { Games.SCOPE_GAMES });
        HV = new Scope("https://www.googleapis.com/auth/games.firstparty");
        HW = new Api(Games.wy, Games.wx, new Scope[] { Games.HV });
        GamesMetadata = new GamesMetadataImpl();
        Achievements = new AchievementsImpl();
        Leaderboards = new LeaderboardsImpl();
        Invitations = new InvitationsImpl();
        TurnBasedMultiplayer = new TurnBasedMultiplayerImpl();
        RealTimeMultiplayer = new RealTimeMultiplayerImpl();
        HX = new MultiplayerImpl();
        Players = new PlayersImpl();
        Notifications = new NotificationsImpl();
        Requests = new RequestsImpl();
        HY = new AclsImpl();
    }
    
    public static GamesClientImpl c(final GoogleApiClient googleApiClient) {
        boolean b = true;
        fq.b(googleApiClient != null && b, "GoogleApiClient parameter is required.");
        fq.a(googleApiClient.isConnected(), (Object)"GoogleApiClient must be connected.");
        final GamesClientImpl gamesClientImpl = (GamesClientImpl)googleApiClient.a(Games.wx);
        if (gamesClientImpl == null) {
            b = false;
        }
        fq.a(b, (Object)"GoogleApiClient is not configured to use the Games Api. Pass Games.API into GoogleApiClient.Builder#addApi() to use this feature.");
        return gamesClientImpl;
    }
    
    public static String getAppId(final GoogleApiClient googleApiClient) {
        return c(googleApiClient).gz();
    }
    
    public static String getCurrentAccountName(final GoogleApiClient googleApiClient) {
        return c(googleApiClient).gl();
    }
    
    public static int getSdkVariant(final GoogleApiClient googleApiClient) {
        return c(googleApiClient).gy();
    }
    
    public static Intent getSettingsIntent(final GoogleApiClient googleApiClient) {
        return c(googleApiClient).gx();
    }
    
    public static void setGravityForPopups(final GoogleApiClient googleApiClient, final int n) {
        c(googleApiClient).aX(n);
    }
    
    public static void setViewForPopups(final GoogleApiClient googleApiClient, final View view) {
        fq.f(view);
        c(googleApiClient).f(view);
    }
    
    public static PendingResult signOut(final GoogleApiClient googleApiClient) {
        return googleApiClient.b(new Games$SignOutImpl() {
            protected final void a(final GamesClientImpl gamesClientImpl) {
                gamesClientImpl.b(this);
            }
        });
    }
}
