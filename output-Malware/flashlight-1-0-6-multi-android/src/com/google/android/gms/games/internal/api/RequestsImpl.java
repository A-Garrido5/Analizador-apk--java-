// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.games.internal.api;

import com.google.android.gms.games.request.OnRequestReceivedListener;
import android.graphics.Bitmap;
import com.google.android.gms.games.Games;
import android.content.Intent;
import com.google.android.gms.games.request.GameRequest;
import android.os.Bundle;
import com.google.android.gms.common.api.a$b;
import com.google.android.gms.common.api.a$d;
import com.google.android.gms.games.internal.GamesClientImpl;
import com.google.android.gms.common.api.Api$a;
import java.util.List;
import java.util.ArrayList;
import com.google.android.gms.common.api.PendingResult;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.games.request.Requests;

public final class RequestsImpl implements Requests
{
    @Override
    public final PendingResult acceptRequest(final GoogleApiClient googleApiClient, final String s) {
        final ArrayList<String> list = new ArrayList<String>();
        list.add(s);
        return this.acceptRequests(googleApiClient, list);
    }
    
    @Override
    public final PendingResult acceptRequests(final GoogleApiClient googleApiClient, final List list) {
        String[] array;
        if (list == null) {
            array = null;
        }
        else {
            array = list.toArray(new String[list.size()]);
        }
        return googleApiClient.b(new RequestsImpl$UpdateRequestsImpl() {
            protected void a(final GamesClientImpl gamesClientImpl) {
                gamesClientImpl.b(this, array);
            }
        });
    }
    
    @Override
    public final PendingResult dismissRequest(final GoogleApiClient googleApiClient, final String s) {
        final ArrayList<String> list = new ArrayList<String>();
        list.add(s);
        return this.dismissRequests(googleApiClient, list);
    }
    
    @Override
    public final PendingResult dismissRequests(final GoogleApiClient googleApiClient, final List list) {
        String[] array;
        if (list == null) {
            array = null;
        }
        else {
            array = list.toArray(new String[list.size()]);
        }
        return googleApiClient.b(new RequestsImpl$UpdateRequestsImpl() {
            protected void a(final GamesClientImpl gamesClientImpl) {
                gamesClientImpl.c(this, array);
            }
        });
    }
    
    @Override
    public final ArrayList getGameRequestsFromBundle(final Bundle bundle) {
        if (bundle == null || !bundle.containsKey("requests")) {
            return new ArrayList();
        }
        final ArrayList list = (ArrayList)bundle.get("requests");
        final ArrayList<GameRequest> list2 = new ArrayList<GameRequest>();
        for (int size = list.size(), i = 0; i < size; ++i) {
            list2.add(list.get(i));
        }
        return list2;
    }
    
    @Override
    public final ArrayList getGameRequestsFromInboxResponse(final Intent intent) {
        if (intent == null) {
            return new ArrayList();
        }
        return this.getGameRequestsFromBundle(intent.getExtras());
    }
    
    @Override
    public final Intent getInboxIntent(final GoogleApiClient googleApiClient) {
        return Games.c(googleApiClient).gB();
    }
    
    @Override
    public final int getMaxLifetimeDays(final GoogleApiClient googleApiClient) {
        return Games.c(googleApiClient).gD();
    }
    
    @Override
    public final int getMaxPayloadSize(final GoogleApiClient googleApiClient) {
        return Games.c(googleApiClient).gC();
    }
    
    @Override
    public final Intent getSendIntent(final GoogleApiClient googleApiClient, final int n, final byte[] array, final int n2, final Bitmap bitmap, final String s) {
        return Games.c(googleApiClient).a(n, array, n2, bitmap, s);
    }
    
    @Override
    public final PendingResult loadRequests(final GoogleApiClient googleApiClient, final int n, final int n2, final int n3) {
        return googleApiClient.a(new RequestsImpl$LoadRequestsImpl() {
            protected void a(final GamesClientImpl gamesClientImpl) {
                gamesClientImpl.a(this, n, n2, n3);
            }
        });
    }
    
    @Override
    public final void registerRequestListener(final GoogleApiClient googleApiClient, final OnRequestReceivedListener onRequestReceivedListener) {
        Games.c(googleApiClient).a(onRequestReceivedListener);
    }
    
    @Override
    public final void unregisterRequestListener(final GoogleApiClient googleApiClient) {
        Games.c(googleApiClient).gv();
    }
}
