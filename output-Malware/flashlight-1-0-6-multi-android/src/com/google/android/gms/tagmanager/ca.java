// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.tagmanager;

import android.database.Cursor;
import android.text.TextUtils;
import java.util.Collections;
import java.util.List;
import android.content.ContentValues;
import android.database.sqlite.SQLiteException;
import android.database.sqlite.SQLiteDatabase;
import org.apache.http.client.HttpClient;
import org.apache.http.impl.client.DefaultHttpClient;
import com.google.android.gms.internal.gn;
import android.content.Context;
import com.google.android.gms.internal.gl;

class ca implements at
{
    private static final String vx;
    private gl Wv;
    private final ca$b YI;
    private volatile ab YJ;
    private final au YK;
    private final Context mContext;
    private final String vA;
    private long vC;
    private final int vD;
    
    static {
        vx = String.format("CREATE TABLE IF NOT EXISTS %s ( '%s' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, '%s' INTEGER NOT NULL, '%s' TEXT NOT NULL,'%s' INTEGER NOT NULL);", "gtm_hits", "hit_id", "hit_time", "hit_url", "hit_first_send_time");
    }
    
    ca(final au au, final Context context) {
        this(au, context, "gtm_urls.db", 2000);
    }
    
    ca(final au yk, final Context context, final String va, final int vd) {
        this.mContext = context.getApplicationContext();
        this.vA = va;
        this.YK = yk;
        this.Wv = gn.ft();
        this.YI = new ca$b(this, this.mContext, this.vA);
        this.YJ = new da((HttpClient)new DefaultHttpClient(), this.mContext, new ca$a(this));
        this.vC = 0L;
        this.vD = vd;
    }
    
    private SQLiteDatabase L(final String s) {
        try {
            return this.YI.getWritableDatabase();
        }
        catch (SQLiteException ex) {
            bh.z(s);
            return null;
        }
    }
    
    private void c(final long n, final long n2) {
        final SQLiteDatabase l = this.L("Error opening database for getNumStoredHits.");
        if (l == null) {
            return;
        }
        final ContentValues contentValues = new ContentValues();
        contentValues.put("hit_first_send_time", n2);
        try {
            l.update("gtm_hits", contentValues, "hit_id=?", new String[] { String.valueOf(n) });
        }
        catch (SQLiteException ex) {
            bh.z("Error setting HIT_FIRST_DISPATCH_TIME for hitId: " + n);
            this.v(n);
        }
    }
    
    private void cV() {
        final int n = 1 + (this.cX() - this.vD);
        if (n > 0) {
            final List s = this.s(n);
            bh.y("Store full, deleting " + s.size() + " hits to make room.");
            this.a(s.toArray(new String[0]));
        }
    }
    
    private void f(final long n, final String s) {
        final SQLiteDatabase l = this.L("Error opening database for putHit");
        if (l == null) {
            return;
        }
        final ContentValues contentValues = new ContentValues();
        contentValues.put("hit_time", n);
        contentValues.put("hit_url", s);
        contentValues.put("hit_first_send_time", 0);
        try {
            l.insert("gtm_hits", (String)null, contentValues);
            this.YK.r(false);
        }
        catch (SQLiteException ex) {
            bh.z("Error storing hit");
        }
    }
    
    private void v(final long n) {
        this.a(new String[] { String.valueOf(n) });
    }
    
    void a(final String[] array) {
        int n = 1;
        if (array != null && array.length != 0) {
            final SQLiteDatabase l = this.L("Error opening database for deleteHits.");
            if (l != null) {
                while (true) {
                    final Object[] array2 = new Object[n];
                    array2[0] = TextUtils.join((CharSequence)",", (Iterable)Collections.nCopies(array.length, "?"));
                    final String format = String.format("HIT_ID in (%s)", array2);
                    while (true) {
                        try {
                            l.delete("gtm_hits", format, array);
                            final au yk = this.YK;
                            if (this.cX() == 0) {
                                yk.r(n != 0);
                                return;
                            }
                        }
                        catch (SQLiteException ex) {
                            bh.z("Error deleting hits");
                            return;
                        }
                        n = 0;
                        continue;
                    }
                }
            }
        }
    }
    
    @Override
    public void bW() {
        bh.y("GTM Dispatch running...");
        if (this.YJ.ch()) {
            final List t = this.t(40);
            if (t.isEmpty()) {
                bh.y("...nothing to dispatch");
                this.YK.r(true);
                return;
            }
            this.YJ.d(t);
            if (this.kR() > 0) {
                cx.lG().bW();
            }
        }
    }
    
    int cW() {
        int n = 1;
        final long currentTimeMillis = this.Wv.currentTimeMillis();
        if (currentTimeMillis > 86400000L + this.vC) {
            this.vC = currentTimeMillis;
            final SQLiteDatabase l = this.L("Error opening database for deleteStaleHits.");
            if (l != null) {
                final long n2 = this.Wv.currentTimeMillis() - 2592000000L;
                final String[] array = new String[n];
                array[0] = Long.toString(n2);
                final int delete = l.delete("gtm_hits", "HIT_TIME < ?", array);
                final au yk = this.YK;
                if (this.cX() != 0) {
                    n = 0;
                }
                yk.r(n != 0);
                return delete;
            }
        }
        return 0;
    }
    
    int cX() {
        Cursor rawQuery = null;
        final SQLiteDatabase l = this.L("Error opening database for getNumStoredHits.");
        int n = 0;
        if (l == null) {
            return n;
        }
        try {
            rawQuery = l.rawQuery("SELECT COUNT(*) from gtm_hits", (String[])null);
            final boolean moveToFirst = rawQuery.moveToFirst();
            n = 0;
            if (moveToFirst) {
                n = (int)rawQuery.getLong(0);
            }
            return n;
        }
        catch (SQLiteException ex) {
            bh.z("Error getting numStoredHits");
            n = 0;
            return 0;
        }
        finally {
            if (rawQuery != null) {
                rawQuery.close();
            }
        }
    }
    
    @Override
    public void e(final long n, final String s) {
        this.cW();
        this.cV();
        this.f(n, s);
    }
    
    int kR() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     1: astore_1       
        //     2: aload_0        
        //     3: ldc             "Error opening database for getNumStoredHits."
        //     5: invokespecial   com/google/android/gms/tagmanager/ca.L:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteDatabase;
        //     8: astore_2       
        //     9: aload_2        
        //    10: ifnonnull       15
        //    13: iconst_0       
        //    14: ireturn        
        //    15: aload_2        
        //    16: ldc             "gtm_hits"
        //    18: iconst_2       
        //    19: anewarray       Ljava/lang/String;
        //    22: dup            
        //    23: iconst_0       
        //    24: ldc             "hit_id"
        //    26: aastore        
        //    27: dup            
        //    28: iconst_1       
        //    29: ldc             "hit_first_send_time"
        //    31: aastore        
        //    32: ldc_w           "hit_first_send_time=0"
        //    35: aconst_null    
        //    36: aconst_null    
        //    37: aconst_null    
        //    38: aconst_null    
        //    39: invokevirtual   android/database/sqlite/SQLiteDatabase.query:(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
        //    42: astore          8
        //    44: aload           8
        //    46: invokeinterface android/database/Cursor.getCount:()I
        //    51: istore          10
        //    53: iload           10
        //    55: istore          7
        //    57: aload           8
        //    59: ifnull          69
        //    62: aload           8
        //    64: invokeinterface android/database/Cursor.close:()V
        //    69: iload           7
        //    71: ireturn        
        //    72: astore          4
        //    74: aconst_null    
        //    75: astore          5
        //    77: ldc_w           "Error getting num untried hits"
        //    80: invokestatic    com/google/android/gms/tagmanager/bh.z:(Ljava/lang/String;)V
        //    83: aload           5
        //    85: ifnull          141
        //    88: aload           5
        //    90: invokeinterface android/database/Cursor.close:()V
        //    95: iconst_0       
        //    96: istore          7
        //    98: goto            69
        //   101: astore_3       
        //   102: aload_1        
        //   103: ifnull          112
        //   106: aload_1        
        //   107: invokeinterface android/database/Cursor.close:()V
        //   112: aload_3        
        //   113: athrow         
        //   114: astore_3       
        //   115: aload           8
        //   117: astore_1       
        //   118: goto            102
        //   121: astore          6
        //   123: aload           5
        //   125: astore_1       
        //   126: aload           6
        //   128: astore_3       
        //   129: goto            102
        //   132: astore          9
        //   134: aload           8
        //   136: astore          5
        //   138: goto            77
        //   141: iconst_0       
        //   142: istore          7
        //   144: goto            69
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                     
        //  -----  -----  -----  -----  -----------------------------------------
        //  15     44     72     77     Landroid/database/sqlite/SQLiteException;
        //  15     44     101    102    Any
        //  44     53     132    141    Landroid/database/sqlite/SQLiteException;
        //  44     53     114    121    Any
        //  77     83     121    132    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 76, Size: 76
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    List s(final int p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     3: dup            
        //     4: invokespecial   java/util/ArrayList.<init>:()V
        //     7: astore_2       
        //     8: iload_1        
        //     9: ifgt            20
        //    12: ldc_w           "Invalid maxHits specified. Skipping"
        //    15: invokestatic    com/google/android/gms/tagmanager/bh.z:(Ljava/lang/String;)V
        //    18: aload_2        
        //    19: areturn        
        //    20: aload_0        
        //    21: ldc_w           "Error opening database for peekHitIds."
        //    24: invokespecial   com/google/android/gms/tagmanager/ca.L:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteDatabase;
        //    27: astore_3       
        //    28: aload_3        
        //    29: ifnonnull       34
        //    32: aload_2        
        //    33: areturn        
        //    34: aload_3        
        //    35: ldc             "gtm_hits"
        //    37: iconst_1       
        //    38: anewarray       Ljava/lang/String;
        //    41: dup            
        //    42: iconst_0       
        //    43: ldc             "hit_id"
        //    45: aastore        
        //    46: aconst_null    
        //    47: aconst_null    
        //    48: aconst_null    
        //    49: aconst_null    
        //    50: ldc_w           "%s ASC"
        //    53: iconst_1       
        //    54: anewarray       Ljava/lang/Object;
        //    57: dup            
        //    58: iconst_0       
        //    59: ldc             "hit_id"
        //    61: aastore        
        //    62: invokestatic    java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        //    65: iload_1        
        //    66: invokestatic    java/lang/Integer.toString:(I)Ljava/lang/String;
        //    69: invokevirtual   android/database/sqlite/SQLiteDatabase.query:(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
        //    72: astore          7
        //    74: aload           7
        //    76: astore          5
        //    78: aload           5
        //    80: invokeinterface android/database/Cursor.moveToFirst:()Z
        //    85: ifeq            120
        //    88: aload_2        
        //    89: aload           5
        //    91: iconst_0       
        //    92: invokeinterface android/database/Cursor.getLong:(I)J
        //    97: invokestatic    java/lang/String.valueOf:(J)Ljava/lang/String;
        //   100: invokeinterface java/util/List.add:(Ljava/lang/Object;)Z
        //   105: pop            
        //   106: aload           5
        //   108: invokeinterface android/database/Cursor.moveToNext:()Z
        //   113: istore          9
        //   115: iload           9
        //   117: ifne            88
        //   120: aload           5
        //   122: ifnull          132
        //   125: aload           5
        //   127: invokeinterface android/database/Cursor.close:()V
        //   132: aload_2        
        //   133: areturn        
        //   134: astore          6
        //   136: aconst_null    
        //   137: astore          5
        //   139: new             Ljava/lang/StringBuilder;
        //   142: dup            
        //   143: ldc_w           "Error in peekHits fetching hitIds: "
        //   146: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   149: aload           6
        //   151: invokevirtual   android/database/sqlite/SQLiteException.getMessage:()Ljava/lang/String;
        //   154: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   157: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   160: invokestatic    com/google/android/gms/tagmanager/bh.z:(Ljava/lang/String;)V
        //   163: aload           5
        //   165: ifnull          132
        //   168: aload           5
        //   170: invokeinterface android/database/Cursor.close:()V
        //   175: goto            132
        //   178: astore          4
        //   180: aconst_null    
        //   181: astore          5
        //   183: aload           5
        //   185: ifnull          195
        //   188: aload           5
        //   190: invokeinterface android/database/Cursor.close:()V
        //   195: aload           4
        //   197: athrow         
        //   198: astore          4
        //   200: goto            183
        //   203: astore          6
        //   205: goto            139
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                     
        //  -----  -----  -----  -----  -----------------------------------------
        //  34     74     134    139    Landroid/database/sqlite/SQLiteException;
        //  34     74     178    183    Any
        //  78     88     203    208    Landroid/database/sqlite/SQLiteException;
        //  78     88     198    203    Any
        //  88     115    203    208    Landroid/database/sqlite/SQLiteException;
        //  88     115    198    203    Any
        //  139    163    198    203    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0088:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public List t(final int p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: new             Ljava/util/ArrayList;
        //     3: dup            
        //     4: invokespecial   java/util/ArrayList.<init>:()V
        //     7: astore_2       
        //     8: aload_0        
        //     9: ldc_w           "Error opening database for peekHits"
        //    12: invokespecial   com/google/android/gms/tagmanager/ca.L:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteDatabase;
        //    15: astore_3       
        //    16: aload_3        
        //    17: ifnonnull       26
        //    20: aload_2        
        //    21: astore          9
        //    23: aload           9
        //    25: areturn        
        //    26: aconst_null    
        //    27: astore          4
        //    29: aload_3        
        //    30: ldc             "gtm_hits"
        //    32: iconst_3       
        //    33: anewarray       Ljava/lang/String;
        //    36: dup            
        //    37: iconst_0       
        //    38: ldc             "hit_id"
        //    40: aastore        
        //    41: dup            
        //    42: iconst_1       
        //    43: ldc             "hit_time"
        //    45: aastore        
        //    46: dup            
        //    47: iconst_2       
        //    48: ldc             "hit_first_send_time"
        //    50: aastore        
        //    51: aconst_null    
        //    52: aconst_null    
        //    53: aconst_null    
        //    54: aconst_null    
        //    55: ldc_w           "%s ASC"
        //    58: iconst_1       
        //    59: anewarray       Ljava/lang/Object;
        //    62: dup            
        //    63: iconst_0       
        //    64: ldc             "hit_id"
        //    66: aastore        
        //    67: invokestatic    java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        //    70: iload_1        
        //    71: invokestatic    java/lang/Integer.toString:(I)Ljava/lang/String;
        //    74: invokevirtual   android/database/sqlite/SQLiteDatabase.query:(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
        //    77: astore          10
        //    79: aload           10
        //    81: astore          11
        //    83: new             Ljava/util/ArrayList;
        //    86: dup            
        //    87: invokespecial   java/util/ArrayList.<init>:()V
        //    90: astore          12
        //    92: aload           11
        //    94: invokeinterface android/database/Cursor.moveToFirst:()Z
        //    99: ifeq            155
        //   102: aload           12
        //   104: new             Lcom/google/android/gms/tagmanager/ap;
        //   107: dup            
        //   108: aload           11
        //   110: iconst_0       
        //   111: invokeinterface android/database/Cursor.getLong:(I)J
        //   116: aload           11
        //   118: iconst_1       
        //   119: invokeinterface android/database/Cursor.getLong:(I)J
        //   124: aload           11
        //   126: iconst_2       
        //   127: invokeinterface android/database/Cursor.getLong:(I)J
        //   132: invokespecial   com/google/android/gms/tagmanager/ap.<init>:(JJJ)V
        //   135: invokeinterface java/util/List.add:(Ljava/lang/Object;)Z
        //   140: pop            
        //   141: aload           11
        //   143: invokeinterface android/database/Cursor.moveToNext:()Z
        //   148: istore          15
        //   150: iload           15
        //   152: ifne            102
        //   155: aload           11
        //   157: ifnull          167
        //   160: aload           11
        //   162: invokeinterface android/database/Cursor.close:()V
        //   167: aload_3        
        //   168: ldc             "gtm_hits"
        //   170: iconst_2       
        //   171: anewarray       Ljava/lang/String;
        //   174: dup            
        //   175: iconst_0       
        //   176: ldc             "hit_id"
        //   178: aastore        
        //   179: dup            
        //   180: iconst_1       
        //   181: ldc             "hit_url"
        //   183: aastore        
        //   184: aconst_null    
        //   185: aconst_null    
        //   186: aconst_null    
        //   187: aconst_null    
        //   188: ldc_w           "%s ASC"
        //   191: iconst_1       
        //   192: anewarray       Ljava/lang/Object;
        //   195: dup            
        //   196: iconst_0       
        //   197: ldc             "hit_id"
        //   199: aastore        
        //   200: invokestatic    java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        //   203: iload_1        
        //   204: invokestatic    java/lang/Integer.toString:(I)Ljava/lang/String;
        //   207: invokevirtual   android/database/sqlite/SQLiteDatabase.query:(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
        //   210: astore          23
        //   212: aload           23
        //   214: invokeinterface android/database/Cursor.moveToFirst:()Z
        //   219: ifeq            282
        //   222: iconst_0       
        //   223: istore          24
        //   225: aload           23
        //   227: checkcast       Landroid/database/sqlite/SQLiteCursor;
        //   230: invokevirtual   android/database/sqlite/SQLiteCursor.getWindow:()Landroid/database/CursorWindow;
        //   233: invokevirtual   android/database/CursorWindow.getNumRows:()I
        //   236: ifle            365
        //   239: aload           12
        //   241: iload           24
        //   243: invokeinterface java/util/List.get:(I)Ljava/lang/Object;
        //   248: checkcast       Lcom/google/android/gms/tagmanager/ap;
        //   251: aload           23
        //   253: iconst_1       
        //   254: invokeinterface android/database/Cursor.getString:(I)Ljava/lang/String;
        //   259: invokevirtual   com/google/android/gms/tagmanager/ap.K:(Ljava/lang/String;)V
        //   262: iload           24
        //   264: iconst_1       
        //   265: iadd           
        //   266: istore          26
        //   268: aload           23
        //   270: invokeinterface android/database/Cursor.moveToNext:()Z
        //   275: istore          27
        //   277: iload           27
        //   279: ifne            609
        //   282: aload           23
        //   284: ifnull          294
        //   287: aload           23
        //   289: invokeinterface android/database/Cursor.close:()V
        //   294: aload           12
        //   296: areturn        
        //   297: astore          6
        //   299: aload           6
        //   301: astore          7
        //   303: aconst_null    
        //   304: astore          8
        //   306: aload_2        
        //   307: astore          9
        //   309: new             Ljava/lang/StringBuilder;
        //   312: dup            
        //   313: ldc_w           "Error in peekHits fetching hitIds: "
        //   316: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   319: aload           7
        //   321: invokevirtual   android/database/sqlite/SQLiteException.getMessage:()Ljava/lang/String;
        //   324: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   327: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   330: invokestatic    com/google/android/gms/tagmanager/bh.z:(Ljava/lang/String;)V
        //   333: aload           8
        //   335: ifnull          23
        //   338: aload           8
        //   340: invokeinterface android/database/Cursor.close:()V
        //   345: aload           9
        //   347: areturn        
        //   348: astore          5
        //   350: aload           4
        //   352: ifnull          362
        //   355: aload           4
        //   357: invokeinterface android/database/Cursor.close:()V
        //   362: aload           5
        //   364: athrow         
        //   365: iconst_1       
        //   366: anewarray       Ljava/lang/Object;
        //   369: astore          25
        //   371: aload           25
        //   373: iconst_0       
        //   374: aload           12
        //   376: iload           24
        //   378: invokeinterface java/util/List.get:(I)Ljava/lang/Object;
        //   383: checkcast       Lcom/google/android/gms/tagmanager/ap;
        //   386: invokevirtual   com/google/android/gms/tagmanager/ap.cP:()J
        //   389: invokestatic    java/lang/Long.valueOf:(J)Ljava/lang/Long;
        //   392: aastore        
        //   393: ldc_w           "HitString for hitId %d too large.  Hit will be deleted."
        //   396: aload           25
        //   398: invokestatic    java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        //   401: invokestatic    com/google/android/gms/tagmanager/bh.z:(Ljava/lang/String;)V
        //   404: goto            262
        //   407: astore          16
        //   409: aload           23
        //   411: astore          11
        //   413: new             Ljava/lang/StringBuilder;
        //   416: dup            
        //   417: ldc_w           "Error in peekHits fetching hit url: "
        //   420: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   423: aload           16
        //   425: invokevirtual   android/database/sqlite/SQLiteException.getMessage:()Ljava/lang/String;
        //   428: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   431: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   434: invokestatic    com/google/android/gms/tagmanager/bh.z:(Ljava/lang/String;)V
        //   437: new             Ljava/util/ArrayList;
        //   440: dup            
        //   441: invokespecial   java/util/ArrayList.<init>:()V
        //   444: astore          18
        //   446: aload           12
        //   448: invokeinterface java/util/List.iterator:()Ljava/util/Iterator;
        //   453: astore          19
        //   455: iconst_0       
        //   456: istore          20
        //   458: aload           19
        //   460: invokeinterface java/util/Iterator.hasNext:()Z
        //   465: ifeq            529
        //   468: aload           19
        //   470: invokeinterface java/util/Iterator.next:()Ljava/lang/Object;
        //   475: checkcast       Lcom/google/android/gms/tagmanager/ap;
        //   478: astore          21
        //   480: aload           21
        //   482: invokevirtual   com/google/android/gms/tagmanager/ap.kE:()Ljava/lang/String;
        //   485: invokestatic    android/text/TextUtils.isEmpty:(Ljava/lang/CharSequence;)Z
        //   488: ifeq            499
        //   491: iload           20
        //   493: ifne            529
        //   496: iconst_1       
        //   497: istore          20
        //   499: aload           18
        //   501: aload           21
        //   503: invokeinterface java/util/List.add:(Ljava/lang/Object;)Z
        //   508: pop            
        //   509: goto            458
        //   512: astore          17
        //   514: aload           11
        //   516: ifnull          526
        //   519: aload           11
        //   521: invokeinterface android/database/Cursor.close:()V
        //   526: aload           17
        //   528: athrow         
        //   529: aload           11
        //   531: ifnull          541
        //   534: aload           11
        //   536: invokeinterface android/database/Cursor.close:()V
        //   541: aload           18
        //   543: areturn        
        //   544: astore          17
        //   546: aload           23
        //   548: astore          11
        //   550: goto            514
        //   553: astore          16
        //   555: goto            413
        //   558: astore          5
        //   560: aload           11
        //   562: astore          4
        //   564: goto            350
        //   567: astore          5
        //   569: aload           8
        //   571: astore          4
        //   573: goto            350
        //   576: astore          28
        //   578: aload           28
        //   580: astore          7
        //   582: aload           11
        //   584: astore          8
        //   586: aload_2        
        //   587: astore          9
        //   589: goto            309
        //   592: astore          13
        //   594: aload           13
        //   596: astore          7
        //   598: aload           11
        //   600: astore          8
        //   602: aload           12
        //   604: astore          9
        //   606: goto            309
        //   609: iload           26
        //   611: istore          24
        //   613: goto            225
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                     
        //  -----  -----  -----  -----  -----------------------------------------
        //  29     79     297    309    Landroid/database/sqlite/SQLiteException;
        //  29     79     348    350    Any
        //  83     92     576    592    Landroid/database/sqlite/SQLiteException;
        //  83     92     558    567    Any
        //  92     102    592    609    Landroid/database/sqlite/SQLiteException;
        //  92     102    558    567    Any
        //  102    150    592    609    Landroid/database/sqlite/SQLiteException;
        //  102    150    558    567    Any
        //  167    212    553    558    Landroid/database/sqlite/SQLiteException;
        //  167    212    512    514    Any
        //  212    222    407    413    Landroid/database/sqlite/SQLiteException;
        //  212    222    544    553    Any
        //  225    262    407    413    Landroid/database/sqlite/SQLiteException;
        //  225    262    544    553    Any
        //  268    277    407    413    Landroid/database/sqlite/SQLiteException;
        //  268    277    544    553    Any
        //  309    333    567    576    Any
        //  365    404    407    413    Landroid/database/sqlite/SQLiteException;
        //  365    404    544    553    Any
        //  413    455    512    514    Any
        //  458    491    512    514    Any
        //  499    509    512    514    Any
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertLocalVariables(AstBuilder.java:3035)
        //     at com.strobel.decompiler.ast.AstBuilder.performStackAnalysis(AstBuilder.java:2445)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:108)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
}
