// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.tagmanager;

import com.google.android.gms.internal.c$i;
import java.util.Iterator;
import java.util.List;
import java.util.HashMap;
import com.google.android.gms.internal.d$a;
import java.util.Collection;
import java.util.HashSet;
import android.content.Context;
import java.util.Set;
import java.util.Map;

class cs
{
    private static final by ZE;
    private final DataLayer WK;
    private final cq$c ZF;
    private final ag ZG;
    private final Map ZH;
    private final Map ZI;
    private final Map ZJ;
    private final k ZK;
    private final k ZL;
    private final Set ZM;
    private final Map ZN;
    private volatile String ZO;
    private int ZP;
    
    static {
        ZE = new by(dh.lT(), true);
    }
    
    public cs(final Context context, final cq$c zf, final DataLayer wk, final s$a s$a, final s$a s$a2, final ag zg) {
        if (zf == null) {
            throw new NullPointerException("resource cannot be null");
        }
        this.ZF = zf;
        this.ZM = new HashSet(zf.li());
        this.WK = wk;
        this.ZG = zg;
        this.ZK = new l().a(1048576, new l$a() {
            public int a(final cq$a cq$a, final by by) {
                return ((d$a)by.getObject()).mF();
            }
        });
        this.ZL = new l().a(1048576, new l$a() {
            public int a(final String s, final cs$b cs$b) {
                return s.length() + cs$b.getSize();
            }
        });
        this.ZH = new HashMap();
        this.b(new i(context));
        this.b(new s(s$a2));
        this.b(new w(wk));
        this.b(new di(context, wk));
        this.ZI = new HashMap();
        this.c(new q());
        this.c(new ad());
        this.c(new ae());
        this.c(new al());
        this.c(new am());
        this.c(new bd());
        this.c(new be());
        this.c(new ch());
        this.c(new db());
        this.ZJ = new HashMap();
        this.a(new b(context));
        this.a(new c(context));
        this.a(new e(context));
        this.a(new f(context));
        this.a(new g(context));
        this.a(new h(context));
        this.a(new m());
        this.a(new p(this.ZF.getVersion()));
        this.a(new s(s$a));
        this.a(new u(wk));
        this.a(new z(context));
        this.a(new aa());
        this.a(new ac());
        this.a(new ah(this));
        this.a(new an());
        this.a(new ao());
        this.a(new ax(context));
        this.a(new az());
        this.a(new bc());
        this.a(new bk(context));
        this.a(new bz());
        this.a(new cb());
        this.a(new ce());
        this.a(new cg());
        this.a(new ci(context));
        this.a(new ct());
        this.a(new cu());
        this.a(new dd());
        this.ZN = new HashMap();
        for (final cq$e cq$e : this.ZM) {
            if (zg.kA()) {
                a(cq$e.lq(), cq$e.lr(), "add macro");
                a(cq$e.lv(), cq$e.ls(), "remove macro");
                a(cq$e.lo(), cq$e.lt(), "add tag");
                a(cq$e.lp(), cq$e.lu(), "remove tag");
            }
            for (int i = 0; i < cq$e.lq().size(); ++i) {
                final cq$a cq$a = cq$e.lq().get(i);
                String s = "Unknown";
                if (zg.kA() && i < cq$e.lr().size()) {
                    s = cq$e.lr().get(i);
                }
                final cs$c d = d(this.ZN, h(cq$a));
                d.b(cq$e);
                d.a(cq$e, cq$a);
                d.a(cq$e, s);
            }
            for (int j = 0; j < cq$e.lv().size(); ++j) {
                final cq$a cq$a2 = cq$e.lv().get(j);
                String s2 = "Unknown";
                if (zg.kA() && j < cq$e.ls().size()) {
                    s2 = cq$e.ls().get(j);
                }
                final cs$c d2 = d(this.ZN, h(cq$a2));
                d2.b(cq$e);
                d2.b(cq$e, cq$a2);
                d2.b(cq$e, s2);
            }
        }
        for (final Map.Entry<K, List> entry : this.ZF.lj().entrySet()) {
            for (final cq$a cq$a3 : entry.getValue()) {
                if (!dh.n((d$a)cq$a3.le().get(com.google.android.gms.internal.b.dh.toString()))) {
                    d(this.ZN, (String)entry.getKey()).i(cq$a3);
                }
            }
        }
    }
    
    private by a(final d$a d$a, final Set set, final dj dj) {
        if (!d$a.fX) {
            return new by(d$a, true);
        }
        switch (d$a.type) {
            default: {
                bh.w("Unknown type: " + d$a.type);
                return cs.ZE;
            }
            case 2: {
                final d$a g = cq.g(d$a);
                g.fO = new d$a[d$a.fO.length];
                for (int i = 0; i < d$a.fO.length; ++i) {
                    final by a = this.a(d$a.fO[i], set, dj.cd(i));
                    if (a == cs.ZE) {
                        return cs.ZE;
                    }
                    g.fO[i] = (d$a)a.getObject();
                }
                return new by(g, false);
            }
            case 3: {
                final d$a g2 = cq.g(d$a);
                if (d$a.fP.length != d$a.fQ.length) {
                    bh.w("Invalid serving value: " + d$a.toString());
                    return cs.ZE;
                }
                g2.fP = new d$a[d$a.fP.length];
                g2.fQ = new d$a[d$a.fP.length];
                for (int j = 0; j < d$a.fP.length; ++j) {
                    final by a2 = this.a(d$a.fP[j], set, dj.ce(j));
                    final by a3 = this.a(d$a.fQ[j], set, dj.cf(j));
                    if (a2 == cs.ZE || a3 == cs.ZE) {
                        return cs.ZE;
                    }
                    g2.fP[j] = (d$a)a2.getObject();
                    g2.fQ[j] = (d$a)a3.getObject();
                }
                return new by(g2, false);
            }
            case 4: {
                if (set.contains(d$a.fR)) {
                    bh.w("Macro cycle detected.  Current macro reference: " + d$a.fR + ".  Previous macro references: " + set.toString() + ".");
                    return cs.ZE;
                }
                set.add(d$a.fR);
                final by a4 = dk.a(this.a(d$a.fR, set, dj.kP()), d$a.fW);
                set.remove(d$a.fR);
                return a4;
            }
            case 7: {
                final d$a g3 = cq.g(d$a);
                g3.fV = new d$a[d$a.fV.length];
                for (int k = 0; k < d$a.fV.length; ++k) {
                    final by a5 = this.a(d$a.fV[k], set, dj.cg(k));
                    if (a5 == cs.ZE) {
                        return cs.ZE;
                    }
                    g3.fV[k] = (d$a)a5.getObject();
                }
                return new by(g3, false);
            }
        }
    }
    
    private by a(final String s, final Set set, final bj bj) {
        ++this.ZP;
        final cs$b cs$b = (cs$b)this.ZL.get(s);
        if (cs$b != null && !this.ZG.kA()) {
            this.a(cs$b.lf(), set);
            --this.ZP;
            return cs$b.lz();
        }
        final cs$c cs$c = this.ZN.get(s);
        if (cs$c == null) {
            bh.w(this.ly() + "Invalid macro: " + s);
            --this.ZP;
            return cs.ZE;
        }
        final by a = this.a(s, cs$c.lA(), cs$c.lB(), cs$c.lC(), cs$c.lE(), cs$c.lD(), set, bj.kr());
        cq$a lf;
        if (((Set)a.getObject()).isEmpty()) {
            lf = cs$c.lF();
        }
        else {
            if (((Set)a.getObject()).size() > 1) {
                bh.z(this.ly() + "Multiple macros active for macroName " + s);
            }
            lf = ((Set)a.getObject()).iterator().next();
        }
        if (lf == null) {
            --this.ZP;
            return cs.ZE;
        }
        final by a2 = this.a(this.ZJ, lf, set, bj.kG());
        final boolean b = a.kQ() && a2.kQ();
        by ze;
        if (a2 == cs.ZE) {
            ze = cs.ZE;
        }
        else {
            ze = new by(a2.getObject(), b);
        }
        final d$a lf2 = lf.lf();
        if (ze.kQ()) {
            this.ZL.e(s, new cs$b(ze, lf2));
        }
        this.a(lf2, set);
        --this.ZP;
        return ze;
    }
    
    private by a(final Map map, final cq$a cq$a, final Set set, final cj cj) {
        boolean b = true;
        final d$a d$a = cq$a.le().get(com.google.android.gms.internal.b.cx.toString());
        by ze;
        if (d$a == null) {
            bh.w("No function id in properties");
            ze = cs.ZE;
        }
        else {
            final String fs = d$a.fS;
            final aj aj = map.get(fs);
            if (aj == null) {
                bh.w(fs + " has no backing implementation.");
                return cs.ZE;
            }
            ze = (by)this.ZK.get(cq$a);
            if (ze == null || this.ZG.kA()) {
                final HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
                final Iterator<Map.Entry<String, V>> iterator = cq$a.le().entrySet().iterator();
                int n = b ? 1 : 0;
                while (iterator.hasNext()) {
                    final Map.Entry<String, V> entry = iterator.next();
                    final by a = this.a((d$a)entry.getValue(), set, cj.bH(entry.getKey()).e((d$a)entry.getValue()));
                    if (a == cs.ZE) {
                        return cs.ZE;
                    }
                    int n2;
                    if (a.kQ()) {
                        cq$a.a(entry.getKey(), (d$a)a.getObject());
                        n2 = n;
                    }
                    else {
                        n2 = 0;
                    }
                    hashMap.put(entry.getKey(), a.getObject());
                    n = n2;
                }
                if (!aj.a(hashMap.keySet())) {
                    bh.w("Incorrect keys for function " + fs + " required " + aj.kC() + " had " + hashMap.keySet());
                    return cs.ZE;
                }
                if (n == 0 || !aj.jX()) {
                    b = false;
                }
                final by by = new by(aj.x(hashMap), b);
                if (b) {
                    this.ZK.e(cq$a, by);
                }
                cj.d((d$a)by.getObject());
                return by;
            }
        }
        return ze;
    }
    
    private by a(final Set set, final Set set2, final cs$a cs$a, final cr cr) {
        final HashSet set3 = new HashSet();
        final HashSet set4 = new HashSet();
        final Iterator<cq$e> iterator = set.iterator();
        boolean b = true;
        while (iterator.hasNext()) {
            final cq$e cq$e = iterator.next();
            final cm ko = cr.kO();
            final by a = this.a(cq$e, set2, ko);
            if (a.getObject()) {
                cs$a.a(cq$e, set3, set4, ko);
            }
            b = (b && a.kQ());
        }
        set3.removeAll(set4);
        cr.b(set3);
        return new by(set3, b);
    }
    
    private void a(final d$a d$a, final Set set) {
        if (d$a != null) {
            final by a = this.a(d$a, set, new bw());
            if (a != cs.ZE) {
                final Object o = dh.o((d$a)a.getObject());
                if (o instanceof Map) {
                    this.WK.push((Map)o);
                    return;
                }
                if (!(o instanceof List)) {
                    bh.z("pushAfterEvaluate: value not a Map or List");
                    return;
                }
                for (final Map next : (List<Object>)o) {
                    if (next instanceof Map) {
                        this.WK.push(next);
                    }
                    else {
                        bh.z("pushAfterEvaluate: value not a Map");
                    }
                }
            }
        }
    }
    
    private static void a(final List list, final List list2, final String s) {
        if (list.size() != list2.size()) {
            bh.x("Invalid resource: imbalance of rule names of functions for " + s + " operation. Using default rule name instead");
        }
    }
    
    private static void a(final Map map, final aj aj) {
        if (map.containsKey(aj.kB())) {
            throw new IllegalArgumentException("Duplicate function type name: " + aj.kB());
        }
        map.put(aj.kB(), aj);
    }
    
    private static cs$c d(final Map map, final String s) {
        cs$c cs$c = map.get(s);
        if (cs$c == null) {
            cs$c = new cs$c();
            map.put(s, cs$c);
        }
        return cs$c;
    }
    
    private static String h(final cq$a cq$a) {
        return dh.j(cq$a.le().get(com.google.android.gms.internal.b.cI.toString()));
    }
    
    private String ly() {
        if (this.ZP <= 1) {
            return "";
        }
        final StringBuilder sb = new StringBuilder();
        sb.append(Integer.toString(this.ZP));
        for (int i = 2; i < this.ZP; ++i) {
            sb.append(' ');
        }
        sb.append(": ");
        return sb.toString();
    }
    
    by a(final cq$a cq$a, final Set set, final cj cj) {
        final by a = this.a(this.ZI, cq$a, set, cj);
        final Boolean n = dh.n((d$a)a.getObject());
        cj.d(dh.r(n));
        return new by(n, a.kQ());
    }
    
    by a(final cq$e cq$e, final Set set, final cm cm) {
        final Iterator<cq$a> iterator = cq$e.ln().iterator();
        boolean b = true;
        while (iterator.hasNext()) {
            final by a = this.a(iterator.next(), set, cm.kI());
            if (a.getObject()) {
                cm.f(dh.r(false));
                return new by(false, a.kQ());
            }
            b = (b && a.kQ());
        }
        final Iterator<cq$a> iterator2 = cq$e.lm().iterator();
        while (iterator2.hasNext()) {
            final by a2 = this.a(iterator2.next(), set, cm.kJ());
            if (!(boolean)a2.getObject()) {
                cm.f(dh.r(false));
                return new by(false, a2.kQ());
            }
            b = (b && a2.kQ());
        }
        cm.f(dh.r(true));
        return new by(true, b);
    }
    
    by a(final String s, final Set set, final Map map, final Map map2, final Map map3, final Map map4, final Set set2, final cr cr) {
        return this.a(set, set2, new cs$a() {
            @Override
            public void a(final cq$e cq$e, final Set set, final Set set2, final cm cm) {
                final List list = map.get(cq$e);
                final List list2 = map2.get(cq$e);
                if (list != null) {
                    set.addAll(list);
                    cm.kK().b(list, list2);
                }
                final List list3 = map3.get(cq$e);
                final List list4 = map4.get(cq$e);
                if (list3 != null) {
                    set2.addAll(list3);
                    cm.kL().b(list3, list4);
                }
            }
        }, cr);
    }
    
    by a(final Set set, final cr cr) {
        return this.a(set, new HashSet(), new cs$a() {
            @Override
            public void a(final cq$e cq$e, final Set set, final Set set2, final cm cm) {
                set.addAll(cq$e.lo());
                set2.addAll(cq$e.lp());
                cm.kM().b(cq$e.lo(), cq$e.lt());
                cm.kN().b(cq$e.lp(), cq$e.lu());
            }
        }, cr);
    }
    
    void a(final aj aj) {
        a(this.ZJ, aj);
    }
    
    void b(final aj aj) {
        a(this.ZH, aj);
    }
    
    public by bR(final String s) {
        this.ZP = 0;
        final af ba = this.ZG.bA(s);
        final by a = this.a(s, new HashSet(), ba.kx());
        ba.kz();
        return a;
    }
    
    void bS(final String zo) {
        synchronized (this) {
            this.ZO = zo;
        }
    }
    
    public void bp(final String s) {
        final af bb;
        synchronized (this) {
            this.bS(s);
            bb = this.ZG.bB(s);
            final t ky = bb.ky();
            final Iterator iterator = ((Set)this.a(this.ZM, ky.kr()).getObject()).iterator();
            while (iterator.hasNext()) {
                this.a(this.ZH, iterator.next(), new HashSet(), ky.kq());
            }
        }
        bb.kz();
        this.bS(null);
    }
    // monitorexit(this)
    
    void c(final aj aj) {
        a(this.ZI, aj);
    }
    
    public void e(final List list) {
        while (true) {
            while (true) {
                c$i c$i = null;
                Label_0080: {
                    synchronized (this) {
                        final Iterator<c$i> iterator = list.iterator();
                        while (iterator.hasNext()) {
                            c$i = iterator.next();
                            if (c$i.name != null && c$i.name.startsWith("gaExperiment:")) {
                                break Label_0080;
                            }
                            bh.y("Ignored supplemental: " + c$i);
                        }
                        break;
                    }
                }
                ai.a(this.WK, c$i);
                continue;
            }
        }
    }
    // monitorexit(this)
    
    String lx() {
        synchronized (this) {
            return this.ZO;
        }
    }
}
