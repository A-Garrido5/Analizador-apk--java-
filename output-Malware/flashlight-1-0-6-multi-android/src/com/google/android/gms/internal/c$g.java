// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.internal;

public final class c$g extends kp
{
    private static volatile c$g[] fm;
    public int[] fn;
    public int[] fo;
    public int[] fp;
    public int[] fq;
    public int[] fr;
    public int[] fs;
    public int[] ft;
    public int[] fu;
    public int[] fv;
    public int[] fw;
    
    public c$g() {
        this.m();
    }
    
    public static c$g[] l() {
        Label_0027: {
            if (c$g.fm != null) {
                break Label_0027;
            }
            synchronized (kr.adX) {
                if (c$g.fm == null) {
                    c$g.fm = new c$g[0];
                }
                return c$g.fm;
            }
        }
    }
    
    @Override
    public final void a(final ko ko) {
        if (this.fn != null && this.fn.length > 0) {
            for (int i = 0; i < this.fn.length; ++i) {
                ko.i(1, this.fn[i]);
            }
        }
        if (this.fo != null && this.fo.length > 0) {
            for (int j = 0; j < this.fo.length; ++j) {
                ko.i(2, this.fo[j]);
            }
        }
        if (this.fp != null && this.fp.length > 0) {
            for (int k = 0; k < this.fp.length; ++k) {
                ko.i(3, this.fp[k]);
            }
        }
        if (this.fq != null && this.fq.length > 0) {
            for (int l = 0; l < this.fq.length; ++l) {
                ko.i(4, this.fq[l]);
            }
        }
        if (this.fr != null && this.fr.length > 0) {
            for (int n = 0; n < this.fr.length; ++n) {
                ko.i(5, this.fr[n]);
            }
        }
        if (this.fs != null && this.fs.length > 0) {
            for (int n2 = 0; n2 < this.fs.length; ++n2) {
                ko.i(6, this.fs[n2]);
            }
        }
        if (this.ft != null && this.ft.length > 0) {
            for (int n3 = 0; n3 < this.ft.length; ++n3) {
                ko.i(7, this.ft[n3]);
            }
        }
        if (this.fu != null && this.fu.length > 0) {
            for (int n4 = 0; n4 < this.fu.length; ++n4) {
                ko.i(8, this.fu[n4]);
            }
        }
        if (this.fv != null && this.fv.length > 0) {
            for (int n5 = 0; n5 < this.fv.length; ++n5) {
                ko.i(9, this.fv[n5]);
            }
        }
        if (this.fw != null) {
            final int length = this.fw.length;
            int n6 = 0;
            if (length > 0) {
                while (n6 < this.fw.length) {
                    ko.i(10, this.fw[n6]);
                    ++n6;
                }
            }
        }
        super.a(ko);
    }
    
    @Override
    public final int c() {
        int i = 0;
        final int c = super.c();
        int adY;
        if (this.fn != null && this.fn.length > 0) {
            int j = 0;
            int n = 0;
            while (j < this.fn.length) {
                n += ko.cX(this.fn[j]);
                ++j;
            }
            adY = c + n + 1 * this.fn.length;
        }
        else {
            adY = c;
        }
        if (this.fo != null && this.fo.length > 0) {
            int k = 0;
            int n2 = 0;
            while (k < this.fo.length) {
                n2 += ko.cX(this.fo[k]);
                ++k;
            }
            adY = adY + n2 + 1 * this.fo.length;
        }
        if (this.fp != null && this.fp.length > 0) {
            int l = 0;
            int n3 = 0;
            while (l < this.fp.length) {
                n3 += ko.cX(this.fp[l]);
                ++l;
            }
            adY = adY + n3 + 1 * this.fp.length;
        }
        if (this.fq != null && this.fq.length > 0) {
            int n4 = 0;
            int n5 = 0;
            while (n4 < this.fq.length) {
                n5 += ko.cX(this.fq[n4]);
                ++n4;
            }
            adY = adY + n5 + 1 * this.fq.length;
        }
        if (this.fr != null && this.fr.length > 0) {
            int n6 = 0;
            int n7 = 0;
            while (n6 < this.fr.length) {
                n7 += ko.cX(this.fr[n6]);
                ++n6;
            }
            adY = adY + n7 + 1 * this.fr.length;
        }
        if (this.fs != null && this.fs.length > 0) {
            int n8 = 0;
            int n9 = 0;
            while (n8 < this.fs.length) {
                n9 += ko.cX(this.fs[n8]);
                ++n8;
            }
            adY = adY + n9 + 1 * this.fs.length;
        }
        if (this.ft != null && this.ft.length > 0) {
            int n10 = 0;
            int n11 = 0;
            while (n10 < this.ft.length) {
                n11 += ko.cX(this.ft[n10]);
                ++n10;
            }
            adY = adY + n11 + 1 * this.ft.length;
        }
        if (this.fu != null && this.fu.length > 0) {
            int n12 = 0;
            int n13 = 0;
            while (n12 < this.fu.length) {
                n13 += ko.cX(this.fu[n12]);
                ++n12;
            }
            adY = adY + n13 + 1 * this.fu.length;
        }
        if (this.fv != null && this.fv.length > 0) {
            int n14 = 0;
            int n15 = 0;
            while (n14 < this.fv.length) {
                n15 += ko.cX(this.fv[n14]);
                ++n14;
            }
            adY = adY + n15 + 1 * this.fv.length;
        }
        if (this.fw != null && this.fw.length > 0) {
            int n16 = 0;
            while (i < this.fw.length) {
                n16 += ko.cX(this.fw[i]);
                ++i;
            }
            adY = adY + n16 + 1 * this.fw.length;
        }
        return this.adY = adY;
    }
    
    @Override
    public final boolean equals(final Object o) {
        if (o != this) {
            if (!(o instanceof c$g)) {
                return false;
            }
            final c$g c$g = (c$g)o;
            if (!kr.equals(this.fn, c$g.fn)) {
                return false;
            }
            if (!kr.equals(this.fo, c$g.fo)) {
                return false;
            }
            if (!kr.equals(this.fp, c$g.fp)) {
                return false;
            }
            if (!kr.equals(this.fq, c$g.fq)) {
                return false;
            }
            if (!kr.equals(this.fr, c$g.fr)) {
                return false;
            }
            if (!kr.equals(this.fs, c$g.fs)) {
                return false;
            }
            if (!kr.equals(this.ft, c$g.ft)) {
                return false;
            }
            if (!kr.equals(this.fu, c$g.fu)) {
                return false;
            }
            if (!kr.equals(this.fv, c$g.fv)) {
                return false;
            }
            if (!kr.equals(this.fw, c$g.fw)) {
                return false;
            }
            if (this.adU != null && !this.adU.isEmpty()) {
                return this.adU.equals(c$g.adU);
            }
            if (c$g.adU != null && !c$g.adU.isEmpty()) {
                return false;
            }
        }
        return true;
    }
    
    public final c$g h(final kn kn) {
    Label_0193:
        while (true) {
            final int mh = kn.mh();
            switch (mh) {
                default: {
                    if (!this.a(kn, mh)) {
                        break Label_0193;
                    }
                    continue;
                }
                case 0: {
                    break Label_0193;
                }
                case 8: {
                    final int b = kw.b(kn, 8);
                    int i;
                    if (this.fn == null) {
                        i = 0;
                    }
                    else {
                        i = this.fn.length;
                    }
                    final int[] fn = new int[b + i];
                    if (i != 0) {
                        System.arraycopy(this.fn, 0, fn, 0, i);
                    }
                    while (i < -1 + fn.length) {
                        fn[i] = kn.mk();
                        kn.mh();
                        ++i;
                    }
                    fn[i] = kn.mk();
                    this.fn = fn;
                    continue;
                }
                case 10: {
                    final int cr = kn.cR(kn.mn());
                    final int position = kn.getPosition();
                    int n = 0;
                    while (kn.ms() > 0) {
                        kn.mk();
                        ++n;
                    }
                    kn.cT(position);
                    int j;
                    if (this.fn == null) {
                        j = 0;
                    }
                    else {
                        j = this.fn.length;
                    }
                    final int[] fn2 = new int[n + j];
                    if (j != 0) {
                        System.arraycopy(this.fn, 0, fn2, 0, j);
                    }
                    while (j < fn2.length) {
                        fn2[j] = kn.mk();
                        ++j;
                    }
                    this.fn = fn2;
                    kn.cS(cr);
                    continue;
                }
                case 16: {
                    final int b2 = kw.b(kn, 16);
                    int k;
                    if (this.fo == null) {
                        k = 0;
                    }
                    else {
                        k = this.fo.length;
                    }
                    final int[] fo = new int[b2 + k];
                    if (k != 0) {
                        System.arraycopy(this.fo, 0, fo, 0, k);
                    }
                    while (k < -1 + fo.length) {
                        fo[k] = kn.mk();
                        kn.mh();
                        ++k;
                    }
                    fo[k] = kn.mk();
                    this.fo = fo;
                    continue;
                }
                case 18: {
                    final int cr2 = kn.cR(kn.mn());
                    final int position2 = kn.getPosition();
                    int n2 = 0;
                    while (kn.ms() > 0) {
                        kn.mk();
                        ++n2;
                    }
                    kn.cT(position2);
                    int l;
                    if (this.fo == null) {
                        l = 0;
                    }
                    else {
                        l = this.fo.length;
                    }
                    final int[] fo2 = new int[n2 + l];
                    if (l != 0) {
                        System.arraycopy(this.fo, 0, fo2, 0, l);
                    }
                    while (l < fo2.length) {
                        fo2[l] = kn.mk();
                        ++l;
                    }
                    this.fo = fo2;
                    kn.cS(cr2);
                    continue;
                }
                case 24: {
                    final int b3 = kw.b(kn, 24);
                    int length;
                    if (this.fp == null) {
                        length = 0;
                    }
                    else {
                        length = this.fp.length;
                    }
                    final int[] fp = new int[b3 + length];
                    if (length != 0) {
                        System.arraycopy(this.fp, 0, fp, 0, length);
                    }
                    while (length < -1 + fp.length) {
                        fp[length] = kn.mk();
                        kn.mh();
                        ++length;
                    }
                    fp[length] = kn.mk();
                    this.fp = fp;
                    continue;
                }
                case 26: {
                    final int cr3 = kn.cR(kn.mn());
                    final int position3 = kn.getPosition();
                    int n3 = 0;
                    while (kn.ms() > 0) {
                        kn.mk();
                        ++n3;
                    }
                    kn.cT(position3);
                    int length2;
                    if (this.fp == null) {
                        length2 = 0;
                    }
                    else {
                        length2 = this.fp.length;
                    }
                    final int[] fp2 = new int[n3 + length2];
                    if (length2 != 0) {
                        System.arraycopy(this.fp, 0, fp2, 0, length2);
                    }
                    while (length2 < fp2.length) {
                        fp2[length2] = kn.mk();
                        ++length2;
                    }
                    this.fp = fp2;
                    kn.cS(cr3);
                    continue;
                }
                case 32: {
                    final int b4 = kw.b(kn, 32);
                    int length3;
                    if (this.fq == null) {
                        length3 = 0;
                    }
                    else {
                        length3 = this.fq.length;
                    }
                    final int[] fq = new int[b4 + length3];
                    if (length3 != 0) {
                        System.arraycopy(this.fq, 0, fq, 0, length3);
                    }
                    while (length3 < -1 + fq.length) {
                        fq[length3] = kn.mk();
                        kn.mh();
                        ++length3;
                    }
                    fq[length3] = kn.mk();
                    this.fq = fq;
                    continue;
                }
                case 34: {
                    final int cr4 = kn.cR(kn.mn());
                    final int position4 = kn.getPosition();
                    int n4 = 0;
                    while (kn.ms() > 0) {
                        kn.mk();
                        ++n4;
                    }
                    kn.cT(position4);
                    int length4;
                    if (this.fq == null) {
                        length4 = 0;
                    }
                    else {
                        length4 = this.fq.length;
                    }
                    final int[] fq2 = new int[n4 + length4];
                    if (length4 != 0) {
                        System.arraycopy(this.fq, 0, fq2, 0, length4);
                    }
                    while (length4 < fq2.length) {
                        fq2[length4] = kn.mk();
                        ++length4;
                    }
                    this.fq = fq2;
                    kn.cS(cr4);
                    continue;
                }
                case 40: {
                    final int b5 = kw.b(kn, 40);
                    int length5;
                    if (this.fr == null) {
                        length5 = 0;
                    }
                    else {
                        length5 = this.fr.length;
                    }
                    final int[] fr = new int[b5 + length5];
                    if (length5 != 0) {
                        System.arraycopy(this.fr, 0, fr, 0, length5);
                    }
                    while (length5 < -1 + fr.length) {
                        fr[length5] = kn.mk();
                        kn.mh();
                        ++length5;
                    }
                    fr[length5] = kn.mk();
                    this.fr = fr;
                    continue;
                }
                case 42: {
                    final int cr5 = kn.cR(kn.mn());
                    final int position5 = kn.getPosition();
                    int n5 = 0;
                    while (kn.ms() > 0) {
                        kn.mk();
                        ++n5;
                    }
                    kn.cT(position5);
                    int length6;
                    if (this.fr == null) {
                        length6 = 0;
                    }
                    else {
                        length6 = this.fr.length;
                    }
                    final int[] fr2 = new int[n5 + length6];
                    if (length6 != 0) {
                        System.arraycopy(this.fr, 0, fr2, 0, length6);
                    }
                    while (length6 < fr2.length) {
                        fr2[length6] = kn.mk();
                        ++length6;
                    }
                    this.fr = fr2;
                    kn.cS(cr5);
                    continue;
                }
                case 48: {
                    final int b6 = kw.b(kn, 48);
                    int length7;
                    if (this.fs == null) {
                        length7 = 0;
                    }
                    else {
                        length7 = this.fs.length;
                    }
                    final int[] fs = new int[b6 + length7];
                    if (length7 != 0) {
                        System.arraycopy(this.fs, 0, fs, 0, length7);
                    }
                    while (length7 < -1 + fs.length) {
                        fs[length7] = kn.mk();
                        kn.mh();
                        ++length7;
                    }
                    fs[length7] = kn.mk();
                    this.fs = fs;
                    continue;
                }
                case 50: {
                    final int cr6 = kn.cR(kn.mn());
                    final int position6 = kn.getPosition();
                    int n6 = 0;
                    while (kn.ms() > 0) {
                        kn.mk();
                        ++n6;
                    }
                    kn.cT(position6);
                    int length8;
                    if (this.fs == null) {
                        length8 = 0;
                    }
                    else {
                        length8 = this.fs.length;
                    }
                    final int[] fs2 = new int[n6 + length8];
                    if (length8 != 0) {
                        System.arraycopy(this.fs, 0, fs2, 0, length8);
                    }
                    while (length8 < fs2.length) {
                        fs2[length8] = kn.mk();
                        ++length8;
                    }
                    this.fs = fs2;
                    kn.cS(cr6);
                    continue;
                }
                case 56: {
                    final int b7 = kw.b(kn, 56);
                    int length9;
                    if (this.ft == null) {
                        length9 = 0;
                    }
                    else {
                        length9 = this.ft.length;
                    }
                    final int[] ft = new int[b7 + length9];
                    if (length9 != 0) {
                        System.arraycopy(this.ft, 0, ft, 0, length9);
                    }
                    while (length9 < -1 + ft.length) {
                        ft[length9] = kn.mk();
                        kn.mh();
                        ++length9;
                    }
                    ft[length9] = kn.mk();
                    this.ft = ft;
                    continue;
                }
                case 58: {
                    final int cr7 = kn.cR(kn.mn());
                    final int position7 = kn.getPosition();
                    int n7 = 0;
                    while (kn.ms() > 0) {
                        kn.mk();
                        ++n7;
                    }
                    kn.cT(position7);
                    int length10;
                    if (this.ft == null) {
                        length10 = 0;
                    }
                    else {
                        length10 = this.ft.length;
                    }
                    final int[] ft2 = new int[n7 + length10];
                    if (length10 != 0) {
                        System.arraycopy(this.ft, 0, ft2, 0, length10);
                    }
                    while (length10 < ft2.length) {
                        ft2[length10] = kn.mk();
                        ++length10;
                    }
                    this.ft = ft2;
                    kn.cS(cr7);
                    continue;
                }
                case 64: {
                    final int b8 = kw.b(kn, 64);
                    int length11;
                    if (this.fu == null) {
                        length11 = 0;
                    }
                    else {
                        length11 = this.fu.length;
                    }
                    final int[] fu = new int[b8 + length11];
                    if (length11 != 0) {
                        System.arraycopy(this.fu, 0, fu, 0, length11);
                    }
                    while (length11 < -1 + fu.length) {
                        fu[length11] = kn.mk();
                        kn.mh();
                        ++length11;
                    }
                    fu[length11] = kn.mk();
                    this.fu = fu;
                    continue;
                }
                case 66: {
                    final int cr8 = kn.cR(kn.mn());
                    final int position8 = kn.getPosition();
                    int n8 = 0;
                    while (kn.ms() > 0) {
                        kn.mk();
                        ++n8;
                    }
                    kn.cT(position8);
                    int length12;
                    if (this.fu == null) {
                        length12 = 0;
                    }
                    else {
                        length12 = this.fu.length;
                    }
                    final int[] fu2 = new int[n8 + length12];
                    if (length12 != 0) {
                        System.arraycopy(this.fu, 0, fu2, 0, length12);
                    }
                    while (length12 < fu2.length) {
                        fu2[length12] = kn.mk();
                        ++length12;
                    }
                    this.fu = fu2;
                    kn.cS(cr8);
                    continue;
                }
                case 72: {
                    final int b9 = kw.b(kn, 72);
                    int length13;
                    if (this.fv == null) {
                        length13 = 0;
                    }
                    else {
                        length13 = this.fv.length;
                    }
                    final int[] fv = new int[b9 + length13];
                    if (length13 != 0) {
                        System.arraycopy(this.fv, 0, fv, 0, length13);
                    }
                    while (length13 < -1 + fv.length) {
                        fv[length13] = kn.mk();
                        kn.mh();
                        ++length13;
                    }
                    fv[length13] = kn.mk();
                    this.fv = fv;
                    continue;
                }
                case 74: {
                    final int cr9 = kn.cR(kn.mn());
                    final int position9 = kn.getPosition();
                    int n9 = 0;
                    while (kn.ms() > 0) {
                        kn.mk();
                        ++n9;
                    }
                    kn.cT(position9);
                    int length14;
                    if (this.fv == null) {
                        length14 = 0;
                    }
                    else {
                        length14 = this.fv.length;
                    }
                    final int[] fv2 = new int[n9 + length14];
                    if (length14 != 0) {
                        System.arraycopy(this.fv, 0, fv2, 0, length14);
                    }
                    while (length14 < fv2.length) {
                        fv2[length14] = kn.mk();
                        ++length14;
                    }
                    this.fv = fv2;
                    kn.cS(cr9);
                    continue;
                }
                case 80: {
                    final int b10 = kw.b(kn, 80);
                    int length15;
                    if (this.fw == null) {
                        length15 = 0;
                    }
                    else {
                        length15 = this.fw.length;
                    }
                    final int[] fw = new int[b10 + length15];
                    if (length15 != 0) {
                        System.arraycopy(this.fw, 0, fw, 0, length15);
                    }
                    while (length15 < -1 + fw.length) {
                        fw[length15] = kn.mk();
                        kn.mh();
                        ++length15;
                    }
                    fw[length15] = kn.mk();
                    this.fw = fw;
                    continue;
                }
                case 82: {
                    final int cr10 = kn.cR(kn.mn());
                    final int position10 = kn.getPosition();
                    int n10 = 0;
                    while (kn.ms() > 0) {
                        kn.mk();
                        ++n10;
                    }
                    kn.cT(position10);
                    int length16;
                    if (this.fw == null) {
                        length16 = 0;
                    }
                    else {
                        length16 = this.fw.length;
                    }
                    final int[] fw2 = new int[n10 + length16];
                    if (length16 != 0) {
                        System.arraycopy(this.fw, 0, fw2, 0, length16);
                    }
                    while (length16 < fw2.length) {
                        fw2[length16] = kn.mk();
                        ++length16;
                    }
                    this.fw = fw2;
                    kn.cS(cr10);
                    continue;
                }
            }
        }
        return this;
    }
    
    @Override
    public final int hashCode() {
        final int n = 31 * (31 * (31 * (31 * (31 * (31 * (31 * (31 * (31 * (31 * (527 + kr.hashCode(this.fn)) + kr.hashCode(this.fo)) + kr.hashCode(this.fp)) + kr.hashCode(this.fq)) + kr.hashCode(this.fr)) + kr.hashCode(this.fs)) + kr.hashCode(this.ft)) + kr.hashCode(this.fu)) + kr.hashCode(this.fv)) + kr.hashCode(this.fw));
        int hashCode;
        if (this.adU == null || this.adU.isEmpty()) {
            hashCode = 0;
        }
        else {
            hashCode = this.adU.hashCode();
        }
        return hashCode + n;
    }
    
    public final c$g m() {
        this.fn = kw.aea;
        this.fo = kw.aea;
        this.fp = kw.aea;
        this.fq = kw.aea;
        this.fr = kw.aea;
        this.fs = kw.aea;
        this.ft = kw.aea;
        this.fu = kw.aea;
        this.fv = kw.aea;
        this.fw = kw.aea;
        this.adU = null;
        this.adY = -1;
        return this;
    }
}
