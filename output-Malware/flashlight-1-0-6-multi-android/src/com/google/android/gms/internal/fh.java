// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.internal;

import android.os.Message;
import android.content.ServiceConnection;
import android.content.Intent;
import android.os.Handler;
import android.content.Context;
import java.util.HashMap;
import android.os.Handler$Callback;

public final class fh implements Handler$Callback
{
    private static final Object Du;
    private static fh Dv;
    private final HashMap Dw;
    private final Context lp;
    private final Handler mHandler;
    
    static {
        Du = new Object();
    }
    
    private fh(final Context context) {
        this.mHandler = new Handler(context.getMainLooper(), (Handler$Callback)this);
        this.Dw = new HashMap();
        this.lp = context.getApplicationContext();
    }
    
    public static fh x(final Context context) {
        synchronized (fh.Du) {
            if (fh.Dv == null) {
                fh.Dv = new fh(context.getApplicationContext());
            }
            return fh.Dv;
        }
    }
    
    public final boolean a(final String s, final ff$f ff$f) {
        while (true) {
            while (true) {
                fh$a fh$a;
                synchronized (this.Dw) {
                    fh$a = this.Dw.get(s);
                    if (fh$a == null) {
                        fh$a = new fh$a(this, s);
                        fh$a.a(ff$f);
                        fh$a.y(this.lp.bindService(new Intent(s).setPackage("com.google.android.gms"), (ServiceConnection)fh$a.eP(), 129));
                        this.Dw.put(s, fh$a);
                        return fh$a.isBound();
                    }
                    this.mHandler.removeMessages(0, (Object)fh$a);
                    if (fh$a.c(ff$f)) {
                        throw new IllegalStateException("Trying to bind a GmsServiceConnection that was already connected before.  startServiceAction=" + s);
                    }
                }
                fh$a.a(ff$f);
                switch (fh$a.getState()) {
                    case 1: {
                        ff$f.onServiceConnected(fh$a.getComponentName(), fh$a.getBinder());
                        continue;
                    }
                    case 2: {
                        fh$a.y(this.lp.bindService(new Intent(s).setPackage("com.google.android.gms"), (ServiceConnection)fh$a.eP(), 129));
                        continue;
                    }
                    default: {
                        continue;
                    }
                }
                break;
            }
        }
    }
    
    public final void b(final String s, final ff$f ff$f) {
        final fh$a fh$a;
        synchronized (this.Dw) {
            fh$a = this.Dw.get(s);
            if (fh$a == null) {
                throw new IllegalStateException("Nonexistent connection status for service action: " + s);
            }
        }
        if (!fh$a.c(ff$f)) {
            throw new IllegalStateException("Trying to unbind a GmsServiceConnection  that was not bound before.  startServiceAction=" + s);
        }
        fh$a.b(ff$f);
        if (fh$a.eR()) {
            this.mHandler.sendMessageDelayed(this.mHandler.obtainMessage(0, (Object)fh$a), 5000L);
        }
    }
    // monitorexit(hashMap)
    
    public final boolean handleMessage(final Message message) {
        switch (message.what) {
            default: {
                return false;
            }
            case 0: {
                final fh$a fh$a = (fh$a)message.obj;
                synchronized (this.Dw) {
                    if (fh$a.eR()) {
                        this.lp.unbindService((ServiceConnection)fh$a.eP());
                        this.Dw.remove(fh$a.eQ());
                    }
                    return true;
                }
                break;
            }
        }
    }
}
