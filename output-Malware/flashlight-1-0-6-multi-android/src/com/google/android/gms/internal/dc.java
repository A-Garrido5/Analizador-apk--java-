// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.internal;

import java.util.Iterator;
import java.util.List;
import java.util.Map;
import android.location.Location;
import android.text.TextUtils;
import android.content.Context;

public final class dc extends db$a
{
    private static final Object px;
    private static dc py;
    private final Context mContext;
    private final ax pA;
    private final bf pz;
    
    static {
        px = new Object();
    }
    
    private dc(final Context mContext, final ax pa, final bf pz) {
        this.mContext = mContext;
        this.pz = pz;
        this.pA = pa;
    }
    
    private static cz a(final Context context, final ax ax, final bf bf, final cx cx) {
        dw.v("Starting ad request from service.");
        bf.init();
        final dg dg = new dg(context);
        if (dg.qk == -1) {
            dw.v("Device is offline.");
            return new cz(2);
        }
        final de de = new de(cx.applicationInfo.packageName);
        if (cx.pg.extras != null) {
            final String string = cx.pg.extras.getString("_ad");
            if (string != null) {
                return dd.a(context, cx, string);
            }
        }
        final Location a = bf.a(250L);
        final String ah = ax.aH();
        final String a2 = dd.a(cx, dg, a, ax.aI());
        if (a2 == null) {
            return new cz(0);
        }
        dv.rp.post((Runnable)new Runnable() {
            final /* synthetic */ ea$a pE = p(a2);
            
            @Override
            public final void run() {
                final dz a = dz.a(context, new ak(), false, false, null, cx.kK);
                a.setWillNotDraw(true);
                de.b(a);
                final ea bi = a.bI();
                bi.a("/invalidRequest", de.pK);
                bi.a("/loadAdURL", de.pL);
                bi.a("/log", ba.mM);
                bi.a(this.pE);
                dw.v("Loading the JS library.");
                a.loadUrl(ah);
            }
        });
        final String bj = de.bj();
        if (TextUtils.isEmpty((CharSequence)bj)) {
            return new cz(de.getErrorCode());
        }
        return a(context, cx.kK.rq, bj);
    }
    
    public static cz a(final Context p0, final String p1, final String p2) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: new             Lcom/google/android/gms/internal/df;
        //     3: dup            
        //     4: invokespecial   com/google/android/gms/internal/df.<init>:()V
        //     7: astore_3       
        //     8: new             Ljava/net/URL;
        //    11: dup            
        //    12: aload_2        
        //    13: invokespecial   java/net/URL.<init>:(Ljava/lang/String;)V
        //    16: astore          4
        //    18: invokestatic    android/os/SystemClock.elapsedRealtime:()J
        //    21: lstore          6
        //    23: aload           4
        //    25: astore          8
        //    27: iconst_0       
        //    28: istore          9
        //    30: aload           8
        //    32: invokevirtual   java/net/URL.openConnection:()Ljava/net/URLConnection;
        //    35: checkcast       Ljava/net/HttpURLConnection;
        //    38: astore          10
        //    40: aload_0        
        //    41: aload_1        
        //    42: iconst_0       
        //    43: aload           10
        //    45: invokestatic    com/google/android/gms/internal/dq.a:(Landroid/content/Context;Ljava/lang/String;ZLjava/net/HttpURLConnection;)V
        //    48: aload           10
        //    50: invokevirtual   java/net/HttpURLConnection.getResponseCode:()I
        //    53: istore          12
        //    55: aload           10
        //    57: invokevirtual   java/net/HttpURLConnection.getHeaderFields:()Ljava/util/Map;
        //    60: astore          13
        //    62: iload           12
        //    64: sipush          200
        //    67: if_icmplt       139
        //    70: iload           12
        //    72: sipush          300
        //    75: if_icmpge       139
        //    78: aload           8
        //    80: invokevirtual   java/net/URL.toString:()Ljava/lang/String;
        //    83: astore          18
        //    85: new             Ljava/io/InputStreamReader;
        //    88: dup            
        //    89: aload           10
        //    91: invokevirtual   java/net/HttpURLConnection.getInputStream:()Ljava/io/InputStream;
        //    94: invokespecial   java/io/InputStreamReader.<init>:(Ljava/io/InputStream;)V
        //    97: invokestatic    com/google/android/gms/internal/dq.a:(Ljava/lang/Readable;)Ljava/lang/String;
        //   100: astore          19
        //   102: aload           18
        //   104: aload           13
        //   106: aload           19
        //   108: iload           12
        //   110: invokestatic    com/google/android/gms/internal/dc.a:(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;I)V
        //   113: aload_3        
        //   114: aload           18
        //   116: aload           13
        //   118: aload           19
        //   120: invokevirtual   com/google/android/gms/internal/df.a:(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
        //   123: aload_3        
        //   124: lload           6
        //   126: invokevirtual   com/google/android/gms/internal/df.g:(J)Lcom/google/android/gms/internal/cz;
        //   129: astore          20
        //   131: aload           10
        //   133: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   136: aload           20
        //   138: areturn        
        //   139: aload           8
        //   141: invokevirtual   java/net/URL.toString:()Ljava/lang/String;
        //   144: aload           13
        //   146: aconst_null    
        //   147: iload           12
        //   149: invokestatic    com/google/android/gms/internal/dc.a:(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;I)V
        //   152: iload           12
        //   154: sipush          300
        //   157: if_icmplt       251
        //   160: iload           12
        //   162: sipush          400
        //   165: if_icmpge       251
        //   168: aload           10
        //   170: ldc             "Location"
        //   172: invokevirtual   java/net/HttpURLConnection.getHeaderField:(Ljava/lang/String;)Ljava/lang/String;
        //   175: astore          15
        //   177: aload           15
        //   179: invokestatic    android/text/TextUtils.isEmpty:(Ljava/lang/CharSequence;)Z
        //   182: ifeq            208
        //   185: ldc             "No location header to follow redirect."
        //   187: invokestatic    com/google/android/gms/internal/dw.z:(Ljava/lang/String;)V
        //   190: new             Lcom/google/android/gms/internal/cz;
        //   193: dup            
        //   194: iconst_0       
        //   195: invokespecial   com/google/android/gms/internal/cz.<init>:(I)V
        //   198: astore          17
        //   200: aload           10
        //   202: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   205: aload           17
        //   207: areturn        
        //   208: new             Ljava/net/URL;
        //   211: dup            
        //   212: aload           15
        //   214: invokespecial   java/net/URL.<init>:(Ljava/lang/String;)V
        //   217: astore          8
        //   219: iinc            9, 1
        //   222: iload           9
        //   224: iconst_5       
        //   225: if_icmple       289
        //   228: ldc             "Too many redirects."
        //   230: invokestatic    com/google/android/gms/internal/dw.z:(Ljava/lang/String;)V
        //   233: new             Lcom/google/android/gms/internal/cz;
        //   236: dup            
        //   237: iconst_0       
        //   238: invokespecial   com/google/android/gms/internal/cz.<init>:(I)V
        //   241: astore          16
        //   243: aload           10
        //   245: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   248: aload           16
        //   250: areturn        
        //   251: new             Ljava/lang/StringBuilder;
        //   254: dup            
        //   255: ldc             "Received error HTTP response code: "
        //   257: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   260: iload           12
        //   262: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   265: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   268: invokestatic    com/google/android/gms/internal/dw.z:(Ljava/lang/String;)V
        //   271: new             Lcom/google/android/gms/internal/cz;
        //   274: dup            
        //   275: iconst_0       
        //   276: invokespecial   com/google/android/gms/internal/cz.<init>:(I)V
        //   279: astore          14
        //   281: aload           10
        //   283: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   286: aload           14
        //   288: areturn        
        //   289: aload_3        
        //   290: aload           13
        //   292: invokevirtual   com/google/android/gms/internal/df.e:(Ljava/util/Map;)V
        //   295: aload           10
        //   297: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   300: goto            30
        //   303: astore          5
        //   305: new             Ljava/lang/StringBuilder;
        //   308: dup            
        //   309: ldc             "Error while connecting to ad server: "
        //   311: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   314: aload           5
        //   316: invokevirtual   java/io/IOException.getMessage:()Ljava/lang/String;
        //   319: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   322: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   325: invokestatic    com/google/android/gms/internal/dw.z:(Ljava/lang/String;)V
        //   328: new             Lcom/google/android/gms/internal/cz;
        //   331: dup            
        //   332: iconst_2       
        //   333: invokespecial   com/google/android/gms/internal/cz.<init>:(I)V
        //   336: areturn        
        //   337: astore          11
        //   339: aload           10
        //   341: invokevirtual   java/net/HttpURLConnection.disconnect:()V
        //   344: aload           11
        //   346: athrow         
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  0      23     303    337    Ljava/io/IOException;
        //  30     40     303    337    Ljava/io/IOException;
        //  40     62     337    347    Any
        //  78     131    337    347    Any
        //  131    136    303    337    Ljava/io/IOException;
        //  139    152    337    347    Any
        //  168    200    337    347    Any
        //  200    205    303    337    Ljava/io/IOException;
        //  208    219    337    347    Any
        //  228    243    337    347    Any
        //  243    248    303    337    Ljava/io/IOException;
        //  251    281    337    347    Any
        //  281    286    303    337    Ljava/io/IOException;
        //  289    295    337    347    Any
        //  295    300    303    337    Ljava/io/IOException;
        //  339    347    303    337    Ljava/io/IOException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0139:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public static dc a(final Context context, final ax ax, final bf bf) {
        synchronized (dc.px) {
            if (dc.py == null) {
                dc.py = new dc(context.getApplicationContext(), ax, bf);
            }
            return dc.py;
        }
    }
    
    private static void a(final String s, final Map map, final String s2, final int n) {
        if (dw.n(2)) {
            dw.y("Http Response: {\n  URL:\n    " + s + "\n  Headers:");
            if (map != null) {
                for (final String s3 : map.keySet()) {
                    dw.y("    " + s3 + ":");
                    final Iterator iterator2 = ((List)map.get(s3)).iterator();
                    while (iterator2.hasNext()) {
                        dw.y("      " + iterator2.next());
                    }
                }
            }
            dw.y("  Body:");
            if (s2 != null) {
                for (int i = 0; i < Math.min(s2.length(), 100000); i += 1000) {
                    dw.y(s2.substring(i, Math.min(s2.length(), i + 1000)));
                }
            }
            else {
                dw.y("    null");
            }
            dw.y("  Response Code:\n    " + n + "\n}");
        }
    }
    
    private static ea$a p(final String s) {
        return new ea$a() {
            @Override
            public final void a(final dz dz) {
                final String format = String.format("javascript:%s(%s);", "AFMA_buildAdURL", s);
                dw.y("About to execute: " + format);
                dz.loadUrl(format);
            }
        };
    }
    
    public final cz b(final cx cx) {
        return a(this.mContext, this.pA, this.pz, cx);
    }
}
