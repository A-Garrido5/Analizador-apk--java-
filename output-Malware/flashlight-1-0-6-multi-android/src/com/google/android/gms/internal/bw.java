// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.internal;

import com.google.ads.mediation.MediationBannerListener;
import com.google.ads.mediation.MediationBannerAdapter;
import com.google.ads.mediation.MediationInterstitialListener;
import com.google.android.gms.dynamic.e;
import android.app.Activity;
import com.google.ads.mediation.MediationInterstitialAdapter;
import com.google.android.gms.dynamic.d;
import java.util.Iterator;
import java.util.Map;
import android.os.RemoteException;
import java.util.HashMap;
import org.json.JSONObject;
import com.google.ads.mediation.MediationServerParameters;
import com.google.ads.mediation.NetworkExtras;
import com.google.ads.mediation.MediationAdapter;

public final class bw extends br$a
{
    private final MediationAdapter nH;
    private final NetworkExtras nI;
    
    public bw(final MediationAdapter nh, final NetworkExtras ni) {
        this.nH = nh;
        this.nI = ni;
    }
    
    private MediationServerParameters b(final String s, final int n, final String s2) {
        HashMap<String, String> hashMap = null;
        Label_0104: {
            if (s != null) {
                try {
                    final JSONObject jsonObject = new JSONObject(s);
                    hashMap = new HashMap<String, String>(jsonObject.length());
                    final Iterator keys = jsonObject.keys();
                    while (keys.hasNext()) {
                        final String s3 = keys.next();
                        hashMap.put(s3, jsonObject.getString(s3));
                    }
                    break Label_0104;
                }
                catch (Throwable t) {
                    dw.c("Could not get MediationServerParameters.", t);
                    throw new RemoteException();
                }
            }
            hashMap = new HashMap<String, String>(0);
        }
        final Class serverParametersType = this.nH.getServerParametersType();
        MediationServerParameters mediationServerParameters = null;
        if (serverParametersType != null) {
            mediationServerParameters = serverParametersType.newInstance();
            mediationServerParameters.load(hashMap);
        }
        return mediationServerParameters;
    }
    
    public final void a(final d d, final ah ah, final String s, final bs bs) {
        this.a(d, ah, s, null, bs);
    }
    
    public final void a(final d d, final ah ah, final String s, final String s2, final bs bs) {
        if (!(this.nH instanceof MediationInterstitialAdapter)) {
            dw.z("MediationAdapter is not a MediationInterstitialAdapter: " + this.nH.getClass().getCanonicalName());
            throw new RemoteException();
        }
        dw.v("Requesting interstitial ad from adapter.");
        try {
            ((MediationInterstitialAdapter)this.nH).requestInterstitialAd(new bx(bs), (Activity)e.d(d), this.b(s, ah.lL, s2), by.e(ah), this.nI);
        }
        catch (Throwable t) {
            dw.c("Could not request interstitial ad from adapter.", t);
            throw new RemoteException();
        }
    }
    
    public final void a(final d d, final ak ak, final ah ah, final String s, final bs bs) {
        this.a(d, ak, ah, s, null, bs);
    }
    
    public final void a(final d d, final ak ak, final ah ah, final String s, final String s2, final bs bs) {
        if (!(this.nH instanceof MediationBannerAdapter)) {
            dw.z("MediationAdapter is not a MediationBannerAdapter: " + this.nH.getClass().getCanonicalName());
            throw new RemoteException();
        }
        dw.v("Requesting banner ad from adapter.");
        try {
            ((MediationBannerAdapter)this.nH).requestBannerAd(new bx(bs), (Activity)e.d(d), this.b(s, ah.lL, s2), by.b(ak), by.e(ah), this.nI);
        }
        catch (Throwable t) {
            dw.c("Could not request banner ad from adapter.", t);
            throw new RemoteException();
        }
    }
    
    public final void destroy() {
        try {
            this.nH.destroy();
        }
        catch (Throwable t) {
            dw.c("Could not destroy adapter.", t);
            throw new RemoteException();
        }
    }
    
    public final d getView() {
        if (!(this.nH instanceof MediationBannerAdapter)) {
            dw.z("MediationAdapter is not a MediationBannerAdapter: " + this.nH.getClass().getCanonicalName());
            throw new RemoteException();
        }
        try {
            return e.h(((MediationBannerAdapter)this.nH).getBannerView());
        }
        catch (Throwable t) {
            dw.c("Could not get banner view from adapter.", t);
            throw new RemoteException();
        }
    }
    
    public final void pause() {
        throw new RemoteException();
    }
    
    public final void resume() {
        throw new RemoteException();
    }
    
    public final void showInterstitial() {
        if (!(this.nH instanceof MediationInterstitialAdapter)) {
            dw.z("MediationAdapter is not a MediationInterstitialAdapter: " + this.nH.getClass().getCanonicalName());
            throw new RemoteException();
        }
        dw.v("Showing interstitial from adapter.");
        try {
            ((MediationInterstitialAdapter)this.nH).showInterstitial();
        }
        catch (Throwable t) {
            dw.c("Could not show interstitial from adapter.", t);
            throw new RemoteException();
        }
    }
}
