// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.internal;

import android.os.Parcel;
import java.util.Iterator;
import java.util.ArrayList;
import java.util.HashMap;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;

public class gd implements SafeParcelable
{
    public static final ge CREATOR;
    private final HashMap Ei;
    private final ArrayList Ej;
    private final String Ek;
    private final int xH;
    
    static {
        CREATOR = new ge();
    }
    
    gd(final int xh, final ArrayList list, final String s) {
        this.xH = xh;
        this.Ej = null;
        this.Ei = b(list);
        this.Ek = (String)fq.f(s);
        this.fl();
    }
    
    public gd(final Class clazz) {
        this.xH = 1;
        this.Ej = null;
        this.Ei = new HashMap();
        this.Ek = clazz.getCanonicalName();
    }
    
    private static HashMap b(final ArrayList list) {
        final HashMap<String, HashMap> hashMap = new HashMap<String, HashMap>();
        for (int size = list.size(), i = 0; i < size; ++i) {
            final gd$a gd$a = list.get(i);
            hashMap.put(gd$a.className, gd$a.fp());
        }
        return hashMap;
    }
    
    public void a(final Class clazz, final HashMap hashMap) {
        this.Ei.put(clazz.getCanonicalName(), hashMap);
    }
    
    public HashMap au(final String s) {
        return this.Ei.get(s);
    }
    
    public boolean b(final Class clazz) {
        return this.Ei.containsKey(clazz.getCanonicalName());
    }
    
    public int describeContents() {
        final ge creator = gd.CREATOR;
        return 0;
    }
    
    public void fl() {
        final Iterator<String> iterator = this.Ei.keySet().iterator();
        while (iterator.hasNext()) {
            final HashMap<String, HashMap<String, HashMap<String, HashMap>>> hashMap = this.Ei.get(iterator.next());
            final Iterator<String> iterator2 = hashMap.keySet().iterator();
            while (iterator2.hasNext()) {
                ((ga$a)hashMap.get(iterator2.next())).a(this);
            }
        }
    }
    
    public void fm() {
        for (final String s : this.Ei.keySet()) {
            final HashMap<String, HashMap<String, HashMap<String, HashMap>>> hashMap = this.Ei.get(s);
            final HashMap<String, ga$a> hashMap2 = new HashMap<String, ga$a>();
            for (final String s2 : hashMap.keySet()) {
                hashMap2.put(s2, ((ga$a)hashMap.get(s2)).fb());
            }
            this.Ei.put(s, hashMap2);
        }
    }
    
    ArrayList fn() {
        final ArrayList<gd$a> list = new ArrayList<gd$a>();
        for (final String s : this.Ei.keySet()) {
            list.add(new gd$a(s, (HashMap)this.Ei.get(s)));
        }
        return list;
    }
    
    public String fo() {
        return this.Ek;
    }
    
    int getVersionCode() {
        return this.xH;
    }
    
    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder();
        for (final String s : this.Ei.keySet()) {
            sb.append(s).append(":\n");
            final HashMap<String, HashMap<String, HashMap<String, HashMap>>> hashMap = this.Ei.get(s);
            for (final String s2 : hashMap.keySet()) {
                sb.append("  ").append(s2).append(": ");
                sb.append(hashMap.get(s2));
            }
        }
        return sb.toString();
    }
    
    public void writeToParcel(final Parcel parcel, final int n) {
        final ge creator = gd.CREATOR;
        ge.a(this, parcel, n);
    }
}
