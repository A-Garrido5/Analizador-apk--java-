// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.internal;

import com.google.android.gms.common.data.DataHolder;
import com.google.android.gms.common.api.a$d;
import com.google.android.gms.appstate.AppStateBuffer;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.appstate.AppStateManager$StateResult;
import com.google.android.gms.appstate.AppStateManager$StateLoadedResult;
import com.google.android.gms.appstate.AppStateManager$StateConflictResult;

final class ei$f extends ff$d implements AppStateManager$StateConflictResult, AppStateManager$StateLoadedResult, AppStateManager$StateResult
{
    final /* synthetic */ ei wI;
    private final Status wJ;
    private final int wK;
    private final AppStateBuffer wL;
    
    public ei$f(final ei wi, final a$d a$d, final int wk, final DataHolder dataHolder) {
        this.wI = wi;
        super(wi, a$d, dataHolder);
        this.wK = wk;
        this.wJ = new Status(dataHolder.getStatusCode());
        this.wL = new AppStateBuffer(dataHolder);
    }
    
    private boolean dy() {
        return this.wJ.getStatusCode() == 2000;
    }
    
    public final void a(final a$d a$d, final DataHolder dataHolder) {
        a$d.b(this);
    }
    
    @Override
    public final AppStateManager$StateConflictResult getConflictResult() {
        if (this.dy()) {
            return this;
        }
        return null;
    }
    
    @Override
    public final AppStateManager$StateLoadedResult getLoadedResult() {
        final AppStateManager$StateLoadedResult appStateManager$StateLoadedResult;
        if (this.dy()) {
            appStateManager$StateLoadedResult = null;
        }
        return appStateManager$StateLoadedResult;
    }
    
    @Override
    public final byte[] getLocalData() {
        if (this.wL.getCount() == 0) {
            return null;
        }
        return this.wL.get(0).getLocalData();
    }
    
    @Override
    public final String getResolvedVersion() {
        if (this.wL.getCount() == 0) {
            return null;
        }
        return this.wL.get(0).getConflictVersion();
    }
    
    @Override
    public final byte[] getServerData() {
        if (this.wL.getCount() == 0) {
            return null;
        }
        return this.wL.get(0).getConflictData();
    }
    
    @Override
    public final int getStateKey() {
        return this.wK;
    }
    
    @Override
    public final Status getStatus() {
        return this.wJ;
    }
    
    @Override
    public final void release() {
        this.wL.close();
    }
}
