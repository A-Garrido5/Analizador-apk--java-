// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.internal;

public final class c$b extends kp
{
    private static volatile c$b[] eG;
    public int[] eH;
    public int eI;
    public boolean eJ;
    public boolean eK;
    public int name;
    
    public c$b() {
        this.e();
    }
    
    public static c$b[] d() {
        Label_0027: {
            if (c$b.eG != null) {
                break Label_0027;
            }
            synchronized (kr.adX) {
                if (c$b.eG == null) {
                    c$b.eG = new c$b[0];
                }
                return c$b.eG;
            }
        }
    }
    
    @Override
    public final void a(final ko ko) {
        if (this.eK) {
            ko.a(1, this.eK);
        }
        ko.i(2, this.eI);
        if (this.eH != null && this.eH.length > 0) {
            for (int i = 0; i < this.eH.length; ++i) {
                ko.i(3, this.eH[i]);
            }
        }
        if (this.name != 0) {
            ko.i(4, this.name);
        }
        if (this.eJ) {
            ko.a(6, this.eJ);
        }
        super.a(ko);
    }
    
    @Override
    public final int c() {
        int n = 0;
        int c = super.c();
        if (this.eK) {
            c += ko.b(1, this.eK);
        }
        final int n2 = c + ko.j(2, this.eI);
        int adY;
        if (this.eH != null && this.eH.length > 0) {
            for (int i = 0; i < this.eH.length; ++i) {
                n += ko.cX(this.eH[i]);
            }
            adY = n2 + n + 1 * this.eH.length;
        }
        else {
            adY = n2;
        }
        if (this.name != 0) {
            adY += ko.j(4, this.name);
        }
        if (this.eJ) {
            adY += ko.b(6, this.eJ);
        }
        return this.adY = adY;
    }
    
    public final c$b c(final kn kn) {
    Label_0081:
        while (true) {
            final int mh = kn.mh();
            switch (mh) {
                default: {
                    if (!this.a(kn, mh)) {
                        break Label_0081;
                    }
                    continue;
                }
                case 0: {
                    break Label_0081;
                }
                case 8: {
                    this.eK = kn.ml();
                    continue;
                }
                case 16: {
                    this.eI = kn.mk();
                    continue;
                }
                case 24: {
                    final int b = kw.b(kn, 24);
                    int i;
                    if (this.eH == null) {
                        i = 0;
                    }
                    else {
                        i = this.eH.length;
                    }
                    final int[] eh = new int[b + i];
                    if (i != 0) {
                        System.arraycopy(this.eH, 0, eh, 0, i);
                    }
                    while (i < -1 + eh.length) {
                        eh[i] = kn.mk();
                        kn.mh();
                        ++i;
                    }
                    eh[i] = kn.mk();
                    this.eH = eh;
                    continue;
                }
                case 26: {
                    final int cr = kn.cR(kn.mn());
                    final int position = kn.getPosition();
                    int n = 0;
                    while (kn.ms() > 0) {
                        kn.mk();
                        ++n;
                    }
                    kn.cT(position);
                    int j;
                    if (this.eH == null) {
                        j = 0;
                    }
                    else {
                        j = this.eH.length;
                    }
                    final int[] eh2 = new int[n + j];
                    if (j != 0) {
                        System.arraycopy(this.eH, 0, eh2, 0, j);
                    }
                    while (j < eh2.length) {
                        eh2[j] = kn.mk();
                        ++j;
                    }
                    this.eH = eh2;
                    kn.cS(cr);
                    continue;
                }
                case 32: {
                    this.name = kn.mk();
                    continue;
                }
                case 48: {
                    this.eJ = kn.ml();
                    continue;
                }
            }
        }
        return this;
    }
    
    public final c$b e() {
        this.eH = kw.aea;
        this.eI = 0;
        this.name = 0;
        this.eJ = false;
        this.eK = false;
        this.adU = null;
        this.adY = -1;
        return this;
    }
    
    @Override
    public final boolean equals(final Object o) {
        if (o != this) {
            if (!(o instanceof c$b)) {
                return false;
            }
            final c$b c$b = (c$b)o;
            if (!kr.equals(this.eH, c$b.eH)) {
                return false;
            }
            if (this.eI != c$b.eI) {
                return false;
            }
            if (this.name != c$b.name) {
                return false;
            }
            if (this.eJ != c$b.eJ) {
                return false;
            }
            if (this.eK != c$b.eK) {
                return false;
            }
            if (this.adU != null && !this.adU.isEmpty()) {
                return this.adU.equals(c$b.adU);
            }
            if (c$b.adU != null && !c$b.adU.isEmpty()) {
                return false;
            }
        }
        return true;
    }
    
    @Override
    public final int hashCode() {
        int n = 1231;
        final int n2 = 31 * (31 * (31 * (527 + kr.hashCode(this.eH)) + this.eI) + this.name);
        int n3;
        if (this.eJ) {
            n3 = n;
        }
        else {
            n3 = 1237;
        }
        final int n4 = 31 * (n3 + n2);
        if (!this.eK) {
            n = 1237;
        }
        final int n5 = 31 * (n4 + n);
        int hashCode;
        if (this.adU == null || this.adU.isEmpty()) {
            hashCode = 0;
        }
        else {
            hashCode = this.adU.hashCode();
        }
        return hashCode + n5;
    }
}
