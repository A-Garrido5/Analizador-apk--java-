// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.cast;

import com.google.android.gms.internal.fo;
import com.google.android.gms.internal.gp;
import org.json.JSONException;
import com.google.android.gms.internal.eo;
import android.text.TextUtils;
import org.json.JSONObject;

public final class MediaInfo
{
    public static final int STREAM_TYPE_BUFFERED = 1;
    public static final int STREAM_TYPE_INVALID = -1;
    public static final int STREAM_TYPE_LIVE = 2;
    public static final int STREAM_TYPE_NONE;
    private final String yi;
    private int yj;
    private String yk;
    private MediaMetadata yl;
    private long ym;
    private JSONObject yn;
    
    MediaInfo(final String yi) {
        if (TextUtils.isEmpty((CharSequence)yi)) {
            throw new IllegalArgumentException("content ID cannot be null or empty");
        }
        this.yi = yi;
        this.yj = -1;
    }
    
    MediaInfo(final JSONObject jsonObject) {
        this.yi = jsonObject.getString("contentId");
        final String string = jsonObject.getString("streamType");
        if ("NONE".equals(string)) {
            this.yj = 0;
        }
        else if ("BUFFERED".equals(string)) {
            this.yj = 1;
        }
        else if ("LIVE".equals(string)) {
            this.yj = 2;
        }
        else {
            this.yj = -1;
        }
        this.yk = jsonObject.getString("contentType");
        if (jsonObject.has("metadata")) {
            final JSONObject jsonObject2 = jsonObject.getJSONObject("metadata");
            (this.yl = new MediaMetadata(jsonObject2.getInt("metadataType"))).c(jsonObject2);
        }
        this.ym = eo.b(jsonObject.optDouble("duration", 0.0));
        this.yn = jsonObject.optJSONObject("customData");
    }
    
    final void a(final MediaMetadata yl) {
        this.yl = yl;
    }
    
    final void b(final JSONObject yn) {
        this.yn = yn;
    }
    
    final void dA() {
        if (TextUtils.isEmpty((CharSequence)this.yi)) {
            throw new IllegalArgumentException("content ID cannot be null or empty");
        }
        if (TextUtils.isEmpty((CharSequence)this.yk)) {
            throw new IllegalArgumentException("content type cannot be null or empty");
        }
        if (this.yj == -1) {
            throw new IllegalArgumentException("a valid stream type must be specified");
        }
    }
    
    public final JSONObject dB() {
        JSONObject jsonObject = null;
    Label_0143:
        while (true) {
            jsonObject = new JSONObject();
            while (true) {
                Label_0145: {
                    try {
                        jsonObject.put("contentId", (Object)this.yi);
                        switch (this.yj) {
                            case 2: {
                                final String s = "LIVE";
                                jsonObject.put("streamType", (Object)s);
                                if (this.yk != null) {
                                    jsonObject.put("contentType", (Object)this.yk);
                                }
                                if (this.yl != null) {
                                    jsonObject.put("metadata", (Object)this.yl.dB());
                                }
                                jsonObject.put("duration", eo.m(this.ym));
                                if (this.yn != null) {
                                    jsonObject.put("customData", (Object)this.yn);
                                    return jsonObject;
                                }
                                break Label_0143;
                            }
                            case 1: {
                                break Label_0145;
                            }
                        }
                    }
                    catch (JSONException ex) {
                        return jsonObject;
                    }
                    final String s = "NONE";
                    continue;
                }
                final String s = "BUFFERED";
                continue;
            }
        }
        return jsonObject;
    }
    
    @Override
    public final boolean equals(final Object o) {
        boolean b;
        if (this == o) {
            b = true;
        }
        else {
            final boolean b2 = o instanceof MediaInfo;
            b = false;
            if (b2) {
                final MediaInfo mediaInfo = (MediaInfo)o;
                int n;
                if (this.yn == null) {
                    n = 1;
                }
                else {
                    n = 0;
                }
                int n2;
                if (mediaInfo.yn == null) {
                    n2 = 1;
                }
                else {
                    n2 = 0;
                }
                b = false;
                if (n == n2) {
                    if (this.yn != null && mediaInfo.yn != null) {
                        final boolean d = gp.d(this.yn, mediaInfo.yn);
                        b = false;
                        if (!d) {
                            return b;
                        }
                    }
                    final boolean a = eo.a(this.yi, mediaInfo.yi);
                    b = false;
                    if (a) {
                        final int yj = this.yj;
                        final int yj2 = mediaInfo.yj;
                        b = false;
                        if (yj == yj2) {
                            final boolean a2 = eo.a(this.yk, mediaInfo.yk);
                            b = false;
                            if (a2) {
                                final boolean a3 = eo.a(this.yl, mediaInfo.yl);
                                b = false;
                                if (a3) {
                                    final long n3 = lcmp(this.ym, mediaInfo.ym);
                                    b = false;
                                    if (n3 == 0) {
                                        return true;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return b;
    }
    
    public final String getContentId() {
        return this.yi;
    }
    
    public final String getContentType() {
        return this.yk;
    }
    
    public final JSONObject getCustomData() {
        return this.yn;
    }
    
    public final MediaMetadata getMetadata() {
        return this.yl;
    }
    
    public final long getStreamDuration() {
        return this.ym;
    }
    
    public final int getStreamType() {
        return this.yj;
    }
    
    @Override
    public final int hashCode() {
        return fo.hashCode(this.yi, this.yj, this.yk, this.yl, this.ym, String.valueOf(this.yn));
    }
    
    final void k(final long ym) {
        if (ym < 0L) {
            throw new IllegalArgumentException("Stream duration cannot be negative");
        }
        this.ym = ym;
    }
    
    final void setContentType(final String yk) {
        if (TextUtils.isEmpty((CharSequence)yk)) {
            throw new IllegalArgumentException("content type cannot be null or empty");
        }
        this.yk = yk;
    }
    
    final void setStreamType(final int yj) {
        if (yj < -1 || yj > 2) {
            throw new IllegalArgumentException("invalid stream type");
        }
        this.yj = yj;
    }
}
