// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.maps;

import com.google.android.gms.dynamic.a;
import android.os.Bundle;
import android.os.RemoteException;
import com.google.android.gms.maps.model.RuntimeRemoteException;
import android.util.AttributeSet;
import android.view.ViewGroup;
import android.content.Context;
import android.widget.FrameLayout;

public class MapView extends FrameLayout
{
    private GoogleMap RT;
    private final MapView$b RW;
    
    public MapView(final Context context) {
        super(context);
        this.RW = new MapView$b((ViewGroup)this, context, null);
    }
    
    public MapView(final Context context, final AttributeSet set) {
        super(context, set);
        this.RW = new MapView$b((ViewGroup)this, context, GoogleMapOptions.createFromAttributes(context, set));
    }
    
    public MapView(final Context context, final AttributeSet set, final int n) {
        super(context, set, n);
        this.RW = new MapView$b((ViewGroup)this, context, GoogleMapOptions.createFromAttributes(context, set));
    }
    
    public MapView(final Context context, final GoogleMapOptions googleMapOptions) {
        super(context);
        this.RW = new MapView$b((ViewGroup)this, context, googleMapOptions);
    }
    
    public final GoogleMap getMap() {
        if (this.RT != null) {
            return this.RT;
        }
        this.RW.ip();
        if (this.RW.fW() == null) {
            return null;
        }
        try {
            return this.RT = new GoogleMap(((MapView$a)this.RW.fW()).iq().getMap());
        }
        catch (RemoteException ex) {
            throw new RuntimeRemoteException(ex);
        }
    }
    
    public final void onCreate(final Bundle bundle) {
        this.RW.onCreate(bundle);
        if (this.RW.fW() == null) {
            final MapView$b rw = this.RW;
            a.b(this);
        }
    }
    
    public final void onDestroy() {
        this.RW.onDestroy();
    }
    
    public final void onLowMemory() {
        this.RW.onLowMemory();
    }
    
    public final void onPause() {
        this.RW.onPause();
    }
    
    public final void onResume() {
        this.RW.onResume();
    }
    
    public final void onSaveInstanceState(final Bundle bundle) {
        this.RW.onSaveInstanceState(bundle);
    }
}
