// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.wallet.fragment;

import com.google.android.gms.dynamic.e;
import android.os.RemoteException;
import com.google.android.gms.internal.iz;
import com.google.android.gms.dynamic.LifecycleDelegate;
import android.app.FragmentManager;
import com.google.android.gms.common.GooglePlayServicesUtil;
import android.util.AttributeSet;
import android.app.Activity;
import android.view.View;
import android.view.ViewGroup;
import android.view.LayoutInflater;
import android.content.Context;
import android.content.Intent;
import android.util.Log;
import android.os.Parcelable;
import android.os.Bundle;
import com.google.android.gms.dynamic.b;
import com.google.android.gms.wallet.MaskedWalletRequest;
import android.app.Fragment;

public final class WalletFragment extends Fragment
{
    private final Fragment Hv;
    private WalletFragmentInitParams acA;
    private MaskedWalletRequest acB;
    private Boolean acC;
    private WalletFragment$b acH;
    private final b acI;
    private final WalletFragment$c acJ;
    private WalletFragment$a acK;
    private WalletFragmentOptions acz;
    private boolean mCreated;
    
    public WalletFragment() {
        this.mCreated = false;
        this.acI = b.a(this);
        this.acJ = new WalletFragment$c(this, null);
        this.acK = new WalletFragment$a(this);
        this.Hv = this;
    }
    
    public static WalletFragment newInstance(final WalletFragmentOptions walletFragmentOptions) {
        final WalletFragment walletFragment = new WalletFragment();
        final Bundle arguments = new Bundle();
        arguments.putParcelable("extraWalletFragmentOptions", (Parcelable)walletFragmentOptions);
        walletFragment.Hv.setArguments(arguments);
        return walletFragment;
    }
    
    public final int getState() {
        if (this.acH != null) {
            return this.acH.getState();
        }
        return 0;
    }
    
    public final void initialize(final WalletFragmentInitParams acA) {
        if (this.acH != null) {
            this.acH.initialize(acA);
            this.acA = null;
        }
        else {
            if (this.acA != null) {
                Log.w("WalletFragment", "initialize(WalletFragmentInitParams) was called more than once. Ignoring.");
                return;
            }
            this.acA = acA;
            if (this.acB != null) {
                Log.w("WalletFragment", "updateMaskedWallet() was called before initialize()");
            }
        }
    }
    
    public final void onActivityResult(final int n, final int n2, final Intent intent) {
        super.onActivityResult(n, n2, intent);
        if (this.acH != null) {
            this.acH.onActivityResult(n, n2, intent);
        }
    }
    
    public final void onCreate(final Bundle bundle) {
        super.onCreate(bundle);
        if (bundle != null) {
            bundle.setClassLoader(WalletFragmentOptions.class.getClassLoader());
            final WalletFragmentInitParams acA = (WalletFragmentInitParams)bundle.getParcelable("walletFragmentInitParams");
            if (acA != null) {
                if (this.acA != null) {
                    Log.w("WalletFragment", "initialize(WalletFragmentInitParams) was called more than once.Ignoring.");
                }
                this.acA = acA;
            }
            if (this.acB == null) {
                this.acB = (MaskedWalletRequest)bundle.getParcelable("maskedWalletRequest");
            }
            if (bundle.containsKey("walletFragmentOptions")) {
                this.acz = (WalletFragmentOptions)bundle.getParcelable("walletFragmentOptions");
            }
            if (bundle.containsKey("enabled")) {
                this.acC = bundle.getBoolean("enabled");
            }
        }
        else if (this.Hv.getArguments() != null) {
            final WalletFragmentOptions acz = (WalletFragmentOptions)this.Hv.getArguments().getParcelable("extraWalletFragmentOptions");
            if (acz != null) {
                acz.I((Context)this.Hv.getActivity());
                this.acz = acz;
            }
        }
        this.mCreated = true;
        this.acJ.onCreate(bundle);
    }
    
    public final View onCreateView(final LayoutInflater layoutInflater, final ViewGroup viewGroup, final Bundle bundle) {
        return this.acJ.onCreateView(layoutInflater, viewGroup, bundle);
    }
    
    public final void onDestroy() {
        super.onDestroy();
        this.mCreated = false;
    }
    
    public final void onInflate(final Activity activity, final AttributeSet set, final Bundle bundle) {
        super.onInflate(activity, set, bundle);
        if (this.acz == null) {
            this.acz = WalletFragmentOptions.a((Context)activity, set);
        }
        final Bundle bundle2 = new Bundle();
        bundle2.putParcelable("attrKeyWalletFragmentOptions", (Parcelable)this.acz);
        this.acJ.onInflate(activity, bundle2, bundle);
    }
    
    public final void onPause() {
        super.onPause();
        this.acJ.onPause();
    }
    
    public final void onResume() {
        super.onResume();
        this.acJ.onResume();
        final FragmentManager fragmentManager = this.Hv.getActivity().getFragmentManager();
        final Fragment fragmentByTag = fragmentManager.findFragmentByTag("GooglePlayServicesErrorDialog");
        if (fragmentByTag != null) {
            fragmentManager.beginTransaction().remove(fragmentByTag).commit();
            GooglePlayServicesUtil.showErrorDialogFragment(GooglePlayServicesUtil.isGooglePlayServicesAvailable((Context)this.Hv.getActivity()), this.Hv.getActivity(), -1);
        }
    }
    
    public final void onSaveInstanceState(final Bundle bundle) {
        super.onSaveInstanceState(bundle);
        bundle.setClassLoader(WalletFragmentOptions.class.getClassLoader());
        this.acJ.onSaveInstanceState(bundle);
        if (this.acA != null) {
            bundle.putParcelable("walletFragmentInitParams", (Parcelable)this.acA);
            this.acA = null;
        }
        if (this.acB != null) {
            bundle.putParcelable("maskedWalletRequest", (Parcelable)this.acB);
            this.acB = null;
        }
        if (this.acz != null) {
            bundle.putParcelable("walletFragmentOptions", (Parcelable)this.acz);
            this.acz = null;
        }
        if (this.acC != null) {
            bundle.putBoolean("enabled", (boolean)this.acC);
            this.acC = null;
        }
    }
    
    public final void onStart() {
        super.onStart();
        this.acJ.onStart();
    }
    
    public final void onStop() {
        super.onStop();
        this.acJ.onStop();
    }
    
    public final void setEnabled(final boolean b) {
        if (this.acH != null) {
            this.acH.setEnabled(b);
            this.acC = null;
            return;
        }
        this.acC = b;
    }
    
    public final void setOnStateChangedListener(final WalletFragment$OnStateChangedListener walletFragment$OnStateChangedListener) {
        this.acK.a(walletFragment$OnStateChangedListener);
    }
    
    public final void updateMaskedWalletRequest(final MaskedWalletRequest acB) {
        if (this.acH != null) {
            this.acH.updateMaskedWalletRequest(acB);
            this.acB = null;
            return;
        }
        this.acB = acB;
    }
}
