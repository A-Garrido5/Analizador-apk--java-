// 
// Decompiled by Procyon v0.5.30
// 

package com.google.android.gms.appstate;

import com.google.android.gms.common.api.a$b;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.a$d;
import com.google.android.gms.common.api.PendingResult;
import com.google.android.gms.internal.fq;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.internal.ei;
import com.google.android.gms.common.api.Api$ApiOptions$NoOptions;
import com.google.android.gms.common.api.Api$a;
import com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener;
import com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks;
import com.google.android.gms.internal.fc;
import android.os.Looper;
import android.content.Context;
import com.google.android.gms.common.api.Api$b;
import com.google.android.gms.common.api.Api$c;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.common.api.Api;

public final class AppStateManager
{
    public static final Api API;
    public static final Scope SCOPE_APP_STATE;
    static final Api$c wx;
    private static final Api$b wy;
    
    static {
        wx = new Api$c();
        wy = new Api$b() {
            public final ei a(final Context context, final Looper looper, final fc fc, final Api$ApiOptions$NoOptions api$ApiOptions$NoOptions, final GoogleApiClient$ConnectionCallbacks googleApiClient$ConnectionCallbacks, final GoogleApiClient$OnConnectionFailedListener googleApiClient$OnConnectionFailedListener) {
                return new ei(context, looper, googleApiClient$ConnectionCallbacks, googleApiClient$OnConnectionFailedListener, fc.eC(), fc.eE().toArray(new String[0]));
            }
            
            @Override
            public final int getPriority() {
                return Integer.MAX_VALUE;
            }
        };
        SCOPE_APP_STATE = new Scope("https://www.googleapis.com/auth/appstate");
        API = new Api(AppStateManager.wy, AppStateManager.wx, new Scope[] { AppStateManager.SCOPE_APP_STATE });
    }
    
    private static AppStateManager$StateResult a(final Status status) {
        return new AppStateManager$StateResult() {
            @Override
            public final AppStateManager$StateConflictResult getConflictResult() {
                return null;
            }
            
            @Override
            public final AppStateManager$StateLoadedResult getLoadedResult() {
                return null;
            }
            
            @Override
            public final Status getStatus() {
                return status;
            }
            
            @Override
            public final void release() {
            }
        };
    }
    
    public static ei a(final GoogleApiClient googleApiClient) {
        boolean b = true;
        fq.b(googleApiClient != null && b, "GoogleApiClient parameter is required.");
        fq.a(googleApiClient.isConnected(), (Object)"GoogleApiClient must be connected.");
        final ei ei = (ei)googleApiClient.a(AppStateManager.wx);
        if (ei == null) {
            b = false;
        }
        fq.a(b, (Object)"GoogleApiClient is not configured to use the AppState API. Pass AppStateManager.API into GoogleApiClient.Builder#addApi() to use this feature.");
        return ei;
    }
    
    public static PendingResult delete(final GoogleApiClient googleApiClient, final int n) {
        return googleApiClient.b(new AppStateManager$b() {
            protected final void a(final ei ei) {
                ei.a(this, n);
            }
            
            public final AppStateManager$StateDeletedResult c(final Status status) {
                return new AppStateManager$StateDeletedResult() {
                    @Override
                    public int getStateKey() {
                        return n;
                    }
                    
                    @Override
                    public Status getStatus() {
                        return status;
                    }
                };
            }
        });
    }
    
    public static int getMaxNumKeys(final GoogleApiClient googleApiClient) {
        return a(googleApiClient).dw();
    }
    
    public static int getMaxStateSize(final GoogleApiClient googleApiClient) {
        return a(googleApiClient).dv();
    }
    
    public static PendingResult list(final GoogleApiClient googleApiClient) {
        return googleApiClient.a(new AppStateManager$c() {
            protected final void a(final ei ei) {
                ei.a(this);
            }
        });
    }
    
    public static PendingResult load(final GoogleApiClient googleApiClient, final int n) {
        return googleApiClient.a(new AppStateManager$e() {
            protected final void a(final ei ei) {
                ei.b(this, n);
            }
        });
    }
    
    public static PendingResult resolve(final GoogleApiClient googleApiClient, final int n, final String s, final byte[] array) {
        return googleApiClient.b(new AppStateManager$e() {
            protected final void a(final ei ei) {
                ei.a(this, n, s, array);
            }
        });
    }
    
    public static PendingResult signOut(final GoogleApiClient googleApiClient) {
        return googleApiClient.b(new AppStateManager$d() {
            protected final void a(final ei ei) {
                ei.b(this);
            }
        });
    }
    
    public static void update(final GoogleApiClient googleApiClient, final int n, final byte[] array) {
        googleApiClient.b(new AppStateManager$e() {
            protected final void a(final ei ei) {
                ei.a(null, n, array);
            }
        });
    }
    
    public static PendingResult updateImmediate(final GoogleApiClient googleApiClient, final int n, final byte[] array) {
        return googleApiClient.b(new AppStateManager$e() {
            protected final void a(final ei ei) {
                ei.a(this, n, array);
            }
        });
    }
}
