// 
// Decompiled by Procyon v0.5.30
// 

package com.google.ads.mediation.millennial;

import com.millennialmedia.android.MMWebView;
import com.millennialmedia.android.MMAdImplController;
import com.millennialmedia.android.Utils$ThreadUtils;
import android.view.MotionEvent;
import android.view.animation.Animation;
import com.millennialmedia.android.MMAdView$BannerBounds;
import android.graphics.Bitmap;
import com.millennialmedia.android.DTOResizeParameters;
import android.widget.RelativeLayout$LayoutParams;
import android.widget.ImageView$ScaleType;
import android.view.ViewParent;
import android.view.Window;
import android.view.ViewGroup;
import com.millennialmedia.android.MMLog;
import android.util.AttributeSet;
import com.millennialmedia.android.MMAdView$MMAdViewMMAdImpl;
import com.millennialmedia.android.MMAdView$ResizeView;
import android.widget.ImageView;
import android.view.animation.Animation$AnimationListener;
import android.view.View$OnClickListener;
import com.millennialmedia.android.MMLayout;
import com.google.ads.AdRequest$ErrorCode;
import android.view.ViewGroup$LayoutParams;
import com.millennialmedia.android.RequestListener;
import android.widget.FrameLayout$LayoutParams;
import android.content.Context;
import com.google.ads.mediation.NetworkExtras;
import com.google.ads.AdSize;
import com.google.ads.mediation.MediationServerParameters;
import android.app.Activity;
import android.view.View;
import java.util.Map;
import com.millennialmedia.android.MMSDK;
import com.millennialmedia.android.MMRequest;
import android.text.TextUtils;
import com.google.ads.mediation.MediationAdRequest;
import java.util.Hashtable;
import com.millennialmedia.android.MMAd;
import com.google.ads.AdRequest$Gender;
import android.widget.FrameLayout;
import com.millennialmedia.android.MMInterstitial;
import com.google.ads.mediation.MediationInterstitialListener;
import com.google.ads.mediation.MediationBannerListener;
import com.millennialmedia.android.MMAdView;
import com.google.ads.mediation.MediationInterstitialAdapter;
import com.google.ads.mediation.MediationBannerAdapter;

public final class MillennialAdapter implements MediationBannerAdapter, MediationInterstitialAdapter
{
    private MMAdView adView;
    private MediationBannerListener bannerListener;
    private MediationInterstitialListener interstitialListener;
    private MMInterstitial interstitialView;
    private FrameLayout wrappedAdView;
    
    static /* synthetic */ int[] $SWITCH_TABLE$com$google$ads$AdRequest$Gender() {
        final int[] $switch_TABLE$com$google$ads$AdRequest$Gender = MillennialAdapter.$SWITCH_TABLE$com$google$ads$AdRequest$Gender;
        if ($switch_TABLE$com$google$ads$AdRequest$Gender != null) {
            return $switch_TABLE$com$google$ads$AdRequest$Gender;
        }
        final int[] $switch_TABLE$com$google$ads$AdRequest$Gender2 = new int[AdRequest$Gender.values().length];
        while (true) {
            try {
                $switch_TABLE$com$google$ads$AdRequest$Gender2[AdRequest$Gender.FEMALE.ordinal()] = 3;
                try {
                    $switch_TABLE$com$google$ads$AdRequest$Gender2[AdRequest$Gender.MALE.ordinal()] = 2;
                    try {
                        $switch_TABLE$com$google$ads$AdRequest$Gender2[AdRequest$Gender.UNKNOWN.ordinal()] = 1;
                        return MillennialAdapter.$SWITCH_TABLE$com$google$ads$AdRequest$Gender = $switch_TABLE$com$google$ads$AdRequest$Gender2;
                    }
                    catch (NoSuchFieldError noSuchFieldError) {}
                }
                catch (NoSuchFieldError noSuchFieldError2) {}
            }
            catch (NoSuchFieldError noSuchFieldError3) {
                continue;
            }
            break;
        }
    }
    
    private void populateAdViewParameters(final MMAd mmAd, final Hashtable metaValues, final MediationAdRequest mediationAdRequest, MillennialAdapterExtras millennialAdapterExtras) {
        if (millennialAdapterExtras == null) {
            millennialAdapterExtras = new MillennialAdapterExtras();
        }
        if (mediationAdRequest.getKeywords() != null) {
            metaValues.put("keywords", TextUtils.join((CharSequence)",", (Iterable)mediationAdRequest.getKeywords()));
        }
        if (millennialAdapterExtras.getChildren() != null) {
            String s;
            if (millennialAdapterExtras.getChildren()) {
                s = "true";
            }
            else {
                s = "false";
            }
            metaValues.put("children", s);
        }
        final MMRequest mmRequest = new MMRequest();
        MMSDK.setBroadcastEvents(true);
        if (mediationAdRequest.getAgeInYears() != null) {
            mmRequest.setAge(mediationAdRequest.getAgeInYears().toString());
        }
        if (mediationAdRequest.getGender() != null) {
            switch ($SWITCH_TABLE$com$google$ads$AdRequest$Gender()[mediationAdRequest.getGender().ordinal()]) {
                case 2: {
                    mmRequest.setGender("male");
                    break;
                }
                case 3: {
                    mmRequest.setGender("female");
                    break;
                }
            }
        }
        if (millennialAdapterExtras.getIncomeInUsDollars() != null) {
            mmRequest.setIncome(millennialAdapterExtras.getIncomeInUsDollars().toString());
        }
        if (mediationAdRequest.getLocation() != null) {
            MMRequest.setUserLocation(mediationAdRequest.getLocation());
        }
        if (millennialAdapterExtras.getPostalCode() != null) {
            mmRequest.setZip(millennialAdapterExtras.getPostalCode());
        }
        if (millennialAdapterExtras.getMaritalStatus() != null) {
            mmRequest.setMarital(millennialAdapterExtras.getMaritalStatus().getDescription());
        }
        if (millennialAdapterExtras.getEthnicity() != null) {
            mmRequest.setEthnicity(millennialAdapterExtras.getEthnicity().getDescription());
        }
        if (millennialAdapterExtras.getOrientation() != null) {
            mmRequest.setOrientation(millennialAdapterExtras.getOrientation().getDescription());
        }
        if (millennialAdapterExtras.getPolitics() != null) {
            mmRequest.setPolitics(millennialAdapterExtras.getPolitics().getDescription());
        }
        if (millennialAdapterExtras.getEducation() != null) {
            mmRequest.setEducation(millennialAdapterExtras.getEducation().getDescription());
        }
        if (metaValues != null) {
            mmRequest.setMetaValues(metaValues);
        }
        mmAd.setMMRequest(mmRequest);
    }
    
    @Override
    public final void destroy() {
    }
    
    @Override
    public final Class getAdditionalParametersType() {
        return MillennialAdapterExtras.class;
    }
    
    @Override
    public final View getBannerView() {
        return (View)this.wrappedAdView;
    }
    
    @Override
    public final Class getServerParametersType() {
        return MillennialAdapterServerParameters.class;
    }
    
    public final void requestBannerAd(final MediationBannerListener bannerListener, final Activity activity, final MillennialAdapterServerParameters millennialAdapterServerParameters, final AdSize adSize, final MediationAdRequest mediationAdRequest, final MillennialAdapterExtras millennialAdapterExtras) {
        this.bannerListener = bannerListener;
        final Hashtable hashtable = new Hashtable();
        final FrameLayout$LayoutParams layoutParams = new FrameLayout$LayoutParams(adSize.getWidthInPixels((Context)activity), adSize.getHeightInPixels((Context)activity));
        (this.adView = new MMAdView((Context)activity)).setApid(millennialAdapterServerParameters.apid);
        this.adView.setHeight(adSize.getHeight());
        this.adView.setWidth(adSize.getWidth());
        this.adView.setId(MMSDK.getDefaultAdId());
        this.populateAdViewParameters(this.adView, hashtable, mediationAdRequest, millennialAdapterExtras);
        this.adView.setListener(new MillennialAdapter$BannerListener(this, null));
        (this.wrappedAdView = new FrameLayout((Context)activity)).setLayoutParams((ViewGroup$LayoutParams)layoutParams);
        this.wrappedAdView.addView((View)this.adView);
        if (adSize.getWidthInPixels((Context)activity) <= activity.getResources().getDisplayMetrics().widthPixels) {
            this.adView.getAd();
            return;
        }
        this.bannerListener.onFailedToReceiveAd(this, AdRequest$ErrorCode.NO_FILL);
    }
    
    public final void requestInterstitialAd(final MediationInterstitialListener interstitialListener, final Activity activity, final MillennialAdapterServerParameters millennialAdapterServerParameters, final MediationAdRequest mediationAdRequest, final MillennialAdapterExtras millennialAdapterExtras) {
        this.interstitialListener = interstitialListener;
        final Hashtable hashtable = new Hashtable();
        (this.interstitialView = new MMInterstitial((Context)activity)).setApid(millennialAdapterServerParameters.apid);
        this.populateAdViewParameters(this.interstitialView, hashtable, mediationAdRequest, millennialAdapterExtras);
        this.interstitialView.setListener(new MillennialAdapter$InterstitialListener(this, null));
        this.interstitialView.fetch();
    }
    
    @Override
    public final void showInterstitial() {
        this.interstitialView.display();
    }
}
