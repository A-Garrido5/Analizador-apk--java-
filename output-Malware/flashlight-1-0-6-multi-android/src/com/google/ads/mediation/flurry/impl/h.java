// 
// Decompiled by Procyon v0.5.30
// 

package com.google.ads.mediation.flurry.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Iterator;
import android.location.Location;
import com.flurry.android.FlurryAds;
import com.flurry.android.FlurryAdSize;
import android.view.ViewGroup;
import com.flurry.android.FlurryAgent;
import android.content.Context;
import java.util.HashMap;
import com.flurry.android.FlurryAdListener;
import java.util.Map;

public final class h
{
    private static final String a;
    private static final h b;
    private final Map c;
    private final Map d;
    private final Map e;
    private final FlurryAdListener f;
    
    static {
        a = h.class.getSimpleName();
        b = new h();
    }
    
    private h() {
        this.c = new HashMap();
        this.d = new HashMap();
        this.e = new HashMap();
        this.f = new j(this, null);
    }
    
    public static h a() {
        return h.b;
    }
    
    private void a(final Context context) {
        aj.a(h.a, "stop low level FlurryAgent session");
        FlurryAgent.onEndSession(context);
        FlurryAgent.setLogEnabled(false);
    }
    
    private void a(final Context context, final String s, final ViewGroup viewGroup) {
        aj.a(h.a, "start low level FlurryAgent ad loading");
        FlurryAds.fetchAd(context, s, viewGroup, FlurryAdSize.BANNER_BOTTOM);
    }
    
    private void a(final Context context, final String s, final boolean logEnabled) {
        aj.a(h.a, "start low level FlurryAgent session");
        aj.a(h.a, "FlurryAgent SDK version: " + FlurryAgent.getAgentVersion());
        FlurryAgent.setLogEnabled(logEnabled);
        FlurryAgent.onStartSession(context, s);
        FlurryAds.initializeAds(context);
    }
    
    private void a(final q q) {
        aj.a(h.a, "configure low level FlurryAgent session");
        if (q == null) {
            return;
        }
        int intValue;
        if (q.c() != null) {
            intValue = q.c();
        }
        else {
            intValue = 0;
        }
        FlurryAgent.setAge(intValue);
        while (true) {
            Label_0219: {
                if (q.d() == null) {
                    break Label_0219;
                }
                final r a = r.a;
                final r d = q.d();
                byte gender = 0;
                if (a != d) {
                    if (r.b != q.d()) {
                        break Label_0219;
                    }
                    gender = 1;
                }
                FlurryAgent.setGender(gender);
                final Location e = q.e();
                if (e != null) {
                    FlurryAds.setLocation((float)e.getLatitude(), (float)e.getLongitude());
                }
                final HashMap<String, String> targetingKeywords = new HashMap<String, String>();
                if (q.f() != null && q.f().size() != 0) {
                    final StringBuilder sb = new StringBuilder();
                    final Iterator<String> iterator = (Iterator<String>)q.f().iterator();
                    while (iterator.hasNext()) {
                        sb.append(iterator.next()).append(" ");
                    }
                    targetingKeywords.put("UserPreference", sb.toString());
                }
                FlurryAds.setTargetingKeywords(targetingKeywords);
                FlurryAds.enableTestAds(q.g());
                return;
            }
            byte gender = -1;
            continue;
        }
    }
    
    private void b(final Context context, final String s, final ViewGroup viewGroup) {
        aj.a(h.a, "stop low level FlurryAgent ad loading: NOT implemented by FlurryAgent SDK");
    }
    
    private void c() {
        aj.a(h.a, "set low level FlurryAgent listener");
        FlurryAds.setAdListener(this.f);
    }
    
    private void c(final Context context, final String s, final ViewGroup viewGroup) {
        aj.a(h.a, "display low level FlurryAgent ad");
        FlurryAds.displayAd(context, s, viewGroup);
    }
    
    private void d() {
        aj.a(h.a, "unset low level FlurryAgent listener, set it to null");
        FlurryAds.setAdListener(null);
    }
    
    private void d(final Context context, final String s, final ViewGroup viewGroup) {
        aj.a(h.a, "hide low level FlurryAgent ad");
        FlurryAds.removeAd(context, s, viewGroup);
    }
    
    public final l a(final String s) {
        synchronized (this.e) {
            return this.e.get(s);
        }
    }
    
    public final void a(final p p) {
        aj.a(h.a, "start ad project session");
        // monitorexit(map)
        while (true) {
            Label_0136: {
                final List<p> list;
                synchronized (this.d) {
                    list = this.d.get(p.a());
                    if (list == null) {
                        break Label_0136;
                    }
                    aj.a(h.a, "FlurryAgent session already exists for given context");
                    if (!p.b().equals(this.c.get(p.a()))) {
                        aj.b(h.a, "FlurryAgent session already exists for given context but with different project api key, this case is not supported by FlurryAgentSDK");
                        throw new m("ad session for context " + p.a() + " is already running with different project api key");
                    }
                }
                aj.a(h.a, "reuse existing FlurryAgent session");
                list.add(p);
                return;
            }
            aj.a(h.a, "create new FlurryAgent session ");
            final ArrayList<p> list2 = new ArrayList<p>();
            list2.add(p);
            this.d.put(p.a(), list2);
            this.c.put(p.a(), p.b());
            this.a(p.a(), p.b(), p.c());
            continue;
        }
    }
    
    public final void a(final s s) {
        aj.a(h.a, "start ad space session");
        this.a(s.b());
        this.a(s.a(), s.b().a(), s.c());
    }
    
    public final void a(final String s, final l l) {
        aj.a(h.a, "register ad space notification listener");
        synchronized (this.e) {
            if (this.e.containsKey(s)) {
                aj.b(h.a, "FlurryAgent session already has listener for for given ad space, this case is not supported by FlurryAgentSDK");
                throw new n("ad listener for adSpace " + s + " is already registered");
            }
        }
        this.e.put(s, l);
        if (1 == this.e.size()) {
            this.c();
        }
    }
    // monitorexit(map)
    
    public final void b(final p p) {
        aj.a(h.a, "stop ad project session");
        synchronized (this.d) {
            final List list = this.d.get(p.a());
            if (list != null && list.remove(p) && list.size() == 0) {
                this.a(p.a());
                this.c.remove(p.a());
                this.d.remove(p.a());
            }
        }
    }
    
    public final void b(final s s) {
        aj.a(h.a, "stop ad space session");
        this.b(s.a(), s.b().a(), s.c());
    }
    
    public final void b(final String s, final l l) {
        aj.a(h.a, "unregister ad space notification listener");
        synchronized (this.e) {
            if (l == this.e.get(s) && this.e.remove(s) != null && this.e.size() == 0) {
                this.d();
            }
        }
    }
    
    public final void c(final s s) {
        aj.a(h.a, "show ad space session");
        this.c(s.a(), s.b().a(), s.c());
    }
    
    public final void d(final s s) {
        aj.a(h.a, "hide ad space session");
        this.d(s.a(), s.b().a(), s.c());
    }
}
