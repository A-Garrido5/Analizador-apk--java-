// 
// Decompiled by Procyon v0.5.30
// 

package com.google.ads.mediation.inmobi;

import com.inmobi.monetization.IMInterstitial$State;
import com.inmobi.monetization.IMInterstitialListener;
import android.view.ViewGroup$LayoutParams;
import com.inmobi.monetization.IMBannerListener;
import java.util.Map;
import java.util.HashMap;
import com.inmobi.commons.AnimationType;
import android.widget.FrameLayout$LayoutParams;
import android.content.Context;
import android.util.Log;
import com.google.ads.AdRequest$ErrorCode;
import android.os.Build$VERSION;
import com.google.ads.mediation.NetworkExtras;
import com.google.ads.mediation.MediationServerParameters;
import android.app.Activity;
import android.view.View;
import android.text.TextUtils;
import com.inmobi.commons.GenderType;
import java.util.Calendar;
import com.inmobi.commons.InMobi;
import com.google.ads.mediation.MediationAdRequest;
import com.google.ads.AdRequest$Gender;
import android.widget.FrameLayout;
import com.google.ads.mediation.MediationInterstitialListener;
import com.google.ads.mediation.MediationBannerListener;
import com.inmobi.monetization.IMBanner;
import com.inmobi.monetization.IMInterstitial;
import com.google.ads.AdSize;
import com.google.ads.mediation.MediationInterstitialAdapter;
import com.google.ads.mediation.MediationBannerAdapter;

public final class InMobiAdapter implements MediationBannerAdapter, MediationInterstitialAdapter
{
    private static final AdSize ADSIZE_INMOBI_AD_UNIT_120X600;
    private static final AdSize ADSIZE_INMOBI_AD_UNIT_300X250;
    private static final AdSize ADSIZE_INMOBI_AD_UNIT_320X48;
    private static final AdSize ADSIZE_INMOBI_AD_UNIT_320X50;
    private static final AdSize ADSIZE_INMOBI_AD_UNIT_468X60;
    private static final AdSize ADSIZE_INMOBI_AD_UNIT_728X90;
    private static Boolean disableHardwareFlag;
    private static Boolean isAppInitialize;
    private IMInterstitial adInterstitial;
    private IMBanner adView;
    private MediationBannerListener bannerListener;
    private MediationInterstitialListener interstitialListener;
    private FrameLayout wrappedAdView;
    
    static /* synthetic */ int[] $SWITCH_TABLE$com$google$ads$AdRequest$Gender() {
        final int[] $switch_TABLE$com$google$ads$AdRequest$Gender = InMobiAdapter.$SWITCH_TABLE$com$google$ads$AdRequest$Gender;
        if ($switch_TABLE$com$google$ads$AdRequest$Gender != null) {
            return $switch_TABLE$com$google$ads$AdRequest$Gender;
        }
        final int[] $switch_TABLE$com$google$ads$AdRequest$Gender2 = new int[AdRequest$Gender.values().length];
        while (true) {
            try {
                $switch_TABLE$com$google$ads$AdRequest$Gender2[AdRequest$Gender.FEMALE.ordinal()] = 3;
                try {
                    $switch_TABLE$com$google$ads$AdRequest$Gender2[AdRequest$Gender.MALE.ordinal()] = 2;
                    try {
                        $switch_TABLE$com$google$ads$AdRequest$Gender2[AdRequest$Gender.UNKNOWN.ordinal()] = 1;
                        return InMobiAdapter.$SWITCH_TABLE$com$google$ads$AdRequest$Gender = $switch_TABLE$com$google$ads$AdRequest$Gender2;
                    }
                    catch (NoSuchFieldError noSuchFieldError) {}
                }
                catch (NoSuchFieldError noSuchFieldError2) {}
            }
            catch (NoSuchFieldError noSuchFieldError3) {
                continue;
            }
            break;
        }
    }
    
    static {
        ADSIZE_INMOBI_AD_UNIT_320X48 = new AdSize(320, 48);
        ADSIZE_INMOBI_AD_UNIT_320X50 = new AdSize(320, 50);
        ADSIZE_INMOBI_AD_UNIT_468X60 = new AdSize(468, 60);
        ADSIZE_INMOBI_AD_UNIT_728X90 = new AdSize(728, 90);
        ADSIZE_INMOBI_AD_UNIT_300X250 = new AdSize(300, 250);
        ADSIZE_INMOBI_AD_UNIT_120X600 = new AdSize(120, 600);
        InMobiAdapter.disableHardwareFlag = false;
        InMobiAdapter.isAppInitialize = false;
    }
    
    private void buildAdRequest(final MediationAdRequest mediationAdRequest, InMobiAdapterExtras inMobiAdapterExtras) {
        if (inMobiAdapterExtras == null) {
            inMobiAdapterExtras = new InMobiAdapterExtras();
        }
        if (mediationAdRequest.getAgeInYears() != null) {
            InMobi.setAge(mediationAdRequest.getAgeInYears());
        }
        if (inMobiAdapterExtras.getAreaCode() != null) {
            InMobi.setAreaCode(inMobiAdapterExtras.getAreaCode());
        }
        if (mediationAdRequest.getLocation() != null) {
            InMobi.setLocationInquiryAllowed(true);
            InMobi.setCurrentLocation(mediationAdRequest.getLocation());
        }
        if (mediationAdRequest.getBirthday() != null) {
            final Calendar instance = Calendar.getInstance();
            instance.setTime(mediationAdRequest.getBirthday());
            InMobi.setDateOfBirth(instance);
        }
        if (inMobiAdapterExtras.getEducation() != null) {
            InMobi.setEducation(inMobiAdapterExtras.getEducation());
        }
        if (inMobiAdapterExtras.getEthnicity() != null) {
            InMobi.setEthnicity(inMobiAdapterExtras.getEthnicity());
        }
        if (mediationAdRequest.getGender() != null) {
            switch ($SWITCH_TABLE$com$google$ads$AdRequest$Gender()[mediationAdRequest.getGender().ordinal()]) {
                default: {
                    InMobi.setGender(GenderType.UNKNOWN);
                    break;
                }
                case 2: {
                    InMobi.setGender(GenderType.MALE);
                    break;
                }
                case 3: {
                    InMobi.setGender(GenderType.FEMALE);
                    break;
                }
            }
        }
        if (inMobiAdapterExtras.getIncome() != null) {
            InMobi.setIncome(inMobiAdapterExtras.getIncome());
        }
        if (inMobiAdapterExtras.getInterests() != null) {
            InMobi.setInterests(TextUtils.join((CharSequence)", ", (Iterable)inMobiAdapterExtras.getInterests()));
        }
        if (inMobiAdapterExtras.getPostalCode() != null) {
            InMobi.setPostalCode(inMobiAdapterExtras.getPostalCode());
        }
        InMobi.setDeviceIDMask(inMobiAdapterExtras.getDeviceIdMask());
        if (inMobiAdapterExtras.getSexualOrientations() != null) {
            InMobi.setSexualOrientation(inMobiAdapterExtras.getSexualOrientations());
        }
        if (inMobiAdapterExtras.getMartialStatus() != null) {
            InMobi.setMaritalStatus(inMobiAdapterExtras.getMartialStatus());
        }
        if (inMobiAdapterExtras.getLangauge() != null) {
            InMobi.setLanguage(inMobiAdapterExtras.getLangauge());
        }
        if (inMobiAdapterExtras.getHasChildren() != null) {
            InMobi.setHasChildren(inMobiAdapterExtras.getHasChildren());
        }
        if (inMobiAdapterExtras.getCity() != null && inMobiAdapterExtras.getState() != null && inMobiAdapterExtras.getCountry() != null) {
            InMobi.setLocationWithCityStateCountry(inMobiAdapterExtras.getCity(), inMobiAdapterExtras.getState(), inMobiAdapterExtras.getCountry());
        }
    }
    
    public static void disableHardwareAcceleration() {
        InMobiAdapter.disableHardwareFlag = true;
    }
    
    @Override
    public final void destroy() {
    }
    
    @Override
    public final Class getAdditionalParametersType() {
        return InMobiAdapterExtras.class;
    }
    
    @Override
    public final View getBannerView() {
        return (View)this.wrappedAdView;
    }
    
    @Override
    public final Class getServerParametersType() {
        return InMobiAdapterServerParameters.class;
    }
    
    public final void requestBannerAd(final MediationBannerListener bannerListener, final Activity activity, final InMobiAdapterServerParameters inMobiAdapterServerParameters, final AdSize adSize, final MediationAdRequest mediationAdRequest, InMobiAdapterExtras inMobiAdapterExtras) {
        int n = 12;
        if (!InMobiAdapter.isAppInitialize) {
            InMobi.initialize(activity, inMobiAdapterServerParameters.appId);
            InMobiAdapter.isAppInitialize = true;
        }
        if (Build$VERSION.SDK_INT < 7) {
            bannerListener.onFailedToReceiveAd(this, AdRequest$ErrorCode.INVALID_REQUEST);
            return;
        }
        if (!InMobi.getVersion().substring(0, 1).equals("4")) {
            bannerListener.onFailedToReceiveAd(this, AdRequest$ErrorCode.INVALID_REQUEST);
            Log.e("Invalid SDK VERSION", "Please integrate with new sdk" + InMobi.getVersion());
            return;
        }
        this.bannerListener = bannerListener;
        final AdSize bestSize = adSize.findBestSize(InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_320X48, InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_320X50, InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_468X60, InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_728X90, InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_300X250, InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_120X600);
        if (bestSize == InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_320X48) {
            n = 9;
        }
        else if (bestSize == InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_320X50) {
            n = 15;
        }
        else if (bestSize == InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_468X60) {
            Log.e("ADSIZE_INMOBI_AD_UNIT_468x60", new StringBuilder(String.valueOf(n)).toString());
        }
        else if (bestSize == InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_728X90) {
            Log.e("INMOBI_AD_UNIT_728X90", new StringBuilder(String.valueOf(11)).toString());
            n = 11;
        }
        else if (bestSize == InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_300X250) {
            Log.e("INMOBI_AD_UNIT_300X250", new StringBuilder(String.valueOf(10)).toString());
            n = 10;
        }
        else {
            if (bestSize != InMobiAdapter.ADSIZE_INMOBI_AD_UNIT_120X600) {
                bannerListener.onFailedToReceiveAd(this, AdRequest$ErrorCode.INVALID_REQUEST);
                return;
            }
            n = 13;
            Log.e("INMOBI_AD_UNIT_120X600", new StringBuilder(String.valueOf(13)).toString());
        }
        final FrameLayout$LayoutParams layoutParams = new FrameLayout$LayoutParams(bestSize.getWidthInPixels((Context)activity), bestSize.getHeightInPixels((Context)activity));
        (this.adView = new IMBanner(activity, inMobiAdapterServerParameters.appId, n)).setRefreshInterval(-1);
        this.adView.setAnimationType(AnimationType.ANIMATION_OFF);
        if (mediationAdRequest.getKeywords() != null) {
            this.adView.setKeywords(TextUtils.join((CharSequence)", ", (Iterable)mediationAdRequest.getKeywords()));
        }
        final HashMap<String, String> requestParams = new HashMap<String, String>();
        requestParams.put("tp", "c_admob");
        requestParams.put("tp-ver", "6.2.1");
        this.adView.setRequestParams(requestParams);
        if (inMobiAdapterExtras == null) {
            inMobiAdapterExtras = new InMobiAdapterExtras();
        }
        if (inMobiAdapterExtras.getRefTagKey() != null && inMobiAdapterExtras.getRefTagValue() != null && !inMobiAdapterExtras.getRefTagKey().trim().equals("") && !inMobiAdapterExtras.getRefTagValue().trim().equals("")) {
            this.adView.setRefTagParam(inMobiAdapterExtras.getRefTagKey(), inMobiAdapterExtras.getRefTagValue());
        }
        this.adView.setIMBannerListener(new InMobiAdapter$BannerListener(this, null));
        if (InMobiAdapter.disableHardwareFlag) {
            this.adView.disableHardwareAcceleration();
        }
        (this.wrappedAdView = new FrameLayout((Context)activity)).setLayoutParams((ViewGroup$LayoutParams)layoutParams);
        this.wrappedAdView.addView((View)this.adView);
        this.buildAdRequest(mediationAdRequest, inMobiAdapterExtras);
        this.adView.loadBanner();
    }
    
    public final void requestInterstitialAd(final MediationInterstitialListener interstitialListener, final Activity activity, final InMobiAdapterServerParameters inMobiAdapterServerParameters, final MediationAdRequest mediationAdRequest, final InMobiAdapterExtras inMobiAdapterExtras) {
        if (!InMobiAdapter.isAppInitialize) {
            InMobi.initialize(activity, inMobiAdapterServerParameters.appId);
            InMobiAdapter.isAppInitialize = true;
        }
        if (Build$VERSION.SDK_INT < 7) {
            interstitialListener.onFailedToReceiveAd(this, AdRequest$ErrorCode.INVALID_REQUEST);
            return;
        }
        if (!InMobi.getVersion().substring(0, 1).equals("4")) {
            interstitialListener.onFailedToReceiveAd(this, AdRequest$ErrorCode.INVALID_REQUEST);
            Log.e("Invalid SDK VERSION", "Please integrate with new sdk" + InMobi.getVersion());
            return;
        }
        this.interstitialListener = interstitialListener;
        this.adInterstitial = new IMInterstitial(activity, inMobiAdapterServerParameters.appId);
        if (mediationAdRequest.getKeywords() != null) {
            this.adInterstitial.setKeywords(TextUtils.join((CharSequence)", ", (Iterable)mediationAdRequest.getKeywords()));
        }
        final HashMap<String, String> requestParams = new HashMap<String, String>();
        requestParams.put("tp", "c_admob");
        requestParams.put("tp-ver", "6.2.1");
        this.adInterstitial.setRequestParams(requestParams);
        this.adInterstitial.setIMInterstitialListener(new InMobiAdapter$InterstitialListener(this, null));
        if (InMobiAdapter.disableHardwareFlag) {
            this.adInterstitial.disableHardwareAcceleration();
        }
        this.buildAdRequest(mediationAdRequest, inMobiAdapterExtras);
        this.adInterstitial.loadInterstitial();
    }
    
    @Override
    public final void showInterstitial() {
        if (this.adInterstitial.getState() == IMInterstitial$State.READY) {
            this.adInterstitial.show();
        }
    }
}
