// 
// Decompiled by Procyon v0.5.30
// 

package com.google.ads.mediation.inmobi;

import com.inmobi.monetization.IMInterstitial$State;
import com.inmobi.monetization.IMInterstitialListener;
import android.view.ViewGroup$LayoutParams;
import java.util.HashMap;
import com.inmobi.commons.AnimationType;
import android.widget.FrameLayout$LayoutParams;
import android.content.Context;
import android.os.Build$VERSION;
import com.google.ads.mediation.NetworkExtras;
import com.google.ads.mediation.MediationServerParameters;
import android.app.Activity;
import android.view.View;
import android.text.TextUtils;
import com.inmobi.commons.GenderType;
import java.util.Calendar;
import com.inmobi.commons.InMobi;
import com.google.ads.mediation.MediationAdRequest;
import com.google.ads.AdRequest$Gender;
import android.widget.FrameLayout;
import com.google.ads.mediation.MediationInterstitialListener;
import com.google.ads.mediation.MediationBannerListener;
import com.inmobi.monetization.IMInterstitial;
import com.google.ads.AdSize;
import com.google.ads.mediation.MediationInterstitialAdapter;
import com.google.ads.AdRequest$ErrorCode;
import com.google.ads.mediation.MediationBannerAdapter;
import android.util.Log;
import java.util.Map;
import com.inmobi.monetization.IMBanner;
import com.inmobi.monetization.IMErrorCode;
import com.inmobi.monetization.IMBannerListener;

class InMobiAdapter$BannerListener implements IMBannerListener
{
    final /* synthetic */ InMobiAdapter this$0;
    
    static /* synthetic */ int[] $SWITCH_TABLE$com$inmobi$monetization$IMErrorCode() {
        final int[] $switch_TABLE$com$inmobi$monetization$IMErrorCode = InMobiAdapter$BannerListener.$SWITCH_TABLE$com$inmobi$monetization$IMErrorCode;
        if ($switch_TABLE$com$inmobi$monetization$IMErrorCode != null) {
            return $switch_TABLE$com$inmobi$monetization$IMErrorCode;
        }
        final int[] $switch_TABLE$com$inmobi$monetization$IMErrorCode2 = new int[IMErrorCode.values().length];
        while (true) {
            try {
                $switch_TABLE$com$inmobi$monetization$IMErrorCode2[IMErrorCode.DO_MONETIZE.ordinal()] = 4;
                try {
                    $switch_TABLE$com$inmobi$monetization$IMErrorCode2[IMErrorCode.DO_NOTHING.ordinal()] = 5;
                    try {
                        $switch_TABLE$com$inmobi$monetization$IMErrorCode2[IMErrorCode.INTERNAL_ERROR.ordinal()] = 2;
                        try {
                            $switch_TABLE$com$inmobi$monetization$IMErrorCode2[IMErrorCode.INVALID_REQUEST.ordinal()] = 1;
                            try {
                                $switch_TABLE$com$inmobi$monetization$IMErrorCode2[IMErrorCode.NETWORK_ERROR.ordinal()] = 6;
                                try {
                                    $switch_TABLE$com$inmobi$monetization$IMErrorCode2[IMErrorCode.NO_FILL.ordinal()] = 3;
                                    return InMobiAdapter$BannerListener.$SWITCH_TABLE$com$inmobi$monetization$IMErrorCode = $switch_TABLE$com$inmobi$monetization$IMErrorCode2;
                                }
                                catch (NoSuchFieldError noSuchFieldError) {}
                            }
                            catch (NoSuchFieldError noSuchFieldError2) {}
                        }
                        catch (NoSuchFieldError noSuchFieldError3) {}
                    }
                    catch (NoSuchFieldError noSuchFieldError4) {}
                }
                catch (NoSuchFieldError noSuchFieldError5) {}
            }
            catch (NoSuchFieldError noSuchFieldError6) {
                continue;
            }
            break;
        }
    }
    
    private InMobiAdapter$BannerListener(final InMobiAdapter this$0) {
        this.this$0 = this$0;
    }
    
    @Override
    public void onBannerInteraction(final IMBanner imBanner, final Map map) {
        Log.d("onBannerInteraction", "onBannerInteraction called");
        this.this$0.bannerListener.onClick(this.this$0);
    }
    
    @Override
    public void onBannerRequestFailed(final IMBanner imBanner, final IMErrorCode imErrorCode) {
        switch ($SWITCH_TABLE$com$inmobi$monetization$IMErrorCode()[imErrorCode.ordinal()]) {
            default: {
                this.this$0.bannerListener.onFailedToReceiveAd(this.this$0, AdRequest$ErrorCode.INVALID_REQUEST);
            }
            case 2: {
                this.this$0.bannerListener.onFailedToReceiveAd(this.this$0, AdRequest$ErrorCode.INTERNAL_ERROR);
            }
            case 1: {
                this.this$0.bannerListener.onFailedToReceiveAd(this.this$0, AdRequest$ErrorCode.INVALID_REQUEST);
            }
            case 6: {
                this.this$0.bannerListener.onFailedToReceiveAd(this.this$0, AdRequest$ErrorCode.NETWORK_ERROR);
            }
            case 3: {
                this.this$0.bannerListener.onFailedToReceiveAd(this.this$0, AdRequest$ErrorCode.NO_FILL);
            }
        }
    }
    
    @Override
    public void onBannerRequestSucceeded(final IMBanner imBanner) {
        this.this$0.bannerListener.onReceivedAd(this.this$0);
    }
    
    @Override
    public void onDismissBannerScreen(final IMBanner imBanner) {
        this.this$0.bannerListener.onDismissScreen(this.this$0);
    }
    
    @Override
    public void onLeaveApplication(final IMBanner imBanner) {
        this.this$0.bannerListener.onLeaveApplication(this.this$0);
    }
    
    @Override
    public void onShowBannerScreen(final IMBanner imBanner) {
        this.this$0.bannerListener.onPresentScreen(this.this$0);
    }
}
