// 
// Decompiled by Procyon v0.5.30
// 

package com.google.ads.mediation.nexage;

import java.io.ObjectInputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import android.content.Context;
import com.google.ads.mediation.NetworkExtras;
import com.google.ads.AdSize;
import com.google.ads.mediation.MediationServerParameters;
import android.app.Activity;
import com.google.ads.AdRequest$ErrorCode;
import android.view.View;
import java.util.Iterator;
import java.util.Set;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import com.nexage.android.NexageAdManager;
import com.nexage.android.NexageAdManager$Gender;
import com.google.ads.AdRequest$Gender;
import com.google.ads.mediation.MediationAdRequest;
import com.nexage.android.NexageAdView;
import com.google.ads.mediation.MediationInterstitialListener;
import com.nexage.android.NexageInterstitial;
import com.google.ads.mediation.MediationBannerListener;
import com.nexage.android.NexageInterstitialListener;
import com.nexage.android.NexageAdViewListener;
import com.google.ads.mediation.MediationInterstitialAdapter;
import com.google.ads.mediation.MediationBannerAdapter;

public final class NexageAdapter implements MediationBannerAdapter, MediationInterstitialAdapter, NexageAdViewListener, NexageInterstitialListener
{
    private MediationBannerListener bannerListener;
    private NexageInterstitial interstitial;
    private MediationInterstitialListener interstitialListener;
    private NexageAdView nexageAdView;
    
    private void setupCustomParameters(final MediationAdRequest mediationAdRequest) {
        if (mediationAdRequest.getGender() != null) {
            if (mediationAdRequest.getGender().equals(AdRequest$Gender.MALE)) {
                NexageAdManager.setGender(NexageAdManager$Gender.Male);
            }
            else if (mediationAdRequest.getGender().equals(AdRequest$Gender.FEMALE)) {
                NexageAdManager.setGender(NexageAdManager$Gender.Female);
            }
        }
        if (mediationAdRequest.getBirthday() != null) {
            final GregorianCalendar birthday = new GregorianCalendar(TimeZone.getDefault());
            birthday.setTime(mediationAdRequest.getBirthday());
            NexageAdManager.setBirthday(birthday);
        }
        final Integer ageInYears = mediationAdRequest.getAgeInYears();
        if (ageInYears != null && ageInYears > 0) {
            NexageAdManager.setAge(ageInYears);
        }
        final Set keywords = mediationAdRequest.getKeywords();
        if (keywords != null && keywords.size() > 0) {
            final int n = keywords.size() * ", ".length();
            final Iterator<String> iterator = keywords.iterator();
            int n2 = n;
            while (iterator.hasNext()) {
                n2 += iterator.next().length();
            }
            final StringBuilder sb = new StringBuilder(n2);
            final Iterator<String> iterator2 = keywords.iterator();
            while (iterator2.hasNext()) {
                sb.append(", ").append(iterator2.next());
            }
            NexageAdManager.setKeywords(sb.substring(", ".length()));
        }
    }
    
    @Override
    public final void destroy() {
        this.bannerListener = null;
        this.interstitialListener = null;
    }
    
    @Override
    public final Class getAdditionalParametersType() {
        return NexageExtras.class;
    }
    
    @Override
    public final View getBannerView() {
        return (View)this.nexageAdView;
    }
    
    @Override
    public final Class getServerParametersType() {
        return NexageServerParameters.class;
    }
    
    @Override
    public final void onDismissScreen(final NexageAdView nexageAdView) {
        this.bannerListener.onDismissScreen(this);
    }
    
    @Override
    public final void onFailedToReceiveAd(final NexageAdView nexageAdView) {
        this.bannerListener.onFailedToReceiveAd(this, AdRequest$ErrorCode.NETWORK_ERROR);
    }
    
    @Override
    public final void onHide(final NexageAdView nexageAdView) {
    }
    
    @Override
    public final void onInterstitialDismiss(final NexageInterstitial nexageInterstitial) {
        this.interstitialListener.onDismissScreen(this);
    }
    
    @Override
    public final void onInterstitialDisplay(final NexageInterstitial nexageInterstitial) {
        this.interstitialListener.onPresentScreen(this);
    }
    
    @Override
    public final void onInterstitialFailedToReceive(final NexageInterstitial nexageInterstitial) {
        this.interstitialListener.onFailedToReceiveAd(this, AdRequest$ErrorCode.NETWORK_ERROR);
    }
    
    @Override
    public final void onInterstitialReceived(final NexageInterstitial nexageInterstitial) {
        this.interstitialListener.onReceivedAd(this);
    }
    
    @Override
    public final void onPresentScreen(final NexageAdView nexageAdView) {
        this.bannerListener.onPresentScreen(this);
    }
    
    @Override
    public final void onReceiveAd(final NexageAdView nexageAdView) {
        this.bannerListener.onReceivedAd(this);
    }
    
    @Override
    public final void onResize(final NexageAdView nexageAdView, final int n, final int n2) {
    }
    
    public final void requestBannerAd(final MediationBannerListener bannerListener, final Activity activity, final NexageServerParameters nexageServerParameters, final AdSize adSize, final MediationAdRequest mediationAdRequest, final NexageExtras nexageExtras) {
        this.bannerListener = bannerListener;
        this.setupCustomParameters(mediationAdRequest);
        NexageAdManager.setIsMediation(true);
        (this.nexageAdView = new NexageAdView(nexageServerParameters.position, (Context)activity)).setListener(this);
        this.nexageAdView.setRefreshInterval(0);
        this.nexageAdView.rollover();
    }
    
    public final void requestInterstitialAd(final MediationInterstitialListener interstitialListener, final Activity activity, final NexageServerParameters nexageServerParameters, final MediationAdRequest mediationAdRequest, final NexageExtras nexageExtras) {
        this.interstitialListener = interstitialListener;
        NexageAdManager.setIsMediation(true);
        this.interstitial = new NexageInterstitial(nexageServerParameters.position, activity, this);
    }
    
    @Override
    public final void showInterstitial() {
        this.interstitial.display();
    }
}
