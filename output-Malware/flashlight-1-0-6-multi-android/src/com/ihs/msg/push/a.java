// 
// Decompiled by Procyon v0.5.30
// 

package com.ihs.msg.push;

import android.content.pm.PackageManager$NameNotFoundException;
import java.util.TimeZone;
import android.content.SharedPreferences;
import java.util.Locale;
import android.os.Build$VERSION;
import android.os.Handler;
import android.content.BroadcastReceiver;
import android.content.IntentFilter;
import android.os.Parcelable;
import android.app.PendingIntent;
import java.util.Iterator;
import java.util.List;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import java.util.Set;
import com.ihs.g.j;
import android.content.SharedPreferences$Editor;
import com.ihs.g.c;
import android.content.Intent;
import android.content.Context;
import com.ihs.gcm.GCMBroadcastReceiver;

public final class a
{
    public static long a;
    private static GCMBroadcastReceiver b;
    private static /* synthetic */ int[] c;
    
    static {
        com.ihs.msg.push.a.a = 0L;
    }
    
    public static String a(final Context context, final String s) {
        try {
            return context.getSharedPreferences(context.getPackageName(), 0).getString(String.valueOf(s) + "_token", (String)null);
        }
        catch (Exception ex) {
            ex.printStackTrace();
            return null;
        }
    }
    
    public static void a(final Context context) {
        final Intent intent = new Intent("com.ihs.APlus.Service");
        intent.putExtra("bundleID", context.getPackageName());
        intent.addCategory(context.getPackageName());
        try {
            com.ihs.g.c.a("ihsAPlus", "prepare to start APlus service");
            if (!context.getSharedPreferences(context.getPackageName(), 0).getBoolean(String.valueOf("APlus") + "_trans_state", false) || !c(context)) {
                intent.putExtra("update", true);
            }
            else {
                intent.putExtra("update", false);
            }
            context.startService(intent);
        }
        catch (Exception ex) {
            ex.printStackTrace();
            com.ihs.g.c.a("ihsAPlus", "start APlus service exception......");
        }
    }
    
    public static void a(final Context context, final int n) {
        final SharedPreferences$Editor edit = context.getSharedPreferences(context.getPackageName(), 0).edit();
        edit.putInt("backoff_ms", n);
        edit.commit();
    }
    
    public static void a(final Context context, final b b, final String... array) {
    Label_0086_Outer:
        while (true) {
        Label_0099_Outer:
            while (true) {
                while (true) {
                    switch (a()[b.ordinal()]) {
                        default:
                        case 2: {
                            Label_0072: {
                                break Label_0072;
                            Block_3_Outer:
                                while (true) {
                                    final Intent intent = new Intent("com.ihs.APlus.Service");
                                    try {
                                        j.a("aplus_start", false);
                                        com.ihs.g.c.a("ihsAPlus", "prepare to stop APlus service");
                                        context.stopService(intent);
                                        return;
                                        i(context);
                                        return;
                                        b(context, array);
                                        continue Block_3_Outer;
                                        // iftrue(Label_0040:, b(context, array))
                                        while (true) {
                                            i(context);
                                            return;
                                            continue Label_0086_Outer;
                                        }
                                        b(context, array);
                                        i(context);
                                        return;
                                    }
                                    catch (Exception ex) {
                                        ex.printStackTrace();
                                        com.ihs.g.c.a("ihsAPlus", "stop APlus service exception......");
                                        return;
                                    }
                                }
                            }
                            break;
                        }
                        case 3: {
                            continue Label_0086_Outer;
                        }
                        case 4: {
                            continue Label_0099_Outer;
                        }
                        case 5: {
                            continue;
                        }
                    }
                    break;
                }
                break;
            }
            break;
        }
    }
    
    public static void a(final Context context, final String s, final String s2) {
        final SharedPreferences$Editor edit = context.getSharedPreferences(context.getPackageName(), 0).edit();
        edit.putString(String.valueOf(s) + "_token", s2);
        edit.commit();
    }
    
    public static void a(final Context context, final String s, final boolean b) {
        final SharedPreferences$Editor edit = context.getSharedPreferences(context.getPackageName(), 0).edit();
        edit.putBoolean(String.valueOf(s) + "_trans_state", b);
        edit.commit();
    }
    
    private static void a(final Context context, final Set set, final String s) {
        final PackageManager packageManager = context.getPackageManager();
        final String packageName = context.getPackageName();
        final Intent intent = new Intent(s);
        intent.setPackage(packageName);
        final List queryBroadcastReceivers = packageManager.queryBroadcastReceivers(intent, 32);
        if (queryBroadcastReceivers.isEmpty()) {
            throw new IllegalStateException("No receivers for action " + s);
        }
        com.ihs.g.c.c("iHSGCMRegistrar", "Found " + queryBroadcastReceivers.size() + " receivers for action " + s);
        final Iterator<ResolveInfo> iterator = queryBroadcastReceivers.iterator();
        while (iterator.hasNext()) {
            final String name = iterator.next().activityInfo.name;
            if (!set.contains(name)) {
                throw new IllegalStateException("Receiver " + name + " is not set with permission com.google.android.c2dm.permission.SEND");
            }
        }
    }
    
    private static void a(final Context context, final String... array) {
        if (array == null || array.length == 0) {
            throw new IllegalArgumentException("No senderIds");
        }
        final StringBuilder sb = new StringBuilder(array[0]);
        for (int i = 1; i < array.length; ++i) {
            sb.append(',').append(array[i]);
        }
        com.ihs.msg.push.a.a = System.currentTimeMillis();
        final String string = sb.toString();
        com.ihs.g.c.a("iHSGCMRegistrar", "Registering app " + context.getPackageName() + " of senders " + string);
        final Intent intent = new Intent("com.google.android.c2dm.intent.REGISTER");
        intent.setPackage("com.google.android.gsf");
        intent.putExtra("app", (Parcelable)PendingIntent.getBroadcast(context, 0, new Intent(), 0));
        intent.putExtra("sender", string);
        context.startService(intent);
    }
    
    private static /* synthetic */ int[] a() {
        final int[] c = com.ihs.msg.push.a.c;
        if (c != null) {
            return c;
        }
        final int[] c2 = new int[com.ihs.msg.push.b.values().length];
        while (true) {
            try {
                c2[com.ihs.msg.push.b.c.ordinal()] = 3;
                try {
                    c2[com.ihs.msg.push.b.e.ordinal()] = 5;
                    try {
                        c2[com.ihs.msg.push.b.b.ordinal()] = 2;
                        try {
                            c2[com.ihs.msg.push.b.d.ordinal()] = 4;
                            try {
                                c2[com.ihs.msg.push.b.a.ordinal()] = 1;
                                return com.ihs.msg.push.a.c = c2;
                            }
                            catch (NoSuchFieldError noSuchFieldError) {}
                        }
                        catch (NoSuchFieldError noSuchFieldError2) {}
                    }
                    catch (NoSuchFieldError noSuchFieldError3) {}
                }
                catch (NoSuchFieldError noSuchFieldError4) {}
            }
            catch (NoSuchFieldError noSuchFieldError5) {
                continue;
            }
            break;
        }
    }
    
    public static void b(final Context context) {
        synchronized (a.class) {
            if (com.ihs.msg.push.a.b == null) {
                com.ihs.msg.push.a.b = new GCMBroadcastReceiver();
                final String packageName = context.getPackageName();
                final IntentFilter intentFilter = new IntentFilter("com.google.android.gcm.intent.RETRY");
                intentFilter.addCategory(packageName);
                final String string = String.valueOf(packageName) + ".permission.C2D_MESSAGE";
                com.ihs.g.c.a("iHSGCMRegistrar", "Registering receiver, permission is " + string);
                context.registerReceiver((BroadcastReceiver)com.ihs.msg.push.a.b, intentFilter, string, (Handler)null);
            }
        }
    }
    
    private static boolean b(final Context context, final String... array) {
        if (!g(context)) {
            context.sendBroadcast(new Intent("com.ihs.gcm_unsupported_action"));
            return false;
        }
        if (array == null || array.length == 0) {
            com.ihs.g.c.a("iHSGCMRegistrar", "sender id is null");
        }
        else {
            com.ihs.msg.push.a.a = 0L;
            com.ihs.g.c.a("iHSGCMRegistrar", "resetting backoff for " + context.getPackageName());
            a(context, 3000);
            a(context, array);
        }
        return true;
    }
    
    public static boolean c(final Context context) {
        final SharedPreferences sharedPreferences = context.getSharedPreferences(context.getPackageName(), 0);
        final String string = sharedPreferences.getString("appVersion", "0.0.0");
        final String f = f(context);
        if (!string.equalsIgnoreCase(f)) {
            com.ihs.g.c.a("iHSGCMRegistrar", "App version changed from " + string + " to " + f + "; resetting registration id");
        }
        else {
            final String string2 = sharedPreferences.getString("push_OSVersion", "");
            if (!"".equalsIgnoreCase(string2) && Build$VERSION.RELEASE.equalsIgnoreCase(string2)) {
                final String string3 = sharedPreferences.getString("timezone", "");
                if (!"".equalsIgnoreCase(string3) && (String.valueOf(Locale.getDefault().getLanguage()) + "_" + Locale.getDefault().getCountry()).equalsIgnoreCase(string3)) {
                    return true;
                }
            }
        }
        return false;
    }
    
    public static void d(final Context context) {
        final SharedPreferences sharedPreferences = context.getSharedPreferences(context.getPackageName(), 0);
        final String f = f(context);
        com.ihs.g.c.a("iHSGCMRegistrar", "Saving regId on app version " + f);
        final String value = String.valueOf(TimeZone.getDefault().getRawOffset() / 1000);
        final String string = String.valueOf(Locale.getDefault().getLanguage()) + "_" + Locale.getDefault().getCountry();
        final SharedPreferences$Editor edit = sharedPreferences.edit();
        edit.putString("appVersion", f);
        edit.putString("locale", value);
        edit.putString("timezone", string);
        edit.putString("push_OSVersion", Build$VERSION.RELEASE);
        edit.commit();
    }
    
    public static int e(final Context context) {
        return context.getSharedPreferences(context.getPackageName(), 0).getInt("backoff_ms", 3000);
    }
    
    public static String f(final Context p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_0        
        //     1: ifnonnull       8
        //     4: aconst_null    
        //     5: astore_3       
        //     6: aload_3        
        //     7: areturn        
        //     8: aload_0        
        //     9: invokevirtual   android/content/Context.getPackageManager:()Landroid/content/pm/PackageManager;
        //    12: astore_1       
        //    13: aload_1        
        //    14: aload_0        
        //    15: invokevirtual   android/content/Context.getPackageName:()Ljava/lang/String;
        //    18: iconst_0       
        //    19: invokevirtual   android/content/pm/PackageManager.getPackageInfo:(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
        //    22: getfield        android/content/pm/PackageInfo.versionName:Ljava/lang/String;
        //    25: astore_3       
        //    26: aload_3        
        //    27: ifnull          41
        //    30: aload_3        
        //    31: invokevirtual   java/lang/String.length:()I
        //    34: istore          5
        //    36: iload           5
        //    38: ifgt            6
        //    41: aconst_null    
        //    42: areturn        
        //    43: astore_2       
        //    44: aconst_null    
        //    45: astore_3       
        //    46: aload_2        
        //    47: astore          4
        //    49: aload           4
        //    51: invokevirtual   android/content/pm/PackageManager$NameNotFoundException.printStackTrace:()V
        //    54: aload_3        
        //    55: areturn        
        //    56: astore          4
        //    58: goto            49
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                                     
        //  -----  -----  -----  -----  ---------------------------------------------------------
        //  13     26     43     49     Landroid/content/pm/PackageManager$NameNotFoundException;
        //  30     36     56     61     Landroid/content/pm/PackageManager$NameNotFoundException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0041:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private static boolean g(final Context context) {
        if (context == null) {
            return false;
        }
        try {
            final int sdk_INT = Build$VERSION.SDK_INT;
            if (sdk_INT < 8) {
                throw new UnsupportedOperationException("Device must be at least API Level 8 (instead of " + sdk_INT + ")");
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
            return false;
        }
        final PackageManager packageManager = context.getPackageManager();
        try {
            packageManager.getPackageInfo("com.google.android.gsf", 0);
            h(context);
            return true;
        }
        catch (PackageManager$NameNotFoundException ex2) {
            throw new UnsupportedOperationException("Device does not have package com.google.android.gsf");
        }
    }
    
    private static void h(final Context p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_0        
        //     1: invokevirtual   android/content/Context.getPackageManager:()Landroid/content/pm/PackageManager;
        //     4: astore_1       
        //     5: aload_0        
        //     6: invokevirtual   android/content/Context.getPackageName:()Ljava/lang/String;
        //     9: astore_2       
        //    10: new             Ljava/lang/StringBuilder;
        //    13: dup            
        //    14: aload_2        
        //    15: invokestatic    java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        //    18: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    21: ldc_w           ".permission.C2D_MESSAGE"
        //    24: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    27: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    30: astore_3       
        //    31: aload_1        
        //    32: aload_3        
        //    33: sipush          4096
        //    36: invokevirtual   android/content/pm/PackageManager.getPermissionInfo:(Ljava/lang/String;I)Landroid/content/pm/PermissionInfo;
        //    39: pop            
        //    40: aload_1        
        //    41: aload_2        
        //    42: iconst_2       
        //    43: invokevirtual   android/content/pm/PackageManager.getPackageInfo:(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
        //    46: astore          7
        //    48: aload           7
        //    50: getfield        android/content/pm/PackageInfo.receivers:[Landroid/content/pm/ActivityInfo;
        //    53: astore          8
        //    55: aload           8
        //    57: ifnull          66
        //    60: aload           8
        //    62: arraylength    
        //    63: ifne            145
        //    66: new             Ljava/lang/IllegalStateException;
        //    69: dup            
        //    70: new             Ljava/lang/StringBuilder;
        //    73: dup            
        //    74: ldc_w           "No receiver for package "
        //    77: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    80: aload_2        
        //    81: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    84: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    87: invokespecial   java/lang/IllegalStateException.<init>:(Ljava/lang/String;)V
        //    90: athrow         
        //    91: astore          4
        //    93: new             Ljava/lang/IllegalStateException;
        //    96: dup            
        //    97: new             Ljava/lang/StringBuilder;
        //   100: dup            
        //   101: ldc_w           "Application does not define permission "
        //   104: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   107: aload_3        
        //   108: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   111: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   114: invokespecial   java/lang/IllegalStateException.<init>:(Ljava/lang/String;)V
        //   117: athrow         
        //   118: astore          6
        //   120: new             Ljava/lang/IllegalStateException;
        //   123: dup            
        //   124: new             Ljava/lang/StringBuilder;
        //   127: dup            
        //   128: ldc_w           "Could not get receivers for package "
        //   131: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   134: aload_2        
        //   135: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   138: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   141: invokespecial   java/lang/IllegalStateException.<init>:(Ljava/lang/String;)V
        //   144: athrow         
        //   145: ldc             "iHSGCMRegistrar"
        //   147: new             Ljava/lang/StringBuilder;
        //   150: dup            
        //   151: ldc_w           "number of receivers for "
        //   154: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //   157: aload_2        
        //   158: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   161: ldc_w           ": "
        //   164: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   167: aload           8
        //   169: arraylength    
        //   170: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //   173: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   176: invokestatic    com/ihs/g/c.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   179: new             Ljava/util/HashSet;
        //   182: dup            
        //   183: invokespecial   java/util/HashSet.<init>:()V
        //   186: astore          9
        //   188: aload           8
        //   190: arraylength    
        //   191: istore          10
        //   193: iconst_0       
        //   194: istore          11
        //   196: iload           11
        //   198: iload           10
        //   200: if_icmplt       224
        //   203: aload           9
        //   205: invokeinterface java/util/Set.isEmpty:()Z
        //   210: ifeq            264
        //   213: new             Ljava/lang/IllegalStateException;
        //   216: dup            
        //   217: ldc_w           "No receiver allowed to receive com.google.android.c2dm.permission.SEND"
        //   220: invokespecial   java/lang/IllegalStateException.<init>:(Ljava/lang/String;)V
        //   223: athrow         
        //   224: aload           8
        //   226: iload           11
        //   228: aaload         
        //   229: astore          12
        //   231: ldc_w           "com.google.android.c2dm.permission.SEND"
        //   234: aload           12
        //   236: getfield        android/content/pm/ActivityInfo.permission:Ljava/lang/String;
        //   239: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   242: ifeq            258
        //   245: aload           9
        //   247: aload           12
        //   249: getfield        android/content/pm/ActivityInfo.name:Ljava/lang/String;
        //   252: invokeinterface java/util/Set.add:(Ljava/lang/Object;)Z
        //   257: pop            
        //   258: iinc            11, 1
        //   261: goto            196
        //   264: aload_0        
        //   265: aload           9
        //   267: ldc_w           "com.google.android.c2dm.intent.REGISTRATION"
        //   270: invokestatic    com/ihs/msg/push/a.a:(Landroid/content/Context;Ljava/util/Set;Ljava/lang/String;)V
        //   273: aload_0        
        //   274: aload           9
        //   276: ldc_w           "com.google.android.c2dm.intent.RECEIVE"
        //   279: invokestatic    com/ihs/msg/push/a.a:(Landroid/content/Context;Ljava/util/Set;Ljava/lang/String;)V
        //   282: return         
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                                                     
        //  -----  -----  -----  -----  ---------------------------------------------------------
        //  31     40     91     118    Landroid/content/pm/PackageManager$NameNotFoundException;
        //  40     48     118    145    Landroid/content/pm/PackageManager$NameNotFoundException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0066:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private static void i(final Context context) {
        j.a("aplus_start", true);
        a(context);
    }
}
