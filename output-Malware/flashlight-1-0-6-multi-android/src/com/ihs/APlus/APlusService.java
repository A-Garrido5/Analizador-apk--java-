// 
// Decompiled by Procyon v0.5.30
// 

package com.ihs.APlus;

import android.annotation.SuppressLint;
import android.content.IntentFilter;
import com.ihs.a.d;
import com.ihs.g.k;
import com.ihs.i.ag;
import android.os.IBinder;
import android.content.Intent;
import java.util.TimerTask;
import android.content.BroadcastReceiver;
import com.ihs.i.l;
import android.util.Log;
import android.net.NetworkInfo;
import android.net.ConnectivityManager;
import android.net.NetworkInfo$State;
import android.content.Context;
import com.ihs.i.a;
import android.app.Service;

public class APlusService extends Service
{
    private final String a;
    private String b;
    private a c;
    private com.ihs.APlus.a d;
    private boolean e;
    private c f;
    private b g;
    
    public APlusService() {
        this.a = "ihsAPlus";
    }
    
    private static NetworkInfo$State b(final Context context) {
        final NetworkInfo$State unknown = NetworkInfo$State.UNKNOWN;
        final NetworkInfo activeNetworkInfo = ((ConnectivityManager)context.getSystemService("connectivity")).getActiveNetworkInfo();
        if (activeNetworkInfo != null) {
            return activeNetworkInfo.getState();
        }
        return unknown;
    }
    
    private void b(final boolean b) {
        while (true) {
            while (true) {
                Label_0177: {
                    synchronized (this) {
                        try {
                            this.g.c();
                            if ((com.ihs.i.c.e == this.c.e() || com.ihs.i.c.a == this.c.e()) && (b || !this.c.a())) {
                                final a c = this.c;
                                if (!com.ihs.g.c.a()) {
                                    break Label_0177;
                                }
                                final String s = "http://spark.ihandysoft.com:9000/director/websocket/connect/";
                                final StringBuffer sb = new StringBuffer();
                                sb.append(s);
                                sb.append(String.valueOf(this.getPackageName()) + "_a_" + this.b);
                                sb.append("/");
                                Log.d("ihsAPlus", sb.toString());
                                c.a(sb.toString(), this.g);
                            }
                            return;
                        }
                        catch (Exception ex) {
                            ex.printStackTrace();
                            return;
                        }
                    }
                }
                final String s = "http://aplus.asiatone.net:80/director/websocket/connect/";
                continue;
            }
        }
    }
    
    private void c() {
        if (this.d != null) {
            this.d.a();
            this.unregisterReceiver((BroadcastReceiver)this.d);
            this.d = null;
            this.e = false;
        }
        if (this.c != null) {
            this.c.b();
            this.c = null;
        }
        if (this.f != null) {
            this.f.cancel();
            this.f = null;
        }
        this.g = null;
    }
    
    private static /* synthetic */ int[] d() {
        final int[] h = APlusService.h;
        if (h != null) {
            return h;
        }
        final int[] h2 = new int[NetworkInfo$State.values().length];
        while (true) {
            try {
                h2[NetworkInfo$State.CONNECTED.ordinal()] = 1;
                try {
                    h2[NetworkInfo$State.CONNECTING.ordinal()] = 2;
                    try {
                        h2[NetworkInfo$State.DISCONNECTED.ordinal()] = 3;
                        try {
                            h2[NetworkInfo$State.DISCONNECTING.ordinal()] = 4;
                            try {
                                h2[NetworkInfo$State.SUSPENDED.ordinal()] = 5;
                                try {
                                    h2[NetworkInfo$State.UNKNOWN.ordinal()] = 6;
                                    return APlusService.h = h2;
                                }
                                catch (NoSuchFieldError noSuchFieldError) {}
                            }
                            catch (NoSuchFieldError noSuchFieldError2) {}
                        }
                        catch (NoSuchFieldError noSuchFieldError3) {}
                    }
                    catch (NoSuchFieldError noSuchFieldError4) {}
                }
                catch (NoSuchFieldError noSuchFieldError5) {}
            }
            catch (NoSuchFieldError noSuchFieldError6) {
                continue;
            }
            break;
        }
    }
    
    public final void a() {
        this.f.a();
    }
    
    final void a(final boolean b) {
        if (NetworkInfo$State.CONNECTED == b(this.getApplicationContext())) {
            com.ihs.g.c.a("ihsAPlus", "reconnect now, mark is " + b);
            if (this.f != null) {
                this.f.a(new TimerTask() {
                    @Override
                    public final void run() {
                        APlusService.this.b(b);
                    }
                });
            }
        }
    }
    
    public final String b() {
        final StringBuilder sb = new StringBuilder();
        final NetworkInfo$State unknown = NetworkInfo$State.UNKNOWN;
        final NetworkInfo activeNetworkInfo = ((ConnectivityManager)this.getSystemService("connectivity")).getActiveNetworkInfo();
        NetworkInfo$State state;
        if (activeNetworkInfo != null) {
            state = activeNetworkInfo.getState();
        }
        else {
            state = unknown;
        }
        final StringBuilder append = sb.append("; Network:");
        String s = null;
        switch (d()[state.ordinal()]) {
            default: {
                s = "unavailable";
                break;
            }
            case 1: {
                s = "available";
                break;
            }
        }
        append.append(s);
        return sb.toString();
    }
    
    public IBinder onBind(final Intent intent) {
        return null;
    }
    
    public void onCreate() {
        super.onCreate();
        Log.d("ihsAPlus", "service oncreate entrance.....");
        this.e = false;
    }
    
    public void onDestroy() {
        Log.d("ihsAPlus", "Service destroy entrance.....");
        super.onDestroy();
        this.c();
    }
    
    public int onStartCommand(final Intent intent, final int n, final int n2) {
        Log.d("ihsAPlus", "Service start command entrance.....");
        if (com.ihs.g.a.a == null) {
            com.ihs.g.a.a = this.getApplicationContext();
        }
        if (this.f == null) {
            this.f = new c();
        }
        if (this.c == null) {
            this.c = new ag();
        }
        if (this.d == null) {
            this.d = new com.ihs.APlus.a(this, (byte)0);
        }
        if (this.b == null) {
            this.b = new k().a(this.getApplicationContext());
        }
        if (this.g == null) {
            this.g = new b(this);
        }
        com.ihs.a.d.a().b(this.getApplicationContext());
        while (true) {
            if (this.e) {
                break Label_0171;
            }
            try {
                this.e = true;
                final IntentFilter intentFilter = new IntentFilter();
                intentFilter.addAction("android.net.conn.CONNECTIVITY_CHANGE");
                this.registerReceiver((BroadcastReceiver)this.d, intentFilter);
                if (intent != null && intent.getBooleanExtra("update", false)) {
                    final String stringExtra = intent.getStringExtra("bundleID");
                    intent.addCategory(stringExtra);
                    intent.putExtra("token", String.valueOf(stringExtra) + "_a_" + this.b);
                    intent.setAction("com.ihs.APlus.Token.Received.ACTION");
                    intent.setClassName(stringExtra, "com.ihs.apps.framework.sub.APPPushReceiver");
                    com.ihs.g.c.a("ihsAPlus", "send new token to receiver service");
                    this.startService(intent);
                }
                if (this.c.d()) {
                    this.b(true);
                }
                return 1;
            }
            catch (Exception ex) {
                ex.printStackTrace();
                continue;
            }
            break;
        }
    }
    
    @SuppressLint({ "NewApi" })
    public void onTaskRemoved(final Intent intent) {
        Log.d("ihsAPlus", "Service task removed entrance.....");
        super.onTaskRemoved(intent);
        this.c();
    }
}
