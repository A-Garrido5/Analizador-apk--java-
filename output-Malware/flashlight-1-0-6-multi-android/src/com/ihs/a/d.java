// 
// Decompiled by Procyon v0.5.30
// 

package com.ihs.a;

import com.google.analytics.tracking.android.GAServiceManager;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import com.appsflyer.AppsFlyerLib;
import com.tapjoy.l;
import com.tapjoy.ab;
import android.text.TextUtils;
import android.content.Context;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.Iterator;
import com.flurry.android.FlurryAgent;
import junit.framework.Assert;
import java.util.HashMap;
import com.google.analytics.tracking.android.Tracker;
import com.google.analytics.tracking.android.GoogleAnalytics;
import java.util.Map;
import android.annotation.SuppressLint;
import android.util.Base64;
import android.os.Build$VERSION;
import java.security.Key;
import javax.crypto.spec.SecretKeySpec;
import javax.crypto.Cipher;
import com.ihs.g.c;

public final class d implements com.ihs.f.a.d
{
    private static d A;
    public static String a;
    private final String b;
    private final String c;
    private final String d;
    private final String e;
    private final String f;
    private final String g;
    private final String h;
    private final String i;
    private final String j;
    private final String k;
    private final String l;
    private String m;
    private String n;
    private String o;
    private String p;
    private String q;
    private String r;
    private String s;
    private String t;
    private String u;
    private boolean v;
    private boolean w;
    private boolean x;
    private boolean y;
    private boolean z;
    
    static {
        d.a = "iHSAnalyticsLibrary";
        d.A = null;
    }
    
    private d() {
        this.b = "HSAnalyticsAppOpenHasReportedKey";
        this.c = "i}96Iu[Kpri/TZp]";
        this.d = "a";
        this.e = "d";
        this.f = "m";
        this.g = "i";
        this.h = "p";
        this.i = "s";
        this.j = "n";
        this.k = "http://puppy.ihandysoft.com/rao";
        this.l = "http://api.asiatone.net/rao";
        this.v = false;
        this.w = false;
        this.x = false;
        this.y = false;
        this.z = false;
        this.n = "UA-28375416-1";
        if (com.ihs.g.c.a()) {
            this.n = "UA-28356595-1";
        }
    }
    
    public static d a() {
        synchronized (d.class) {
            if (d.A == null) {
                d.A = new d();
            }
            return d.A;
        }
    }
    
    @SuppressLint({ "InlinedApi", "TrulyRandom", "NewApi" })
    private static String a(final String s, final byte[] array) {
        try {
            final Cipher instance = Cipher.getInstance("AES/ECB/PKCS7Padding");
            instance.init(1, new SecretKeySpec(s.getBytes("UTF-8"), "AES"));
            final byte[] doFinal = instance.doFinal(array);
            if (Build$VERSION.SDK_INT >= 8) {
                return Base64.encodeToString(doFinal, 0);
            }
            return com.ihs.a.a.a(doFinal);
        }
        catch (Exception ex) {
            ex.printStackTrace();
            return null;
        }
    }
    
    private void a(final int n, final String s) {
        final Tracker tracker = GoogleAnalytics.getInstance(com.ihs.g.a.a).getTracker(this.n);
        com.ihs.g.c.a(com.ihs.a.d.a, "=======================================");
        com.ihs.g.c.a(com.ihs.a.d.a, "HSAnalytics Library Set Custom Dimension: " + n + " with value: " + s);
        com.ihs.g.c.a(com.ihs.a.d.a, "=======================================");
        tracker.setCustomDimension(n, s);
    }
    
    public static void a(final String s, final Map map) {
        if (s == null) {
            return;
        }
        final HashMap<String, String> hashMap = new HashMap<String, String>();
        final com.ihs.h.a a = com.ihs.h.a.a();
        if (a.c()) {
            hashMap.put("UserType", "NewUser");
        }
        else {
            hashMap.put("UserType", "OldUser");
        }
        if (a.e()) {
            hashMap.put("UserTest", "TestUser");
            hashMap.put("TestToken", String.valueOf(a.f()));
        }
        else {
            hashMap.put("UserTest", "NormalUser");
            hashMap.put("TestToken", "-1");
        }
        if (c.a()) {
            c.a(d.a, "***********************************************");
            c.a(d.a, "logEvent: eventID = " + s);
            for (final Map.Entry<Object, Object> entry : hashMap.entrySet()) {
                c.a(d.a, "\tparam key = " + entry.getKey() + ", value = " + entry.getValue());
            }
            if (map != null) {
                for (final Map.Entry<String, V> entry2 : map.entrySet()) {
                    c.a(d.a, "\tparam key = " + entry2.getKey() + ", value = " + (String)entry2.getValue());
                }
                c.a(d.a, "***********************************************");
                if (hashMap.size() + map.size() > 10) {
                    c.b(d.a, "params > 10. too many params");
                    Assert.assertEquals("Flurry Event params >10", 1, 2);
                }
            }
        }
        if (map != null && map.size() > 0) {
            final int n = 10 - hashMap.size();
            final Iterator<Map.Entry<String, V>> iterator3 = map.entrySet().iterator();
            for (int n2 = n; iterator3.hasNext() && n2 > 0; --n2) {
                final Map.Entry<String, V> entry3 = iterator3.next();
                hashMap.put(entry3.getKey(), (String)entry3.getValue());
            }
        }
        FlurryAgent.logEvent(s, hashMap);
    }
    
    public static void a(final String s, final String... array) {
        if (s == null) {
            return;
        }
        final HashMap<String, String> hashMap = new HashMap<String, String>();
        if (array != null) {
            int length = array.length;
            if (length % 2 != 0) {
                --length;
            }
            int i = 0;
            while (i < length) {
                final int n = i + 1;
                final String s2 = array[i];
                i = n + 1;
                hashMap.put(s2, array[n]);
            }
        }
        a(s, hashMap);
    }
    
    private static String b(final Map map) {
        final StringBuilder sb = new StringBuilder();
        final StringBuffer sb2 = new StringBuffer();
        sb2.append("i}96Iu[Kpri/TZp]".subSequence(12, 16));
        sb2.append("i}96Iu[Kpri/TZp]".subSequence(4, 8));
        sb2.append("i}96Iu[Kpri/TZp]".subSequence(0, 4));
        sb2.append("i}96Iu[Kpri/TZp]".subSequence(8, 12));
        final String string = sb2.toString();
        int n = 1;
        for (final Map.Entry<K, String> entry : map.entrySet()) {
            if (entry.getValue() != null && entry.getValue().length() != 0) {
                if (n != 0) {
                    sb.append("?");
                    n = 0;
                }
                else {
                    sb.append("&");
                }
                sb.append((String)entry.getKey());
                sb.append("=");
                try {
                    sb.append(URLEncoder.encode(a(string, entry.getValue().getBytes()), "UTF-8"));
                }
                catch (UnsupportedEncodingException ex) {
                    ex.printStackTrace();
                }
            }
        }
        c.a(d.a, "Final Query String: " + sb.toString());
        return sb.toString();
    }
    
    public static void c(final String s) {
        if (s == null) {
            return;
        }
        a(s, new HashMap());
    }
    
    public final void a(final Context context) {
        if (TextUtils.isEmpty((CharSequence)this.m)) {
            com.ihs.g.c.b("!!!!Flurry key is not configured!!!!!");
        }
        else {
            final String m = this.m;
            if (!this.v) {
                FlurryAgent.setCaptureUncaughtExceptions(this.v = true);
                FlurryAgent.onStartSession(context, m);
                FlurryAgent.setLogEnabled(true);
                FlurryAgent.setLogEvents(true);
                com.ihs.f.a.c.b().a(this);
            }
        }
        this.b(context);
        if (TextUtils.isEmpty((CharSequence)this.o) || TextUtils.isEmpty((CharSequence)this.p)) {
            com.ihs.g.c.b("!!!!Tapjoy id or key is not configured!!!!!");
        }
        else {
            final String o = this.o;
            final String p = this.p;
            if (!this.x) {
                this.x = true;
                ab.a();
                com.tapjoy.l.a(context, o, p);
            }
        }
        if (TextUtils.isEmpty((CharSequence)this.q)) {
            com.ihs.g.c.b("!!!!AppsFlyer id or key is not configured!!!!!");
        }
        else {
            final String q = this.q;
            if (!this.y) {
                this.y = true;
                AppsFlyerLib.a(q);
                AppsFlyerLib.a(context);
            }
        }
        if (TextUtils.isEmpty((CharSequence)this.r)) {
            com.ihs.g.c.b("!!!!Facebook id or key is not configured!!!!!");
        }
        else {
            final String r = this.r;
            if (!this.z) {
                this.z = true;
                try {
                    final Class<?> forName = Class.forName("com.facebook.d");
                    forName.getMethod("activateApp", Context.class, String.class).invoke(forName, context, r);
                    com.ihs.g.c.a("invoke facebook activate app method successed!");
                    for (final Field field : Class.forName("com.facebook.c").getDeclaredFields()) {
                        field.setAccessible(true);
                        if (field.getName().equals("EVENT_NAME_COMPLETED_REGISTRATION")) {
                            this.t = (String)field.get(null);
                        }
                        if (field.getName().equals("EVENT_NAME_SPENT_CREDITS")) {
                            this.u = (String)field.get(null);
                        }
                        if (field.getName().equals("EVENT_PARAM_CONTENT_ID")) {
                            this.s = (String)field.get(null);
                        }
                    }
                }
                catch (ClassNotFoundException ex) {
                    com.ihs.g.c.a(ex.getLocalizedMessage());
                }
                catch (NoSuchMethodException ex2) {
                    com.ihs.g.c.a(ex2.getLocalizedMessage());
                }
                catch (IllegalArgumentException ex3) {
                    com.ihs.g.c.a(ex3.getLocalizedMessage());
                }
                catch (IllegalAccessException ex4) {
                    com.ihs.g.c.a(ex4.getLocalizedMessage());
                }
                catch (InvocationTargetException ex5) {
                    com.ihs.g.c.a(ex5.getLocalizedMessage());
                }
            }
        }
        new Thread(new Runnable() {
            @Override
            public final void run() {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: getstatic       com/ihs/g/a.a:Landroid/content/Context;
                //     3: invokevirtual   android/content/Context.getPackageName:()Ljava/lang/String;
                //     6: astore_1       
                //     7: ldc             "HSAnalyticsAppOpenHasReportedKey"
                //     9: invokestatic    com/ihs/g/j.c:(Ljava/lang/String;)Z
                //    12: ifeq            38
                //    15: getstatic       com/ihs/a/d.a:Ljava/lang/String;
                //    18: new             Ljava/lang/StringBuilder;
                //    21: dup            
                //    22: ldc             "Already sent successful Server-Side download tracking. Package Name "
                //    24: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
                //    27: aload_1        
                //    28: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                //    31: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
                //    34: invokestatic    com/ihs/g/c.a:(Ljava/lang/String;Ljava/lang/String;)V
                //    37: return         
                //    38: getstatic       com/ihs/g/a.a:Landroid/content/Context;
                //    41: ldc             "phone"
                //    43: invokevirtual   android/content/Context.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;
                //    46: checkcast       Landroid/telephony/TelephonyManager;
                //    49: invokevirtual   android/telephony/TelephonyManager.getDeviceId:()Ljava/lang/String;
                //    52: astore          27
                //    54: aload           27
                //    56: astore_3       
                //    57: aload_3        
                //    58: invokestatic    android/text/TextUtils.isEmpty:(Ljava/lang/CharSequence;)Z
                //    61: ifeq            361
                //    64: ldc             ""
                //    66: astore          4
                //    68: ldc             ""
                //    70: astore          5
                //    72: getstatic       com/ihs/g/a.a:Landroid/content/Context;
                //    75: ldc             "wifi"
                //    77: invokevirtual   android/content/Context.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;
                //    80: checkcast       Landroid/net/wifi/WifiManager;
                //    83: invokevirtual   android/net/wifi/WifiManager.getConnectionInfo:()Landroid/net/wifi/WifiInfo;
                //    86: invokevirtual   android/net/wifi/WifiInfo.getMacAddress:()Ljava/lang/String;
                //    89: astore          26
                //    91: aload           26
                //    93: astore          5
                //    95: getstatic       com/ihs/g/a.a:Landroid/content/Context;
                //    98: invokevirtual   android/content/Context.getContentResolver:()Landroid/content/ContentResolver;
                //   101: ldc             "android_id"
                //   103: invokestatic    android/provider/Settings$Secure.getString:(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
                //   106: astore          7
                //   108: ldc             "com.google.android.gms.ads.identifier.AdvertisingIdClient"
                //   110: invokestatic    java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
                //   113: ldc             "getAdvertisingIdInfo"
                //   115: iconst_1       
                //   116: anewarray       Ljava/lang/Class;
                //   119: dup            
                //   120: iconst_0       
                //   121: ldc             Landroid/content/Context;.class
                //   123: aastore        
                //   124: invokevirtual   java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
                //   127: astore          23
                //   129: iconst_1       
                //   130: anewarray       Ljava/lang/Object;
                //   133: astore          24
                //   135: aload           24
                //   137: iconst_0       
                //   138: getstatic       com/ihs/g/a.a:Landroid/content/Context;
                //   141: aastore        
                //   142: aload           23
                //   144: aconst_null    
                //   145: aload           24
                //   147: invokevirtual   java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
                //   150: astore          25
                //   152: ldc             "com.google.android.gms.ads.identifier.AdvertisingIdClient$Info"
                //   154: invokestatic    java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
                //   157: ldc             "getId"
                //   159: iconst_0       
                //   160: anewarray       Ljava/lang/Class;
                //   163: invokevirtual   java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
                //   166: aload           25
                //   168: iconst_0       
                //   169: anewarray       Ljava/lang/Object;
                //   172: invokevirtual   java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
                //   175: checkcast       Ljava/lang/String;
                //   178: astore          9
                //   180: getstatic       android/os/Build$VERSION.RELEASE:Ljava/lang/String;
                //   183: astore          10
                //   185: new             Ljava/util/HashMap;
                //   188: dup            
                //   189: invokespecial   java/util/HashMap.<init>:()V
                //   192: astore          11
                //   194: aload           11
                //   196: ldc             "a"
                //   198: aload_1        
                //   199: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                //   204: pop            
                //   205: aload           11
                //   207: ldc             "d"
                //   209: aload           4
                //   211: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                //   216: pop            
                //   217: aload           11
                //   219: ldc             "i"
                //   221: aload           7
                //   223: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                //   228: pop            
                //   229: aload           11
                //   231: ldc             "m"
                //   233: aload           5
                //   235: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                //   240: pop            
                //   241: aload           11
                //   243: ldc             "p"
                //   245: ldc             "Android"
                //   247: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                //   252: pop            
                //   253: aload           11
                //   255: ldc             "s"
                //   257: aload           10
                //   259: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                //   264: pop            
                //   265: aload           11
                //   267: ldc             "n"
                //   269: aload           9
                //   271: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                //   276: pop            
                //   277: ldc             "http://api.asiatone.net/rao"
                //   279: astore          19
                //   281: aload_1        
                //   282: ldc             "com.ihandysoft."
                //   284: invokevirtual   java/lang/String.startsWith:(Ljava/lang/String;)Z
                //   287: ifeq            294
                //   290: ldc             "http://puppy.ihandysoft.com/rao"
                //   292: astore          19
                //   294: new             Ljava/lang/StringBuilder;
                //   297: dup            
                //   298: aload           19
                //   300: invokestatic    java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
                //   303: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
                //   306: astore          20
                //   308: aload_0        
                //   309: getfield        com/ihs/a/d$1.a:Lcom/ihs/a/d;
                //   312: pop            
                //   313: aload           20
                //   315: aload           11
                //   317: invokestatic    com/ihs/a/d.a:(Ljava/util/Map;)Ljava/lang/String;
                //   320: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
                //   323: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
                //   326: astore          22
                //   328: new             Lcom/ihs/f/a/f;
                //   331: dup            
                //   332: new             Lcom/ihs/a/d$1$1;
                //   335: dup            
                //   336: aload_0        
                //   337: invokespecial   com/ihs/a/d$1$1.<init>:(Lcom/ihs/a/d$1;)V
                //   340: invokespecial   com/ihs/f/a/f.<init>:(Lcom/ihs/f/a/g;)V
                //   343: aload           22
                //   345: invokevirtual   com/ihs/f/a/f.a:(Ljava/lang/String;)V
                //   348: return         
                //   349: astore_2       
                //   350: ldc             ""
                //   352: astore_3       
                //   353: getstatic       com/ihs/a/d.a:Ljava/lang/String;
                //   356: ldc             "Could not get Device ID."
                //   358: invokestatic    com/ihs/g/c.a:(Ljava/lang/String;Ljava/lang/String;)V
                //   361: aload_3        
                //   362: astore          4
                //   364: goto            68
                //   367: astore          6
                //   369: getstatic       com/ihs/a/d.a:Ljava/lang/String;
                //   372: ldc             "Could not get MAC address."
                //   374: invokestatic    com/ihs/g/c.a:(Ljava/lang/String;Ljava/lang/String;)V
                //   377: goto            95
                //   380: astore          8
                //   382: getstatic       com/ihs/a/d.a:Ljava/lang/String;
                //   385: ldc             "Could not get Advertising ID."
                //   387: invokestatic    com/ihs/g/c.a:(Ljava/lang/String;Ljava/lang/String;)V
                //   390: ldc             ""
                //   392: astore          9
                //   394: goto            180
                //   397: astore          28
                //   399: goto            353
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                 
                //  -----  -----  -----  -----  ---------------------
                //  38     54     349    353    Ljava/lang/Exception;
                //  57     64     397    402    Ljava/lang/Exception;
                //  72     91     367    380    Ljava/lang/Exception;
                //  108    180    380    397    Ljava/lang/Exception;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0068:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformCall(AstMethodBodyBuilder.java:1163)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:1010)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:554)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformByteCode(AstMethodBodyBuilder.java:554)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformExpression(AstMethodBodyBuilder.java:540)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformNode(AstMethodBodyBuilder.java:392)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.transformBlock(AstMethodBodyBuilder.java:333)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:294)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
        }).start();
    }
    
    public final void a(final String m) {
        if (TextUtils.isEmpty((CharSequence)m)) {
            com.ihs.g.c.b("Invalid Flurry key(" + m + ")");
            return;
        }
        this.m = m;
    }
    
    public final void a(final String o, final String p2) {
        if (TextUtils.isEmpty((CharSequence)o) || TextUtils.isEmpty((CharSequence)p2)) {
            com.ihs.g.c.b("Invalid Tapjoy id(" + o + ") or key(" + p2 + ")");
            return;
        }
        this.o = o;
        this.p = p2;
    }
    
    public final void a(final String s, final String s2, final String s3) {
        final Tracker tracker = GoogleAnalytics.getInstance(com.ihs.g.a.a).getTracker(this.n);
        com.ihs.g.c.a(com.ihs.a.d.a, "=======================================");
        com.ihs.g.c.a(com.ihs.a.d.a, "HSAnalytics Library Sent Event: Category with:" + s + ", action with: " + s2 + ", with label" + s3 + ", with value: " + (Object)null);
        com.ihs.g.c.a(com.ihs.a.d.a, "=======================================");
        tracker.sendEvent(s, s2, s3, null);
    }
    
    public final void b(final Context context) {
        if (this.w) {
            return;
        }
        this.w = true;
        if (com.ihs.g.c.a()) {
            GoogleAnalytics.getInstance(context).setDebug(true);
        }
        GAServiceManager.getInstance().setDispatchPeriod(3);
        com.ihs.g.c.a(com.ihs.a.d.a, "***********************************************");
        final com.ihs.h.a a = com.ihs.h.a.a();
        com.ihs.g.c.a(com.ihs.a.d.a, "***********************************************");
        com.ihs.g.c.a(com.ihs.a.d.a, "setLibraryGlobalCustomDimensions:");
        String s;
        if (a.c()) {
            s = "NewUser";
        }
        else {
            s = "OldUser";
        }
        this.a(1, s);
        String s2;
        if (a.e()) {
            s2 = "TestUser";
        }
        else {
            s2 = "NormalUser";
        }
        this.a(2, s2);
        if (a.e()) {
            this.a(3, String.valueOf(a.f()));
        }
        String packageName;
        if (com.ihs.g.a.a == null) {
            packageName = null;
        }
        else {
            packageName = com.ihs.g.a.a.getPackageName();
        }
        this.a(4, packageName);
        this.a(5, a.g());
        com.ihs.g.c.a(com.ihs.a.d.a, "***********************************************");
    }
    
    public final void b(final String r) {
        if (TextUtils.isEmpty((CharSequence)r)) {
            com.ihs.g.c.b("Invalid Facebook key(" + r + ")");
            return;
        }
        this.r = r;
    }
    
    @Override
    public final void b(final boolean b) {
        if (this.v && com.ihs.f.a.c.b().c() && !com.ihs.f.a.c.b().e().isEmpty()) {
            a("RestrictedUserInfo", com.ihs.f.a.c.b().e());
        }
    }
    
    @Override
    public final void c() {
    }
    
    public final void c(final Context context) {
        com.ihs.g.c.a(com.ihs.a.d.a, "***********************************************");
        com.ihs.f.a.c.b().b(this);
        com.ihs.g.c.a(com.ihs.a.d.a, "endHSAnalytics: Flurry Analytics");
        FlurryAgent.onEndSession(context);
        com.ihs.g.c.a(com.ihs.a.d.a, "***********************************************");
        this.v = false;
        this.w = false;
        this.x = false;
        this.z = false;
        this.y = false;
    }
    
    @Override
    protected final Object clone() {
        throw new CloneNotSupportedException();
    }
}
