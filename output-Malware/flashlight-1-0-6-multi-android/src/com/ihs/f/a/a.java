// 
// Decompiled by Procyon v0.5.30
// 

package com.ihs.f.a;

import com.ihs.g.c;
import java.io.File;
import java.io.InputStream;
import com.ihs.g.i;
import java.io.UnsupportedEncodingException;
import com.ihs.g.h;
import com.ihs.e.b;
import java.util.Map;

public final class a implements g
{
    private final String a;
    private f b;
    private String c;
    private Map d;
    private b e;
    private com.ihs.f.a.b f;
    
    public a(final String c, final String s, final com.ihs.f.a.b f) {
        this.a = "ihsPlistLoader";
        (this.b = new f()).a(this);
        this.c = c;
        this.f = f;
        new Thread() {
            @Override
            public final void run() {
                com.ihs.f.a.a.a(com.ihs.f.a.a.this, c, s);
                super.run();
            }
        }.start();
    }
    
    private int a(final String s, final String s2, final boolean b) {
        if (s == null) {
            return 0;
        }
        while (true) {
            Label_0049: {
                if (!b) {
                    break Label_0049;
                }
                final InputStream a = com.ihs.g.b.a(com.ihs.g.b.c(com.ihs.g.a.a, s));
                InputStream inputStream = null;
                Label_0064: {
                    try {
                        inputStream = h.a(a);
                        if (inputStream == null) {
                            return 0;
                        }
                        break Label_0064;
                    }
                    catch (UnsupportedEncodingException ex) {
                        ex.printStackTrace();
                        return 0;
                    }
                    break Label_0049;
                }
                this.d = i.a(inputStream);
                try {
                    final Integer value = this.d.get(s2);
                    if (value == null) {
                        return 0;
                    }
                    return value;
                }
                catch (Exception ex2) {
                    ex2.printStackTrace();
                    return 0;
                }
            }
            InputStream inputStream = com.ihs.g.b.a(com.ihs.g.b.d(com.ihs.g.a.a, s));
            continue;
        }
    }
    
    static /* synthetic */ void a(final a a, final String s, final String s2) {
        File file;
        boolean b;
        if (com.ihs.g.b.b(a.a, s)) {
            file = new File(com.ihs.g.b.c(a.a, s));
            b = true;
        }
        else if (com.ihs.g.b.a(a.a, s)) {
            file = new File(com.ihs.g.b.d(a.a, s));
            b = false;
        }
        else {
            b = false;
            file = null;
        }
        int n = 0;
        if (file != null) {
            final long lastModified = file.lastModified();
            final long n2 = lcmp(0L, lastModified);
            n = 0;
            if (n2 != 0) {
                final long n3 = lcmp(lastModified + 1000 * (60 * (60 * (24 * a.a(s, com.ihs.e.a.s, b)))), System.currentTimeMillis());
                n = 0;
                if (n3 > 0) {
                    n = 1;
                }
            }
        }
        if (n != 0) {
            c.a("ihsPlistLoader", "use local remoteconfi data");
            a.e = com.ihs.e.b.a;
            a.f.a(a);
            return;
        }
        c.a("ihsPlistLoader", "request url is:" + s2);
        a.d = null;
        a.b.b(s2);
    }
    
    @Override
    public final void a() {
        while (true) {
            com.ihs.g.c.a("ihsPlistLoader", "urlLoaderDidFinishLoading entrance");
            while (true) {
                InputStream a;
                try {
                    a = this.b.a();
                    if (com.ihs.g.b.b(this.c)) {
                        if (!com.ihs.g.b.a(com.ihs.g.a.a, this.c, a, true)) {
                            return;
                        }
                        InputStream inputStream = com.ihs.g.b.a(com.ihs.g.b.c(com.ihs.g.a.a, this.c));
                        try {
                            inputStream = h.a(inputStream);
                            this.d = i.a(inputStream);
                            this.e = com.ihs.e.b.b;
                            if (this.f != null) {
                                this.f.a(this);
                                return;
                            }
                            break;
                        }
                        catch (UnsupportedEncodingException ex) {
                            ex.printStackTrace();
                        }
                    }
                }
                catch (IllegalStateException ex2) {
                    if (this.f != null) {
                        this.f.a(ex2);
                    }
                    ex2.printStackTrace();
                    return;
                }
                com.ihs.g.b.a(com.ihs.g.a.a, this.c, a, false);
                InputStream inputStream = com.ihs.g.b.a(com.ihs.g.b.d(com.ihs.g.a.a, this.c));
                continue;
            }
        }
    }
    
    @Override
    public final void a(final Exception ex) {
        com.ihs.g.c.a("ihsPlistLoader", "didFailWithError entrance, error msg is:" + ex.getMessage());
        if (this.f != null) {
            this.f.a(ex);
        }
    }
    
    public final Map b() {
        return this.d;
    }
}
