// 
// Decompiled by Procyon v0.5.30
// 

package com.ihs.f.a;

import android.os.Build$VERSION;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import com.ihs.g.c;
import java.net.HttpURLConnection;
import javax.net.ssl.HttpsURLConnection;
import java.net.URL;
import java.io.InputStream;

public final class f
{
    private final String a;
    private g b;
    private InputStream c;
    
    public f() {
        this.a = "ihsURLLoader";
        this.c = null;
        this.b = null;
    }
    
    public f(final g b) {
        this.a = "ihsURLLoader";
        this.c = null;
        this.b = b;
    }
    
    static /* synthetic */ void a(final f f, final String s, final String s2) {
        if (s == null) {
            return;
        }
        HttpURLConnection httpURLConnection = null;
        Label_0265: {
            try {
                s.trim();
                final URL url = new URL(s);
                final boolean startsWith = s.startsWith("https:");
                httpURLConnection = null;
                if (startsWith) {
                    httpURLConnection = (HttpsURLConnection)url.openConnection();
                }
                else {
                    httpURLConnection = (HttpURLConnection)url.openConnection();
                }
                httpURLConnection.setConnectTimeout(60000);
                if (s2 != null) {
                    httpURLConnection.setRequestProperty("User-agent", s2);
                }
                httpURLConnection.setUseCaches(false);
                httpURLConnection.setRequestMethod("GET");
                httpURLConnection.connect();
                final int responseCode = httpURLConnection.getResponseCode();
                if (200 == responseCode) {
                    c.a("ihsURLLoader", "URLconnection read inputstream data now....");
                    final InputStream inputStream = httpURLConnection.getInputStream();
                    final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
                    final byte[] array = new byte[2048];
                    while (true) {
                        final int read = inputStream.read(array);
                        if (read == -1) {
                            break;
                        }
                        byteArrayOutputStream.write(array, 0, read);
                    }
                    inputStream.close();
                    f.c = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());
                    if (f.b != null) {
                        f.b.a();
                    }
                    Label_0172: {
                        return;
                    }
                }
                break Label_0265;
            }
            catch (Exception ex) {
                c.a("ihsURLLoader", "URLConnection exception message is:" + ex.getMessage());
                ex.printStackTrace();
                if (f.b != null) {
                    f.b.a(ex);
                }
                return;
                while (true) {
                    final int responseCode;
                    f.b.a(new IllegalStateException(String.valueOf(responseCode)));
                    return;
                    c.a("ihsURLLoader", "URLConnection return error code, is:" + responseCode);
                    continue;
                }
            }
            // iftrue(Label_0172:, f.b == null)
            finally {
                if (httpURLConnection != null) {
                    httpURLConnection.disconnect();
                }
            }
        }
    }
    
    static /* synthetic */ void a(final f p0, final String p1, final String p2, final String p3, final String p4) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_1        
        //     1: ifnull          313
        //     4: aload_1        
        //     5: invokevirtual   java/lang/String.trim:()Ljava/lang/String;
        //     8: pop            
        //     9: aload_2        
        //    10: ifnonnull       16
        //    13: ldc             ""
        //    15: astore_2       
        //    16: aload_3        
        //    17: ifnonnull       23
        //    20: ldc             ""
        //    22: astore_3       
        //    23: new             Lorg/apache/http/params/BasicHttpParams;
        //    26: dup            
        //    27: invokespecial   org/apache/http/params/BasicHttpParams.<init>:()V
        //    30: astore          6
        //    32: aload           6
        //    34: ldc             60000
        //    36: invokestatic    org/apache/http/params/HttpConnectionParams.setConnectionTimeout:(Lorg/apache/http/params/HttpParams;I)V
        //    39: aload           6
        //    41: iconst_1       
        //    42: invokestatic    org/apache/http/client/params/HttpClientParams.setRedirecting:(Lorg/apache/http/params/HttpParams;Z)V
        //    45: aload           4
        //    47: ifnull          57
        //    50: aload           6
        //    52: aload           4
        //    54: invokestatic    org/apache/http/params/HttpProtocolParams.setUserAgent:(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V
        //    57: aload_1        
        //    58: ldc             "https:"
        //    60: invokevirtual   java/lang/String.startsWith:(Ljava/lang/String;)Z
        //    63: ifeq            324
        //    66: aload           6
        //    68: ldc             "http.protocol.expect-continue"
        //    70: iconst_0       
        //    71: invokeinterface org/apache/http/params/HttpParams.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;
        //    76: pop            
        //    77: new             Lorg/apache/http/conn/scheme/SchemeRegistry;
        //    80: dup            
        //    81: invokespecial   org/apache/http/conn/scheme/SchemeRegistry.<init>:()V
        //    84: astore          16
        //    86: aload           16
        //    88: new             Lorg/apache/http/conn/scheme/Scheme;
        //    91: dup            
        //    92: ldc             "http"
        //    94: invokestatic    org/apache/http/conn/scheme/PlainSocketFactory.getSocketFactory:()Lorg/apache/http/conn/scheme/PlainSocketFactory;
        //    97: bipush          80
        //    99: invokespecial   org/apache/http/conn/scheme/Scheme.<init>:(Ljava/lang/String;Lorg/apache/http/conn/scheme/SocketFactory;I)V
        //   102: invokevirtual   org/apache/http/conn/scheme/SchemeRegistry.register:(Lorg/apache/http/conn/scheme/Scheme;)Lorg/apache/http/conn/scheme/Scheme;
        //   105: pop            
        //   106: aload           16
        //   108: new             Lorg/apache/http/conn/scheme/Scheme;
        //   111: dup            
        //   112: ldc             "https"
        //   114: new             Lcom/ihs/f/a/e;
        //   117: dup            
        //   118: invokestatic    java/security/KeyStore.getDefaultType:()Ljava/lang/String;
        //   121: invokestatic    java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
        //   124: invokespecial   com/ihs/f/a/e.<init>:(Ljava/security/KeyStore;)V
        //   127: sipush          443
        //   130: invokespecial   org/apache/http/conn/scheme/Scheme.<init>:(Ljava/lang/String;Lorg/apache/http/conn/scheme/SocketFactory;I)V
        //   133: invokevirtual   org/apache/http/conn/scheme/SchemeRegistry.register:(Lorg/apache/http/conn/scheme/Scheme;)Lorg/apache/http/conn/scheme/Scheme;
        //   136: pop            
        //   137: new             Lorg/apache/http/impl/client/DefaultHttpClient;
        //   140: dup            
        //   141: new             Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;
        //   144: dup            
        //   145: aload           6
        //   147: aload           16
        //   149: invokespecial   org/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager.<init>:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/scheme/SchemeRegistry;)V
        //   152: aload           6
        //   154: invokespecial   org/apache/http/impl/client/DefaultHttpClient.<init>:(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V
        //   157: astore          7
        //   159: aload           7
        //   161: invokevirtual   org/apache/http/impl/client/DefaultHttpClient.getCredentialsProvider:()Lorg/apache/http/client/CredentialsProvider;
        //   164: getstatic       org/apache/http/auth/AuthScope.ANY:Lorg/apache/http/auth/AuthScope;
        //   167: new             Lorg/apache/http/auth/UsernamePasswordCredentials;
        //   170: dup            
        //   171: aload_2        
        //   172: aload_3        
        //   173: invokespecial   org/apache/http/auth/UsernamePasswordCredentials.<init>:(Ljava/lang/String;Ljava/lang/String;)V
        //   176: invokeinterface org/apache/http/client/CredentialsProvider.setCredentials:(Lorg/apache/http/auth/AuthScope;Lorg/apache/http/auth/Credentials;)V
        //   181: aload           7
        //   183: new             Lorg/apache/http/client/methods/HttpGet;
        //   186: dup            
        //   187: aload_1        
        //   188: invokespecial   org/apache/http/client/methods/HttpGet.<init>:(Ljava/lang/String;)V
        //   191: invokevirtual   org/apache/http/impl/client/DefaultHttpClient.execute:(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;
        //   194: astore          9
        //   196: aload           9
        //   198: ldc_w           "Cache-Control"
        //   201: ldc_w           "no-cache"
        //   204: invokeinterface org/apache/http/HttpResponse.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
        //   209: aload           9
        //   211: invokeinterface org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
        //   216: invokeinterface org/apache/http/StatusLine.getStatusCode:()I
        //   221: istore          10
        //   223: sipush          200
        //   226: iload           10
        //   228: if_icmpne       375
        //   231: new             Ljava/io/ByteArrayOutputStream;
        //   234: dup            
        //   235: invokespecial   java/io/ByteArrayOutputStream.<init>:()V
        //   238: astore          11
        //   240: sipush          2048
        //   243: newarray        B
        //   245: astore          12
        //   247: aload           9
        //   249: invokeinterface org/apache/http/HttpResponse.getEntity:()Lorg/apache/http/HttpEntity;
        //   254: invokeinterface org/apache/http/HttpEntity.getContent:()Ljava/io/InputStream;
        //   259: astore          13
        //   261: aload           13
        //   263: aload           12
        //   265: invokevirtual   java/io/InputStream.read:([B)I
        //   268: istore          14
        //   270: iload           14
        //   272: iconst_m1      
        //   273: if_icmpne       336
        //   276: aload           13
        //   278: invokevirtual   java/io/InputStream.close:()V
        //   281: aload_0        
        //   282: new             Ljava/io/ByteArrayInputStream;
        //   285: dup            
        //   286: aload           11
        //   288: invokevirtual   java/io/ByteArrayOutputStream.toByteArray:()[B
        //   291: invokespecial   java/io/ByteArrayInputStream.<init>:([B)V
        //   294: putfield        com/ihs/f/a/f.c:Ljava/io/InputStream;
        //   297: aload_0        
        //   298: getfield        com/ihs/f/a/f.b:Lcom/ihs/f/a/g;
        //   301: ifnull          313
        //   304: aload_0        
        //   305: getfield        com/ihs/f/a/f.b:Lcom/ihs/f/a/g;
        //   308: invokeinterface com/ihs/f/a/g.a:()V
        //   313: return         
        //   314: astore          18
        //   316: aload           18
        //   318: invokevirtual   java/lang/Exception.printStackTrace:()V
        //   321: goto            137
        //   324: new             Lorg/apache/http/impl/client/DefaultHttpClient;
        //   327: dup            
        //   328: invokespecial   org/apache/http/impl/client/DefaultHttpClient.<init>:()V
        //   331: astore          7
        //   333: goto            159
        //   336: aload           11
        //   338: aload           12
        //   340: iconst_0       
        //   341: iload           14
        //   343: invokevirtual   java/io/ByteArrayOutputStream.write:([BII)V
        //   346: goto            261
        //   349: astore          8
        //   351: aload           8
        //   353: invokevirtual   java/lang/Exception.printStackTrace:()V
        //   356: aload_0        
        //   357: getfield        com/ihs/f/a/f.b:Lcom/ihs/f/a/g;
        //   360: ifnull          313
        //   363: aload_0        
        //   364: getfield        com/ihs/f/a/f.b:Lcom/ihs/f/a/g;
        //   367: aload           8
        //   369: invokeinterface com/ihs/f/a/g.a:(Ljava/lang/Exception;)V
        //   374: return         
        //   375: aload_0        
        //   376: getfield        com/ihs/f/a/f.b:Lcom/ihs/f/a/g;
        //   379: ifnull          313
        //   382: aload_0        
        //   383: getfield        com/ihs/f/a/f.b:Lcom/ihs/f/a/g;
        //   386: new             Ljava/lang/IllegalStateException;
        //   389: dup            
        //   390: iload           10
        //   392: invokestatic    java/lang/String.valueOf:(I)Ljava/lang/String;
        //   395: invokespecial   java/lang/IllegalStateException.<init>:(Ljava/lang/String;)V
        //   398: invokeinterface com/ihs/f/a/g.a:(Ljava/lang/Exception;)V
        //   403: return         
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  106    137    314    324    Ljava/lang/Exception;
        //  181    223    349    375    Ljava/lang/Exception;
        //  231    261    349    375    Ljava/lang/Exception;
        //  261    270    349    375    Ljava/lang/Exception;
        //  276    313    349    375    Ljava/lang/Exception;
        //  336    346    349    375    Ljava/lang/Exception;
        //  375    403    349    375    Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0261:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    private void c(final String s) {
        final Thread thread = new Thread() {
            private final /* synthetic */ String c;
            private final /* synthetic */ String d;
            private final /* synthetic */ String e;
            
            @Override
            public final void run() {
                super.run();
                if (Build$VERSION.SDK_INT >= 9) {
                    com.ihs.g.c.a("ihsURLLoader", "use URLConnection....");
                    final f a = f.this;
                    final String b = s;
                    final String c = this.c;
                    final String d = this.d;
                    f.a(a, b, this.e);
                    return;
                }
                com.ihs.g.c.a("ihsURLLoader", "use apache http....");
                f.a(f.this, s, this.c, this.d, this.e);
            }
        };
        thread.setDaemon(true);
        thread.start();
    }
    
    public final InputStream a() {
        return this.c;
    }
    
    public final void a(final g b) {
        this.b = b;
    }
    
    public final void a(final String s) {
        if (s == null) {
            return;
        }
        this.c(s);
    }
    
    public final void b(final String s) {
        if (s == null) {
            return;
        }
        this.c(s);
    }
}
