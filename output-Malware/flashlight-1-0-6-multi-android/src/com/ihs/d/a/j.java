// 
// Decompiled by Procyon v0.5.30
// 

package com.ihs.d.a;

import android.hardware.Camera$Parameters;
import java.io.IOException;
import android.os.Message;
import android.os.Looper;
import android.view.SurfaceHolder$Callback;
import android.hardware.Camera;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.os.Handler;
import android.hardware.Camera$AutoFocusCallback;

public final class j extends c implements Camera$AutoFocusCallback
{
    private Camera$AutoFocusCallback c;
    private Handler d;
    private SurfaceView e;
    private SurfaceHolder f;
    private Camera g;
    private SurfaceHolder$Callback h;
    
    public j() {
        this.c = (Camera$AutoFocusCallback)new Camera$AutoFocusCallback() {
            public final void onAutoFocus(final boolean b, final Camera camera) {
                try {
                    j.this.g.autoFocus(j.this.c);
                }
                catch (Exception ex) {}
            }
        };
        this.d = new Handler(Looper.getMainLooper()) {
            public final void handleMessage(final Message message) {
                try {
                    j.this.g.autoFocus((Camera$AutoFocusCallback)null);
                }
                catch (Exception ex) {}
            }
        };
        this.h = (SurfaceHolder$Callback)new SurfaceHolder$Callback() {
            public final void surfaceChanged(final SurfaceHolder surfaceHolder, final int n, final int n2, final int n3) {
                if (j.this.g == null) {
                    return;
                }
                try {
                    j.this.g.startPreview();
                }
                catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            
            public final void surfaceCreated(final SurfaceHolder surfaceHolder) {
                if (j.this.g == null) {
                    return;
                }
                try {
                    j.this.g.setPreviewDisplay(j.this.f);
                }
                catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            
            public final void surfaceDestroyed(final SurfaceHolder surfaceHolder) {
            }
        };
    }
    
    private void f() {
        if (this.g == null) {
            return;
        }
        final Camera$Parameters parameters = this.g.getParameters();
        parameters.setFlashMode("off");
        this.g.setParameters(parameters);
        this.g.cancelAutoFocus();
        this.g.release();
        this.g = null;
    }
    
    private boolean g() {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_0        
        //     1: getfield        com/ihs/d/a/j.g:Landroid/hardware/Camera;
        //     4: ifnonnull       14
        //     7: aload_0        
        //     8: invokestatic    android/hardware/Camera.open:()Landroid/hardware/Camera;
        //    11: putfield        com/ihs/d/a/j.g:Landroid/hardware/Camera;
        //    14: aload_0        
        //    15: aload_0        
        //    16: getfield        com/ihs/d/a/j.e:Landroid/view/SurfaceView;
        //    19: invokevirtual   android/view/SurfaceView.getHolder:()Landroid/view/SurfaceHolder;
        //    22: putfield        com/ihs/d/a/j.f:Landroid/view/SurfaceHolder;
        //    25: aload_0        
        //    26: getfield        com/ihs/d/a/j.f:Landroid/view/SurfaceHolder;
        //    29: aload_0        
        //    30: getfield        com/ihs/d/a/j.h:Landroid/view/SurfaceHolder$Callback;
        //    33: invokeinterface android/view/SurfaceHolder.addCallback:(Landroid/view/SurfaceHolder$Callback;)V
        //    38: aload_0        
        //    39: getfield        com/ihs/d/a/j.f:Landroid/view/SurfaceHolder;
        //    42: iconst_3       
        //    43: invokeinterface android/view/SurfaceHolder.setType:(I)V
        //    48: iconst_1       
        //    49: ireturn        
        //    50: astore_2       
        //    51: aload_2        
        //    52: invokevirtual   java/lang/Exception.printStackTrace:()V
        //    55: iconst_0       
        //    56: ireturn        
        //    57: astore_1       
        //    58: aload_1        
        //    59: invokevirtual   java/lang/Exception.printStackTrace:()V
        //    62: goto            48
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                 
        //  -----  -----  -----  -----  ---------------------
        //  7      14     50     57     Ljava/lang/Exception;
        //  14     48     57     65     Ljava/lang/Exception;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0014:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    @Override
    public final void a(final SurfaceView e) {
        this.e = e;
    }
    
    @Override
    public final boolean a() {
        try {
            this.g = Camera.open();
            final Camera$Parameters parameters = this.g.getParameters();
            parameters.setFlashMode("off");
            this.g.setParameters(parameters);
            this.g.release();
            this.g = null;
            this.a = com.ihs.d.a.b.a;
            return true;
        }
        catch (RuntimeException ex) {
            this.a = com.ihs.d.a.b.c;
            return false;
        }
    }
    
    @Override
    public final void b() {
        this.f();
    }
    
    @Override
    public final boolean c() {
        if (!this.g()) {
            return true;
        }
        final Camera$Parameters parameters = this.g.getParameters();
        try {
            parameters.setFlashMode("torch");
            this.g.setParameters(parameters);
            this.g.startPreview();
            this.g.autoFocus(this.c);
            this.d.sendEmptyMessageDelayed(0, 100L);
            parameters.setFlashMode("off");
            return true;
        }
        catch (Exception ex) {
            return true;
        }
    }
    
    @Override
    public final boolean d() {
        this.f();
        return true;
    }
    
    @Override
    public final b e() {
        return this.a;
    }
    
    public final void onAutoFocus(final boolean b, final Camera camera) {
    }
}
