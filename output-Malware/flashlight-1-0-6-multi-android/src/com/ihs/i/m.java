// 
// Decompiled by Procyon v0.5.30
// 

package com.ihs.i;

import java.net.URISyntaxException;
import java.nio.channels.ByteChannel;
import android.os.Message;
import com.ihs.g.c;
import java.net.URI;
import java.nio.channels.SocketChannel;
import android.os.HandlerThread;
import android.os.Handler;

public class m extends a
{
    private static final String k;
    protected Handler b;
    protected ai c;
    protected ak d;
    protected HandlerThread e;
    protected SocketChannel f;
    protected i g;
    protected String[] h;
    protected l i;
    protected af j;
    private boolean l;
    private URI m;
    private String n;
    private String o;
    private int p;
    private String q;
    private String r;
    private boolean s;
    private boolean t;
    private Runnable u;
    
    static {
        k = m.class.getName();
    }
    
    public m() {
        this.l = false;
        com.ihs.g.c.a(com.ihs.i.m.k, "created");
        this.b = new Handler() {
            public final void handleMessage(final Message message) {
                com.ihs.i.m.this.i();
                if (message.obj instanceof ae) {
                    final ae ae = (ae)message.obj;
                    if (com.ihs.i.m.this.i == null) {
                        com.ihs.g.c.a(com.ihs.i.m.k, "could not call onTextMessage() .. handler already NULL");
                        return;
                    }
                    com.ihs.i.m.this.i.a(ae.a);
                }
                else if (message.obj instanceof ab) {
                    final ab ab = (ab)message.obj;
                    if (com.ihs.i.m.this.i != null) {
                        final l i = com.ihs.i.m.this.i;
                        final byte[] a = ab.a;
                        return;
                    }
                    com.ihs.g.c.a(com.ihs.i.m.k, "could not call onRawTextMessage() .. handler already NULL");
                }
                else if (message.obj instanceof r) {
                    final r r = (r)message.obj;
                    if (com.ihs.i.m.this.i != null) {
                        com.ihs.i.m.this.i.a(r.a);
                        return;
                    }
                    com.ihs.g.c.a(com.ihs.i.m.k, "could not call onBinaryMessage() .. handler already NULL");
                }
                else {
                    if (message.obj instanceof x) {
                        final x x = (x)message.obj;
                        com.ihs.g.c.a(com.ihs.i.m.k, "WebSockets Ping received");
                        final y y = new y();
                        y.a = x.a;
                        com.ihs.i.m.this.d.a(y);
                        return;
                    }
                    if (message.obj instanceof y) {
                        final Object obj = message.obj;
                        com.ihs.g.c.a(com.ihs.i.m.k, "WebSockets Pong received");
                        return;
                    }
                    if (message.obj instanceof t) {
                        final t t = (t)message.obj;
                        com.ihs.g.c.a(com.ihs.i.m.k, "WebSockets Close received (" + t.a + " - " + t.b + ")");
                        com.ihs.i.m.this.d.a(new t((byte)0));
                        com.ihs.i.m.this.a(1, "Server send close message.");
                        return;
                    }
                    if (message.obj instanceof ad) {
                        final ad ad = (ad)message.obj;
                        com.ihs.g.c.a(com.ihs.i.m.k, "opening handshake received");
                        if (ad.a) {
                            if (com.ihs.i.m.this.i != null) {
                                com.ihs.i.m.this.i.b();
                                return;
                            }
                            com.ihs.g.c.a(com.ihs.i.m.k, "could not call onOpen() .. handler already NULL");
                        }
                    }
                    else {
                        if (message.obj instanceof u) {
                            com.ihs.i.m.b(com.ihs.i.m.this, 3, ((u)message.obj).a());
                            return;
                        }
                        if (message.obj instanceof z) {
                            com.ihs.i.m.b(com.ihs.i.m.this, 4, ((z)message.obj).a.getMessage());
                            return;
                        }
                        if (message.obj instanceof v) {
                            com.ihs.i.m.b(com.ihs.i.m.this, 5, "WebSockets internal error (" + ((v)message.obj).a.toString() + ")");
                            return;
                        }
                        if (message.obj instanceof ac) {
                            final ac ac = (ac)message.obj;
                            com.ihs.i.m.b(com.ihs.i.m.this, 6, "Server error " + ac.a + " (" + ac.b + ")");
                            return;
                        }
                        final m a2 = com.ihs.i.m.this;
                        final Object obj2 = message.obj;
                        com.ihs.i.m.f();
                    }
                }
            }
        };
        this.s = false;
        this.t = false;
    }
    
    private void a(final int n, final String s) {
        this.a = com.ihs.i.c.e;
        if (this.i != null) {
            try {
                this.i.a(n, s);
                return;
            }
            catch (Exception ex) {
                ex.printStackTrace();
                return;
            }
        }
        com.ihs.g.c.a(com.ihs.i.m.k, "mWsHandler already NULL");
    }
    
    static /* synthetic */ void a(final m m, final Runnable u) {
        m.u = u;
    }
    
    static /* synthetic */ void b(final m p0, final int p1, final String p2) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: getstatic       com/ihs/i/m.k:Ljava/lang/String;
        //     3: new             Ljava/lang/StringBuilder;
        //     6: dup            
        //     7: ldc             "fail connection [code = "
        //     9: invokespecial   java/lang/StringBuilder.<init>:(Ljava/lang/String;)V
        //    12: iload_1        
        //    13: invokevirtual   java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        //    16: ldc             ", reason = "
        //    18: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    21: aload_2        
        //    22: invokevirtual   java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        //    25: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //    28: invokestatic    com/ihs/APlus/a/a.a:(Ljava/lang/String;Ljava/lang/String;)V
        //    31: aload_0        
        //    32: getstatic       com/ihs/i/c.d:Lcom/ihs/i/c;
        //    35: putfield        com/ihs/i/m.a:Lcom/ihs/i/c;
        //    38: aload_0        
        //    39: getfield        com/ihs/i/m.c:Lcom/ihs/i/ai;
        //    42: ifnull          183
        //    45: aload_0        
        //    46: getfield        com/ihs/i/m.c:Lcom/ihs/i/ai;
        //    49: invokevirtual   com/ihs/i/ai.a:()V
        //    52: aload_0        
        //    53: getfield        com/ihs/i/m.c:Lcom/ihs/i/ai;
        //    56: invokevirtual   com/ihs/i/ai.join:()V
        //    59: aload_0        
        //    60: aconst_null    
        //    61: putfield        com/ihs/i/m.c:Lcom/ihs/i/ai;
        //    64: aload_0        
        //    65: getfield        com/ihs/i/m.d:Lcom/ihs/i/ak;
        //    68: ifnull          204
        //    71: aload_0        
        //    72: getfield        com/ihs/i/m.d:Lcom/ihs/i/ak;
        //    75: new             Lcom/ihs/i/aa;
        //    78: dup            
        //    79: invokespecial   com/ihs/i/aa.<init>:()V
        //    82: invokevirtual   com/ihs/i/ak.a:(Ljava/lang/Object;)V
        //    85: aload_0        
        //    86: getfield        com/ihs/i/m.e:Landroid/os/HandlerThread;
        //    89: invokevirtual   android/os/HandlerThread.join:()V
        //    92: aload_0        
        //    93: aconst_null    
        //    94: putfield        com/ihs/i/m.d:Lcom/ihs/i/ak;
        //    97: aload_0        
        //    98: getfield        com/ihs/i/m.g:Lcom/ihs/i/i;
        //   101: ifnull          121
        //   104: aload_0        
        //   105: getfield        com/ihs/i/m.g:Lcom/ihs/i/i;
        //   108: invokevirtual   com/ihs/i/i.close:()V
        //   111: aload_0        
        //   112: aconst_null    
        //   113: putfield        com/ihs/i/m.f:Ljava/nio/channels/SocketChannel;
        //   116: aload_0        
        //   117: aconst_null    
        //   118: putfield        com/ihs/i/m.g:Lcom/ihs/i/i;
        //   121: aload_0        
        //   122: getfield        com/ihs/i/m.f:Ljava/nio/channels/SocketChannel;
        //   125: ifnull          233
        //   128: aload_0        
        //   129: getfield        com/ihs/i/m.f:Ljava/nio/channels/SocketChannel;
        //   132: invokevirtual   java/nio/channels/SocketChannel.close:()V
        //   135: aload_0        
        //   136: aconst_null    
        //   137: putfield        com/ihs/i/m.f:Ljava/nio/channels/SocketChannel;
        //   140: aload_0        
        //   141: getfield        com/ihs/i/m.u:Ljava/lang/Runnable;
        //   144: ifnull          158
        //   147: aload_0        
        //   148: getfield        com/ihs/i/m.b:Landroid/os/Handler;
        //   151: aload_0        
        //   152: getfield        com/ihs/i/m.u:Ljava/lang/Runnable;
        //   155: invokevirtual   android/os/Handler.removeCallbacks:(Ljava/lang/Runnable;)V
        //   158: aload_0        
        //   159: iload_1        
        //   160: aload_2        
        //   161: invokespecial   com/ihs/i/m.a:(ILjava/lang/String;)V
        //   164: getstatic       com/ihs/i/m.k:Ljava/lang/String;
        //   167: ldc             "worker threads stopped"
        //   169: invokestatic    com/ihs/APlus/a/a.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   172: return         
        //   173: astore          6
        //   175: aload           6
        //   177: invokevirtual   java/lang/InterruptedException.printStackTrace:()V
        //   180: goto            59
        //   183: getstatic       com/ihs/i/m.k:Ljava/lang/String;
        //   186: ldc             "mReader already NULL"
        //   188: invokestatic    com/ihs/APlus/a/a.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   191: goto            64
        //   194: astore          5
        //   196: aload           5
        //   198: invokevirtual   java/lang/InterruptedException.printStackTrace:()V
        //   201: goto            92
        //   204: getstatic       com/ihs/i/m.k:Ljava/lang/String;
        //   207: ldc             "mWriter already NULL"
        //   209: invokestatic    com/ihs/APlus/a/a.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   212: goto            97
        //   215: astore          4
        //   217: aload           4
        //   219: invokevirtual   java/io/IOException.printStackTrace:()V
        //   222: goto            111
        //   225: astore_3       
        //   226: aload_3        
        //   227: invokevirtual   java/io/IOException.printStackTrace:()V
        //   230: goto            135
        //   233: getstatic       com/ihs/i/m.k:Ljava/lang/String;
        //   236: ldc             "mTransportChannel already NULL"
        //   238: invokestatic    com/ihs/APlus/a/a.a:(Ljava/lang/String;Ljava/lang/String;)V
        //   241: goto            140
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                            
        //  -----  -----  -----  -----  --------------------------------
        //  52     59     173    183    Ljava/lang/InterruptedException;
        //  85     92     194    204    Ljava/lang/InterruptedException;
        //  104    111    215    225    Ljava/io/IOException;
        //  128    135    225    233    Ljava/io/IOException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IndexOutOfBoundsException: Index: 108, Size: 108
        //     at java.util.ArrayList.rangeCheck(ArrayList.java:653)
        //     at java.util.ArrayList.get(ArrayList.java:429)
        //     at com.strobel.decompiler.ast.AstBuilder.convertToAst(AstBuilder.java:3303)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:113)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:210)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    protected static void f() {
    }
    
    private ByteChannel k() {
        if (this.l) {
            return this.g;
        }
        return this.f;
    }
    
    @Override
    public final void a(final String s) {
        this.d.a(new ae(s));
    }
    
    @Override
    public final void a(final String s, final l l) {
        this.a(s, null, l, new af());
    }
    
    public void a(final String s, final String[] h, final l i, final af af) {
        this.a = com.ihs.i.c.b;
        if (this.c()) {
            throw new p("already connected");
        }
        try {
            this.m = new URI(s);
            if (!this.m.getScheme().equals("ws") && !this.m.getScheme().equals("wss")) {
                throw new p("unsupported scheme for WebSockets URI");
            }
        }
        catch (URISyntaxException ex) {
            throw new p("invalid WebSockets URI");
        }
        if (this.m.getScheme().equals("wss")) {
            this.l = true;
        }
        this.n = this.m.getScheme();
        if (this.m.getPort() == -1) {
            if (this.n.equals("ws")) {
                this.p = 80;
            }
            else {
                this.p = 443;
            }
        }
        else {
            this.p = this.m.getPort();
        }
        if (this.m.getHost() == null) {
            throw new p("no host specified in WebSockets URI");
        }
        this.o = this.m.getHost();
        if (this.m.getPath() == null || this.m.getPath().equals("")) {
            this.q = "/";
        }
        else {
            this.q = this.m.getPath();
        }
        if (this.m.getQuery() == null || this.m.getQuery().equals("")) {
            this.r = null;
        }
        else {
            this.r = this.m.getQuery();
        }
        this.h = h;
        this.i = i;
        this.j = new af(af);
        this.s = true;
        new n(this, (byte)0).execute((Object[])new Void[0]);
    }
    
    @Override
    public final boolean a() {
        final boolean c = this.c();
        boolean b = false;
        if (!c) {
            final URI m = this.m;
            b = false;
            if (m != null) {
                new n(this, (byte)0).execute((Object[])new Void[0]);
                b = true;
            }
        }
        return b;
    }
    
    @Override
    public void b() {
        if (this.d != null) {
            this.d.a(new t((byte)0));
        }
        else {
            com.ihs.g.c.a(com.ihs.i.m.k, "could not send Close .. writer already NULL");
        }
        this.s = false;
        this.t = false;
        if (this.u != null) {
            this.b.removeCallbacks(this.u);
            this.u = null;
        }
        this.a = com.ihs.i.c.e;
    }
    
    @Override
    public final boolean c() {
        if (this.l) {
            if (this.g == null || !this.g.a()) {
                return false;
            }
        }
        else if (this.f == null || !this.f.isConnected()) {
            return false;
        }
        return true;
    }
    
    @Override
    public final boolean d() {
        if (this.l) {
            if (this.g == null || this.g.b().isClosed()) {
                return true;
            }
        }
        else if (this.f == null || this.f.socket().isClosed()) {
            return true;
        }
        return false;
    }
    
    protected final void g() {
        (this.e = new HandlerThread("WebSocketWriter")).start();
        this.d = new ak(this.e.getLooper(), this.b, this.k(), this.j);
        com.ihs.g.c.a(com.ihs.i.m.k, "WS writer created and started");
    }
    
    protected final void h() {
        (this.c = new ai(this.b, this.k(), this.j, "WebSocketReader")).start();
        com.ihs.g.c.a(com.ihs.i.m.k, "WS reader created and started");
    }
    
    protected final void i() {
        if (this.u != null) {
            this.b.removeCallbacks(this.u);
        }
        this.u = new Runnable() {
            @Override
            public final void run() {
                com.ihs.g.c.d(com.ihs.i.m.k, "Send ping");
                if (com.ihs.i.m.this.d != null) {
                    com.ihs.i.m.this.d.a(new x());
                }
                com.ihs.i.m.a(com.ihs.i.m.this, new Runnable() {
                    @Override
                    public final void run() {
                        com.ihs.g.c.d(com.ihs.i.m.k, "No activity - connection lost");
                        com.ihs.i.m.b(com.ihs.i.m.this, 3, "No activity");
                        com.ihs.i.m.a(com.ihs.i.m.this, null);
                    }
                });
                com.ihs.i.m.this.b.postDelayed(com.ihs.i.m.this.u, (long)com.ihs.i.m.this.j.j());
            }
        };
        this.b.postDelayed(this.u, (long)this.j.i());
    }
}
