// 
// Decompiled by Procyon v0.5.30
// 

package com.ihs.i;

import java.net.URISyntaxException;
import java.nio.channels.ByteChannel;
import android.os.Message;
import java.net.URI;
import android.os.HandlerThread;
import android.os.Handler;
import javax.net.ssl.SSLEngine;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.security.SecureRandom;
import javax.net.ssl.TrustManager;
import javax.net.ssl.KeyManager;
import javax.net.ssl.SSLContext;
import java.net.SocketAddress;
import java.net.InetSocketAddress;
import java.nio.channels.SocketChannel;
import android.os.AsyncTask;

final class n extends AsyncTask
{
    final /* synthetic */ m a;
    
    private n(final m a) {
        this.a = a;
    }
    
    private String a() {
        Thread.currentThread().setName("WebSocketConnector");
        try {
            this.a.f = SocketChannel.open();
            this.a.f.socket().connect(new InetSocketAddress(this.a.o, this.a.p), this.a.j.f());
            this.a.f.socket().setSoTimeout(this.a.j.e());
            this.a.f.socket().setTcpNoDelay(this.a.j.d());
            if (this.a.l) {
                final SSLContext instance = SSLContext.getInstance("TLS");
                instance.init(null, null, null);
                final SSLEngine sslEngine = instance.createSSLEngine(this.a.o, this.a.p);
                sslEngine.setUseClientMode(true);
                this.a.g = new i(this.a.f, sslEngine, Executors.newSingleThreadScheduledExecutor());
            }
            this.a.a = c.c;
            return null;
        }
        catch (Exception ex) {
            return ex.getMessage();
        }
    }
}
