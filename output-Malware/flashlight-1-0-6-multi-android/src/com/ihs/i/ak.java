// 
// Decompiled by Procyon v0.5.30
// 

package com.ihs.i;

import android.util.Base64;
import android.os.Build$VERSION;
import java.net.SocketException;
import android.os.Message;
import com.ihs.g.c;
import java.nio.channels.ByteChannel;
import android.os.Looper;
import java.util.Random;
import android.os.Handler;

public class ak extends Handler
{
    private static final String a;
    private final Random b;
    private final Handler c;
    private final Looper d;
    private final ByteChannel e;
    private final af f;
    private final g g;
    
    static {
        a = ak.class.getName();
    }
    
    public ak(final Looper d, final Handler c, final ByteChannel e, final af f) {
        super(d);
        this.b = new Random();
        this.d = d;
        this.c = c;
        this.e = e;
        this.f = f;
        this.g = new g(14 + f.b(), 262144);
        com.ihs.g.c.a(ak.a, "created");
    }
    
    private void a(final int n, final byte[] array) {
        if (array != null) {
            this.a(n, array, array.length);
            return;
        }
        this.a(n, null, 0);
    }
    
    private void a(final int n, final byte[] array, final int n2) {
        this.g.write((byte)(0xFFFFFF80 | (byte)n));
        final boolean h = this.f.h();
        byte b = 0;
        if (h) {
            b = -128;
        }
        final long n3 = n2;
        if (n3 <= 125L) {
            this.g.write((byte)(b | (byte)n3));
        }
        else if (n3 <= 65535L) {
            this.g.write((byte)(b | 0x7E));
            this.g.write(new byte[] { (byte)(0xFFL & n3 >> 8), (byte)(0xFFL & n3) });
        }
        else {
            this.g.write((byte)(b | 0x7F));
            this.g.write(new byte[] { (byte)(0xFFL & n3 >> 56), (byte)(0xFFL & n3 >> 48), (byte)(0xFFL & n3 >> 40), (byte)(0xFFL & n3 >> 32), (byte)(0xFFL & n3 >> 24), (byte)(0xFFL & n3 >> 16), (byte)(0xFFL & n3 >> 8), (byte)(0xFFL & n3) });
        }
        byte[] array3;
        if (this.f.h()) {
            final byte[] array2 = new byte[4];
            this.b.nextBytes(array2);
            this.g.write(array2[0]);
            this.g.write(array2[1]);
            this.g.write(array2[2]);
            this.g.write(array2[3]);
            array3 = array2;
        }
        else {
            array3 = null;
        }
        if (n3 > 0L) {
            if (this.f.h()) {
                for (int n4 = 0; n4 < n3; ++n4) {
                    final int n5 = n4 + 0;
                    array[n5] ^= array3[n4 % 4];
                }
            }
            this.g.write(array, 0, n2);
        }
    }
    
    private void b(final Object obj) {
        final Message obtainMessage = this.c.obtainMessage();
        obtainMessage.obj = obj;
        this.c.sendMessage(obtainMessage);
    }
    
    public final void a(final Object obj) {
        final Message obtainMessage = this.obtainMessage();
        obtainMessage.obj = obj;
        this.sendMessage(obtainMessage);
    }
    
    public void handleMessage(final Message message) {
        int i = 0;
        Object obj = null;
        try {
            this.g.c();
            obj = message.obj;
            if (obj instanceof ae) {
                if (((ae)obj).a.getBytes("UTF-8").length > this.f.c()) {
                    throw new p("message payload exceeds payload limit");
                }
                goto Label_0112;
            }
        }
        catch (SocketException ex) {
            com.ihs.g.c.a(ak.a, "run() : SocketException (" + ex.toString() + ")");
            this.b(new u(ex.getMessage()));
        }
        catch (Exception ex2) {
            ex2.printStackTrace();
            this.b(new v(ex2));
            return;
        }
        if (obj instanceof ab) {
            final ab ab = (ab)obj;
            if (ab.a.length > this.f.c()) {
                throw new p("message payload exceeds payload limit");
            }
            this.a(1, ab.a);
            goto Label_0119;
        }
        else if (obj instanceof r) {
            final r r = (r)obj;
            if (r.a.length > this.f.c()) {
                throw new p("message payload exceeds payload limit");
            }
            this.a(2, r.a);
            goto Label_0119;
        }
        else if (obj instanceof x) {
            final x x = (x)obj;
            if (x.a != null && x.a.length > 125) {
                throw new p("ping payload exceeds 125 octets");
            }
            this.a(9, x.a);
            goto Label_0119;
        }
        else if (obj instanceof y) {
            final y y = (y)obj;
            if (y.a != null && y.a.length > 125) {
                throw new p("pong payload exceeds 125 octets");
            }
            this.a(10, y.a);
            goto Label_0119;
        }
        else if (obj instanceof t) {
            final t t = (t)obj;
            if (t.a <= 0) {
                this.a(8, null);
                goto Label_0119;
            }
            byte[] array2;
            if (t.b != null && !t.b.equals("")) {
                final byte[] bytes = t.b.getBytes("UTF-8");
                final byte[] array = new byte[2 + bytes.length];
                while (i < bytes.length) {
                    array[i + 2] = bytes[i];
                    ++i;
                }
                array2 = array;
            }
            else {
                array2 = new byte[2];
            }
            if (array2.length > 125) {
                throw new p("close payload exceeds 125 octets");
            }
            array2[0] = (byte)(0xFF & t.a >> 8);
            array2[1] = (byte)(0xFF & t.a);
            this.a(8, array2);
            goto Label_0119;
        }
        else {
            if (obj instanceof s) {
                final s s = (s)obj;
                String s2;
                if (s.c != null) {
                    s2 = String.valueOf(s.b) + "?" + s.c;
                }
                else {
                    s2 = s.b;
                }
                this.g.a("GET " + s2 + " HTTP/1.1");
                this.g.e();
                this.g.a("Host: " + s.a);
                this.g.e();
                this.g.a("Upgrade: WebSocket");
                this.g.e();
                this.g.a("Connection: Upgrade");
                this.g.e();
                final g g = this.g;
                final StringBuilder sb = new StringBuilder("Sec-WebSocket-Key: ");
                final byte[] array3 = new byte[16];
                this.b.nextBytes(array3);
                String s3;
                if (Build$VERSION.SDK_INT >= 8) {
                    s3 = Base64.encodeToString(array3, 2);
                }
                else {
                    s3 = com.ihs.i.d.a(array3);
                }
                g.a(sb.append(s3).toString());
                this.g.e();
                if (s.d != null && !s.d.equals("")) {
                    this.g.a("Origin: " + s.d);
                    this.g.e();
                }
                if (s.e != null && s.e.length > 0) {
                    this.g.a("Sec-WebSocket-Protocol: ");
                    while (i < s.e.length) {
                        this.g.a(s.e[i]);
                        this.g.a(", ");
                        ++i;
                    }
                    this.g.e();
                }
                this.g.a("Sec-WebSocket-Version: 13");
                this.g.e();
                this.g.e();
                goto Label_0119;
            }
            if (obj instanceof aa) {
                this.d.quit();
                com.ihs.g.c.a(ak.a, "ended");
                goto Label_0119;
            }
            throw new p("unknown message received by WebSocketWriter");
        }
    }
}
