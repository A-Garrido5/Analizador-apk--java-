// 
// Decompiled by Procyon v0.5.30
// 

package com.ihs.alerts;

import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.StateListDrawable;
import android.widget.Button;
import android.widget.ScrollView;
import android.view.View;
import android.widget.TextView;
import junit.framework.Assert;
import com.ihs.g.d;
import android.view.ViewGroup$LayoutParams;
import android.widget.RelativeLayout$LayoutParams;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import java.util.Map;
import java.util.List;
import android.app.Dialog;
import android.content.Context;
import android.view.View$OnClickListener;
import android.widget.RelativeLayout;

public final class b extends RelativeLayout implements View$OnClickListener
{
    private c A;
    private Context B;
    private Dialog C;
    private int D;
    private int E;
    private List F;
    private final String a;
    private final String b;
    private final String c;
    private final String d;
    private final float e;
    private final float f;
    private final int g;
    private final int h;
    private final float i;
    private final float j;
    private final float k;
    private final int l;
    private final int m;
    private final float n;
    private final int o;
    private final int p;
    private final float q;
    private final int r;
    private final int s;
    private final float t;
    private final int u;
    private final int v;
    private c w;
    private c x;
    private c y;
    private c z;
    
    public b(final Context b, final Map map, final Dialog c) {
        super(b);
        this.a = "custom_rate_background";
        this.b = "drawable";
        this.c = "NormalState";
        this.d = "HighlightedState";
        this.e = 0.04f;
        this.f = 1.0f;
        this.g = Color.rgb(255, 255, 255);
        this.h = 24;
        this.i = 0.454335f;
        this.j = 0.90801f;
        this.k = 0.68f;
        this.l = Color.rgb(154, 154, 154);
        this.m = 16;
        this.n = 0.71676f;
        this.o = Color.rgb(255, 255, 255);
        this.p = 18;
        this.q = 0.839306f;
        this.r = Color.rgb(145, 127, 101);
        this.s = 18;
        this.t = 0.839306f;
        this.u = Color.rgb(255, 255, 255);
        this.v = 18;
        this.B = b;
        final int identifier = b.getResources().getIdentifier("custom_rate_background", "drawable", b.getPackageName());
        this.D = BitmapFactory.decodeResource(b.getResources(), identifier).getWidth();
        this.E = BitmapFactory.decodeResource(b.getResources(), identifier).getHeight();
        this.setBackgroundResource(identifier);
        this.setLayoutParams((ViewGroup$LayoutParams)new RelativeLayout$LayoutParams(this.D, this.E));
        this.w = new c(this, 0.04f * this.E, 1.0f * this.D, 0.0f, this.g, 24);
        this.x = new c(this, 0.454335f * this.E, 0.90801f * this.D, 0.225665f * this.E, this.l, 16);
        this.y = new c(this, 0.71676f * this.E, 0.0f, 0.0f, this.o, 18);
        this.z = new c(this, 0.839306f * this.E, 0.0f, 0.0f, this.r, 18);
        this.z.b = 5;
        this.A = new c(this, 0.839306f * this.E, 0.0f, 0.0f, this.u, 18);
        this.A.b = 7;
        this.F = com.ihs.g.d.c(map, "Actions");
        if (this.F == null) {
            Assert.assertEquals("you must configure the alert actions", 1, 2);
        }
        this.a(this.F);
        final String a = com.ihs.alerts.d.a(map, "Title");
        final TextView textView = new TextView(this.B);
        textView.setWidth(this.w.d);
        textView.setText((CharSequence)a);
        textView.setGravity(17);
        textView.setTextColor(this.w.f);
        textView.setTextSize((float)this.w.g);
        final RelativeLayout$LayoutParams relativeLayout$LayoutParams = new RelativeLayout$LayoutParams(-2, -2);
        relativeLayout$LayoutParams.addRule(this.w.a);
        relativeLayout$LayoutParams.addRule(this.w.b, -1);
        relativeLayout$LayoutParams.topMargin = this.w.c;
        this.addView((View)textView, (ViewGroup$LayoutParams)relativeLayout$LayoutParams);
        final String a2 = com.ihs.alerts.d.a(map, "Body");
        final TextView textView2 = new TextView(this.B);
        textView2.setText((CharSequence)a2);
        textView2.setGravity(17);
        textView2.setTextColor(this.x.f);
        textView2.setTextSize((float)this.x.g);
        final RelativeLayout$LayoutParams relativeLayout$LayoutParams2 = new RelativeLayout$LayoutParams(this.x.d, this.x.e);
        relativeLayout$LayoutParams2.addRule(this.x.a);
        relativeLayout$LayoutParams2.addRule(this.x.b, -1);
        relativeLayout$LayoutParams2.topMargin = this.x.c;
        final ScrollView scrollView = new ScrollView(this.B);
        scrollView.addView((View)textView2);
        this.addView((View)scrollView, (ViewGroup$LayoutParams)relativeLayout$LayoutParams2);
        this.C = c;
    }
    
    private void a(final List list) {
        final Resources resources = this.B.getResources();
        for (int i = 0; i < list.size(); ++i) {
            final int identifier = resources.getIdentifier(com.ihs.g.d.b(list.get(i), "NormalState"), "drawable", this.B.getPackageName());
            final int identifier2 = resources.getIdentifier(com.ihs.g.d.b(list.get(i), "HighlightedState"), "drawable", this.B.getPackageName());
            final String a = com.ihs.alerts.d.a(list.get(i), "Text");
            final Context b = this.B;
            final Button button = new Button(b);
            final StateListDrawable backgroundDrawable = new StateListDrawable();
            Drawable drawable;
            if (identifier2 == -1) {
                drawable = null;
            }
            else {
                drawable = b.getResources().getDrawable(identifier2);
            }
            backgroundDrawable.addState(new int[] { 16842919, 16842910 }, drawable);
            backgroundDrawable.addState(new int[] { 16842919 }, drawable);
            Drawable drawable2;
            if (identifier == -1) {
                drawable2 = null;
            }
            else {
                drawable2 = b.getResources().getDrawable(identifier);
            }
            backgroundDrawable.addState(new int[0], drawable2);
            button.setBackgroundDrawable((Drawable)backgroundDrawable);
            button.setTag((Object)i);
            button.setId(i + 1001);
            button.setText((CharSequence)a);
            button.setOnClickListener((View$OnClickListener)this);
            final int width = BitmapFactory.decodeResource(b.getResources(), identifier2).getWidth();
            final int height = BitmapFactory.decodeResource(b.getResources(), identifier2).getHeight();
            button.setLayoutParams((ViewGroup$LayoutParams)new RelativeLayout$LayoutParams(width, height));
            final RelativeLayout$LayoutParams relativeLayout$LayoutParams = new RelativeLayout$LayoutParams(width, height);
            int n = -1;
            c c;
            if (i == 0) {
                c = this.y;
                relativeLayout$LayoutParams.leftMargin = (this.D - width) / 2;
            }
            else if (i != 0) {
                c = this.z;
                n = 1001;
            }
            else {
                c = this.A;
                n = 1001;
            }
            relativeLayout$LayoutParams.topMargin = c.c;
            relativeLayout$LayoutParams.addRule(c.a);
            relativeLayout$LayoutParams.addRule(c.b, n);
            this.addView((View)button, (ViewGroup$LayoutParams)relativeLayout$LayoutParams);
            button.setTextSize((float)c.g);
            button.setTextColor(c.f);
        }
    }
    
    public final void onClick(final View view) {
        com.ihs.alerts.h.a(this.F.get((int)view.getTag()));
        this.C.dismiss();
    }
    
    protected final void onMeasure(final int n, final int n2) {
        super.onMeasure(n, n2);
        this.setMeasuredDimension(this.D, this.E);
    }
}
