// 
// Decompiled by Procyon v0.5.30
// 

package com.ihs.alerts;

import java.util.List;
import com.ihs.g.a;
import java.util.Locale;
import java.util.Date;
import java.util.Iterator;
import com.ihs.g.i;
import java.util.HashMap;
import com.ihs.g.d;
import com.ihs.g.c;
import java.util.Map;

public final class l extends j
{
    public static String a;
    private static l b;
    private Map c;
    
    static {
        l.a = null;
    }
    
    public static l a() {
        synchronized (l.class) {
            if (l.b == null) {
                l.b = new l();
            }
            return l.b;
        }
    }
    
    private Map b(final Map map) {
        com.ihs.g.c.a("message alert local alerts data is " + this.c);
        com.ihs.g.c.a("message alert remot alerts data is " + map);
        if (map != null && !map.isEmpty()) {
            final Iterator<Map.Entry<Object, V>> iterator = this.c.entrySet().iterator();
            while (iterator.hasNext()) {
                if (!map.containsKey(iterator.next().getKey())) {
                    iterator.remove();
                }
            }
            com.ihs.g.c.a("start finding showing alert now.");
            for (final String s : map.keySet()) {
                com.ihs.g.c.a("alert key is " + s);
                final Map d = com.ihs.g.d.d(map, s);
                final Map d2 = com.ihs.g.d.d(this.c, s);
                com.ihs.g.c.a("local alert data is " + d2);
                com.ihs.g.c.a("remot alert data is " + d);
                final HashMap hashMap = new HashMap<String, Boolean>(d);
                if (d2 != null) {
                    if (d2.containsKey("HasShown")) {
                        hashMap.put("HasShown", d2.get("HasShown"));
                        com.ihs.g.c.a("SET has show TRUE ");
                    }
                }
                else {
                    hashMap.put("HasShown", false);
                    com.ihs.g.c.a("SET has show FALSE ");
                }
                this.c.put(s, hashMap);
            }
            i.a(this.c, l.a);
        }
        return this.c;
    }
    
    public final void a(final Map map) {
        this.b();
        this.c = i.b(l.a);
        if (this.c == null) {
            this.c = new HashMap();
        }
        final Map d = com.ihs.g.d.d(map, "MessageAlert");
        if (d == null) {
            this.b(new HashMap());
            return;
        }
        this.b(d);
    }
    
    public final void b() {
        if (this.c != null) {
            this.c.clear();
        }
    }
    
    public final h c() {
        Map<String, Boolean> map;
        if (this.c == null || this.c.isEmpty()) {
            map = null;
        }
        else {
            final Iterator<Map.Entry<K, Map<String, Boolean>>> iterator = this.c.entrySet().iterator();
            map = null;
            while (iterator.hasNext()) {
                final Map<String, Boolean> map2 = iterator.next().getValue();
                int n;
                if (map2 == null || !map2.containsKey("ID")) {
                    n = 0;
                }
                else {
                    final boolean f = d.f(map2, "HasShown");
                    final boolean f2 = d.f(map2, "AlwaysShow");
                    if (f && !f2) {
                        n = 0;
                    }
                    else {
                        final Date a = d.a(map2, new Date(0L), "DateStart");
                        final Date a2 = d.a(map2, new Date(0L), "DateEnd");
                        final Date date = new Date();
                        if (date.compareTo(a) < 0 || date.compareTo(a2) > 0) {
                            n = 0;
                        }
                        else {
                            final String country = Locale.getDefault().getCountry();
                            final List c = d.c(map2, "RegionFilter");
                            if (c != null && !c.contains(country)) {
                                n = 0;
                            }
                            else {
                                final List c2 = d.c(map2, "RegionException");
                                if (c2 != null && !c2.contains(country)) {
                                    n = 0;
                                }
                                else {
                                    n = 1;
                                }
                            }
                        }
                    }
                }
                if (n != 0) {
                    if (map != null) {
                        final int e = d.e(map, "Priority");
                        final int e2 = d.e(map2, "Priority");
                        int compareTo;
                        if (e == e2) {
                            compareTo = d.a(map, new Date(0L), "DateStart").compareTo(d.a(map2, new Date(0L), "DateStart"));
                        }
                        else {
                            compareTo = e - e2;
                        }
                        if (compareTo >= 0) {
                            continue;
                        }
                    }
                    map = map2;
                }
            }
            if (map != null) {
                map.put("HasShown", true);
                i.a(this.c, l.a);
                com.ihs.g.c.a("iHSAlertLibrary", "Top message alert data is " + map.toString());
            }
        }
        h a3 = null;
        if (map != null) {
            final boolean empty = map.isEmpty();
            a3 = null;
            if (!empty) {
                com.ihs.a.d.a();
                com.ihs.a.d.c("HSMessageAlert_Showed");
                com.ihs.a.d.a().a("iHandyAlerts_Events", "iHandyAlerts_MessageAlert_Showed", com.ihs.g.a.a.getPackageName());
                a3 = j.a(map, e.d);
            }
        }
        return a3;
    }
    
    @Override
    protected final Object clone() {
        throw new CloneNotSupportedException();
    }
}
