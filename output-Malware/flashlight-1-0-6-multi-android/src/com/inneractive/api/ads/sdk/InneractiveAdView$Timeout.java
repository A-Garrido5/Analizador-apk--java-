// 
// Decompiled by Procyon v0.5.30
// 

package com.inneractive.api.ads.sdk;

public class InneractiveAdView$Timeout
{
    public static int getConnectionTimeout() {
        return IAnetworkFetcher.a;
    }
    
    public static int getLoadingTimeout() {
        return m.a;
    }
    
    public static int getSocketTimeout() {
        return IAnetworkFetcher.b;
    }
    
    public static void setConnectionTimeout(final int a) {
        if (a < IAdefines.h) {
            IAnetworkFetcher.a = IAdefines.h;
            InneractiveAdView$Log.i("Inneractive_info", "Cannot set " + Integer.toString(a) + " milliseconds as a connection timeout. Minimum timeout value is " + Integer.toString(IAdefines.h) + " milliseconds. Using the minimum timeout(" + Integer.toString(IAdefines.h) + " milliseconds).");
            return;
        }
        if (a > IAdefines.m) {
            IAnetworkFetcher.a = IAdefines.m;
            InneractiveAdView$Log.i("Inneractive_info", "Cannot set " + a + " milliseconds as a connection timeout. Maximum timeout value is " + IAdefines.m + " milliseconds. Using the maximum timeout (" + IAdefines.m + " milliseconds).");
            return;
        }
        IAnetworkFetcher.a = a;
        InneractiveAdView$Log.i("Inneractive_info", "Connection timeout configured to be " + a + " milliseconds.");
    }
    
    public static void setLoadingTimeout(final int a) {
        if (a < IAdefines.i) {
            m.a = IAdefines.i;
            InneractiveAdView$Log.i("Inneractive_info", "Cannot set " + a + " milliseconds as a loading timeout. Minimum timeout value is " + IAdefines.i + " milliseconds. Using the minimum timeout(" + IAdefines.i + " milliseconds).");
            return;
        }
        if (a > IAdefines.k) {
            m.a = IAdefines.k;
            InneractiveAdView$Log.i("Inneractive_info", "Cannot set " + a + " milliseconds as a loading timeout. Maximum timeout value is " + IAdefines.k + " milliseconds. Using the maximum timeout (" + IAdefines.k + " milliseconds).");
            return;
        }
        m.a = a;
        InneractiveAdView$Log.i("Inneractive_info", "Loading timeout configured to be " + a + " milliseconds.");
    }
    
    public static void setSocketTimeout(final int b) {
        if (b < IAdefines.g) {
            IAnetworkFetcher.b = IAdefines.g;
            InneractiveAdView$Log.i("Inneractive_info", "Cannot set " + b + " milliseconds as a socket timeout. Minimum timeout value is " + IAdefines.g + " milliseconds. Using the minimum timeout(" + IAdefines.g + " milliseconds).");
            return;
        }
        if (b > IAdefines.l) {
            IAnetworkFetcher.b = IAdefines.l;
            InneractiveAdView$Log.i("Inneractive_info", "Cannot set " + Integer.toString(b) + " milliseconds as a socket timeout. Maximum timeout value is " + IAdefines.l + " milliseconds. Using the maximum timeout (" + IAdefines.l + " milliseconds).");
            return;
        }
        IAnetworkFetcher.b = b;
        InneractiveAdView$Log.i("Inneractive_info", "Socket timeout configured to be " + b + " milliseconds.");
    }
}
