// 
// Decompiled by Procyon v0.5.30
// 

package com.inneractive.api.ads.sdk;

import android.os.AsyncTask;
import java.util.concurrent.Executor;

final class IAnetworkFetcher
{
    static int a;
    static int b;
    private aq c;
    private String d;
    private final as e;
    private aq$a f;
    
    static {
        IAnetworkFetcher.a = IAdefines.h;
        IAnetworkFetcher.b = IAdefines.g;
    }
    
    IAnetworkFetcher(final String d, final aq$a f) {
        this.d = d;
        this.e = new as();
        this.f = f;
    }
    
    final void a() {
        if (this.c != null) {
            InneractiveAdView$Log.v("Inneractive_verbose", "Canceling network fetch ad for task #" + this.e.a());
            this.c.cancel(true);
        }
        this.d = "";
    }
    
    final void a(final String s) {
        this.e.b();
        InneractiveAdView$Log.v("Inneractive_verbose", "Network fetching ad for task #" + this.e.a());
        if (this.c != null) {
            this.c.cancel(true);
        }
        (this.c = ar.a(this.e, this.d)).a(this.f);
        aq c;
        String[] array;
        try {
            c = this.c;
            array = new String[] { s };
            if (c == null) {
                throw new IllegalArgumentException("Unable to execute null AsyncTask.");
            }
        }
        catch (Exception ex) {
            InneractiveAdView$Log.d("Inneractive_debug", "Error executing AdFetchTask");
            return;
        }
        if (IAdefines$ApiLevel.a().a(IAdefines$ApiLevel.e)) {
            new IAreflectionHandler$a(c, "executeOnExecutor").a(Executor.class, AsyncTask.class.getField("THREAD_POOL_EXECUTOR").get(AsyncTask.class)).a(Object[].class, array).a();
            return;
        }
        c.execute((Object[])array);
    }
}
