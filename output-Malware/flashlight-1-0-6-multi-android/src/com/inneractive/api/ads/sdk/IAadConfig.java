// 
// Decompiled by Procyon v0.5.30
// 

package com.inneractive.api.ads.sdk;

import java.util.HashMap;
import android.widget.FrameLayout$LayoutParams;
import android.view.View;
import android.os.Build;
import android.webkit.WebView;
import android.provider.Settings$Secure;
import android.content.Context;
import java.util.Map;
import java.util.WeakHashMap;
import android.location.Location;
import java.io.Serializable;

class IAadConfig implements Serializable
{
    private static boolean A;
    private static String B;
    private static String m;
    private static int n;
    private static String o;
    private static String p;
    private static Location q;
    private static String r;
    private static String s;
    private static String t;
    private static String u;
    private static String v;
    private static String w;
    private static String x;
    private static boolean y;
    private static WeakHashMap z;
    private String C;
    private String D;
    private String E;
    private int F;
    private int G;
    private int H;
    private String I;
    private String J;
    private Map K;
    private Integer L;
    private String M;
    private IAresponseData N;
    public int a;
    public String b;
    public String c;
    public String d;
    public String e;
    InneractiveAdView$InternalAdType f;
    int g;
    private String h;
    private InneractiveAdView$MediationName i;
    private String j;
    private String k;
    private boolean l;
    
    static {
        IAadConfig.A = true;
    }
    
    IAadConfig(final Context context) {
        this.F();
        if (context != null) {
            final String string = Settings$Secure.getString(context.getContentResolver(), "android_id");
            if (string != null) {
                IAadConfig.t = d$a.d(string);
            }
            if (string != null) {
                IAadConfig.u = d$a.e(string);
            }
            final String f = d$a.f(context);
            if (f != null) {
                IAadConfig.r = d$a.d(f);
            }
            if (f != null) {
                IAadConfig.s = d$a.e(f);
            }
            c(d$a.a(context, "AdvertisingIdFile"));
            IAadConfig.y = Boolean.parseBoolean(d$a.a(context, "LimitAdTrackingFile"));
            new a(this, context).start();
            String string2 = "";
            if (d$a.b(context, "MM")) {
                string2 += "MM";
            }
            IAadConfig.B = string2;
            IAadConfig.v = context.getPackageName();
            IAadConfig.w = d$a.g(context);
            IAadConfig.m = new WebView(context).getSettings().getUserAgentString();
        }
        IAadConfig.o = Build.MANUFACTURER + " " + Build.MODEL;
        IAadConfig.p = "2.1.0-Android-5.0.1";
    }
    
    static String D() {
        return IAadConfig.B;
    }
    
    public static Location E() {
        return IAadConfig.q;
    }
    
    private void F() {
        this.a = -1;
        this.b = null;
        this.c = null;
        this.d = null;
        this.h = null;
        this.e = null;
        this.f = null;
        this.g = 60;
        IAadConfig.m = null;
        IAadConfig.x = null;
        IAadConfig.n = 628;
        IAadConfig.p = "2.1.0-Android-5.0.1";
        IAadConfig.o = null;
        IAadConfig.q = null;
        IAadConfig.z = null;
        this.l = false;
        IAadConfig.r = null;
        IAadConfig.s = null;
        IAadConfig.t = null;
        IAadConfig.u = null;
        IAadConfig.v = null;
        IAadConfig.w = null;
        this.F = -1;
        this.G = -1;
        this.I = null;
        this.L = null;
        this.M = null;
        this.K = null;
        this.N = null;
        this.C = "";
        this.D = "";
        this.E = "";
        this.j = IAdefines.a + IAdefines.b;
        this.k = IAdefines.a + IAdefines.b;
        this.i = null;
        IAadConfig.B = null;
    }
    
    static IAadConfig a(final IAresponseData aresponseData) {
        if (aresponseData == null) {
            return null;
        }
        return aresponseData.i;
    }
    
    public static void a(final Location q) {
        IAadConfig.q = q;
    }
    
    static void a(final View view) {
        if (IAadConfig.z == null) {
            IAadConfig.z = new WeakHashMap();
        }
        IAadConfig.z.put(view, true);
    }
    
    public static void a(final boolean y) {
        IAadConfig.y = y;
    }
    
    static String b() {
        return IAadConfig.p;
    }
    
    static void b(final int n) {
        if (n > 116) {
            IAadConfig.n = n;
            return;
        }
        IAadConfig.n = 116;
    }
    
    static void b(final boolean a) {
        InneractiveAdView$Log.v("Inneractive_verbose", "isHardwareAccelerated = " + a);
        IAadConfig.A = a;
    }
    
    static String c() {
        return IAadConfig.m;
    }
    
    static void c(final String x) {
        if (!d$a.b(x)) {
            IAadConfig.x = x;
            return;
        }
        InneractiveAdView$Log.v("Inneractive_verbose", "The advertising id is empty.");
    }
    
    static String d() {
        return IAadConfig.x;
    }
    
    public static boolean e() {
        return IAadConfig.y;
    }
    
    static int i() {
        return IAadConfig.n;
    }
    
    static String n() {
        return IAadConfig.t;
    }
    
    static String o() {
        return IAadConfig.u;
    }
    
    static String p() {
        return IAadConfig.s;
    }
    
    static String q() {
        return IAadConfig.r;
    }
    
    static String r() {
        return IAadConfig.v;
    }
    
    static String s() {
        return IAadConfig.w;
    }
    
    static String t() {
        return IAadConfig.o;
    }
    
    static boolean y() {
        return IAadConfig.A;
    }
    
    final String A() {
        return this.D;
    }
    
    final String B() {
        return this.E;
    }
    
    final InneractiveAdView$MediationName C() {
        return this.i;
    }
    
    final FrameLayout$LayoutParams a(final View view, final Context context) {
        int a = -2;
        final int f = this.F;
        final int g = this.G;
        final WeakHashMap z = IAadConfig.z;
        boolean b = false;
        if (z != null) {
            final Object value = IAadConfig.z.get(view);
            b = false;
            if (value != null) {
                b = true;
            }
        }
        int n;
        if (b && f > 0 && g > 0) {
            a = d$a.a(f, context);
            n = d$a.a(g, context);
        }
        else if (d$a.l(context)) {
            n = d$a.a(IAdefines$IAbannerDefaultHeight.d.e, context);
        }
        else if (d$a.m(context)) {
            float n2;
            if (d$a.n(context) == 1) {
                n2 = IAdefines$IAbannerDefaultHeight.b.e;
            }
            else {
                n2 = IAdefines$IAbannerDefaultHeight.c.e;
            }
            n = d$a.a(n2, context);
        }
        else {
            n = d$a.a(IAdefines$IAbannerDefaultHeight.a.e, context);
        }
        return new FrameLayout$LayoutParams(a, n, 17);
    }
    
    final void a() {
        this.F();
    }
    
    final void a(final int g) {
        if (g > 0 && this.i != null) {
            InneractiveAdView$Log.d("Inneractive_debug", "As the refresh interval should be turned off for mediation, the refresh interval will be set to 0 and autoRefresh will be turned off");
            this.g = 0;
        }
        else if (g >= 15 && g <= 300) {
            this.g = g;
            InneractiveAdView$Log.d("Inneractive_debug", "The refreshInterval was set to: " + this.g);
        }
        else if (g == 0) {
            this.g = 0;
            InneractiveAdView$Log.i("Inneractive_info", "The refreshInterval is 0. setting the refresh interval to be the max (5 minutes)");
        }
        else if (g < 15 && g > 0) {
            this.g = 15;
            InneractiveAdView$Log.i("Inneractive_info", "The refreshInterval is less than the minimum. setting the refresh interval to the min (15 seconds)");
        }
        else if (g < 0) {
            this.g = 60;
            InneractiveAdView$Log.w("Inneractive_warning", "The refreshInterval is less than 0. setting the refresh interval to the default (60 seconds)");
        }
        else if (g > 300) {
            this.g = 300;
            InneractiveAdView$Log.i("Inneractive_info", "The refreshInterval is greater than the maximum available (5 minutes). setting the refresh interval to the max (5 minutes)");
        }
        InneractiveAdView$Log.d("Inneractive_debug", "refresh interval set to: " + this.g + " seconds.");
    }
    
    final void a(final InneractiveAdView$MediationName i) {
        if (i != null) {
            this.i = i;
        }
    }
    
    public final void a(final String s) {
        if (!d$a.b(s)) {
            this.j = s + IAdefines.d;
            this.k = s + IAdefines.d;
            InneractiveAdView$Log.v("Inneractive_verbose", "base url is: " + s);
            this.l = true;
        }
    }
    
    public final void b(final IAresponseData n) {
        this.N = n;
    }
    
    public final void b(final String h) {
        if (!d$a.b(h)) {
            this.h = h;
            InneractiveAdView$Log.v("Inneractive_verbose", "internal portal is: " + h);
        }
    }
    
    final void c(final int f) {
        this.F = f;
    }
    
    final void d(final int g) {
        this.G = g;
    }
    
    final void d(final String j) {
        if (!d$a.b(j)) {
            this.J = j;
            return;
        }
        InneractiveAdView$Log.v("Inneractive_verbose", "internal session id is Empty");
    }
    
    final void e(final int h) {
        this.H = h;
    }
    
    final void e(final String s) {
        if (!d$a.b(s)) {
            if (this.K == null) {
                this.K = new HashMap();
            }
            for (final String s2 : d$a.c(s).split(",")) {
                this.K.put(s2.split("=")[0], s2.split("=")[1]);
            }
        }
        else {
            InneractiveAdView$Log.v("Inneractive_verbose", "integrated sdk's siteIds list is Empty");
        }
    }
    
    final String f() {
        return this.h;
    }
    
    final void f(final String i) {
        this.I = i;
    }
    
    public final String g() {
        return this.j;
    }
    
    final void g(final String s) {
        if ("".equals(this.C)) {
            this.C += s;
            return;
        }
        this.C = this.C + "," + s;
    }
    
    final String h() {
        return this.k;
    }
    
    final void h(final String c) {
        this.C = c;
    }
    
    final void i(final String d) {
        this.D = d;
    }
    
    final String j() {
        return this.J;
    }
    
    final void j(final String e) {
        this.E = e;
    }
    
    final Map k() {
        return this.K;
    }
    
    final int l() {
        return this.F;
    }
    
    final int m() {
        return this.G;
    }
    
    final int u() {
        return this.H;
    }
    
    final String v() {
        return this.I;
    }
    
    public final IAresponseData w() {
        return this.N;
    }
    
    public final boolean x() {
        return this.l;
    }
    
    final String z() {
        return this.C;
    }
}
