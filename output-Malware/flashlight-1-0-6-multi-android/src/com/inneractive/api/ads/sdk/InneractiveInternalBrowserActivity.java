// 
// Decompiled by Procyon v0.5.30
// 

package com.inneractive.api.ads.sdk;

import android.webkit.WebSettings;
import android.webkit.CookieSyncManager;
import android.view.View$OnClickListener;
import android.webkit.WebChromeClient;
import android.webkit.WebViewClient;
import android.widget.RelativeLayout$LayoutParams;
import android.view.View;
import android.widget.RelativeLayout;
import android.os.Bundle;
import android.content.ActivityNotFoundException;
import android.content.Intent;
import android.net.Uri;
import android.view.ViewGroup$LayoutParams;
import android.widget.LinearLayout$LayoutParams;
import android.content.Context;
import android.graphics.drawable.Drawable;
import android.widget.ImageButton;
import android.webkit.WebView;
import android.widget.LinearLayout;
import android.app.Activity;

public class InneractiveInternalBrowserActivity extends Activity
{
    private static InneractiveInternalBrowserActivity$a g;
    private LinearLayout a;
    private WebView b;
    private ImageButton c;
    private ImageButton d;
    private ImageButton e;
    private ImageButton f;
    
    private ImageButton a(final Drawable imageDrawable) {
        final ImageButton imageButton = new ImageButton((Context)this);
        final LinearLayout$LayoutParams layoutParams = new LinearLayout$LayoutParams(-2, -2, 1.0f);
        layoutParams.gravity = 16;
        imageButton.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
        imageButton.setImageDrawable(imageDrawable);
        return imageButton;
    }
    
    static void a(final InneractiveInternalBrowserActivity$a g) {
        InneractiveInternalBrowserActivity.g = g;
    }
    
    private static boolean a(final String s) {
        return s.startsWith("tel:") || s.startsWith("voicemail:") || s.startsWith("sms:") || s.startsWith("mailto:") || s.startsWith("geo:") || s.startsWith("google.streetview:");
    }
    
    private boolean b(final String s) {
        final Intent intent = new Intent("android.intent.action.VIEW", Uri.parse(s));
        intent.addFlags(268435456);
        try {
            this.startActivity(intent);
            if (InneractiveInternalBrowserActivity.g != null) {
                InneractiveInternalBrowserActivity.g.onApplicationInBackground();
            }
            return true;
        }
        catch (ActivityNotFoundException ex) {
            InneractiveAdView$Log.w("Inneractive_warning", "Failed to start activity for " + s + ". Please ensure that your phone can handle this intent.");
            return false;
        }
    }
    
    public void onBackPressed() {
        this.finish();
        if (InneractiveInternalBrowserActivity.g != null) {
            InneractiveInternalBrowserActivity.g.onInternalBrowserDismissed();
        }
    }
    
    public void onCreate(final Bundle bundle) {
        super.onCreate(bundle);
        this.getWindow().requestFeature(2);
        this.getWindow().setFeatureInt(2, -1);
        (this.a = new LinearLayout((Context)this)).setLayoutParams((ViewGroup$LayoutParams)new LinearLayout$LayoutParams(-1, -1));
        this.a.setOrientation(1);
        final RelativeLayout relativeLayout = new RelativeLayout((Context)this);
        relativeLayout.setLayoutParams((ViewGroup$LayoutParams)new LinearLayout$LayoutParams(-1, -2));
        this.a.addView((View)relativeLayout);
        final LinearLayout linearLayout = new LinearLayout((Context)this);
        linearLayout.setId(1);
        final RelativeLayout$LayoutParams layoutParams = new RelativeLayout$LayoutParams(-1, -2);
        layoutParams.addRule(12);
        linearLayout.setLayoutParams((ViewGroup$LayoutParams)layoutParams);
        linearLayout.setBackgroundDrawable((Drawable)IAdefines$IAresources.a.a((Context)this));
        relativeLayout.addView((View)linearLayout);
        this.c = this.a((Drawable)IAdefines$IAresources.b.a((Context)this));
        this.d = this.a((Drawable)IAdefines$IAresources.d.a((Context)this));
        this.e = this.a((Drawable)IAdefines$IAresources.f.a((Context)this));
        this.f = this.a((Drawable)IAdefines$IAresources.g.a((Context)this));
        linearLayout.addView((View)this.c);
        linearLayout.addView((View)this.d);
        linearLayout.addView((View)this.e);
        linearLayout.addView((View)this.f);
        this.b = new WebView((Context)this);
        final RelativeLayout$LayoutParams layoutParams2 = new RelativeLayout$LayoutParams(-1, -1);
        layoutParams2.addRule(2, 1);
        this.b.setLayoutParams((ViewGroup$LayoutParams)layoutParams2);
        relativeLayout.addView((View)this.b);
        this.setContentView((View)this.a);
        final Intent intent = this.getIntent();
        final WebSettings settings = this.b.getSettings();
        settings.setJavaScriptEnabled(true);
        settings.setSupportZoom(true);
        settings.setBuiltInZoomControls(true);
        settings.setUseWideViewPort(true);
        this.b.setWebViewClient((WebViewClient)new aA(this));
        this.b.setWebChromeClient((WebChromeClient)new aB(this));
        final String stringExtra = intent.getStringExtra("extra_url");
        if (a(stringExtra)) {
            this.b(stringExtra);
            this.finish();
        }
        else {
            this.b.loadUrl(stringExtra);
        }
        this.c.setBackgroundColor(0);
        this.c.setOnClickListener((View$OnClickListener)new aC(this));
        this.d.setBackgroundColor(0);
        this.d.setOnClickListener((View$OnClickListener)new aD(this));
        this.e.setBackgroundColor(0);
        this.e.setOnClickListener((View$OnClickListener)new aE(this));
        this.f.setBackgroundColor(0);
        this.f.setOnClickListener((View$OnClickListener)new aF(this));
        CookieSyncManager.createInstance((Context)this);
        CookieSyncManager.getInstance().startSync();
    }
    
    protected void onDestroy() {
        if (this.a != null) {
            this.a.removeAllViews();
        }
        this.b.destroy();
        super.onDestroy();
    }
    
    protected void onPause() {
        super.onPause();
        CookieSyncManager.getInstance().stopSync();
    }
    
    protected void onResume() {
        super.onResume();
        CookieSyncManager.getInstance().startSync();
    }
}
