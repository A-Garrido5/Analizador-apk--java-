// 
// Decompiled by Procyon v0.5.30
// 

package com.inneractive.api.ads.sdk;

import org.apache.http.client.HttpClient;
import android.view.View$OnClickListener;
import android.widget.ImageButton;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.StateListDrawable;
import android.widget.FrameLayout$LayoutParams;
import android.net.Uri;
import java.util.ArrayList;
import android.webkit.URLUtil;
import java.util.Iterator;
import android.content.ActivityNotFoundException;
import android.content.Intent;
import java.util.HashMap;
import android.view.ViewGroup;
import java.util.Map;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import android.view.Window;
import android.graphics.Rect;
import android.util.DisplayMetrics;
import android.os.Environment;
import org.apache.http.Header;
import android.view.WindowManager;
import android.view.ViewGroup$LayoutParams;
import android.widget.RelativeLayout$LayoutParams;
import android.view.View$OnTouchListener;
import android.content.DialogInterface$OnClickListener;
import android.app.AlertDialog$Builder;
import android.content.Context;
import android.app.Activity;
import android.view.View;
import android.os.Handler;
import android.widget.RelativeLayout;
import android.widget.ImageView;
import android.widget.FrameLayout;
import org.apache.http.HttpResponse;
import java.io.Closeable;
import java.io.FileOutputStream;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.client.methods.HttpGet;
import android.media.MediaScannerConnection$MediaScannerConnectionClient;
import java.io.File;
import java.net.URI;
import java.io.OutputStream;
import java.io.InputStream;
import android.media.MediaScannerConnection;

final class aj implements Runnable
{
    private MediaScannerConnection mediaScannerConnection;
    private InputStream pictureInputStream;
    private OutputStream pictureOutputStream;
    final /* synthetic */ IAmraidWebViewController this$0;
    private URI uri;
    final /* synthetic */ File val$pictureStoragePath;
    final /* synthetic */ String val$uriString;
    
    aj(final IAmraidWebViewController this$0, final String val$uriString, final File val$pictureStoragePath) {
        this.this$0 = this$0;
        this.val$uriString = val$uriString;
        this.val$pictureStoragePath = val$pictureStoragePath;
    }
    
    private void loadPictureIntoGalleryApp(final String s) {
        final IAmraidWebViewController$a amraidWebViewController$a = new IAmraidWebViewController$a(this.this$0, s, null, null);
        IAmraidWebViewController$a.access$500(amraidWebViewController$a, this.mediaScannerConnection = new MediaScannerConnection(this.this$0.getContext().getApplicationContext(), (MediaScannerConnection$MediaScannerConnectionClient)amraidWebViewController$a));
        this.mediaScannerConnection.connect();
    }
    
    @Override
    public final void run() {
        try {
            this.uri = URI.create(this.val$uriString);
            final HttpResponse execute = ((HttpClient)A.b()).execute((HttpUriRequest)new HttpGet(this.uri));
            this.pictureInputStream = execute.getEntity().getContent();
            final File file = new File(this.val$pictureStoragePath, this.this$0.getFileNameForUriAndHttpResponse(this.uri, execute));
            final String string = file.toString();
            this.pictureOutputStream = new FileOutputStream(file);
            d$a.a(this.pictureInputStream, this.pictureOutputStream);
            this.loadPictureIntoGalleryApp(string);
        }
        catch (Exception ex) {
            this.this$0.mHandler.post((Runnable)new ak(this));
        }
        finally {
            d$a.a((Closeable)this.pictureInputStream);
            d$a.a(this.pictureOutputStream);
        }
    }
}
