// 
// Decompiled by Procyon v0.5.30
// 

package com.inneractive.api.ads.sdk;

import android.view.View$OnClickListener;
import android.os.Bundle;
import android.widget.ImageView;
import android.view.View;
import android.content.ActivityNotFoundException;
import java.io.Serializable;
import android.content.Intent;
import android.content.Context;

final class aI extends ay
{
    final /* synthetic */ InneractiveInterstitialAdActivity this$0;
    
    aI(final InneractiveInterstitialAdActivity this$0) {
        this.this$0 = this$0;
    }
    
    @Override
    public final void onAdWillOpenExternalApp() {
        if (InneractiveInterstitialAdActivity.mAdInterfaceListener != null) {
            InneractiveInterstitialAdActivity.mAdInterfaceListener.c();
        }
    }
    
    @Override
    public final void onClicked() {
        if (InneractiveInterstitialAdActivity.mAdInterfaceListener != null) {
            InneractiveInterstitialAdActivity.mAdInterfaceListener.b();
        }
        this.this$0.mMraidView.loadUrl("javascript:if(typeof iaVideoPlayer !== 'undefined' && typeof iaVideoPlayer.getState === 'function') {alert('playerState'+iaVideoPlayer.getState())}");
        if (InneractiveInterstitialAdActivity.adConfiguration.u() != 9) {
            this.this$0.finish();
            return;
        }
        this.this$0.mMraidView.loadUrl("javascript: (function () {\tconsole.log('calling closeVastAdActivity via JS');\tif (typeof InneractiveCloseVastAdActivityInterface !== 'undefined' && typeof iaVideoPlayer !== 'undefined' && typeof iaVideoPlayer.getState === 'function') {  \t\tInneractiveCloseVastAdActivityInterface.closeVastAdActivity(iaVideoPlayer.getState());\t\tconsole.log('calling close vast ad with player state: ' + iaVideoPlayer.getState());\t} })()");
    }
    
    @Override
    public final void onClose(final IAbaseWebView abaseWebView, final IAbaseWebView$IAviewState abaseWebView$IAviewState) {
        this.onDismissed();
    }
    
    @Override
    public final void onDismissed() {
        this.this$0.finish();
        if (InneractiveInterstitialAdActivity.mAdInterfaceListener != null) {
            InneractiveInterstitialAdActivity.mAdInterfaceListener.e();
        }
    }
    
    @Override
    public final void onFailure(final IAbaseWebView abaseWebView, final InneractiveAdView$InneractiveErrorCode inneractiveAdView$InneractiveErrorCode) {
        if (InneractiveInterstitialAdActivity.mAdInterfaceListener != null) {
            InneractiveInterstitialAdActivity.mAdInterfaceListener.a(InneractiveAdView$InneractiveErrorCode.UNSPECIFIED);
        }
        this.onDismissed();
    }
    
    @Override
    public final void onInternalBrowserDismissed() {
        if (InneractiveInterstitialAdActivity.mAdInterfaceListener != null) {
            InneractiveInterstitialAdActivity.mAdInterfaceListener.d();
        }
    }
    
    @Override
    public final void onReady(final IAbaseWebView abaseWebView) {
        if (!InneractiveInterstitialAdActivity.isTrackingPixelSent) {
            InneractiveAdView$Log.v("Inneractive_verbose", "This is the first time so isTrackingPixelSent is false and will be set to true");
            this.this$0.mMraidView.loadUrl(IAbaseInterstitialAdActivity$JavaScriptWebViewCallbacks.a.a());
            if (InneractiveInterstitialAdActivity.mAdInterfaceListener != null) {
                InneractiveInterstitialAdActivity.mAdInterfaceListener.a();
            }
            InneractiveInterstitialAdActivity.isTrackingPixelSent = true;
        }
        else {
            InneractiveAdView$Log.v("Inneractive_verbose", "This is NOT the first time so isTrackingPixelSent is TRUE!");
        }
        if (InneractiveInterstitialAdActivity.adConfiguration.u() == 9) {
            if (IAdefines$ApiLevel.a().a(IAdefines$ApiLevel.h)) {
                this.this$0.mMraidView.loadUrl(IAbaseInterstitialAdActivity$JavaScriptWebViewCallbacks.b.a());
            }
            else {
                this.this$0.mMraidView.performVastAutoclick();
            }
            this.this$0.mMraidView.loadUrl("javascript:(function(){ \n\tvar iaVastDoneListener = function(done) { \n       window.console.log('video is DONE. need to setStop.'); \n\t\tif (typeof InneractiveCloseVastAdActivityInterface !== 'undefined' && typeof iaVideoPlayer !== 'undefined') {InneractiveCloseVastAdActivityInterface.videoCompleted();console.log('calling video completed function');}\t\tif (typeof iaVideoPlayer !== 'undefined') {iaVideoPlayer.removeListener('done', iaVastDoneListener); window.console.log('iaVastDoneListener IS REMOVED');} \n\t};\tif (typeof iaVideoPlayer !== 'undefined') {iaVideoPlayer.addListener('done', iaVastDoneListener);} \n})();");
            this.this$0.concealInterstitialCloseBtn();
            this.this$0.mMraidView.loadUrl("javascript:document.getElementById(\"iaClose\").style.display =\"inline\";");
        }
        else {
            this.this$0.displayInterstitialCloseBtn();
        }
        if (IAdefines$ApiLevel.a().a(IAdefines$ApiLevel.h)) {
            this.this$0.mMraidView.loadUrl("javascript:var forceReflow = function(elem){ elem = elem || document.documentElement; elem.style.zIndex = 2147483646; var width = elem.style.width, px = elem.offsetWidth+1; elem.style.width = px+'px'; setTimeout(function(){ elem.style.zIndex = 2147483646; elem.style.width = width; elem = null; }, 0); }; forceReflow(document.documentElement);");
        }
    }
}
