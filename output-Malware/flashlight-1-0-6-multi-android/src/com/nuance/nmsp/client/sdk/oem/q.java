// 
// Decompiled by Procyon v0.5.30
// 

package com.nuance.nmsp.client.sdk.oem;

import java.util.Enumeration;
import java.util.Vector;
import java.io.OutputStream;

public class q implements bh, bj
{
    private static final be a;
    private static final Integer c;
    private static final Integer d;
    private static final Integer e;
    private static final Integer f;
    private bf b;
    private Object g;
    
    static {
        a = dh.a(q.class);
        c = new Integer(0);
        d = new Integer(1);
        e = new Integer(2);
        f = new Integer(3);
    }
    
    public q(final bf b) {
        this.b = null;
        this.g = new Object();
        this.b = b;
    }
    
    private void a(final Object[] array) {
        final bf b = this.b;
        final Object b2 = this.b.b();
        this.b.a();
        b.a(array, this, b2);
    }
    
    @Override
    public final bm a(final Object o, final bl bl, final byte[] array, final int n, final bo bo, final Object o2) {
        if (bl != bl.a) {
            if (q.a.e()) {
                q.a.e("Blackberry NetworkSystem only supports NETWORK_READ_FULL");
            }
            return bm.b;
        }
        final r r = (r)o;
        if (r.f == null) {
            if (q.a.b()) {
                q.a.b("SOCKET READ ERROR: socket read thread is null");
            }
            return bm.b;
        }
        if (!r.f.f) {
            return r.f.a(new s(array, n, bo, o2));
        }
        if (q.a.e()) {
            q.a.e("socket read thread is stopping");
        }
        return bm.b;
    }
    
    @Override
    public final bm a(final Object o, final byte[] array, final int n, final bp bp, final Object o2) {
        if (q.a.b()) {
            q.a.b("socketWrite(bufferLen:" + n + ") start");
        }
        final r r = (r)o;
        if (r.a == null || r.d == null) {
            return bm.b;
        }
        final OutputStream d = r.d;
        try {
            d.write(array, 0, n);
            d.flush();
            this.a(new Object[] { q.f, bp, bm.a, o, array, new Integer(0), new Integer(n), new Integer(n), o2 });
            if (q.a.b()) {
                q.a.b("socketWrite(bufferLen:" + n + ") end");
            }
            return bm.a;
        }
        catch (Exception ex) {
            if (q.a.e()) {
                q.a.e("Socket Write Exception - [" + ex.getClass().getName() + "] Message - [" + ex.getMessage() + "]");
            }
            this.a(new Object[] { q.f, bp, bm.b, o, array, new Integer(0), new Integer(n), new Integer(0), o2 });
            this.a(o);
            return bm.b;
        }
    }
    
    @Override
    public final void a(final Object o) {
        final r r = (r)o;
        if (r != null) {
            synchronized (this.g) {
                if (r.f == null) {
                    return;
                }
            }
            // monitorexit(o2)
            while (true) {
                Label_0245: {
                    if (r.f.f) {
                        break Label_0245;
                    }
                    r.f.a();
                    r.f = null;
                    final int n = 1;
                    if (r.a == null || n == 0) {
                        return;
                    }
                    try {
                        r.c.close();
                        r.c = null;
                        r.a.close();
                        r.a = null;
                        this.a(new Object[] { q.d, r.b, bm.a, o, null });
                        return;
                    }
                    catch (Throwable t) {
                        if (q.a.e()) {
                            q.a.e("Socket Close Expception - [" + t.getClass().getName() + "] Message - [" + t.getMessage() + "]");
                        }
                        this.a(new Object[] { q.d, r.b, bm.b, o, null });
                        return;
                    }
                }
                final int n = 0;
                continue;
            }
        }
    }
    
    @Override
    public final void a(final Object o, final Object o2) {
        final Object[] array = (Object[])o;
        if (array[0] == q.c) {
            ((bn)array[1]).a((bm)array[2], array[3]);
        }
        else {
            if (array[0] == q.d) {
                ((bk)array[1]).a();
                return;
            }
            if (array[0] == q.e) {
                ((bo)array[1]).a((bm)array[2], array[3], (byte[])array[4], (int)array[6], (int)array[7], array[8]);
                return;
            }
            if (array[0] == q.f) {
                ((bp)array[1]).a((bm)array[2], array[3], (int)array[6], (int)array[7], array[8]);
            }
        }
    }
    
    @Override
    public final void a(final String s, final int n, final bn bn, final bk bk) {
        final t t = new t(this, s, n, bn, bk);
        try {
            t.start();
        }
        catch (Exception ex) {
            if (q.a.e()) {
                q.a.e("Open Socket Exception - [" + ex.getClass().getName() + "] Message - [" + ex.getMessage() + "]");
            }
            this.a(new Object[] { q.c, bn, bm.b, null, null });
        }
    }
    
    @Override
    public final void a(final String s, final int n, final Vector vector, final bn bn, final bk bk) {
        final fj fj = new fj();
        final Enumeration<df> elements = vector.elements();
        while (elements.hasMoreElements()) {
            final df df = elements.nextElement();
            if (df.a().equals("SSL_SelfSigned_Cert") && (new String(df.b()).equals("TRUE") || new String(df.b()).equals("true"))) {
                fj.a = true;
            }
            if (df.a().equals("SSL_Cert_Summary")) {
                fj.b = new String(df.b());
            }
            if (df.a().equals("SSL_Cert_Data")) {
                fj.c = new String(df.b());
            }
        }
        final t t = new t(this, s, n, fj, bn, bk);
        try {
            t.start();
        }
        catch (Exception ex) {
            if (q.a.e()) {
                q.a.e("Open Socket Exception - [" + ex.getClass().getName() + "] Message - [" + ex.getMessage() + "]");
            }
            this.a(new Object[] { q.c, bn, bm.b, null, null });
        }
    }
    
    @Override
    public final void b(final Object o) {
        final r r = (r)o;
        if (r.f != null) {
            r.f.b();
            return;
        }
        if (q.a.b()) {
            q.a.b("SOCKET WRITE ERROR: socket read thread is null");
        }
        this.a(o);
    }
}
