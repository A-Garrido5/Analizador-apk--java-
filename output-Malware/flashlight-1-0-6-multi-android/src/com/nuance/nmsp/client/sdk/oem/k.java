// 
// Decompiled by Procyon v0.5.30
// 

package com.nuance.nmsp.client.sdk.oem;

import java.io.IOException;
import java.io.FileInputStream;
import java.io.File;

public final class k implements bc
{
    private File a;
    private FileInputStream b;
    
    static {
        dh.a(q.class);
    }
    
    public k() {
        this.a = null;
        this.b = null;
    }
    
    @Override
    public final int a(final byte[] p0, final int p1) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: aload_0        
        //     1: getfield        com/nuance/nmsp/client/sdk/oem/k.a:Ljava/io/File;
        //     4: ifnonnull       9
        //     7: iconst_m1      
        //     8: ireturn        
        //     9: aload_0        
        //    10: getfield        com/nuance/nmsp/client/sdk/oem/k.b:Ljava/io/FileInputStream;
        //    13: ifnonnull       31
        //    16: aload_0        
        //    17: new             Ljava/io/FileInputStream;
        //    20: dup            
        //    21: aload_0        
        //    22: getfield        com/nuance/nmsp/client/sdk/oem/k.a:Ljava/io/File;
        //    25: invokespecial   java/io/FileInputStream.<init>:(Ljava/io/File;)V
        //    28: putfield        com/nuance/nmsp/client/sdk/oem/k.b:Ljava/io/FileInputStream;
        //    31: aload_0        
        //    32: getfield        com/nuance/nmsp/client/sdk/oem/k.b:Ljava/io/FileInputStream;
        //    35: aload_1        
        //    36: iconst_0       
        //    37: iload_2        
        //    38: invokevirtual   java/io/FileInputStream.read:([BII)I
        //    41: istore          5
        //    43: iload           5
        //    45: ireturn        
        //    46: astore          6
        //    48: aload_0        
        //    49: aconst_null    
        //    50: putfield        com/nuance/nmsp/client/sdk/oem/k.a:Ljava/io/File;
        //    53: iconst_m1      
        //    54: ireturn        
        //    55: astore_3       
        //    56: aload_0        
        //    57: getfield        com/nuance/nmsp/client/sdk/oem/k.b:Ljava/io/FileInputStream;
        //    60: invokevirtual   java/io/FileInputStream.close:()V
        //    63: aload_0        
        //    64: aconst_null    
        //    65: putfield        com/nuance/nmsp/client/sdk/oem/k.b:Ljava/io/FileInputStream;
        //    68: aload_0        
        //    69: aconst_null    
        //    70: putfield        com/nuance/nmsp/client/sdk/oem/k.a:Ljava/io/File;
        //    73: iconst_m1      
        //    74: ireturn        
        //    75: astore          4
        //    77: goto            63
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type                           
        //  -----  -----  -----  -----  -------------------------------
        //  16     31     46     55     Ljava/io/FileNotFoundException;
        //  31     43     55     80     Ljava/lang/Exception;
        //  56     63     75     80     Ljava/io/IOException;
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Expression is linked from several locations: Label_0031:
        //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
        //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
        //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.decompileJar(DecompilerDriver.java:238)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:123)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    @Override
    public final void a() {
        while (true) {
            if (this.b == null) {
                break Label_0014;
            }
            try {
                this.b.close();
                this.b = null;
                this.a = null;
            }
            catch (IOException ex) {
                continue;
            }
            break;
        }
    }
    
    @Override
    public final boolean a(final String s, final bd bd) {
        this.a = new File(s);
        boolean b;
        if (bd == bd.a) {
            if (!this.a.exists()) {
                b = true;
            }
            else {
                b = false;
            }
        }
        else {
            b = false;
        }
        if (b) {
            this.a = null;
        }
        return !b;
    }
    
    @Override
    public final long b() {
        if (this.a == null) {
            return -1L;
        }
        return this.a.length();
    }
    
    @Override
    public final boolean c() {
        if (this.a == null) {
            return false;
        }
        while (true) {
            if (this.b == null) {
                break Label_0021;
            }
            try {
                this.b.close();
                this.b = null;
                final File a = this.a;
                this.a = null;
                return a.delete();
            }
            catch (IOException ex) {
                continue;
            }
            break;
        }
    }
}
