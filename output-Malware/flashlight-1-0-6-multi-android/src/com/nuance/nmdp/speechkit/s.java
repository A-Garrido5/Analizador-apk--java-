// 
// Decompiled by Procyon v0.5.30
// 

package com.nuance.nmdp.speechkit;

abstract class s extends a implements j
{
    private p b;
    private final x c;
    private float d;
    private Runnable e;
    private String f;
    private final Object g;
    
    public s(final x c, final String s, final int n, final String s2, final String f, final Object o) {
        super(o);
        this.c = c;
        this.d = 0.0f;
        this.g = new Object();
        this.f = f;
        this.e = new Runnable() {
            @Override
            public final void run() {
                boolean b = true;
                final s d = s.this;
                final s d2 = s.this;
                final go c = s.this.c.c();
                final String a = s;
                final boolean b2 = n == (b ? 1 : 0) && b;
                if (n != 2) {
                    b = false;
                }
                d.b = d2.a(c, a, b2, b, s2, s.this.f, new d() {
                    @Override
                    public final void a(final float n) {
                        synchronized (s.this.g) {
                            s.this.d = n;
                        }
                    }
                });
            }
        };
    }
    
    protected abstract p a(final go p0, final String p1, final boolean p2, final boolean p3, final String p4, final String p5, final d p6);
    
    protected final void a() {
        if (this.e != null) {
            y.a(this.e);
            this.e = null;
        }
    }
    
    public void cancel() {
        this.c.e();
        y.a(new Runnable() {
            @Override
            public final void run() {
                s.this.b.f();
            }
        });
    }
    
    public float getAudioLevel() {
        synchronized (this.g) {
            return this.d;
        }
    }
    
    @Override
    public void setPrompt(final int n, final Prompt prompt) {
        this.c.e();
        y.a(new Runnable() {
            @Override
            public final void run() {
                s.this.b.a(n, prompt);
            }
        });
    }
    
    public void start() {
        this.c.e();
        y.a(new Runnable() {
            @Override
            public final void run() {
                s.this.b.d();
            }
        });
    }
    
    public void stopRecording() {
        this.c.e();
        y.a(new Runnable() {
            @Override
            public final void run() {
                s.this.b.e();
            }
        });
    }
}
