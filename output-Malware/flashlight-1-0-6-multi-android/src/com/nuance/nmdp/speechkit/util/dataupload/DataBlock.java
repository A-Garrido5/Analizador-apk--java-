// 
// Decompiled by Procyon v0.5.30
// 

package com.nuance.nmdp.speechkit.util.dataupload;

import com.nuance.nmdp.speechkit.util.pdx.PdxValue;
import com.nuance.nmdp.speechkit.util.pdx.PdxValue$Sequence;
import com.nuance.nmdp.speechkit.util.pdx.PdxValue$Dictionary;
import java.util.Vector;

public class DataBlock
{
    private int a;
    private String b;
    private Vector c;
    
    public DataBlock() {
        this.a = 0;
        this.b = null;
        this.c = new Vector();
    }
    
    public void addData(final Data data) {
        if (data != null) {
            this.c.add(data);
        }
    }
    
    public void clearDataBlock() {
        this.c.removeAllElements();
    }
    
    public int getChecksum() {
        int i = 0;
        int n = 0;
        while (i < this.c.size()) {
            final Data data = this.c.elementAt(i);
            int n2;
            if (data != null) {
                n2 = n + data.getChecksum();
            }
            else {
                n2 = n;
            }
            ++i;
            n = n2;
        }
        return n;
    }
    
    public PdxValue$Dictionary getDataBlockDictionary() {
        final PdxValue$Dictionary pdxValue$Dictionary = new PdxValue$Dictionary();
        pdxValue$Dictionary.put("delete_all", this.a);
        if (this.b != null) {
            pdxValue$Dictionary.put("common_user_id", this.b);
        }
        if (!this.c.isEmpty()) {
            final PdxValue$Sequence pdxValue$Sequence = new PdxValue$Sequence();
            for (int i = 0; i < this.c.size(); ++i) {
                final Data data = this.c.elementAt(i);
                if (data != null) {
                    final PdxValue$Dictionary a = data.a();
                    if (a != null) {
                        pdxValue$Sequence.add(a);
                    }
                }
            }
            pdxValue$Dictionary.put("data_list", pdxValue$Sequence);
        }
        return pdxValue$Dictionary;
    }
    
    public Vector getDataList() {
        return this.c;
    }
    
    public void removeData(final Data data) {
        if (data != null) {
            this.c.remove(data);
        }
    }
    
    public void setDeleteAll(final boolean b) {
        int a;
        if (b) {
            a = 1;
        }
        else {
            a = 0;
        }
        this.a = a;
    }
    
    public void setUserId(final String b) {
        this.b = b;
    }
    
    @Override
    public String toString() {
        final StringBuffer sb = new StringBuffer();
        sb.append("delete_all:" + this.a + "\n");
        sb.append("checksum:" + this.getChecksum() + "\n");
        if (!this.c.isEmpty()) {
            final int size = this.c.size();
            sb.append("data_list: elements " + size + "\n");
            for (int i = 0; i < size; ++i) {
                final Data data = this.c.elementAt(i);
                if (data != null) {
                    sb.append("data: " + i + "\n");
                    sb.append(data.toString());
                }
            }
        }
        return sb.toString();
    }
}
