import java.io.IOException;
import android.media.MediaPlayer$OnCompletionListener;
import android.media.MediaPlayer$OnErrorListener;
import com.nuance.nmdp.speechkit.recognitionresult.b;
import com.nuance.nmsp.client.sdk.oem.l;
import android.content.res.AssetFileDescriptor;
import android.media.MediaPlayer;

// 
// Decompiled by Procyon v0.5.30
// 

public final class dh implements ae
{
    private MediaPlayer a;
    private ab b;
    private Object c;
    private boolean d;
    private boolean e;
    private AssetFileDescriptor f;
    
    public dh() {
        this.b = null;
        this.c = null;
        this.a = null;
        this.d = false;
        this.f = null;
        this.e = false;
    }
    
    public static be a(final Class clazz) {
        return new l(clazz);
    }
    
    static /* synthetic */ void a(final dh dh, final boolean b) {
        y.a(new Runnable() {
            @Override
            public final void run() {
                if (dh.this.a == null || dh.this.e) {
                    return;
                }
                if (b) {
                    dh.this.a.release();
                    dh.this.a = null;
                    dh.this.a = dh.this.e();
                    if (dh.this.a == null) {
                        if (dh.this.b != null) {
                            dh.this.b.a(dh.this.c);
                            dh.this.b = null;
                            dh.this.c = null;
                        }
                        dh.this.b();
                        return;
                    }
                }
                if (dh.this.d) {
                    dh.this.d();
                    return;
                }
                if (dh.this.b != null) {
                    if (b) {
                        dh.this.b.a(dh.this.c);
                    }
                    else {
                        dh.this.b.c(dh.this.c);
                    }
                }
                dh.this.b = null;
                dh.this.c = null;
            }
        });
    }
    
    private void d() {
        this.d = false;
        this.a.start();
        this.b.b(this.c);
    }
    
    private MediaPlayer e() {
        final MediaPlayer mediaPlayer = new MediaPlayer();
        try {
            final long startOffset = this.f.getStartOffset();
            final long length = this.f.getLength();
            if (length == -1L) {
                com.nuance.nmdp.speechkit.recognitionresult.b.a(this, "Attempting to initialize MediaPlayer with asset file of unknown length");
                mediaPlayer.setDataSource(this.f.getFileDescriptor());
            }
            else {
                mediaPlayer.setDataSource(this.f.getFileDescriptor(), startOffset, length);
            }
            mediaPlayer.prepare();
            mediaPlayer.getDuration();
            mediaPlayer.setOnErrorListener((MediaPlayer$OnErrorListener)new MediaPlayer$OnErrorListener() {
                public final boolean onError(final MediaPlayer mediaPlayer, final int n, final int n2) {
                    com.nuance.nmdp.speechkit.recognitionresult.b.c(dh.this, "Error during audio prompt: " + n);
                    dh.a(dh.this, true);
                    return true;
                }
            });
            mediaPlayer.setOnCompletionListener((MediaPlayer$OnCompletionListener)new MediaPlayer$OnCompletionListener() {
                public final void onCompletion(final MediaPlayer mediaPlayer) {
                    com.nuance.nmdp.speechkit.recognitionresult.b.a(dh.this, "Audio prompt completed");
                    dh.a(dh.this, false);
                }
            });
            return mediaPlayer;
        }
        catch (Exception ex) {
            com.nuance.nmdp.speechkit.recognitionresult.b.a(this, "Unable to create MediaPlayer for audio prompt", ex);
            try {
                mediaPlayer.release();
                return null;
            }
            catch (Exception ex2) {}
        }
    }
    
    @Override
    public final void a() {
        if (this.a != null) {
            this.d = false;
            if (this.a.isPlaying()) {
                while (true) {
                    try {
                        this.a.stop();
                        this.a.release();
                        this.a = null;
                        this.a = this.e();
                        if (this.a == null) {
                            this.b();
                        }
                    }
                    catch (Throwable t) {
                        com.nuance.nmdp.speechkit.recognitionresult.b.a(this, "Error stopping player", t);
                        continue;
                    }
                    break;
                }
            }
        }
    }
    
    public final void a(final AssetFileDescriptor f) {
        this.f = f;
        this.a = this.e();
        if (this.a == null) {
            this.b();
        }
    }
    
    @Override
    public final void a(final Object o, final ab b, final Object c) {
        if (this.a == null || this.e) {
            b.c(this, "Can't start disposed audio prompt");
            b.a(c);
            return;
        }
        b.a(this, "Starting audio prompt");
        this.b = b;
        this.c = c;
        if (this.a.isPlaying()) {
            b.b(this, "Audio prompt is already playing. Stopping to restart.");
            this.a.stop();
            this.d = true;
            return;
        }
        this.d();
    }
    
    @Override
    public final void b() {
        this.e = true;
        if (this.a != null) {
            this.a.release();
            this.a = null;
        }
        Label_0043: {
            if (this.f == null) {
                break Label_0043;
            }
            while (true) {
                try {
                    this.f.close();
                    this.f = null;
                    if (this.b != null) {
                        this.b.a(this.c);
                        this.b = null;
                    }
                    this.c = null;
                }
                catch (IOException ex) {
                    com.nuance.nmdp.speechkit.recognitionresult.b.a(this, "Error closing audio prompt file", ex);
                    continue;
                }
                break;
            }
        }
    }
    
    @Override
    public final boolean c() {
        return this.e;
    }
}
