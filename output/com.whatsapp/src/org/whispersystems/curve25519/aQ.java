// 
// Decompiled by Procyon v0.5.30
// 

package org.whispersystems.curve25519;

public class aQ
{
    static U[] a;
    
    static {
        (aQ.a = new U[8])[0] = new U(new int[] { 25967493, -14356035, 29566456, 3660896, -12694345, 4014787, 27544626, -11754271, -6079156, 2047605 }, new int[] { -12545711, 934262, -2722910, 3049990, -727428, 9406986, 12720692, 5043384, 19500929, -15469378 }, new int[] { -8738181, 4489570, 9688441, -14785194, 10184609, -12363380, 29287919, 11864899, -24514362, -4438546 });
        aQ.a[1] = new U(new int[] { 15636291, -9688557, 24204773, -7912398, 616977, -16685262, 27787600, -14772189, 28944400, -1550024 }, new int[] { 16568933, 4717097, -11556148, -1102322, 15682896, -11807043, 16354577, -11775962, 7689662, 11199574 }, new int[] { 30464156, -5976125, -11779434, -15670865, 23220365, 15915852, 7512774, 10017326, -17749093, -9920357 });
        aQ.a[2] = new U(new int[] { 10861363, 11473154, 27284546, 1981175, -30064349, 12577861, 32867885, 14515107, -15438304, 10819380 }, new int[] { 4708026, 6336745, 20377586, 9066809, -11272109, 6594696, -25653668, 12483688, -12668491, 5581306 }, new int[] { 19563160, 16186464, -29386857, 4097519, 10237984, -4348115, 28542350, 13850243, -23678021, -15815942 });
        aQ.a[3] = new U(new int[] { 5153746, 9909285, 1723747, -2777874, 30523605, 5516873, 19480852, 5230134, -23952439, -15175766 }, new int[] { -30269007, -3463509, 7665486, 10083793, 28475525, 1649722, 20654025, 16520125, 30598449, 7715701 }, new int[] { 28881845, 14381568, 9657904, 3680757, -20181635, 7843316, -31400660, 1370708, 29794553, -1409300 });
        aQ.a[4] = new U(new int[] { -22518993, -6692182, 14201702, -8745502, -23510406, 8844726, 18474211, -1361450, -13062696, 13821877 }, new int[] { -6455177, -7839871, 3374702, -4740862, -27098617, -10571707, 31655028, -7212327, 18853322, -14220951 }, new int[] { 4566830, -12963868, -28974889, -12240689, -7602672, -2830569, -8514358, -10431137, 2207753, -3209784 });
        aQ.a[5] = new U(new int[] { -25154831, -4185821, 29681144, 7868801, -6854661, -9423865, -12437364, -663000, -31111463, -16132436 }, new int[] { 25576264, -2703214, 7349804, -11814844, 16472782, 9300885, 3844789, 15725684, 171356, 6466918 }, new int[] { 23103977, 13316479, 9739013, -16149481, 817875, -15038942, 8965339, -14088058, -30714912, 16193877 });
        aQ.a[6] = new U(new int[] { -33521811, 3180713, -2394130, 14003687, -16903474, -16270840, 17238398, 4729455, -18074513, 9256800 }, new int[] { -25182317, -4174131, 32336398, 5036987, -21236817, 11360617, 22616405, 9761698, -19827198, 630305 }, new int[] { -13720693, 2639453, -24237460, -7406481, 9494427, -5774029, -6554551, -15960994, -2449256, -14291300 });
        aQ.a[7] = new U(new int[] { -3151181, -5046075, 9282714, 6866145, -31907062, -863023, -18940575, 15033784, 25105118, -7894876 }, new int[] { -24326370, 15950226, -31801215, -14592823, -11662737, -5090925, 1573892, -2625887, 2198790, -15804619 }, new int[] { -3099351, 10324967, -2241613, 7453183, -5446979, -2735503, -13812022, -16236442, -32461234, -12290683 });
    }
    
    public static void a(final g g, final byte[] array, final Q q, final byte[] array2) {
        final int a = U.a;
        final byte[] array3 = new byte[256];
        final byte[] array4 = new byte[256];
        final a4[] array5 = new a4[8];
        int i = 0;
        while (i < 8) {
            array5[i] = new a4();
            ++i;
            if (a != 0) {
                break;
            }
        }
        final aT at = new aT();
        final Q q2 = new Q();
        final Q q3 = new Q();
        a(array3, array);
        a(array4, array2);
        aW.a(array5[0], q);
        y.a(at, q);
        D.a(q3, at);
        j.a(at, q3, array5[0]);
        D.a(q2, at);
        aW.a(array5[1], q2);
        j.a(at, q3, array5[1]);
        D.a(q2, at);
        aW.a(array5[2], q2);
        j.a(at, q3, array5[2]);
        D.a(q2, at);
        aW.a(array5[3], q2);
        j.a(at, q3, array5[3]);
        D.a(q2, at);
        aW.a(array5[4], q2);
        j.a(at, q3, array5[4]);
        D.a(q2, at);
        aW.a(array5[5], q2);
        j.a(at, q3, array5[5]);
        D.a(q2, at);
        aW.a(array5[6], q2);
        j.a(at, q3, array5[6]);
        D.a(q2, at);
        aW.a(array5[7], q2);
        G.a(g);
        int j = 255;
        while (j >= 0 && array3[j] == 0 && array4[j] == 0) {
            --j;
            if (a != 0) {
                break;
            }
        }
        while (j >= 0) {
            z.a(at, g);
            Label_0419: {
                if (array3[j] > 0) {
                    D.a(q2, at);
                    org.whispersystems.curve25519.j.a(at, q2, array5[array3[j] / 2]);
                    if (a == 0) {
                        break Label_0419;
                    }
                }
                if (array3[j] < 0) {
                    D.a(q2, at);
                    q.a(at, q2, array5[-array3[j] / 2]);
                }
            }
            Label_0491: {
                if (array4[j] > 0) {
                    D.a(q2, at);
                    r.a(at, q2, aQ.a[array4[j] / 2]);
                    if (a == 0) {
                        break Label_0491;
                    }
                }
                if (array4[j] < 0) {
                    D.a(q2, at);
                    t.a(at, q2, aQ.a[-array4[j] / 2]);
                }
            }
            I.a(g, at);
            --j;
            if (a != 0) {
                break;
            }
        }
    }
    
    public static void a(final byte[] array, final byte[] array2) {
        final int a = U.a;
        int i = 0;
        while (i < 256) {
            array[i] = (byte)(0x1 & array2[i >> 3] >>> (i & 0x7));
            ++i;
            if (a != 0) {
                break;
            }
        }
        int n3;
        for (int j = 0; j < 256; j = n3) {
            if (array[j] != 0) {
                int n2;
                for (int n = 1; n <= 6 && j + n < 256; n = n2) {
                    Label_0220: {
                        if (array[j + n] != 0) {
                            if (array[j] + (array[j + n] << n) <= 15) {
                                array[j] += (byte)(array[j + n] << n);
                                array[j + n] = 0;
                                if (a == 0) {
                                    break Label_0220;
                                }
                            }
                            if (array[j] - (array[j + n] << n) < -15) {
                                break;
                            }
                            array[j] -= (byte)(array[j + n] << n);
                            int k = j + n;
                            while (k < 256) {
                                if (array[k] == 0) {
                                    array[k] = 1;
                                    if (a == 0) {
                                        break;
                                    }
                                }
                                array[k] = 0;
                                ++k;
                                if (a != 0) {
                                    break;
                                }
                            }
                        }
                    }
                    n2 = n + 1;
                    if (a != 0) {
                        break;
                    }
                }
            }
            n3 = j + 1;
            if (a != 0) {
                break;
            }
        }
    }
}
